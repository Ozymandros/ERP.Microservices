### YamlMime:ManagedReference
items:
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests
  commentId: T:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests
  id: SupplierServiceTests
  parent: MyApp.Purchasing.Application.Tests.Services
  children:
  - MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.#ctor
  - MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.CreateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException
  - MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.CreateSupplierAsync_WithUniqueEmail_CreatesSupplier
  - MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.DeleteSupplierAsync_WithExistingSupplier_DeletesSupplier
  - MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.DeleteSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
  - MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetAllSuppliersAsync_ReturnsAllSuppliers
  - MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByEmailAsync_WithExistingEmail_ReturnsSupplierDto
  - MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByEmailAsync_WithNonExistentEmail_ReturnsNull
  - MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByIdAsync_WithExistingId_ReturnsSupplierDto
  - MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByIdAsync_WithNonExistentId_ReturnsNull
  - MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSuppliersByNameAsync_ReturnsMatchingSuppliers
  - MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException
  - MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithExistingSupplier_UpdatesSuccessfully
  - MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
  langs:
  - csharp
  - vb
  name: SupplierServiceTests
  nameWithType: SupplierServiceTests
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests
  type: Class
  source:
    remote:
      path: src/MyApp.Purchasing/test/MyApp.Purchasing.Application.Tests/Services/SupplierServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: SupplierServiceTests
    path: src/MyApp.Purchasing/test/MyApp.Purchasing.Application.Tests/Services/SupplierServiceTests.cs
    startLine: 10
  assemblies:
  - MyApp.Purchasing.Application.Tests
  namespace: MyApp.Purchasing.Application.Tests.Services
  syntax:
    content: public class SupplierServiceTests
    content.vb: Public Class SupplierServiceTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.#ctor
  commentId: M:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.#ctor
  id: '#ctor'
  parent: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests
  langs:
  - csharp
  - vb
  name: SupplierServiceTests()
  nameWithType: SupplierServiceTests.SupplierServiceTests()
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.SupplierServiceTests()
  type: Constructor
  source:
    remote:
      path: src/MyApp.Purchasing/test/MyApp.Purchasing.Application.Tests/Services/SupplierServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: .ctor
    path: src/MyApp.Purchasing/test/MyApp.Purchasing.Application.Tests/Services/SupplierServiceTests.cs
    startLine: 16
  assemblies:
  - MyApp.Purchasing.Application.Tests
  namespace: MyApp.Purchasing.Application.Tests.Services
  syntax:
    content: public SupplierServiceTests()
    content.vb: Public Sub New()
  overload: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.#ctor*
  nameWithType.vb: SupplierServiceTests.New()
  fullName.vb: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.New()
  name.vb: New()
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByIdAsync_WithExistingId_ReturnsSupplierDto
  commentId: M:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByIdAsync_WithExistingId_ReturnsSupplierDto
  id: GetSupplierByIdAsync_WithExistingId_ReturnsSupplierDto
  parent: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests
  langs:
  - csharp
  - vb
  name: GetSupplierByIdAsync_WithExistingId_ReturnsSupplierDto()
  nameWithType: SupplierServiceTests.GetSupplierByIdAsync_WithExistingId_ReturnsSupplierDto()
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByIdAsync_WithExistingId_ReturnsSupplierDto()
  type: Method
  source:
    remote:
      path: src/MyApp.Purchasing/test/MyApp.Purchasing.Application.Tests/Services/SupplierServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: GetSupplierByIdAsync_WithExistingId_ReturnsSupplierDto
    path: src/MyApp.Purchasing/test/MyApp.Purchasing.Application.Tests/Services/SupplierServiceTests.cs
    startLine: 26
  assemblies:
  - MyApp.Purchasing.Application.Tests
  namespace: MyApp.Purchasing.Application.Tests.Services
  syntax:
    content: >-
      [Fact]

      public Task GetSupplierByIdAsync_WithExistingId_ReturnsSupplierDto()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function GetSupplierByIdAsync_WithExistingId_ReturnsSupplierDto() As Task
  overload: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByIdAsync_WithExistingId_ReturnsSupplierDto*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByIdAsync_WithNonExistentId_ReturnsNull
  commentId: M:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByIdAsync_WithNonExistentId_ReturnsNull
  id: GetSupplierByIdAsync_WithNonExistentId_ReturnsNull
  parent: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests
  langs:
  - csharp
  - vb
  name: GetSupplierByIdAsync_WithNonExistentId_ReturnsNull()
  nameWithType: SupplierServiceTests.GetSupplierByIdAsync_WithNonExistentId_ReturnsNull()
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByIdAsync_WithNonExistentId_ReturnsNull()
  type: Method
  source:
    remote:
      path: src/MyApp.Purchasing/test/MyApp.Purchasing.Application.Tests/Services/SupplierServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: GetSupplierByIdAsync_WithNonExistentId_ReturnsNull
    path: src/MyApp.Purchasing/test/MyApp.Purchasing.Application.Tests/Services/SupplierServiceTests.cs
    startLine: 46
  assemblies:
  - MyApp.Purchasing.Application.Tests
  namespace: MyApp.Purchasing.Application.Tests.Services
  syntax:
    content: >-
      [Fact]

      public Task GetSupplierByIdAsync_WithNonExistentId_ReturnsNull()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function GetSupplierByIdAsync_WithNonExistentId_ReturnsNull() As Task
  overload: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByIdAsync_WithNonExistentId_ReturnsNull*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByEmailAsync_WithExistingEmail_ReturnsSupplierDto
  commentId: M:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByEmailAsync_WithExistingEmail_ReturnsSupplierDto
  id: GetSupplierByEmailAsync_WithExistingEmail_ReturnsSupplierDto
  parent: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests
  langs:
  - csharp
  - vb
  name: GetSupplierByEmailAsync_WithExistingEmail_ReturnsSupplierDto()
  nameWithType: SupplierServiceTests.GetSupplierByEmailAsync_WithExistingEmail_ReturnsSupplierDto()
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByEmailAsync_WithExistingEmail_ReturnsSupplierDto()
  type: Method
  source:
    remote:
      path: src/MyApp.Purchasing/test/MyApp.Purchasing.Application.Tests/Services/SupplierServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: GetSupplierByEmailAsync_WithExistingEmail_ReturnsSupplierDto
    path: src/MyApp.Purchasing/test/MyApp.Purchasing.Application.Tests/Services/SupplierServiceTests.cs
    startLine: 60
  assemblies:
  - MyApp.Purchasing.Application.Tests
  namespace: MyApp.Purchasing.Application.Tests.Services
  syntax:
    content: >-
      [Fact]

      public Task GetSupplierByEmailAsync_WithExistingEmail_ReturnsSupplierDto()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function GetSupplierByEmailAsync_WithExistingEmail_ReturnsSupplierDto() As Task
  overload: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByEmailAsync_WithExistingEmail_ReturnsSupplierDto*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByEmailAsync_WithNonExistentEmail_ReturnsNull
  commentId: M:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByEmailAsync_WithNonExistentEmail_ReturnsNull
  id: GetSupplierByEmailAsync_WithNonExistentEmail_ReturnsNull
  parent: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests
  langs:
  - csharp
  - vb
  name: GetSupplierByEmailAsync_WithNonExistentEmail_ReturnsNull()
  nameWithType: SupplierServiceTests.GetSupplierByEmailAsync_WithNonExistentEmail_ReturnsNull()
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByEmailAsync_WithNonExistentEmail_ReturnsNull()
  type: Method
  source:
    remote:
      path: src/MyApp.Purchasing/test/MyApp.Purchasing.Application.Tests/Services/SupplierServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: GetSupplierByEmailAsync_WithNonExistentEmail_ReturnsNull
    path: src/MyApp.Purchasing/test/MyApp.Purchasing.Application.Tests/Services/SupplierServiceTests.cs
    startLine: 79
  assemblies:
  - MyApp.Purchasing.Application.Tests
  namespace: MyApp.Purchasing.Application.Tests.Services
  syntax:
    content: >-
      [Fact]

      public Task GetSupplierByEmailAsync_WithNonExistentEmail_ReturnsNull()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function GetSupplierByEmailAsync_WithNonExistentEmail_ReturnsNull() As Task
  overload: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByEmailAsync_WithNonExistentEmail_ReturnsNull*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSuppliersByNameAsync_ReturnsMatchingSuppliers
  commentId: M:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSuppliersByNameAsync_ReturnsMatchingSuppliers
  id: GetSuppliersByNameAsync_ReturnsMatchingSuppliers
  parent: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests
  langs:
  - csharp
  - vb
  name: GetSuppliersByNameAsync_ReturnsMatchingSuppliers()
  nameWithType: SupplierServiceTests.GetSuppliersByNameAsync_ReturnsMatchingSuppliers()
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSuppliersByNameAsync_ReturnsMatchingSuppliers()
  type: Method
  source:
    remote:
      path: src/MyApp.Purchasing/test/MyApp.Purchasing.Application.Tests/Services/SupplierServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: GetSuppliersByNameAsync_ReturnsMatchingSuppliers
    path: src/MyApp.Purchasing/test/MyApp.Purchasing.Application.Tests/Services/SupplierServiceTests.cs
    startLine: 93
  assemblies:
  - MyApp.Purchasing.Application.Tests
  namespace: MyApp.Purchasing.Application.Tests.Services
  syntax:
    content: >-
      [Fact]

      public Task GetSuppliersByNameAsync_ReturnsMatchingSuppliers()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function GetSuppliersByNameAsync_ReturnsMatchingSuppliers() As Task
  overload: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSuppliersByNameAsync_ReturnsMatchingSuppliers*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetAllSuppliersAsync_ReturnsAllSuppliers
  commentId: M:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetAllSuppliersAsync_ReturnsAllSuppliers
  id: GetAllSuppliersAsync_ReturnsAllSuppliers
  parent: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests
  langs:
  - csharp
  - vb
  name: GetAllSuppliersAsync_ReturnsAllSuppliers()
  nameWithType: SupplierServiceTests.GetAllSuppliersAsync_ReturnsAllSuppliers()
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetAllSuppliersAsync_ReturnsAllSuppliers()
  type: Method
  source:
    remote:
      path: src/MyApp.Purchasing/test/MyApp.Purchasing.Application.Tests/Services/SupplierServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: GetAllSuppliersAsync_ReturnsAllSuppliers
    path: src/MyApp.Purchasing/test/MyApp.Purchasing.Application.Tests/Services/SupplierServiceTests.cs
    startLine: 119
  assemblies:
  - MyApp.Purchasing.Application.Tests
  namespace: MyApp.Purchasing.Application.Tests.Services
  syntax:
    content: >-
      [Fact]

      public Task GetAllSuppliersAsync_ReturnsAllSuppliers()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function GetAllSuppliersAsync_ReturnsAllSuppliers() As Task
  overload: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetAllSuppliersAsync_ReturnsAllSuppliers*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.CreateSupplierAsync_WithUniqueEmail_CreatesSupplier
  commentId: M:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.CreateSupplierAsync_WithUniqueEmail_CreatesSupplier
  id: CreateSupplierAsync_WithUniqueEmail_CreatesSupplier
  parent: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests
  langs:
  - csharp
  - vb
  name: CreateSupplierAsync_WithUniqueEmail_CreatesSupplier()
  nameWithType: SupplierServiceTests.CreateSupplierAsync_WithUniqueEmail_CreatesSupplier()
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.CreateSupplierAsync_WithUniqueEmail_CreatesSupplier()
  type: Method
  source:
    remote:
      path: src/MyApp.Purchasing/test/MyApp.Purchasing.Application.Tests/Services/SupplierServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: CreateSupplierAsync_WithUniqueEmail_CreatesSupplier
    path: src/MyApp.Purchasing/test/MyApp.Purchasing.Application.Tests/Services/SupplierServiceTests.cs
    startLine: 145
  assemblies:
  - MyApp.Purchasing.Application.Tests
  namespace: MyApp.Purchasing.Application.Tests.Services
  syntax:
    content: >-
      [Fact]

      public Task CreateSupplierAsync_WithUniqueEmail_CreatesSupplier()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function CreateSupplierAsync_WithUniqueEmail_CreatesSupplier() As Task
  overload: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.CreateSupplierAsync_WithUniqueEmail_CreatesSupplier*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.CreateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException
  commentId: M:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.CreateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException
  id: CreateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException
  parent: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests
  langs:
  - csharp
  - vb
  name: CreateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException()
  nameWithType: SupplierServiceTests.CreateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException()
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.CreateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException()
  type: Method
  source:
    remote:
      path: src/MyApp.Purchasing/test/MyApp.Purchasing.Application.Tests/Services/SupplierServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: CreateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException
    path: src/MyApp.Purchasing/test/MyApp.Purchasing.Application.Tests/Services/SupplierServiceTests.cs
    startLine: 167
  assemblies:
  - MyApp.Purchasing.Application.Tests
  namespace: MyApp.Purchasing.Application.Tests.Services
  syntax:
    content: >-
      [Fact]

      public Task CreateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function CreateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException() As Task
  overload: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.CreateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithExistingSupplier_UpdatesSuccessfully
  commentId: M:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithExistingSupplier_UpdatesSuccessfully
  id: UpdateSupplierAsync_WithExistingSupplier_UpdatesSuccessfully
  parent: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests
  langs:
  - csharp
  - vb
  name: UpdateSupplierAsync_WithExistingSupplier_UpdatesSuccessfully()
  nameWithType: SupplierServiceTests.UpdateSupplierAsync_WithExistingSupplier_UpdatesSuccessfully()
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithExistingSupplier_UpdatesSuccessfully()
  type: Method
  source:
    remote:
      path: src/MyApp.Purchasing/test/MyApp.Purchasing.Application.Tests/Services/SupplierServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: UpdateSupplierAsync_WithExistingSupplier_UpdatesSuccessfully
    path: src/MyApp.Purchasing/test/MyApp.Purchasing.Application.Tests/Services/SupplierServiceTests.cs
    startLine: 184
  assemblies:
  - MyApp.Purchasing.Application.Tests
  namespace: MyApp.Purchasing.Application.Tests.Services
  syntax:
    content: >-
      [Fact]

      public Task UpdateSupplierAsync_WithExistingSupplier_UpdatesSuccessfully()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function UpdateSupplierAsync_WithExistingSupplier_UpdatesSuccessfully() As Task
  overload: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithExistingSupplier_UpdatesSuccessfully*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
  commentId: M:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
  id: UpdateSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
  parent: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests
  langs:
  - csharp
  - vb
  name: UpdateSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException()
  nameWithType: SupplierServiceTests.UpdateSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException()
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException()
  type: Method
  source:
    remote:
      path: src/MyApp.Purchasing/test/MyApp.Purchasing.Application.Tests/Services/SupplierServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: UpdateSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
    path: src/MyApp.Purchasing/test/MyApp.Purchasing.Application.Tests/Services/SupplierServiceTests.cs
    startLine: 207
  assemblies:
  - MyApp.Purchasing.Application.Tests
  namespace: MyApp.Purchasing.Application.Tests.Services
  syntax:
    content: >-
      [Fact]

      public Task UpdateSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function UpdateSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException() As Task
  overload: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException
  commentId: M:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException
  id: UpdateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException
  parent: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests
  langs:
  - csharp
  - vb
  name: UpdateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException()
  nameWithType: SupplierServiceTests.UpdateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException()
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException()
  type: Method
  source:
    remote:
      path: src/MyApp.Purchasing/test/MyApp.Purchasing.Application.Tests/Services/SupplierServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: UpdateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException
    path: src/MyApp.Purchasing/test/MyApp.Purchasing.Application.Tests/Services/SupplierServiceTests.cs
    startLine: 224
  assemblies:
  - MyApp.Purchasing.Application.Tests
  namespace: MyApp.Purchasing.Application.Tests.Services
  syntax:
    content: >-
      [Fact]

      public Task UpdateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function UpdateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException() As Task
  overload: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.DeleteSupplierAsync_WithExistingSupplier_DeletesSupplier
  commentId: M:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.DeleteSupplierAsync_WithExistingSupplier_DeletesSupplier
  id: DeleteSupplierAsync_WithExistingSupplier_DeletesSupplier
  parent: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests
  langs:
  - csharp
  - vb
  name: DeleteSupplierAsync_WithExistingSupplier_DeletesSupplier()
  nameWithType: SupplierServiceTests.DeleteSupplierAsync_WithExistingSupplier_DeletesSupplier()
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.DeleteSupplierAsync_WithExistingSupplier_DeletesSupplier()
  type: Method
  source:
    remote:
      path: src/MyApp.Purchasing/test/MyApp.Purchasing.Application.Tests/Services/SupplierServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: DeleteSupplierAsync_WithExistingSupplier_DeletesSupplier
    path: src/MyApp.Purchasing/test/MyApp.Purchasing.Application.Tests/Services/SupplierServiceTests.cs
    startLine: 244
  assemblies:
  - MyApp.Purchasing.Application.Tests
  namespace: MyApp.Purchasing.Application.Tests.Services
  syntax:
    content: >-
      [Fact]

      public Task DeleteSupplierAsync_WithExistingSupplier_DeletesSupplier()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function DeleteSupplierAsync_WithExistingSupplier_DeletesSupplier() As Task
  overload: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.DeleteSupplierAsync_WithExistingSupplier_DeletesSupplier*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.DeleteSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
  commentId: M:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.DeleteSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
  id: DeleteSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
  parent: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests
  langs:
  - csharp
  - vb
  name: DeleteSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException()
  nameWithType: SupplierServiceTests.DeleteSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException()
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.DeleteSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException()
  type: Method
  source:
    remote:
      path: src/MyApp.Purchasing/test/MyApp.Purchasing.Application.Tests/Services/SupplierServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: DeleteSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
    path: src/MyApp.Purchasing/test/MyApp.Purchasing.Application.Tests/Services/SupplierServiceTests.cs
    startLine: 260
  assemblies:
  - MyApp.Purchasing.Application.Tests
  namespace: MyApp.Purchasing.Application.Tests.Services
  syntax:
    content: >-
      [Fact]

      public Task DeleteSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function DeleteSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException() As Task
  overload: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.DeleteSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
references:
- uid: MyApp.Purchasing.Application.Tests.Services
  commentId: N:MyApp.Purchasing.Application.Tests.Services
  href: MyApp.html
  name: MyApp.Purchasing.Application.Tests.Services
  nameWithType: MyApp.Purchasing.Application.Tests.Services
  fullName: MyApp.Purchasing.Application.Tests.Services
  spec.csharp:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Purchasing
    name: Purchasing
    href: MyApp.Purchasing.html
  - name: .
  - uid: MyApp.Purchasing.Application
    name: Application
    href: MyApp.Purchasing.Application.html
  - name: .
  - uid: MyApp.Purchasing.Application.Tests
    name: Tests
    href: MyApp.Purchasing.Application.Tests.html
  - name: .
  - uid: MyApp.Purchasing.Application.Tests.Services
    name: Services
    href: MyApp.Purchasing.Application.Tests.Services.html
  spec.vb:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Purchasing
    name: Purchasing
    href: MyApp.Purchasing.html
  - name: .
  - uid: MyApp.Purchasing.Application
    name: Application
    href: MyApp.Purchasing.Application.html
  - name: .
  - uid: MyApp.Purchasing.Application.Tests
    name: Tests
    href: MyApp.Purchasing.Application.Tests.html
  - name: .
  - uid: MyApp.Purchasing.Application.Tests.Services
    name: Services
    href: MyApp.Purchasing.Application.Tests.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.#ctor*
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.#ctor
  href: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests__ctor
  name: SupplierServiceTests
  nameWithType: SupplierServiceTests.SupplierServiceTests
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.SupplierServiceTests
  nameWithType.vb: SupplierServiceTests.New
  fullName.vb: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.New
  name.vb: New
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByIdAsync_WithExistingId_ReturnsSupplierDto*
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByIdAsync_WithExistingId_ReturnsSupplierDto
  href: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_GetSupplierByIdAsync_WithExistingId_ReturnsSupplierDto
  name: GetSupplierByIdAsync_WithExistingId_ReturnsSupplierDto
  nameWithType: SupplierServiceTests.GetSupplierByIdAsync_WithExistingId_ReturnsSupplierDto
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByIdAsync_WithExistingId_ReturnsSupplierDto
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByIdAsync_WithNonExistentId_ReturnsNull*
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByIdAsync_WithNonExistentId_ReturnsNull
  href: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_GetSupplierByIdAsync_WithNonExistentId_ReturnsNull
  name: GetSupplierByIdAsync_WithNonExistentId_ReturnsNull
  nameWithType: SupplierServiceTests.GetSupplierByIdAsync_WithNonExistentId_ReturnsNull
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByIdAsync_WithNonExistentId_ReturnsNull
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByEmailAsync_WithExistingEmail_ReturnsSupplierDto*
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByEmailAsync_WithExistingEmail_ReturnsSupplierDto
  href: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_GetSupplierByEmailAsync_WithExistingEmail_ReturnsSupplierDto
  name: GetSupplierByEmailAsync_WithExistingEmail_ReturnsSupplierDto
  nameWithType: SupplierServiceTests.GetSupplierByEmailAsync_WithExistingEmail_ReturnsSupplierDto
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByEmailAsync_WithExistingEmail_ReturnsSupplierDto
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByEmailAsync_WithNonExistentEmail_ReturnsNull*
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByEmailAsync_WithNonExistentEmail_ReturnsNull
  href: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_GetSupplierByEmailAsync_WithNonExistentEmail_ReturnsNull
  name: GetSupplierByEmailAsync_WithNonExistentEmail_ReturnsNull
  nameWithType: SupplierServiceTests.GetSupplierByEmailAsync_WithNonExistentEmail_ReturnsNull
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByEmailAsync_WithNonExistentEmail_ReturnsNull
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSuppliersByNameAsync_ReturnsMatchingSuppliers*
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSuppliersByNameAsync_ReturnsMatchingSuppliers
  href: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_GetSuppliersByNameAsync_ReturnsMatchingSuppliers
  name: GetSuppliersByNameAsync_ReturnsMatchingSuppliers
  nameWithType: SupplierServiceTests.GetSuppliersByNameAsync_ReturnsMatchingSuppliers
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSuppliersByNameAsync_ReturnsMatchingSuppliers
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetAllSuppliersAsync_ReturnsAllSuppliers*
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetAllSuppliersAsync_ReturnsAllSuppliers
  href: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_GetAllSuppliersAsync_ReturnsAllSuppliers
  name: GetAllSuppliersAsync_ReturnsAllSuppliers
  nameWithType: SupplierServiceTests.GetAllSuppliersAsync_ReturnsAllSuppliers
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetAllSuppliersAsync_ReturnsAllSuppliers
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.CreateSupplierAsync_WithUniqueEmail_CreatesSupplier*
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.CreateSupplierAsync_WithUniqueEmail_CreatesSupplier
  href: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_CreateSupplierAsync_WithUniqueEmail_CreatesSupplier
  name: CreateSupplierAsync_WithUniqueEmail_CreatesSupplier
  nameWithType: SupplierServiceTests.CreateSupplierAsync_WithUniqueEmail_CreatesSupplier
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.CreateSupplierAsync_WithUniqueEmail_CreatesSupplier
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.CreateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException*
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.CreateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException
  href: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_CreateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException
  name: CreateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException
  nameWithType: SupplierServiceTests.CreateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.CreateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithExistingSupplier_UpdatesSuccessfully*
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithExistingSupplier_UpdatesSuccessfully
  href: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_UpdateSupplierAsync_WithExistingSupplier_UpdatesSuccessfully
  name: UpdateSupplierAsync_WithExistingSupplier_UpdatesSuccessfully
  nameWithType: SupplierServiceTests.UpdateSupplierAsync_WithExistingSupplier_UpdatesSuccessfully
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithExistingSupplier_UpdatesSuccessfully
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException*
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
  href: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_UpdateSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
  name: UpdateSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
  nameWithType: SupplierServiceTests.UpdateSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException*
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException
  href: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_UpdateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException
  name: UpdateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException
  nameWithType: SupplierServiceTests.UpdateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.DeleteSupplierAsync_WithExistingSupplier_DeletesSupplier*
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.DeleteSupplierAsync_WithExistingSupplier_DeletesSupplier
  href: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_DeleteSupplierAsync_WithExistingSupplier_DeletesSupplier
  name: DeleteSupplierAsync_WithExistingSupplier_DeletesSupplier
  nameWithType: SupplierServiceTests.DeleteSupplierAsync_WithExistingSupplier_DeletesSupplier
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.DeleteSupplierAsync_WithExistingSupplier_DeletesSupplier
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.DeleteSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException*
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.DeleteSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
  href: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_DeleteSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
  name: DeleteSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
  nameWithType: SupplierServiceTests.DeleteSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.DeleteSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
