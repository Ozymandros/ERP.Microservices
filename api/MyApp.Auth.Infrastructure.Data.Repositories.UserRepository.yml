### YamlMime:ManagedReference
items:
- uid: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository
  commentId: T:MyApp.Auth.Infrastructure.Data.Repositories.UserRepository
  id: UserRepository
  parent: MyApp.Auth.Infrastructure.Data.Repositories
  children:
  - MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.#ctor(MyApp.Auth.Infrastructure.Data.AuthDbContext)
  - MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.EmailExistsAsync(System.String)
  - MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByEmailAsync(System.String)
  - MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByExternalIdAsync(System.String,System.String)
  - MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByRoleAsync(System.String)
  langs:
  - csharp
  - vb
  name: UserRepository
  nameWithType: UserRepository
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository
  type: Class
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Infrastructure/Data/Repositories/UserRepository.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: UserRepository
    path: src/MyApp.Auth/MyApp.Auth.Infrastructure/Data/Repositories/UserRepository.cs
    startLine: 7
  assemblies:
  - MyApp.Auth.Infrastructure
  namespace: MyApp.Auth.Infrastructure.Data.Repositories
  syntax:
    content: 'public class UserRepository : Repository<ApplicationUser, Guid>, IUserRepository, IRepository<ApplicationUser, Guid>'
    content.vb: Public Class UserRepository Inherits Repository(Of ApplicationUser, Guid) Implements IUserRepository, IRepository(Of ApplicationUser, Guid)
  inheritance:
  - System.Object
  - MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}
  implements:
  - MyApp.Auth.Domain.Repositories.IUserRepository
  - MyApp.Shared.Domain.Repositories.IRepository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}
  inheritedMembers:
  - MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}._dbContext
  - MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}.GetByIdAsync(System.Guid)
  - MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}.GetAllAsync
  - MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}.GetAllPaginatedAsync(System.Int32,System.Int32)
  - MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}.AddAsync(MyApp.Auth.Domain.Entities.ApplicationUser)
  - MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}.UpdateAsync(MyApp.Auth.Domain.Entities.ApplicationUser)
  - MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}.DeleteAsync(MyApp.Auth.Domain.Entities.ApplicationUser)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.#ctor(MyApp.Auth.Infrastructure.Data.AuthDbContext)
  commentId: M:MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.#ctor(MyApp.Auth.Infrastructure.Data.AuthDbContext)
  id: '#ctor(MyApp.Auth.Infrastructure.Data.AuthDbContext)'
  parent: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository
  langs:
  - csharp
  - vb
  name: UserRepository(AuthDbContext)
  nameWithType: UserRepository.UserRepository(AuthDbContext)
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.UserRepository(MyApp.Auth.Infrastructure.Data.AuthDbContext)
  type: Constructor
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Infrastructure/Data/Repositories/UserRepository.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: .ctor
    path: src/MyApp.Auth/MyApp.Auth.Infrastructure/Data/Repositories/UserRepository.cs
    startLine: 11
  assemblies:
  - MyApp.Auth.Infrastructure
  namespace: MyApp.Auth.Infrastructure.Data.Repositories
  syntax:
    content: public UserRepository(AuthDbContext context)
    parameters:
    - id: context
      type: MyApp.Auth.Infrastructure.Data.AuthDbContext
    content.vb: Public Sub New(context As AuthDbContext)
  overload: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.#ctor*
  nameWithType.vb: UserRepository.New(AuthDbContext)
  fullName.vb: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.New(MyApp.Auth.Infrastructure.Data.AuthDbContext)
  name.vb: New(AuthDbContext)
- uid: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByEmailAsync(System.String)
  commentId: M:MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByEmailAsync(System.String)
  id: GetByEmailAsync(System.String)
  parent: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository
  langs:
  - csharp
  - vb
  name: GetByEmailAsync(string)
  nameWithType: UserRepository.GetByEmailAsync(string)
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByEmailAsync(string)
  type: Method
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Infrastructure/Data/Repositories/UserRepository.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: GetByEmailAsync
    path: src/MyApp.Auth/MyApp.Auth.Infrastructure/Data/Repositories/UserRepository.cs
    startLine: 16
  assemblies:
  - MyApp.Auth.Infrastructure
  namespace: MyApp.Auth.Infrastructure.Data.Repositories
  example: []
  syntax:
    content: public Task<ApplicationUser?> GetByEmailAsync(string email)
    parameters:
    - id: email
      type: System.String
    return:
      type: System.Threading.Tasks.Task{MyApp.Auth.Domain.Entities.ApplicationUser}
    content.vb: Public Function GetByEmailAsync(email As String) As Task(Of ApplicationUser)
  overload: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByEmailAsync*
  implements:
  - MyApp.Auth.Domain.Repositories.IUserRepository.GetByEmailAsync(System.String)
  nameWithType.vb: UserRepository.GetByEmailAsync(String)
  fullName.vb: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByEmailAsync(String)
  name.vb: GetByEmailAsync(String)
- uid: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByExternalIdAsync(System.String,System.String)
  commentId: M:MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByExternalIdAsync(System.String,System.String)
  id: GetByExternalIdAsync(System.String,System.String)
  parent: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository
  langs:
  - csharp
  - vb
  name: GetByExternalIdAsync(string, string)
  nameWithType: UserRepository.GetByExternalIdAsync(string, string)
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByExternalIdAsync(string, string)
  type: Method
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Infrastructure/Data/Repositories/UserRepository.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: GetByExternalIdAsync
    path: src/MyApp.Auth/MyApp.Auth.Infrastructure/Data/Repositories/UserRepository.cs
    startLine: 24
  assemblies:
  - MyApp.Auth.Infrastructure
  namespace: MyApp.Auth.Infrastructure.Data.Repositories
  example: []
  syntax:
    content: public Task<ApplicationUser?> GetByExternalIdAsync(string externalProvider, string externalId)
    parameters:
    - id: externalProvider
      type: System.String
    - id: externalId
      type: System.String
    return:
      type: System.Threading.Tasks.Task{MyApp.Auth.Domain.Entities.ApplicationUser}
    content.vb: Public Function GetByExternalIdAsync(externalProvider As String, externalId As String) As Task(Of ApplicationUser)
  overload: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByExternalIdAsync*
  implements:
  - MyApp.Auth.Domain.Repositories.IUserRepository.GetByExternalIdAsync(System.String,System.String)
  nameWithType.vb: UserRepository.GetByExternalIdAsync(String, String)
  fullName.vb: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByExternalIdAsync(String, String)
  name.vb: GetByExternalIdAsync(String, String)
- uid: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByRoleAsync(System.String)
  commentId: M:MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByRoleAsync(System.String)
  id: GetByRoleAsync(System.String)
  parent: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository
  langs:
  - csharp
  - vb
  name: GetByRoleAsync(string)
  nameWithType: UserRepository.GetByRoleAsync(string)
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByRoleAsync(string)
  type: Method
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Infrastructure/Data/Repositories/UserRepository.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: GetByRoleAsync
    path: src/MyApp.Auth/MyApp.Auth.Infrastructure/Data/Repositories/UserRepository.cs
    startLine: 31
  assemblies:
  - MyApp.Auth.Infrastructure
  namespace: MyApp.Auth.Infrastructure.Data.Repositories
  example: []
  syntax:
    content: public Task<IEnumerable<ApplicationUser>> GetByRoleAsync(string roleName)
    parameters:
    - id: roleName
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{MyApp.Auth.Domain.Entities.ApplicationUser}}
    content.vb: Public Function GetByRoleAsync(roleName As String) As Task(Of IEnumerable(Of ApplicationUser))
  overload: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByRoleAsync*
  implements:
  - MyApp.Auth.Domain.Repositories.IUserRepository.GetByRoleAsync(System.String)
  nameWithType.vb: UserRepository.GetByRoleAsync(String)
  fullName.vb: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByRoleAsync(String)
  name.vb: GetByRoleAsync(String)
- uid: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.EmailExistsAsync(System.String)
  commentId: M:MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.EmailExistsAsync(System.String)
  id: EmailExistsAsync(System.String)
  parent: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository
  langs:
  - csharp
  - vb
  name: EmailExistsAsync(string)
  nameWithType: UserRepository.EmailExistsAsync(string)
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.EmailExistsAsync(string)
  type: Method
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Infrastructure/Data/Repositories/UserRepository.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: EmailExistsAsync
    path: src/MyApp.Auth/MyApp.Auth.Infrastructure/Data/Repositories/UserRepository.cs
    startLine: 43
  assemblies:
  - MyApp.Auth.Infrastructure
  namespace: MyApp.Auth.Infrastructure.Data.Repositories
  example: []
  syntax:
    content: public Task<bool> EmailExistsAsync(string email)
    parameters:
    - id: email
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function EmailExistsAsync(email As String) As Task(Of Boolean)
  overload: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.EmailExistsAsync*
  implements:
  - MyApp.Auth.Domain.Repositories.IUserRepository.EmailExistsAsync(System.String)
  nameWithType.vb: UserRepository.EmailExistsAsync(String)
  fullName.vb: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.EmailExistsAsync(String)
  name.vb: EmailExistsAsync(String)
references:
- uid: MyApp.Auth.Infrastructure.Data.Repositories
  commentId: N:MyApp.Auth.Infrastructure.Data.Repositories
  href: MyApp.html
  name: MyApp.Auth.Infrastructure.Data.Repositories
  nameWithType: MyApp.Auth.Infrastructure.Data.Repositories
  fullName: MyApp.Auth.Infrastructure.Data.Repositories
  spec.csharp:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Auth
    name: Auth
    href: MyApp.Auth.html
  - name: .
  - uid: MyApp.Auth.Infrastructure
    name: Infrastructure
    href: MyApp.Auth.Infrastructure.html
  - name: .
  - uid: MyApp.Auth.Infrastructure.Data
    name: Data
    href: MyApp.Auth.Infrastructure.Data.html
  - name: .
  - uid: MyApp.Auth.Infrastructure.Data.Repositories
    name: Repositories
    href: MyApp.Auth.Infrastructure.Data.Repositories.html
  spec.vb:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Auth
    name: Auth
    href: MyApp.Auth.html
  - name: .
  - uid: MyApp.Auth.Infrastructure
    name: Infrastructure
    href: MyApp.Auth.Infrastructure.html
  - name: .
  - uid: MyApp.Auth.Infrastructure.Data
    name: Data
    href: MyApp.Auth.Infrastructure.Data.html
  - name: .
  - uid: MyApp.Auth.Infrastructure.Data.Repositories
    name: Repositories
    href: MyApp.Auth.Infrastructure.Data.Repositories.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}
  commentId: T:MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}
  parent: MyApp.Shared.Infrastructure.Repositories
  definition: MyApp.Shared.Infrastructure.Repositories.Repository`2
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Repository<ApplicationUser, Guid>
  nameWithType: Repository<ApplicationUser, Guid>
  fullName: MyApp.Shared.Infrastructure.Repositories.Repository<MyApp.Auth.Domain.Entities.ApplicationUser, System.Guid>
  nameWithType.vb: Repository(Of ApplicationUser, Guid)
  fullName.vb: MyApp.Shared.Infrastructure.Repositories.Repository(Of MyApp.Auth.Domain.Entities.ApplicationUser, System.Guid)
  name.vb: Repository(Of ApplicationUser, Guid)
  spec.csharp:
  - uid: MyApp.Shared.Infrastructure.Repositories.Repository`2
    name: Repository
  - name: <
  - uid: MyApp.Auth.Domain.Entities.ApplicationUser
    name: ApplicationUser
  - name: ','
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: '>'
  spec.vb:
  - uid: MyApp.Shared.Infrastructure.Repositories.Repository`2
    name: Repository
  - name: (
  - name: Of
  - name: " "
  - uid: MyApp.Auth.Domain.Entities.ApplicationUser
    name: ApplicationUser
  - name: ','
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
- uid: MyApp.Auth.Domain.Repositories.IUserRepository
  commentId: T:MyApp.Auth.Domain.Repositories.IUserRepository
  parent: MyApp.Auth.Domain.Repositories
  href: MyApp.Auth.Domain.Repositories.IUserRepository.html
  name: IUserRepository
  nameWithType: IUserRepository
  fullName: MyApp.Auth.Domain.Repositories.IUserRepository
- uid: MyApp.Shared.Domain.Repositories.IRepository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}
  commentId: T:MyApp.Shared.Domain.Repositories.IRepository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}
  parent: MyApp.Shared.Domain.Repositories
  definition: MyApp.Shared.Domain.Repositories.IRepository`2
  href: MyApp.Auth.Domain.Entities.ApplicationUser.html
  name: IRepository<ApplicationUser, Guid>
  nameWithType: IRepository<ApplicationUser, Guid>
  fullName: MyApp.Shared.Domain.Repositories.IRepository<MyApp.Auth.Domain.Entities.ApplicationUser, System.Guid>
  nameWithType.vb: IRepository(Of ApplicationUser, Guid)
  fullName.vb: MyApp.Shared.Domain.Repositories.IRepository(Of MyApp.Auth.Domain.Entities.ApplicationUser, System.Guid)
  name.vb: IRepository(Of ApplicationUser, Guid)
  spec.csharp:
  - uid: MyApp.Shared.Domain.Repositories.IRepository`2
    name: IRepository
  - name: <
  - uid: MyApp.Auth.Domain.Entities.ApplicationUser
    name: ApplicationUser
    href: MyApp.Auth.Domain.Entities.ApplicationUser.html
  - name: ','
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: '>'
  spec.vb:
  - uid: MyApp.Shared.Domain.Repositories.IRepository`2
    name: IRepository
  - name: (
  - name: Of
  - name: " "
  - uid: MyApp.Auth.Domain.Entities.ApplicationUser
    name: ApplicationUser
    href: MyApp.Auth.Domain.Entities.ApplicationUser.html
  - name: ','
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
- uid: MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}._dbContext
  commentId: F:MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}._dbContext
  parent: MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}
  definition: MyApp.Shared.Infrastructure.Repositories.Repository`2._dbContext
  name: _dbContext
  nameWithType: Repository<ApplicationUser, Guid>._dbContext
  fullName: MyApp.Shared.Infrastructure.Repositories.Repository<MyApp.Auth.Domain.Entities.ApplicationUser, System.Guid>._dbContext
  nameWithType.vb: Repository(Of ApplicationUser, Guid)._dbContext
  fullName.vb: MyApp.Shared.Infrastructure.Repositories.Repository(Of MyApp.Auth.Domain.Entities.ApplicationUser, System.Guid)._dbContext
- uid: MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}.GetByIdAsync(System.Guid)
  commentId: M:MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}.GetByIdAsync(System.Guid)
  parent: MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}
  definition: MyApp.Shared.Infrastructure.Repositories.Repository`2.GetByIdAsync(`1)
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: GetByIdAsync(Guid)
  nameWithType: Repository<ApplicationUser, Guid>.GetByIdAsync(Guid)
  fullName: MyApp.Shared.Infrastructure.Repositories.Repository<MyApp.Auth.Domain.Entities.ApplicationUser, System.Guid>.GetByIdAsync(System.Guid)
  nameWithType.vb: Repository(Of ApplicationUser, Guid).GetByIdAsync(Guid)
  fullName.vb: MyApp.Shared.Infrastructure.Repositories.Repository(Of MyApp.Auth.Domain.Entities.ApplicationUser, System.Guid).GetByIdAsync(System.Guid)
  spec.csharp:
  - uid: MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}.GetByIdAsync(System.Guid)
    name: GetByIdAsync
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
  spec.vb:
  - uid: MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}.GetByIdAsync(System.Guid)
    name: GetByIdAsync
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
- uid: MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}.GetAllAsync
  commentId: M:MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}.GetAllAsync
  parent: MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}
  definition: MyApp.Shared.Infrastructure.Repositories.Repository`2.GetAllAsync
  name: GetAllAsync()
  nameWithType: Repository<ApplicationUser, Guid>.GetAllAsync()
  fullName: MyApp.Shared.Infrastructure.Repositories.Repository<MyApp.Auth.Domain.Entities.ApplicationUser, System.Guid>.GetAllAsync()
  nameWithType.vb: Repository(Of ApplicationUser, Guid).GetAllAsync()
  fullName.vb: MyApp.Shared.Infrastructure.Repositories.Repository(Of MyApp.Auth.Domain.Entities.ApplicationUser, System.Guid).GetAllAsync()
  spec.csharp:
  - uid: MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}.GetAllAsync
    name: GetAllAsync
  - name: (
  - name: )
  spec.vb:
  - uid: MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}.GetAllAsync
    name: GetAllAsync
  - name: (
  - name: )
- uid: MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}.GetAllPaginatedAsync(System.Int32,System.Int32)
  commentId: M:MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}.GetAllPaginatedAsync(System.Int32,System.Int32)
  parent: MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}
  definition: MyApp.Shared.Infrastructure.Repositories.Repository`2.GetAllPaginatedAsync(System.Int32,System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: GetAllPaginatedAsync(int, int)
  nameWithType: Repository<ApplicationUser, Guid>.GetAllPaginatedAsync(int, int)
  fullName: MyApp.Shared.Infrastructure.Repositories.Repository<MyApp.Auth.Domain.Entities.ApplicationUser, System.Guid>.GetAllPaginatedAsync(int, int)
  nameWithType.vb: Repository(Of ApplicationUser, Guid).GetAllPaginatedAsync(Integer, Integer)
  fullName.vb: MyApp.Shared.Infrastructure.Repositories.Repository(Of MyApp.Auth.Domain.Entities.ApplicationUser, System.Guid).GetAllPaginatedAsync(Integer, Integer)
  name.vb: GetAllPaginatedAsync(Integer, Integer)
  spec.csharp:
  - uid: MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}.GetAllPaginatedAsync(System.Int32,System.Int32)
    name: GetAllPaginatedAsync
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}.GetAllPaginatedAsync(System.Int32,System.Int32)
    name: GetAllPaginatedAsync
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}.AddAsync(MyApp.Auth.Domain.Entities.ApplicationUser)
  commentId: M:MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}.AddAsync(MyApp.Auth.Domain.Entities.ApplicationUser)
  parent: MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}
  definition: MyApp.Shared.Infrastructure.Repositories.Repository`2.AddAsync(`0)
  name: AddAsync(ApplicationUser)
  nameWithType: Repository<ApplicationUser, Guid>.AddAsync(ApplicationUser)
  fullName: MyApp.Shared.Infrastructure.Repositories.Repository<MyApp.Auth.Domain.Entities.ApplicationUser, System.Guid>.AddAsync(MyApp.Auth.Domain.Entities.ApplicationUser)
  nameWithType.vb: Repository(Of ApplicationUser, Guid).AddAsync(ApplicationUser)
  fullName.vb: MyApp.Shared.Infrastructure.Repositories.Repository(Of MyApp.Auth.Domain.Entities.ApplicationUser, System.Guid).AddAsync(MyApp.Auth.Domain.Entities.ApplicationUser)
  spec.csharp:
  - uid: MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}.AddAsync(MyApp.Auth.Domain.Entities.ApplicationUser)
    name: AddAsync
  - name: (
  - uid: MyApp.Auth.Domain.Entities.ApplicationUser
    name: ApplicationUser
  - name: )
  spec.vb:
  - uid: MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}.AddAsync(MyApp.Auth.Domain.Entities.ApplicationUser)
    name: AddAsync
  - name: (
  - uid: MyApp.Auth.Domain.Entities.ApplicationUser
    name: ApplicationUser
  - name: )
- uid: MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}.UpdateAsync(MyApp.Auth.Domain.Entities.ApplicationUser)
  commentId: M:MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}.UpdateAsync(MyApp.Auth.Domain.Entities.ApplicationUser)
  parent: MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}
  definition: MyApp.Shared.Infrastructure.Repositories.Repository`2.UpdateAsync(`0)
  name: UpdateAsync(ApplicationUser)
  nameWithType: Repository<ApplicationUser, Guid>.UpdateAsync(ApplicationUser)
  fullName: MyApp.Shared.Infrastructure.Repositories.Repository<MyApp.Auth.Domain.Entities.ApplicationUser, System.Guid>.UpdateAsync(MyApp.Auth.Domain.Entities.ApplicationUser)
  nameWithType.vb: Repository(Of ApplicationUser, Guid).UpdateAsync(ApplicationUser)
  fullName.vb: MyApp.Shared.Infrastructure.Repositories.Repository(Of MyApp.Auth.Domain.Entities.ApplicationUser, System.Guid).UpdateAsync(MyApp.Auth.Domain.Entities.ApplicationUser)
  spec.csharp:
  - uid: MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}.UpdateAsync(MyApp.Auth.Domain.Entities.ApplicationUser)
    name: UpdateAsync
  - name: (
  - uid: MyApp.Auth.Domain.Entities.ApplicationUser
    name: ApplicationUser
  - name: )
  spec.vb:
  - uid: MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}.UpdateAsync(MyApp.Auth.Domain.Entities.ApplicationUser)
    name: UpdateAsync
  - name: (
  - uid: MyApp.Auth.Domain.Entities.ApplicationUser
    name: ApplicationUser
  - name: )
- uid: MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}.DeleteAsync(MyApp.Auth.Domain.Entities.ApplicationUser)
  commentId: M:MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}.DeleteAsync(MyApp.Auth.Domain.Entities.ApplicationUser)
  parent: MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}
  definition: MyApp.Shared.Infrastructure.Repositories.Repository`2.DeleteAsync(`0)
  name: DeleteAsync(ApplicationUser)
  nameWithType: Repository<ApplicationUser, Guid>.DeleteAsync(ApplicationUser)
  fullName: MyApp.Shared.Infrastructure.Repositories.Repository<MyApp.Auth.Domain.Entities.ApplicationUser, System.Guid>.DeleteAsync(MyApp.Auth.Domain.Entities.ApplicationUser)
  nameWithType.vb: Repository(Of ApplicationUser, Guid).DeleteAsync(ApplicationUser)
  fullName.vb: MyApp.Shared.Infrastructure.Repositories.Repository(Of MyApp.Auth.Domain.Entities.ApplicationUser, System.Guid).DeleteAsync(MyApp.Auth.Domain.Entities.ApplicationUser)
  spec.csharp:
  - uid: MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}.DeleteAsync(MyApp.Auth.Domain.Entities.ApplicationUser)
    name: DeleteAsync
  - name: (
  - uid: MyApp.Auth.Domain.Entities.ApplicationUser
    name: ApplicationUser
  - name: )
  spec.vb:
  - uid: MyApp.Shared.Infrastructure.Repositories.Repository{MyApp.Auth.Domain.Entities.ApplicationUser,System.Guid}.DeleteAsync(MyApp.Auth.Domain.Entities.ApplicationUser)
    name: DeleteAsync
  - name: (
  - uid: MyApp.Auth.Domain.Entities.ApplicationUser
    name: ApplicationUser
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MyApp.Shared.Infrastructure.Repositories.Repository`2
  commentId: T:MyApp.Shared.Infrastructure.Repositories.Repository`2
  href: MyApp.Shared.Infrastructure.Repositories.Repository-2.html
  name: Repository<TEntity, TKey>
  nameWithType: Repository<TEntity, TKey>
  fullName: MyApp.Shared.Infrastructure.Repositories.Repository<TEntity, TKey>
  nameWithType.vb: Repository(Of TEntity, TKey)
  fullName.vb: MyApp.Shared.Infrastructure.Repositories.Repository(Of TEntity, TKey)
  name.vb: Repository(Of TEntity, TKey)
  spec.csharp:
  - uid: MyApp.Shared.Infrastructure.Repositories.Repository`2
    name: Repository
    href: MyApp.Shared.Infrastructure.Repositories.Repository-2.html
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  spec.vb:
  - uid: MyApp.Shared.Infrastructure.Repositories.Repository`2
    name: Repository
    href: MyApp.Shared.Infrastructure.Repositories.Repository-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TKey
  - name: )
- uid: MyApp.Shared.Infrastructure.Repositories
  commentId: N:MyApp.Shared.Infrastructure.Repositories
  href: MyApp.html
  name: MyApp.Shared.Infrastructure.Repositories
  nameWithType: MyApp.Shared.Infrastructure.Repositories
  fullName: MyApp.Shared.Infrastructure.Repositories
  spec.csharp:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Shared
    name: Shared
    href: MyApp.Shared.html
  - name: .
  - uid: MyApp.Shared.Infrastructure
    name: Infrastructure
    href: MyApp.Shared.Infrastructure.html
  - name: .
  - uid: MyApp.Shared.Infrastructure.Repositories
    name: Repositories
    href: MyApp.Shared.Infrastructure.Repositories.html
  spec.vb:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Shared
    name: Shared
    href: MyApp.Shared.html
  - name: .
  - uid: MyApp.Shared.Infrastructure
    name: Infrastructure
    href: MyApp.Shared.Infrastructure.html
  - name: .
  - uid: MyApp.Shared.Infrastructure.Repositories
    name: Repositories
    href: MyApp.Shared.Infrastructure.Repositories.html
- uid: MyApp.Auth.Domain.Repositories
  commentId: N:MyApp.Auth.Domain.Repositories
  href: MyApp.html
  name: MyApp.Auth.Domain.Repositories
  nameWithType: MyApp.Auth.Domain.Repositories
  fullName: MyApp.Auth.Domain.Repositories
  spec.csharp:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Auth
    name: Auth
    href: MyApp.Auth.html
  - name: .
  - uid: MyApp.Auth.Domain
    name: Domain
    href: MyApp.Auth.Domain.html
  - name: .
  - uid: MyApp.Auth.Domain.Repositories
    name: Repositories
    href: MyApp.Auth.Domain.Repositories.html
  spec.vb:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Auth
    name: Auth
    href: MyApp.Auth.html
  - name: .
  - uid: MyApp.Auth.Domain
    name: Domain
    href: MyApp.Auth.Domain.html
  - name: .
  - uid: MyApp.Auth.Domain.Repositories
    name: Repositories
    href: MyApp.Auth.Domain.Repositories.html
- uid: MyApp.Shared.Domain.Repositories.IRepository`2
  commentId: T:MyApp.Shared.Domain.Repositories.IRepository`2
  href: MyApp.Shared.Domain.Repositories.IRepository-2.html
  name: IRepository<TEntity, TKey>
  nameWithType: IRepository<TEntity, TKey>
  fullName: MyApp.Shared.Domain.Repositories.IRepository<TEntity, TKey>
  nameWithType.vb: IRepository(Of TEntity, TKey)
  fullName.vb: MyApp.Shared.Domain.Repositories.IRepository(Of TEntity, TKey)
  name.vb: IRepository(Of TEntity, TKey)
  spec.csharp:
  - uid: MyApp.Shared.Domain.Repositories.IRepository`2
    name: IRepository
    href: MyApp.Shared.Domain.Repositories.IRepository-2.html
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  spec.vb:
  - uid: MyApp.Shared.Domain.Repositories.IRepository`2
    name: IRepository
    href: MyApp.Shared.Domain.Repositories.IRepository-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TKey
  - name: )
- uid: MyApp.Shared.Domain.Repositories
  commentId: N:MyApp.Shared.Domain.Repositories
  href: MyApp.html
  name: MyApp.Shared.Domain.Repositories
  nameWithType: MyApp.Shared.Domain.Repositories
  fullName: MyApp.Shared.Domain.Repositories
  spec.csharp:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Shared
    name: Shared
    href: MyApp.Shared.html
  - name: .
  - uid: MyApp.Shared.Domain
    name: Domain
    href: MyApp.Shared.Domain.html
  - name: .
  - uid: MyApp.Shared.Domain.Repositories
    name: Repositories
    href: MyApp.Shared.Domain.Repositories.html
  spec.vb:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Shared
    name: Shared
    href: MyApp.Shared.html
  - name: .
  - uid: MyApp.Shared.Domain
    name: Domain
    href: MyApp.Shared.Domain.html
  - name: .
  - uid: MyApp.Shared.Domain.Repositories
    name: Repositories
    href: MyApp.Shared.Domain.Repositories.html
- uid: MyApp.Shared.Infrastructure.Repositories.Repository`2._dbContext
  commentId: F:MyApp.Shared.Infrastructure.Repositories.Repository`2._dbContext
  name: _dbContext
  nameWithType: Repository<TEntity, TKey>._dbContext
  fullName: MyApp.Shared.Infrastructure.Repositories.Repository<TEntity, TKey>._dbContext
  nameWithType.vb: Repository(Of TEntity, TKey)._dbContext
  fullName.vb: MyApp.Shared.Infrastructure.Repositories.Repository(Of TEntity, TKey)._dbContext
- uid: MyApp.Shared.Infrastructure.Repositories.Repository`2.GetByIdAsync(`1)
  commentId: M:MyApp.Shared.Infrastructure.Repositories.Repository`2.GetByIdAsync(`1)
  name: GetByIdAsync(TKey)
  nameWithType: Repository<TEntity, TKey>.GetByIdAsync(TKey)
  fullName: MyApp.Shared.Infrastructure.Repositories.Repository<TEntity, TKey>.GetByIdAsync(TKey)
  nameWithType.vb: Repository(Of TEntity, TKey).GetByIdAsync(TKey)
  fullName.vb: MyApp.Shared.Infrastructure.Repositories.Repository(Of TEntity, TKey).GetByIdAsync(TKey)
  spec.csharp:
  - uid: MyApp.Shared.Infrastructure.Repositories.Repository`2.GetByIdAsync(`1)
    name: GetByIdAsync
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: MyApp.Shared.Infrastructure.Repositories.Repository`2.GetByIdAsync(`1)
    name: GetByIdAsync
  - name: (
  - name: TKey
  - name: )
- uid: MyApp.Shared.Infrastructure.Repositories.Repository`2.GetAllAsync
  commentId: M:MyApp.Shared.Infrastructure.Repositories.Repository`2.GetAllAsync
  name: GetAllAsync()
  nameWithType: Repository<TEntity, TKey>.GetAllAsync()
  fullName: MyApp.Shared.Infrastructure.Repositories.Repository<TEntity, TKey>.GetAllAsync()
  nameWithType.vb: Repository(Of TEntity, TKey).GetAllAsync()
  fullName.vb: MyApp.Shared.Infrastructure.Repositories.Repository(Of TEntity, TKey).GetAllAsync()
  spec.csharp:
  - uid: MyApp.Shared.Infrastructure.Repositories.Repository`2.GetAllAsync
    name: GetAllAsync
  - name: (
  - name: )
  spec.vb:
  - uid: MyApp.Shared.Infrastructure.Repositories.Repository`2.GetAllAsync
    name: GetAllAsync
  - name: (
  - name: )
- uid: MyApp.Shared.Infrastructure.Repositories.Repository`2.GetAllPaginatedAsync(System.Int32,System.Int32)
  commentId: M:MyApp.Shared.Infrastructure.Repositories.Repository`2.GetAllPaginatedAsync(System.Int32,System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: GetAllPaginatedAsync(int, int)
  nameWithType: Repository<TEntity, TKey>.GetAllPaginatedAsync(int, int)
  fullName: MyApp.Shared.Infrastructure.Repositories.Repository<TEntity, TKey>.GetAllPaginatedAsync(int, int)
  nameWithType.vb: Repository(Of TEntity, TKey).GetAllPaginatedAsync(Integer, Integer)
  fullName.vb: MyApp.Shared.Infrastructure.Repositories.Repository(Of TEntity, TKey).GetAllPaginatedAsync(Integer, Integer)
  name.vb: GetAllPaginatedAsync(Integer, Integer)
  spec.csharp:
  - uid: MyApp.Shared.Infrastructure.Repositories.Repository`2.GetAllPaginatedAsync(System.Int32,System.Int32)
    name: GetAllPaginatedAsync
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: MyApp.Shared.Infrastructure.Repositories.Repository`2.GetAllPaginatedAsync(System.Int32,System.Int32)
    name: GetAllPaginatedAsync
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: MyApp.Shared.Infrastructure.Repositories.Repository`2.AddAsync(`0)
  commentId: M:MyApp.Shared.Infrastructure.Repositories.Repository`2.AddAsync(`0)
  name: AddAsync(TEntity)
  nameWithType: Repository<TEntity, TKey>.AddAsync(TEntity)
  fullName: MyApp.Shared.Infrastructure.Repositories.Repository<TEntity, TKey>.AddAsync(TEntity)
  nameWithType.vb: Repository(Of TEntity, TKey).AddAsync(TEntity)
  fullName.vb: MyApp.Shared.Infrastructure.Repositories.Repository(Of TEntity, TKey).AddAsync(TEntity)
  spec.csharp:
  - uid: MyApp.Shared.Infrastructure.Repositories.Repository`2.AddAsync(`0)
    name: AddAsync
  - name: (
  - name: TEntity
  - name: )
  spec.vb:
  - uid: MyApp.Shared.Infrastructure.Repositories.Repository`2.AddAsync(`0)
    name: AddAsync
  - name: (
  - name: TEntity
  - name: )
- uid: MyApp.Shared.Infrastructure.Repositories.Repository`2.UpdateAsync(`0)
  commentId: M:MyApp.Shared.Infrastructure.Repositories.Repository`2.UpdateAsync(`0)
  name: UpdateAsync(TEntity)
  nameWithType: Repository<TEntity, TKey>.UpdateAsync(TEntity)
  fullName: MyApp.Shared.Infrastructure.Repositories.Repository<TEntity, TKey>.UpdateAsync(TEntity)
  nameWithType.vb: Repository(Of TEntity, TKey).UpdateAsync(TEntity)
  fullName.vb: MyApp.Shared.Infrastructure.Repositories.Repository(Of TEntity, TKey).UpdateAsync(TEntity)
  spec.csharp:
  - uid: MyApp.Shared.Infrastructure.Repositories.Repository`2.UpdateAsync(`0)
    name: UpdateAsync
  - name: (
  - name: TEntity
  - name: )
  spec.vb:
  - uid: MyApp.Shared.Infrastructure.Repositories.Repository`2.UpdateAsync(`0)
    name: UpdateAsync
  - name: (
  - name: TEntity
  - name: )
- uid: MyApp.Shared.Infrastructure.Repositories.Repository`2.DeleteAsync(`0)
  commentId: M:MyApp.Shared.Infrastructure.Repositories.Repository`2.DeleteAsync(`0)
  name: DeleteAsync(TEntity)
  nameWithType: Repository<TEntity, TKey>.DeleteAsync(TEntity)
  fullName: MyApp.Shared.Infrastructure.Repositories.Repository<TEntity, TKey>.DeleteAsync(TEntity)
  nameWithType.vb: Repository(Of TEntity, TKey).DeleteAsync(TEntity)
  fullName.vb: MyApp.Shared.Infrastructure.Repositories.Repository(Of TEntity, TKey).DeleteAsync(TEntity)
  spec.csharp:
  - uid: MyApp.Shared.Infrastructure.Repositories.Repository`2.DeleteAsync(`0)
    name: DeleteAsync
  - name: (
  - name: TEntity
  - name: )
  spec.vb:
  - uid: MyApp.Shared.Infrastructure.Repositories.Repository`2.DeleteAsync(`0)
    name: DeleteAsync
  - name: (
  - name: TEntity
  - name: )
- uid: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.#ctor*
  commentId: Overload:MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.#ctor
  href: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_UserRepository__ctor_MyApp_Auth_Infrastructure_Data_AuthDbContext_
  name: UserRepository
  nameWithType: UserRepository.UserRepository
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.UserRepository
  nameWithType.vb: UserRepository.New
  fullName.vb: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.New
  name.vb: New
- uid: MyApp.Auth.Infrastructure.Data.AuthDbContext
  commentId: T:MyApp.Auth.Infrastructure.Data.AuthDbContext
  parent: MyApp.Auth.Infrastructure.Data
  href: MyApp.Auth.Infrastructure.Data.AuthDbContext.html
  name: AuthDbContext
  nameWithType: AuthDbContext
  fullName: MyApp.Auth.Infrastructure.Data.AuthDbContext
- uid: MyApp.Auth.Infrastructure.Data
  commentId: N:MyApp.Auth.Infrastructure.Data
  href: MyApp.html
  name: MyApp.Auth.Infrastructure.Data
  nameWithType: MyApp.Auth.Infrastructure.Data
  fullName: MyApp.Auth.Infrastructure.Data
  spec.csharp:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Auth
    name: Auth
    href: MyApp.Auth.html
  - name: .
  - uid: MyApp.Auth.Infrastructure
    name: Infrastructure
    href: MyApp.Auth.Infrastructure.html
  - name: .
  - uid: MyApp.Auth.Infrastructure.Data
    name: Data
    href: MyApp.Auth.Infrastructure.Data.html
  spec.vb:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Auth
    name: Auth
    href: MyApp.Auth.html
  - name: .
  - uid: MyApp.Auth.Infrastructure
    name: Infrastructure
    href: MyApp.Auth.Infrastructure.html
  - name: .
  - uid: MyApp.Auth.Infrastructure.Data
    name: Data
    href: MyApp.Auth.Infrastructure.Data.html
- uid: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByEmailAsync*
  commentId: Overload:MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByEmailAsync
  href: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_UserRepository_GetByEmailAsync_System_String_
  name: GetByEmailAsync
  nameWithType: UserRepository.GetByEmailAsync
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByEmailAsync
- uid: MyApp.Auth.Domain.Repositories.IUserRepository.GetByEmailAsync(System.String)
  commentId: M:MyApp.Auth.Domain.Repositories.IUserRepository.GetByEmailAsync(System.String)
  parent: MyApp.Auth.Domain.Repositories.IUserRepository
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetByEmailAsync(string)
  nameWithType: IUserRepository.GetByEmailAsync(string)
  fullName: MyApp.Auth.Domain.Repositories.IUserRepository.GetByEmailAsync(string)
  nameWithType.vb: IUserRepository.GetByEmailAsync(String)
  fullName.vb: MyApp.Auth.Domain.Repositories.IUserRepository.GetByEmailAsync(String)
  name.vb: GetByEmailAsync(String)
  spec.csharp:
  - uid: MyApp.Auth.Domain.Repositories.IUserRepository.GetByEmailAsync(System.String)
    name: GetByEmailAsync
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MyApp.Auth.Domain.Repositories.IUserRepository.GetByEmailAsync(System.String)
    name: GetByEmailAsync
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task{MyApp.Auth.Domain.Entities.ApplicationUser}
  commentId: T:System.Threading.Tasks.Task{MyApp.Auth.Domain.Entities.ApplicationUser}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ApplicationUser>
  nameWithType: Task<ApplicationUser>
  fullName: System.Threading.Tasks.Task<MyApp.Auth.Domain.Entities.ApplicationUser>
  nameWithType.vb: Task(Of ApplicationUser)
  fullName.vb: System.Threading.Tasks.Task(Of MyApp.Auth.Domain.Entities.ApplicationUser)
  name.vb: Task(Of ApplicationUser)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: MyApp.Auth.Domain.Entities.ApplicationUser
    name: ApplicationUser
    href: MyApp.Auth.Domain.Entities.ApplicationUser.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: MyApp.Auth.Domain.Entities.ApplicationUser
    name: ApplicationUser
    href: MyApp.Auth.Domain.Entities.ApplicationUser.html
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByExternalIdAsync*
  commentId: Overload:MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByExternalIdAsync
  href: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_UserRepository_GetByExternalIdAsync_System_String_System_String_
  name: GetByExternalIdAsync
  nameWithType: UserRepository.GetByExternalIdAsync
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByExternalIdAsync
- uid: MyApp.Auth.Domain.Repositories.IUserRepository.GetByExternalIdAsync(System.String,System.String)
  commentId: M:MyApp.Auth.Domain.Repositories.IUserRepository.GetByExternalIdAsync(System.String,System.String)
  parent: MyApp.Auth.Domain.Repositories.IUserRepository
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetByExternalIdAsync(string, string)
  nameWithType: IUserRepository.GetByExternalIdAsync(string, string)
  fullName: MyApp.Auth.Domain.Repositories.IUserRepository.GetByExternalIdAsync(string, string)
  nameWithType.vb: IUserRepository.GetByExternalIdAsync(String, String)
  fullName.vb: MyApp.Auth.Domain.Repositories.IUserRepository.GetByExternalIdAsync(String, String)
  name.vb: GetByExternalIdAsync(String, String)
  spec.csharp:
  - uid: MyApp.Auth.Domain.Repositories.IUserRepository.GetByExternalIdAsync(System.String,System.String)
    name: GetByExternalIdAsync
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MyApp.Auth.Domain.Repositories.IUserRepository.GetByExternalIdAsync(System.String,System.String)
    name: GetByExternalIdAsync
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByRoleAsync*
  commentId: Overload:MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByRoleAsync
  href: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_UserRepository_GetByRoleAsync_System_String_
  name: GetByRoleAsync
  nameWithType: UserRepository.GetByRoleAsync
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByRoleAsync
- uid: MyApp.Auth.Domain.Repositories.IUserRepository.GetByRoleAsync(System.String)
  commentId: M:MyApp.Auth.Domain.Repositories.IUserRepository.GetByRoleAsync(System.String)
  parent: MyApp.Auth.Domain.Repositories.IUserRepository
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetByRoleAsync(string)
  nameWithType: IUserRepository.GetByRoleAsync(string)
  fullName: MyApp.Auth.Domain.Repositories.IUserRepository.GetByRoleAsync(string)
  nameWithType.vb: IUserRepository.GetByRoleAsync(String)
  fullName.vb: MyApp.Auth.Domain.Repositories.IUserRepository.GetByRoleAsync(String)
  name.vb: GetByRoleAsync(String)
  spec.csharp:
  - uid: MyApp.Auth.Domain.Repositories.IUserRepository.GetByRoleAsync(System.String)
    name: GetByRoleAsync
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MyApp.Auth.Domain.Repositories.IUserRepository.GetByRoleAsync(System.String)
    name: GetByRoleAsync
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{MyApp.Auth.Domain.Entities.ApplicationUser}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{MyApp.Auth.Domain.Entities.ApplicationUser}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IEnumerable<ApplicationUser>>
  nameWithType: Task<IEnumerable<ApplicationUser>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<MyApp.Auth.Domain.Entities.ApplicationUser>>
  nameWithType.vb: Task(Of IEnumerable(Of ApplicationUser))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of MyApp.Auth.Domain.Entities.ApplicationUser))
  name.vb: Task(Of IEnumerable(Of ApplicationUser))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: MyApp.Auth.Domain.Entities.ApplicationUser
    name: ApplicationUser
    href: MyApp.Auth.Domain.Entities.ApplicationUser.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: MyApp.Auth.Domain.Entities.ApplicationUser
    name: ApplicationUser
    href: MyApp.Auth.Domain.Entities.ApplicationUser.html
  - name: )
  - name: )
- uid: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.EmailExistsAsync*
  commentId: Overload:MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.EmailExistsAsync
  href: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_UserRepository_EmailExistsAsync_System_String_
  name: EmailExistsAsync
  nameWithType: UserRepository.EmailExistsAsync
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.EmailExistsAsync
- uid: MyApp.Auth.Domain.Repositories.IUserRepository.EmailExistsAsync(System.String)
  commentId: M:MyApp.Auth.Domain.Repositories.IUserRepository.EmailExistsAsync(System.String)
  parent: MyApp.Auth.Domain.Repositories.IUserRepository
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: EmailExistsAsync(string)
  nameWithType: IUserRepository.EmailExistsAsync(string)
  fullName: MyApp.Auth.Domain.Repositories.IUserRepository.EmailExistsAsync(string)
  nameWithType.vb: IUserRepository.EmailExistsAsync(String)
  fullName.vb: MyApp.Auth.Domain.Repositories.IUserRepository.EmailExistsAsync(String)
  name.vb: EmailExistsAsync(String)
  spec.csharp:
  - uid: MyApp.Auth.Domain.Repositories.IUserRepository.EmailExistsAsync(System.String)
    name: EmailExistsAsync
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MyApp.Auth.Domain.Repositories.IUserRepository.EmailExistsAsync(System.String)
    name: EmailExistsAsync
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
