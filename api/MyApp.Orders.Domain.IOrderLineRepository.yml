### YamlMime:ManagedReference
items:
- uid: MyApp.Orders.Domain.IOrderLineRepository
  commentId: T:MyApp.Orders.Domain.IOrderLineRepository
  id: IOrderLineRepository
  parent: MyApp.Orders.Domain
  children: []
  langs:
  - csharp
  - vb
  name: IOrderLineRepository
  nameWithType: IOrderLineRepository
  fullName: MyApp.Orders.Domain.IOrderLineRepository
  type: Interface
  source:
    remote:
      path: src/MyApp.Orders/MyApp.Orders.Domain/IOrderLineRepository.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: IOrderLineRepository
    path: src/MyApp.Orders/MyApp.Orders.Domain/IOrderLineRepository.cs
    startLine: 4
  assemblies:
  - MyApp.Orders.Domain
  namespace: MyApp.Orders.Domain
  syntax:
    content: 'public interface IOrderLineRepository : IRepository<OrderLine, Guid>'
    content.vb: Public Interface IOrderLineRepository Inherits IRepository(Of OrderLine, Guid)
  inheritedMembers:
  - MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.OrderLine,System.Guid}.GetByIdAsync(System.Guid)
  - MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.OrderLine,System.Guid}.ListAsync
  - MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.OrderLine,System.Guid}.AddAsync(MyApp.Orders.Domain.Entities.OrderLine)
  - MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.OrderLine,System.Guid}.UpdateAsync(MyApp.Orders.Domain.Entities.OrderLine)
  - MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.OrderLine,System.Guid}.DeleteAsync(System.Guid)
references:
- uid: MyApp.Orders.Domain
  commentId: N:MyApp.Orders.Domain
  href: MyApp.html
  name: MyApp.Orders.Domain
  nameWithType: MyApp.Orders.Domain
  fullName: MyApp.Orders.Domain
  spec.csharp:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Orders
    name: Orders
    href: MyApp.Orders.html
  - name: .
  - uid: MyApp.Orders.Domain
    name: Domain
    href: MyApp.Orders.Domain.html
  spec.vb:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Orders
    name: Orders
    href: MyApp.Orders.html
  - name: .
  - uid: MyApp.Orders.Domain
    name: Domain
    href: MyApp.Orders.Domain.html
- uid: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.OrderLine,System.Guid}.GetByIdAsync(System.Guid)
  commentId: M:MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.OrderLine,System.Guid}.GetByIdAsync(System.Guid)
  parent: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.OrderLine,System.Guid}
  definition: MyApp.Orders.Domain.IRepository`2.GetByIdAsync(`1)
  href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_GetByIdAsync__1_
  name: GetByIdAsync(Guid)
  nameWithType: IRepository<OrderLine, Guid>.GetByIdAsync(Guid)
  fullName: MyApp.Orders.Domain.IRepository<MyApp.Orders.Domain.Entities.OrderLine, System.Guid>.GetByIdAsync(System.Guid)
  nameWithType.vb: IRepository(Of OrderLine, Guid).GetByIdAsync(Guid)
  fullName.vb: MyApp.Orders.Domain.IRepository(Of MyApp.Orders.Domain.Entities.OrderLine, System.Guid).GetByIdAsync(System.Guid)
  spec.csharp:
  - uid: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.OrderLine,System.Guid}.GetByIdAsync(System.Guid)
    name: GetByIdAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_GetByIdAsync__1_
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
  spec.vb:
  - uid: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.OrderLine,System.Guid}.GetByIdAsync(System.Guid)
    name: GetByIdAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_GetByIdAsync__1_
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
- uid: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.OrderLine,System.Guid}.ListAsync
  commentId: M:MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.OrderLine,System.Guid}.ListAsync
  parent: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.OrderLine,System.Guid}
  definition: MyApp.Orders.Domain.IRepository`2.ListAsync
  href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_ListAsync
  name: ListAsync()
  nameWithType: IRepository<OrderLine, Guid>.ListAsync()
  fullName: MyApp.Orders.Domain.IRepository<MyApp.Orders.Domain.Entities.OrderLine, System.Guid>.ListAsync()
  nameWithType.vb: IRepository(Of OrderLine, Guid).ListAsync()
  fullName.vb: MyApp.Orders.Domain.IRepository(Of MyApp.Orders.Domain.Entities.OrderLine, System.Guid).ListAsync()
  spec.csharp:
  - uid: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.OrderLine,System.Guid}.ListAsync
    name: ListAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_ListAsync
  - name: (
  - name: )
  spec.vb:
  - uid: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.OrderLine,System.Guid}.ListAsync
    name: ListAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_ListAsync
  - name: (
  - name: )
- uid: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.OrderLine,System.Guid}.AddAsync(MyApp.Orders.Domain.Entities.OrderLine)
  commentId: M:MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.OrderLine,System.Guid}.AddAsync(MyApp.Orders.Domain.Entities.OrderLine)
  parent: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.OrderLine,System.Guid}
  definition: MyApp.Orders.Domain.IRepository`2.AddAsync(`0)
  href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_AddAsync__0_
  name: AddAsync(OrderLine)
  nameWithType: IRepository<OrderLine, Guid>.AddAsync(OrderLine)
  fullName: MyApp.Orders.Domain.IRepository<MyApp.Orders.Domain.Entities.OrderLine, System.Guid>.AddAsync(MyApp.Orders.Domain.Entities.OrderLine)
  nameWithType.vb: IRepository(Of OrderLine, Guid).AddAsync(OrderLine)
  fullName.vb: MyApp.Orders.Domain.IRepository(Of MyApp.Orders.Domain.Entities.OrderLine, System.Guid).AddAsync(MyApp.Orders.Domain.Entities.OrderLine)
  spec.csharp:
  - uid: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.OrderLine,System.Guid}.AddAsync(MyApp.Orders.Domain.Entities.OrderLine)
    name: AddAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_AddAsync__0_
  - name: (
  - uid: MyApp.Orders.Domain.Entities.OrderLine
    name: OrderLine
    href: MyApp.Orders.Domain.Entities.OrderLine.html
  - name: )
  spec.vb:
  - uid: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.OrderLine,System.Guid}.AddAsync(MyApp.Orders.Domain.Entities.OrderLine)
    name: AddAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_AddAsync__0_
  - name: (
  - uid: MyApp.Orders.Domain.Entities.OrderLine
    name: OrderLine
    href: MyApp.Orders.Domain.Entities.OrderLine.html
  - name: )
- uid: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.OrderLine,System.Guid}.UpdateAsync(MyApp.Orders.Domain.Entities.OrderLine)
  commentId: M:MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.OrderLine,System.Guid}.UpdateAsync(MyApp.Orders.Domain.Entities.OrderLine)
  parent: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.OrderLine,System.Guid}
  definition: MyApp.Orders.Domain.IRepository`2.UpdateAsync(`0)
  href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_UpdateAsync__0_
  name: UpdateAsync(OrderLine)
  nameWithType: IRepository<OrderLine, Guid>.UpdateAsync(OrderLine)
  fullName: MyApp.Orders.Domain.IRepository<MyApp.Orders.Domain.Entities.OrderLine, System.Guid>.UpdateAsync(MyApp.Orders.Domain.Entities.OrderLine)
  nameWithType.vb: IRepository(Of OrderLine, Guid).UpdateAsync(OrderLine)
  fullName.vb: MyApp.Orders.Domain.IRepository(Of MyApp.Orders.Domain.Entities.OrderLine, System.Guid).UpdateAsync(MyApp.Orders.Domain.Entities.OrderLine)
  spec.csharp:
  - uid: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.OrderLine,System.Guid}.UpdateAsync(MyApp.Orders.Domain.Entities.OrderLine)
    name: UpdateAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_UpdateAsync__0_
  - name: (
  - uid: MyApp.Orders.Domain.Entities.OrderLine
    name: OrderLine
    href: MyApp.Orders.Domain.Entities.OrderLine.html
  - name: )
  spec.vb:
  - uid: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.OrderLine,System.Guid}.UpdateAsync(MyApp.Orders.Domain.Entities.OrderLine)
    name: UpdateAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_UpdateAsync__0_
  - name: (
  - uid: MyApp.Orders.Domain.Entities.OrderLine
    name: OrderLine
    href: MyApp.Orders.Domain.Entities.OrderLine.html
  - name: )
- uid: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.OrderLine,System.Guid}.DeleteAsync(System.Guid)
  commentId: M:MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.OrderLine,System.Guid}.DeleteAsync(System.Guid)
  parent: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.OrderLine,System.Guid}
  definition: MyApp.Orders.Domain.IRepository`2.DeleteAsync(`1)
  href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_DeleteAsync__1_
  name: DeleteAsync(Guid)
  nameWithType: IRepository<OrderLine, Guid>.DeleteAsync(Guid)
  fullName: MyApp.Orders.Domain.IRepository<MyApp.Orders.Domain.Entities.OrderLine, System.Guid>.DeleteAsync(System.Guid)
  nameWithType.vb: IRepository(Of OrderLine, Guid).DeleteAsync(Guid)
  fullName.vb: MyApp.Orders.Domain.IRepository(Of MyApp.Orders.Domain.Entities.OrderLine, System.Guid).DeleteAsync(System.Guid)
  spec.csharp:
  - uid: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.OrderLine,System.Guid}.DeleteAsync(System.Guid)
    name: DeleteAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_DeleteAsync__1_
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
  spec.vb:
  - uid: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.OrderLine,System.Guid}.DeleteAsync(System.Guid)
    name: DeleteAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_DeleteAsync__1_
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
- uid: MyApp.Orders.Domain.IRepository`2.GetByIdAsync(`1)
  commentId: M:MyApp.Orders.Domain.IRepository`2.GetByIdAsync(`1)
  href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_GetByIdAsync__1_
  name: GetByIdAsync(TKey)
  nameWithType: IRepository<TEntity, TKey>.GetByIdAsync(TKey)
  fullName: MyApp.Orders.Domain.IRepository<TEntity, TKey>.GetByIdAsync(TKey)
  nameWithType.vb: IRepository(Of TEntity, TKey).GetByIdAsync(TKey)
  fullName.vb: MyApp.Orders.Domain.IRepository(Of TEntity, TKey).GetByIdAsync(TKey)
  spec.csharp:
  - uid: MyApp.Orders.Domain.IRepository`2.GetByIdAsync(`1)
    name: GetByIdAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_GetByIdAsync__1_
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: MyApp.Orders.Domain.IRepository`2.GetByIdAsync(`1)
    name: GetByIdAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_GetByIdAsync__1_
  - name: (
  - name: TKey
  - name: )
- uid: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.OrderLine,System.Guid}
  commentId: T:MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.OrderLine,System.Guid}
  parent: MyApp.Orders.Domain
  definition: MyApp.Orders.Domain.IRepository`2
  href: MyApp.Orders.Domain.IRepository-2.html
  name: IRepository<OrderLine, Guid>
  nameWithType: IRepository<OrderLine, Guid>
  fullName: MyApp.Orders.Domain.IRepository<MyApp.Orders.Domain.Entities.OrderLine, System.Guid>
  nameWithType.vb: IRepository(Of OrderLine, Guid)
  fullName.vb: MyApp.Orders.Domain.IRepository(Of MyApp.Orders.Domain.Entities.OrderLine, System.Guid)
  name.vb: IRepository(Of OrderLine, Guid)
  spec.csharp:
  - uid: MyApp.Orders.Domain.IRepository`2
    name: IRepository
    href: MyApp.Orders.Domain.IRepository-2.html
  - name: <
  - uid: MyApp.Orders.Domain.Entities.OrderLine
    name: OrderLine
    href: MyApp.Orders.Domain.Entities.OrderLine.html
  - name: ','
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: '>'
  spec.vb:
  - uid: MyApp.Orders.Domain.IRepository`2
    name: IRepository
    href: MyApp.Orders.Domain.IRepository-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: MyApp.Orders.Domain.Entities.OrderLine
    name: OrderLine
    href: MyApp.Orders.Domain.Entities.OrderLine.html
  - name: ','
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
- uid: MyApp.Orders.Domain.IRepository`2.ListAsync
  commentId: M:MyApp.Orders.Domain.IRepository`2.ListAsync
  href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_ListAsync
  name: ListAsync()
  nameWithType: IRepository<TEntity, TKey>.ListAsync()
  fullName: MyApp.Orders.Domain.IRepository<TEntity, TKey>.ListAsync()
  nameWithType.vb: IRepository(Of TEntity, TKey).ListAsync()
  fullName.vb: MyApp.Orders.Domain.IRepository(Of TEntity, TKey).ListAsync()
  spec.csharp:
  - uid: MyApp.Orders.Domain.IRepository`2.ListAsync
    name: ListAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_ListAsync
  - name: (
  - name: )
  spec.vb:
  - uid: MyApp.Orders.Domain.IRepository`2.ListAsync
    name: ListAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_ListAsync
  - name: (
  - name: )
- uid: MyApp.Orders.Domain.IRepository`2.AddAsync(`0)
  commentId: M:MyApp.Orders.Domain.IRepository`2.AddAsync(`0)
  href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_AddAsync__0_
  name: AddAsync(TEntity)
  nameWithType: IRepository<TEntity, TKey>.AddAsync(TEntity)
  fullName: MyApp.Orders.Domain.IRepository<TEntity, TKey>.AddAsync(TEntity)
  nameWithType.vb: IRepository(Of TEntity, TKey).AddAsync(TEntity)
  fullName.vb: MyApp.Orders.Domain.IRepository(Of TEntity, TKey).AddAsync(TEntity)
  spec.csharp:
  - uid: MyApp.Orders.Domain.IRepository`2.AddAsync(`0)
    name: AddAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_AddAsync__0_
  - name: (
  - name: TEntity
  - name: )
  spec.vb:
  - uid: MyApp.Orders.Domain.IRepository`2.AddAsync(`0)
    name: AddAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_AddAsync__0_
  - name: (
  - name: TEntity
  - name: )
- uid: MyApp.Orders.Domain.IRepository`2.UpdateAsync(`0)
  commentId: M:MyApp.Orders.Domain.IRepository`2.UpdateAsync(`0)
  href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_UpdateAsync__0_
  name: UpdateAsync(TEntity)
  nameWithType: IRepository<TEntity, TKey>.UpdateAsync(TEntity)
  fullName: MyApp.Orders.Domain.IRepository<TEntity, TKey>.UpdateAsync(TEntity)
  nameWithType.vb: IRepository(Of TEntity, TKey).UpdateAsync(TEntity)
  fullName.vb: MyApp.Orders.Domain.IRepository(Of TEntity, TKey).UpdateAsync(TEntity)
  spec.csharp:
  - uid: MyApp.Orders.Domain.IRepository`2.UpdateAsync(`0)
    name: UpdateAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_UpdateAsync__0_
  - name: (
  - name: TEntity
  - name: )
  spec.vb:
  - uid: MyApp.Orders.Domain.IRepository`2.UpdateAsync(`0)
    name: UpdateAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_UpdateAsync__0_
  - name: (
  - name: TEntity
  - name: )
- uid: MyApp.Orders.Domain.IRepository`2.DeleteAsync(`1)
  commentId: M:MyApp.Orders.Domain.IRepository`2.DeleteAsync(`1)
  href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_DeleteAsync__1_
  name: DeleteAsync(TKey)
  nameWithType: IRepository<TEntity, TKey>.DeleteAsync(TKey)
  fullName: MyApp.Orders.Domain.IRepository<TEntity, TKey>.DeleteAsync(TKey)
  nameWithType.vb: IRepository(Of TEntity, TKey).DeleteAsync(TKey)
  fullName.vb: MyApp.Orders.Domain.IRepository(Of TEntity, TKey).DeleteAsync(TKey)
  spec.csharp:
  - uid: MyApp.Orders.Domain.IRepository`2.DeleteAsync(`1)
    name: DeleteAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_DeleteAsync__1_
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: MyApp.Orders.Domain.IRepository`2.DeleteAsync(`1)
    name: DeleteAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_DeleteAsync__1_
  - name: (
  - name: TKey
  - name: )
- uid: MyApp.Orders.Domain.IRepository`2
  commentId: T:MyApp.Orders.Domain.IRepository`2
  href: MyApp.Orders.Domain.IRepository-2.html
  name: IRepository<TEntity, TKey>
  nameWithType: IRepository<TEntity, TKey>
  fullName: MyApp.Orders.Domain.IRepository<TEntity, TKey>
  nameWithType.vb: IRepository(Of TEntity, TKey)
  fullName.vb: MyApp.Orders.Domain.IRepository(Of TEntity, TKey)
  name.vb: IRepository(Of TEntity, TKey)
  spec.csharp:
  - uid: MyApp.Orders.Domain.IRepository`2
    name: IRepository
    href: MyApp.Orders.Domain.IRepository-2.html
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  spec.vb:
  - uid: MyApp.Orders.Domain.IRepository`2
    name: IRepository
    href: MyApp.Orders.Domain.IRepository-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TKey
  - name: )
