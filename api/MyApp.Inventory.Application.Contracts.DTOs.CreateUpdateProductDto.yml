### YamlMime:ManagedReference
items:
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto
  commentId: T:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto
  id: CreateUpdateProductDto
  parent: MyApp.Inventory.Application.Contracts.DTOs
  children:
  - MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.Description
  - MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.Name
  - MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.QuantityInStock
  - MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.ReorderLevel
  - MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.SKU
  - MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.UnitPrice
  langs:
  - csharp
  - vb
  name: CreateUpdateProductDto
  nameWithType: CreateUpdateProductDto
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto
  type: Class
  source:
    remote:
      path: src/MyApp.Inventory/MyApp.Inventory.Application.Contracts/DTOs/ProductDtos.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: CreateUpdateProductDto
    path: src/MyApp.Inventory/MyApp.Inventory.Application.Contracts/DTOs/ProductDtos.cs
    startLine: 16
  assemblies:
  - MyApp.Inventory.Application.Contracts
  namespace: MyApp.Inventory.Application.Contracts.DTOs
  syntax:
    content: public class CreateUpdateProductDto
    content.vb: Public Class CreateUpdateProductDto
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.SKU
  commentId: P:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.SKU
  id: SKU
  parent: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto
  langs:
  - csharp
  - vb
  name: SKU
  nameWithType: CreateUpdateProductDto.SKU
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.SKU
  type: Property
  source:
    remote:
      path: src/MyApp.Inventory/MyApp.Inventory.Application.Contracts/DTOs/ProductDtos.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: SKU
    path: src/MyApp.Inventory/MyApp.Inventory.Application.Contracts/DTOs/ProductDtos.cs
    startLine: 18
  assemblies:
  - MyApp.Inventory.Application.Contracts
  namespace: MyApp.Inventory.Application.Contracts.DTOs
  syntax:
    content: >-
      [Required(ErrorMessage = "SKU is required")]

      [StringLength(64, MinimumLength = 1)]

      public string SKU { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required(ErrorMessage:="SKU is required")>

      <StringLength(64, MinimumLength:=1)>

      Public Property SKU As String
  overload: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.SKU*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: SKU is required
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 64
    namedArguments:
    - name: MinimumLength
      type: System.Int32
      value: 1
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.Name
  commentId: P:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.Name
  id: Name
  parent: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: CreateUpdateProductDto.Name
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.Name
  type: Property
  source:
    remote:
      path: src/MyApp.Inventory/MyApp.Inventory.Application.Contracts/DTOs/ProductDtos.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: Name
    path: src/MyApp.Inventory/MyApp.Inventory.Application.Contracts/DTOs/ProductDtos.cs
    startLine: 22
  assemblies:
  - MyApp.Inventory.Application.Contracts
  namespace: MyApp.Inventory.Application.Contracts.DTOs
  syntax:
    content: >-
      [Required(ErrorMessage = "Name is required")]

      [StringLength(255, MinimumLength = 1)]

      public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required(ErrorMessage:="Name is required")>

      <StringLength(255, MinimumLength:=1)>

      Public Property Name As String
  overload: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.Name*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Name is required
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 255
    namedArguments:
    - name: MinimumLength
      type: System.Int32
      value: 1
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.Description
  commentId: P:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.Description
  id: Description
  parent: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: CreateUpdateProductDto.Description
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.Description
  type: Property
  source:
    remote:
      path: src/MyApp.Inventory/MyApp.Inventory.Application.Contracts/DTOs/ProductDtos.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: Description
    path: src/MyApp.Inventory/MyApp.Inventory.Application.Contracts/DTOs/ProductDtos.cs
    startLine: 26
  assemblies:
  - MyApp.Inventory.Application.Contracts
  namespace: MyApp.Inventory.Application.Contracts.DTOs
  syntax:
    content: >-
      [StringLength(1000)]

      public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <StringLength(1000)>

      Public Property Description As String
  overload: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.Description*
  attributes:
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1000
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.UnitPrice
  commentId: P:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.UnitPrice
  id: UnitPrice
  parent: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto
  langs:
  - csharp
  - vb
  name: UnitPrice
  nameWithType: CreateUpdateProductDto.UnitPrice
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.UnitPrice
  type: Property
  source:
    remote:
      path: src/MyApp.Inventory/MyApp.Inventory.Application.Contracts/DTOs/ProductDtos.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: UnitPrice
    path: src/MyApp.Inventory/MyApp.Inventory.Application.Contracts/DTOs/ProductDtos.cs
    startLine: 29
  assemblies:
  - MyApp.Inventory.Application.Contracts
  namespace: MyApp.Inventory.Application.Contracts.DTOs
  syntax:
    content: >-
      [Range(0, 1.7976931348623157E+308, ErrorMessage = "UnitPrice must be greater than or equal to 0")]

      public decimal UnitPrice { get; set; }
    parameters: []
    return:
      type: System.Decimal
    content.vb: >-
      <Range(0, 1.7976931348623157E+308, ErrorMessage:="UnitPrice must be greater than or equal to 0")>

      Public Property UnitPrice As Decimal
  overload: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.UnitPrice*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RangeAttribute
    ctor: System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Double,System.Double)
    arguments:
    - type: System.Double
      value: 0
    - type: System.Double
      value: 1.7976931348623157E+308
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: UnitPrice must be greater than or equal to 0
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.QuantityInStock
  commentId: P:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.QuantityInStock
  id: QuantityInStock
  parent: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto
  langs:
  - csharp
  - vb
  name: QuantityInStock
  nameWithType: CreateUpdateProductDto.QuantityInStock
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.QuantityInStock
  type: Property
  source:
    remote:
      path: src/MyApp.Inventory/MyApp.Inventory.Application.Contracts/DTOs/ProductDtos.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: QuantityInStock
    path: src/MyApp.Inventory/MyApp.Inventory.Application.Contracts/DTOs/ProductDtos.cs
    startLine: 32
  assemblies:
  - MyApp.Inventory.Application.Contracts
  namespace: MyApp.Inventory.Application.Contracts.DTOs
  syntax:
    content: >-
      [Range(0, 2147483647, ErrorMessage = "QuantityInStock must be greater than or equal to 0")]

      public int QuantityInStock { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <Range(0, 2147483647, ErrorMessage:="QuantityInStock must be greater than or equal to 0")>

      Public Property QuantityInStock As Integer
  overload: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.QuantityInStock*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RangeAttribute
    ctor: System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Int32,System.Int32)
    arguments:
    - type: System.Int32
      value: 0
    - type: System.Int32
      value: 2147483647
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: QuantityInStock must be greater than or equal to 0
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.ReorderLevel
  commentId: P:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.ReorderLevel
  id: ReorderLevel
  parent: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto
  langs:
  - csharp
  - vb
  name: ReorderLevel
  nameWithType: CreateUpdateProductDto.ReorderLevel
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.ReorderLevel
  type: Property
  source:
    remote:
      path: src/MyApp.Inventory/MyApp.Inventory.Application.Contracts/DTOs/ProductDtos.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: ReorderLevel
    path: src/MyApp.Inventory/MyApp.Inventory.Application.Contracts/DTOs/ProductDtos.cs
    startLine: 35
  assemblies:
  - MyApp.Inventory.Application.Contracts
  namespace: MyApp.Inventory.Application.Contracts.DTOs
  syntax:
    content: >-
      [Range(0, 2147483647, ErrorMessage = "ReorderLevel must be greater than or equal to 0")]

      public int ReorderLevel { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <Range(0, 2147483647, ErrorMessage:="ReorderLevel must be greater than or equal to 0")>

      Public Property ReorderLevel As Integer
  overload: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.ReorderLevel*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RangeAttribute
    ctor: System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Int32,System.Int32)
    arguments:
    - type: System.Int32
      value: 0
    - type: System.Int32
      value: 2147483647
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: ReorderLevel must be greater than or equal to 0
references:
- uid: MyApp.Inventory.Application.Contracts.DTOs
  commentId: N:MyApp.Inventory.Application.Contracts.DTOs
  href: MyApp.html
  name: MyApp.Inventory.Application.Contracts.DTOs
  nameWithType: MyApp.Inventory.Application.Contracts.DTOs
  fullName: MyApp.Inventory.Application.Contracts.DTOs
  spec.csharp:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Inventory
    name: Inventory
    href: MyApp.Inventory.html
  - name: .
  - uid: MyApp.Inventory.Application
    name: Application
    href: MyApp.Inventory.Application.html
  - name: .
  - uid: MyApp.Inventory.Application.Contracts
    name: Contracts
    href: MyApp.Inventory.Application.Contracts.html
  - name: .
  - uid: MyApp.Inventory.Application.Contracts.DTOs
    name: DTOs
    href: MyApp.Inventory.Application.Contracts.DTOs.html
  spec.vb:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Inventory
    name: Inventory
    href: MyApp.Inventory.html
  - name: .
  - uid: MyApp.Inventory.Application
    name: Application
    href: MyApp.Inventory.Application.html
  - name: .
  - uid: MyApp.Inventory.Application.Contracts
    name: Contracts
    href: MyApp.Inventory.Application.Contracts.html
  - name: .
  - uid: MyApp.Inventory.Application.Contracts.DTOs
    name: DTOs
    href: MyApp.Inventory.Application.Contracts.DTOs.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.SKU*
  commentId: Overload:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.SKU
  href: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.html#MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateProductDto_SKU
  name: SKU
  nameWithType: CreateUpdateProductDto.SKU
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.SKU
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.Name*
  commentId: Overload:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.Name
  href: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.html#MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateProductDto_Name
  name: Name
  nameWithType: CreateUpdateProductDto.Name
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.Name
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.Description*
  commentId: Overload:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.Description
  href: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.html#MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateProductDto_Description
  name: Description
  nameWithType: CreateUpdateProductDto.Description
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.Description
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.UnitPrice*
  commentId: Overload:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.UnitPrice
  href: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.html#MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateProductDto_UnitPrice
  name: UnitPrice
  nameWithType: CreateUpdateProductDto.UnitPrice
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.UnitPrice
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.decimal
  name: decimal
  nameWithType: decimal
  fullName: decimal
  nameWithType.vb: Decimal
  fullName.vb: Decimal
  name.vb: Decimal
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.QuantityInStock*
  commentId: Overload:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.QuantityInStock
  href: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.html#MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateProductDto_QuantityInStock
  name: QuantityInStock
  nameWithType: CreateUpdateProductDto.QuantityInStock
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.QuantityInStock
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.ReorderLevel*
  commentId: Overload:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.ReorderLevel
  href: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.html#MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateProductDto_ReorderLevel
  name: ReorderLevel
  nameWithType: CreateUpdateProductDto.ReorderLevel
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.ReorderLevel
