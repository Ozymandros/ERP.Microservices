### YamlMime:ManagedReference
items:
- uid: MyApp.Auth.Application.Services.RoleService
  commentId: T:MyApp.Auth.Application.Services.RoleService
  id: RoleService
  parent: MyApp.Auth.Application.Services
  children:
  - MyApp.Auth.Application.Services.RoleService.#ctor(Microsoft.AspNetCore.Identity.RoleManager{MyApp.Auth.Domain.Entities.ApplicationRole},Microsoft.AspNetCore.Identity.UserManager{MyApp.Auth.Domain.Entities.ApplicationUser},MyApp.Auth.Domain.Repositories.IRoleRepository,MyApp.Auth.Domain.Repositories.IUserRepository,AutoMapper.IMapper,Microsoft.Extensions.Logging.ILogger{MyApp.Auth.Application.Services.RoleService})
  - MyApp.Auth.Application.Services.RoleService.AddPermissionToRole(MyApp.Auth.Application.Contracts.CreateRolePermissionDto)
  - MyApp.Auth.Application.Services.RoleService.CreateRoleAsync(MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
  - MyApp.Auth.Application.Services.RoleService.DeleteRoleAsync(System.Guid)
  - MyApp.Auth.Application.Services.RoleService.GetAllRolesAsync
  - MyApp.Auth.Application.Services.RoleService.GetAllRolesPaginatedAsync(System.Int32,System.Int32)
  - MyApp.Auth.Application.Services.RoleService.GetPermissionsForRoleAsync(System.Guid)
  - MyApp.Auth.Application.Services.RoleService.GetRoleByIdAsync(System.Guid)
  - MyApp.Auth.Application.Services.RoleService.GetRoleByNameAsync(System.String)
  - MyApp.Auth.Application.Services.RoleService.GetUsersInRoleAsync(System.String)
  - MyApp.Auth.Application.Services.RoleService.HasPermissionAsync(System.Guid,System.Guid)
  - MyApp.Auth.Application.Services.RoleService.RemovePermissionFromRoleAsync(MyApp.Auth.Application.Contracts.DeleteRolePermissionDto)
  - MyApp.Auth.Application.Services.RoleService.UpdateRoleAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
  langs:
  - csharp
  - vb
  name: RoleService
  nameWithType: RoleService
  fullName: MyApp.Auth.Application.Services.RoleService
  type: Class
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/RoleService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: RoleService
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/RoleService.cs
    startLine: 12
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  syntax:
    content: 'public class RoleService : IRoleService'
    content.vb: Public Class RoleService Implements IRoleService
  inheritance:
  - System.Object
  implements:
  - MyApp.Auth.Application.Contracts.Services.IRoleService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: MyApp.Auth.Application.Services.RoleService.#ctor(Microsoft.AspNetCore.Identity.RoleManager{MyApp.Auth.Domain.Entities.ApplicationRole},Microsoft.AspNetCore.Identity.UserManager{MyApp.Auth.Domain.Entities.ApplicationUser},MyApp.Auth.Domain.Repositories.IRoleRepository,MyApp.Auth.Domain.Repositories.IUserRepository,AutoMapper.IMapper,Microsoft.Extensions.Logging.ILogger{MyApp.Auth.Application.Services.RoleService})
  commentId: M:MyApp.Auth.Application.Services.RoleService.#ctor(Microsoft.AspNetCore.Identity.RoleManager{MyApp.Auth.Domain.Entities.ApplicationRole},Microsoft.AspNetCore.Identity.UserManager{MyApp.Auth.Domain.Entities.ApplicationUser},MyApp.Auth.Domain.Repositories.IRoleRepository,MyApp.Auth.Domain.Repositories.IUserRepository,AutoMapper.IMapper,Microsoft.Extensions.Logging.ILogger{MyApp.Auth.Application.Services.RoleService})
  id: '#ctor(Microsoft.AspNetCore.Identity.RoleManager{MyApp.Auth.Domain.Entities.ApplicationRole},Microsoft.AspNetCore.Identity.UserManager{MyApp.Auth.Domain.Entities.ApplicationUser},MyApp.Auth.Domain.Repositories.IRoleRepository,MyApp.Auth.Domain.Repositories.IUserRepository,AutoMapper.IMapper,Microsoft.Extensions.Logging.ILogger{MyApp.Auth.Application.Services.RoleService})'
  parent: MyApp.Auth.Application.Services.RoleService
  langs:
  - csharp
  - vb
  name: RoleService(RoleManager<ApplicationRole>, UserManager<ApplicationUser>, IRoleRepository, IUserRepository, IMapper, ILogger<RoleService>)
  nameWithType: RoleService.RoleService(RoleManager<ApplicationRole>, UserManager<ApplicationUser>, IRoleRepository, IUserRepository, IMapper, ILogger<RoleService>)
  fullName: MyApp.Auth.Application.Services.RoleService.RoleService(Microsoft.AspNetCore.Identity.RoleManager<MyApp.Auth.Domain.Entities.ApplicationRole>, Microsoft.AspNetCore.Identity.UserManager<MyApp.Auth.Domain.Entities.ApplicationUser>, MyApp.Auth.Domain.Repositories.IRoleRepository, MyApp.Auth.Domain.Repositories.IUserRepository, AutoMapper.IMapper, Microsoft.Extensions.Logging.ILogger<MyApp.Auth.Application.Services.RoleService>)
  type: Constructor
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/RoleService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: .ctor
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/RoleService.cs
    startLine: 21
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  syntax:
    content: public RoleService(RoleManager<ApplicationRole> roleManager, UserManager<ApplicationUser> userManager, IRoleRepository roleRepository, IUserRepository userRepository, IMapper mapper, ILogger<RoleService> logger)
    parameters:
    - id: roleManager
      type: Microsoft.AspNetCore.Identity.RoleManager{MyApp.Auth.Domain.Entities.ApplicationRole}
    - id: userManager
      type: Microsoft.AspNetCore.Identity.UserManager{MyApp.Auth.Domain.Entities.ApplicationUser}
    - id: roleRepository
      type: MyApp.Auth.Domain.Repositories.IRoleRepository
    - id: userRepository
      type: MyApp.Auth.Domain.Repositories.IUserRepository
    - id: mapper
      type: AutoMapper.IMapper
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{MyApp.Auth.Application.Services.RoleService}
    content.vb: Public Sub New(roleManager As RoleManager(Of ApplicationRole), userManager As UserManager(Of ApplicationUser), roleRepository As IRoleRepository, userRepository As IUserRepository, mapper As IMapper, logger As ILogger(Of RoleService))
  overload: MyApp.Auth.Application.Services.RoleService.#ctor*
  nameWithType.vb: RoleService.New(RoleManager(Of ApplicationRole), UserManager(Of ApplicationUser), IRoleRepository, IUserRepository, IMapper, ILogger(Of RoleService))
  fullName.vb: MyApp.Auth.Application.Services.RoleService.New(Microsoft.AspNetCore.Identity.RoleManager(Of MyApp.Auth.Domain.Entities.ApplicationRole), Microsoft.AspNetCore.Identity.UserManager(Of MyApp.Auth.Domain.Entities.ApplicationUser), MyApp.Auth.Domain.Repositories.IRoleRepository, MyApp.Auth.Domain.Repositories.IUserRepository, AutoMapper.IMapper, Microsoft.Extensions.Logging.ILogger(Of MyApp.Auth.Application.Services.RoleService))
  name.vb: New(RoleManager(Of ApplicationRole), UserManager(Of ApplicationUser), IRoleRepository, IUserRepository, IMapper, ILogger(Of RoleService))
- uid: MyApp.Auth.Application.Services.RoleService.GetRoleByIdAsync(System.Guid)
  commentId: M:MyApp.Auth.Application.Services.RoleService.GetRoleByIdAsync(System.Guid)
  id: GetRoleByIdAsync(System.Guid)
  parent: MyApp.Auth.Application.Services.RoleService
  langs:
  - csharp
  - vb
  name: GetRoleByIdAsync(Guid)
  nameWithType: RoleService.GetRoleByIdAsync(Guid)
  fullName: MyApp.Auth.Application.Services.RoleService.GetRoleByIdAsync(System.Guid)
  type: Method
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/RoleService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: GetRoleByIdAsync
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/RoleService.cs
    startLine: 37
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  example: []
  syntax:
    content: public Task<RoleDto?> GetRoleByIdAsync(Guid roleId)
    parameters:
    - id: roleId
      type: System.Guid
    return:
      type: System.Threading.Tasks.Task{MyApp.Auth.Application.Contracts.DTOs.RoleDto}
    content.vb: Public Function GetRoleByIdAsync(roleId As Guid) As Task(Of RoleDto)
  overload: MyApp.Auth.Application.Services.RoleService.GetRoleByIdAsync*
  implements:
  - MyApp.Auth.Application.Contracts.Services.IRoleService.GetRoleByIdAsync(System.Guid)
- uid: MyApp.Auth.Application.Services.RoleService.GetRoleByNameAsync(System.String)
  commentId: M:MyApp.Auth.Application.Services.RoleService.GetRoleByNameAsync(System.String)
  id: GetRoleByNameAsync(System.String)
  parent: MyApp.Auth.Application.Services.RoleService
  langs:
  - csharp
  - vb
  name: GetRoleByNameAsync(string)
  nameWithType: RoleService.GetRoleByNameAsync(string)
  fullName: MyApp.Auth.Application.Services.RoleService.GetRoleByNameAsync(string)
  type: Method
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/RoleService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: GetRoleByNameAsync
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/RoleService.cs
    startLine: 43
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  example: []
  syntax:
    content: public Task<RoleDto?> GetRoleByNameAsync(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Threading.Tasks.Task{MyApp.Auth.Application.Contracts.DTOs.RoleDto}
    content.vb: Public Function GetRoleByNameAsync(name As String) As Task(Of RoleDto)
  overload: MyApp.Auth.Application.Services.RoleService.GetRoleByNameAsync*
  implements:
  - MyApp.Auth.Application.Contracts.Services.IRoleService.GetRoleByNameAsync(System.String)
  nameWithType.vb: RoleService.GetRoleByNameAsync(String)
  fullName.vb: MyApp.Auth.Application.Services.RoleService.GetRoleByNameAsync(String)
  name.vb: GetRoleByNameAsync(String)
- uid: MyApp.Auth.Application.Services.RoleService.GetAllRolesAsync
  commentId: M:MyApp.Auth.Application.Services.RoleService.GetAllRolesAsync
  id: GetAllRolesAsync
  parent: MyApp.Auth.Application.Services.RoleService
  langs:
  - csharp
  - vb
  name: GetAllRolesAsync()
  nameWithType: RoleService.GetAllRolesAsync()
  fullName: MyApp.Auth.Application.Services.RoleService.GetAllRolesAsync()
  type: Method
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/RoleService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: GetAllRolesAsync
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/RoleService.cs
    startLine: 49
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  example: []
  syntax:
    content: public Task<IEnumerable<RoleDto>> GetAllRolesAsync()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{MyApp.Auth.Application.Contracts.DTOs.RoleDto}}
    content.vb: Public Function GetAllRolesAsync() As Task(Of IEnumerable(Of RoleDto))
  overload: MyApp.Auth.Application.Services.RoleService.GetAllRolesAsync*
  implements:
  - MyApp.Auth.Application.Contracts.Services.IRoleService.GetAllRolesAsync
- uid: MyApp.Auth.Application.Services.RoleService.GetAllRolesPaginatedAsync(System.Int32,System.Int32)
  commentId: M:MyApp.Auth.Application.Services.RoleService.GetAllRolesPaginatedAsync(System.Int32,System.Int32)
  id: GetAllRolesPaginatedAsync(System.Int32,System.Int32)
  parent: MyApp.Auth.Application.Services.RoleService
  langs:
  - csharp
  - vb
  name: GetAllRolesPaginatedAsync(int, int)
  nameWithType: RoleService.GetAllRolesPaginatedAsync(int, int)
  fullName: MyApp.Auth.Application.Services.RoleService.GetAllRolesPaginatedAsync(int, int)
  type: Method
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/RoleService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: GetAllRolesPaginatedAsync
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/RoleService.cs
    startLine: 55
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  example: []
  syntax:
    content: public Task<PaginatedResult<RoleDto>> GetAllRolesPaginatedAsync(int pageNumber, int pageSize)
    parameters:
    - id: pageNumber
      type: System.Int32
    - id: pageSize
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{MyApp.Shared.Domain.Pagination.PaginatedResult{MyApp.Auth.Application.Contracts.DTOs.RoleDto}}
    content.vb: Public Function GetAllRolesPaginatedAsync(pageNumber As Integer, pageSize As Integer) As Task(Of PaginatedResult(Of RoleDto))
  overload: MyApp.Auth.Application.Services.RoleService.GetAllRolesPaginatedAsync*
  implements:
  - MyApp.Auth.Application.Contracts.Services.IRoleService.GetAllRolesPaginatedAsync(System.Int32,System.Int32)
  nameWithType.vb: RoleService.GetAllRolesPaginatedAsync(Integer, Integer)
  fullName.vb: MyApp.Auth.Application.Services.RoleService.GetAllRolesPaginatedAsync(Integer, Integer)
  name.vb: GetAllRolesPaginatedAsync(Integer, Integer)
- uid: MyApp.Auth.Application.Services.RoleService.CreateRoleAsync(MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
  commentId: M:MyApp.Auth.Application.Services.RoleService.CreateRoleAsync(MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
  id: CreateRoleAsync(MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
  parent: MyApp.Auth.Application.Services.RoleService
  langs:
  - csharp
  - vb
  name: CreateRoleAsync(CreateRoleDto)
  nameWithType: RoleService.CreateRoleAsync(CreateRoleDto)
  fullName: MyApp.Auth.Application.Services.RoleService.CreateRoleAsync(MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
  type: Method
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/RoleService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: CreateRoleAsync
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/RoleService.cs
    startLine: 62
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  example: []
  syntax:
    content: public Task<RoleDto?> CreateRoleAsync(CreateRoleDto createRoleDto)
    parameters:
    - id: createRoleDto
      type: MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto
    return:
      type: System.Threading.Tasks.Task{MyApp.Auth.Application.Contracts.DTOs.RoleDto}
    content.vb: Public Function CreateRoleAsync(createRoleDto As CreateRoleDto) As Task(Of RoleDto)
  overload: MyApp.Auth.Application.Services.RoleService.CreateRoleAsync*
  implements:
  - MyApp.Auth.Application.Contracts.Services.IRoleService.CreateRoleAsync(MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
- uid: MyApp.Auth.Application.Services.RoleService.UpdateRoleAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
  commentId: M:MyApp.Auth.Application.Services.RoleService.UpdateRoleAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
  id: UpdateRoleAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
  parent: MyApp.Auth.Application.Services.RoleService
  langs:
  - csharp
  - vb
  name: UpdateRoleAsync(Guid, CreateRoleDto)
  nameWithType: RoleService.UpdateRoleAsync(Guid, CreateRoleDto)
  fullName: MyApp.Auth.Application.Services.RoleService.UpdateRoleAsync(System.Guid, MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
  type: Method
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/RoleService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: UpdateRoleAsync
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/RoleService.cs
    startLine: 88
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  example: []
  syntax:
    content: public Task<bool> UpdateRoleAsync(Guid roleId, CreateRoleDto updateRoleDto)
    parameters:
    - id: roleId
      type: System.Guid
    - id: updateRoleDto
      type: MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function UpdateRoleAsync(roleId As Guid, updateRoleDto As CreateRoleDto) As Task(Of Boolean)
  overload: MyApp.Auth.Application.Services.RoleService.UpdateRoleAsync*
  implements:
  - MyApp.Auth.Application.Contracts.Services.IRoleService.UpdateRoleAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
- uid: MyApp.Auth.Application.Services.RoleService.DeleteRoleAsync(System.Guid)
  commentId: M:MyApp.Auth.Application.Services.RoleService.DeleteRoleAsync(System.Guid)
  id: DeleteRoleAsync(System.Guid)
  parent: MyApp.Auth.Application.Services.RoleService
  langs:
  - csharp
  - vb
  name: DeleteRoleAsync(Guid)
  nameWithType: RoleService.DeleteRoleAsync(Guid)
  fullName: MyApp.Auth.Application.Services.RoleService.DeleteRoleAsync(System.Guid)
  type: Method
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/RoleService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: DeleteRoleAsync
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/RoleService.cs
    startLine: 111
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  example: []
  syntax:
    content: public Task<bool> DeleteRoleAsync(Guid roleId)
    parameters:
    - id: roleId
      type: System.Guid
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function DeleteRoleAsync(roleId As Guid) As Task(Of Boolean)
  overload: MyApp.Auth.Application.Services.RoleService.DeleteRoleAsync*
  implements:
  - MyApp.Auth.Application.Contracts.Services.IRoleService.DeleteRoleAsync(System.Guid)
- uid: MyApp.Auth.Application.Services.RoleService.GetUsersInRoleAsync(System.String)
  commentId: M:MyApp.Auth.Application.Services.RoleService.GetUsersInRoleAsync(System.String)
  id: GetUsersInRoleAsync(System.String)
  parent: MyApp.Auth.Application.Services.RoleService
  langs:
  - csharp
  - vb
  name: GetUsersInRoleAsync(string)
  nameWithType: RoleService.GetUsersInRoleAsync(string)
  fullName: MyApp.Auth.Application.Services.RoleService.GetUsersInRoleAsync(string)
  type: Method
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/RoleService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: GetUsersInRoleAsync
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/RoleService.cs
    startLine: 130
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  example: []
  syntax:
    content: public Task<IEnumerable<UserDto>> GetUsersInRoleAsync(string roleName)
    parameters:
    - id: roleName
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{MyApp.Auth.Application.Contracts.DTOs.UserDto}}
    content.vb: Public Function GetUsersInRoleAsync(roleName As String) As Task(Of IEnumerable(Of UserDto))
  overload: MyApp.Auth.Application.Services.RoleService.GetUsersInRoleAsync*
  implements:
  - MyApp.Auth.Application.Contracts.Services.IRoleService.GetUsersInRoleAsync(System.String)
  nameWithType.vb: RoleService.GetUsersInRoleAsync(String)
  fullName.vb: MyApp.Auth.Application.Services.RoleService.GetUsersInRoleAsync(String)
  name.vb: GetUsersInRoleAsync(String)
- uid: MyApp.Auth.Application.Services.RoleService.AddPermissionToRole(MyApp.Auth.Application.Contracts.CreateRolePermissionDto)
  commentId: M:MyApp.Auth.Application.Services.RoleService.AddPermissionToRole(MyApp.Auth.Application.Contracts.CreateRolePermissionDto)
  id: AddPermissionToRole(MyApp.Auth.Application.Contracts.CreateRolePermissionDto)
  parent: MyApp.Auth.Application.Services.RoleService
  langs:
  - csharp
  - vb
  name: AddPermissionToRole(CreateRolePermissionDto)
  nameWithType: RoleService.AddPermissionToRole(CreateRolePermissionDto)
  fullName: MyApp.Auth.Application.Services.RoleService.AddPermissionToRole(MyApp.Auth.Application.Contracts.CreateRolePermissionDto)
  type: Method
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/RoleService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: AddPermissionToRole
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/RoleService.cs
    startLine: 136
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  example: []
  syntax:
    content: public Task<bool> AddPermissionToRole(CreateRolePermissionDto createDto)
    parameters:
    - id: createDto
      type: MyApp.Auth.Application.Contracts.CreateRolePermissionDto
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function AddPermissionToRole(createDto As CreateRolePermissionDto) As Task(Of Boolean)
  overload: MyApp.Auth.Application.Services.RoleService.AddPermissionToRole*
  implements:
  - MyApp.Auth.Application.Contracts.Services.IRoleService.AddPermissionToRole(MyApp.Auth.Application.Contracts.CreateRolePermissionDto)
- uid: MyApp.Auth.Application.Services.RoleService.RemovePermissionFromRoleAsync(MyApp.Auth.Application.Contracts.DeleteRolePermissionDto)
  commentId: M:MyApp.Auth.Application.Services.RoleService.RemovePermissionFromRoleAsync(MyApp.Auth.Application.Contracts.DeleteRolePermissionDto)
  id: RemovePermissionFromRoleAsync(MyApp.Auth.Application.Contracts.DeleteRolePermissionDto)
  parent: MyApp.Auth.Application.Services.RoleService
  langs:
  - csharp
  - vb
  name: RemovePermissionFromRoleAsync(DeleteRolePermissionDto)
  nameWithType: RoleService.RemovePermissionFromRoleAsync(DeleteRolePermissionDto)
  fullName: MyApp.Auth.Application.Services.RoleService.RemovePermissionFromRoleAsync(MyApp.Auth.Application.Contracts.DeleteRolePermissionDto)
  type: Method
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/RoleService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: RemovePermissionFromRoleAsync
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/RoleService.cs
    startLine: 162
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  example: []
  syntax:
    content: public Task<bool> RemovePermissionFromRoleAsync(DeleteRolePermissionDto deleteDto)
    parameters:
    - id: deleteDto
      type: MyApp.Auth.Application.Contracts.DeleteRolePermissionDto
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function RemovePermissionFromRoleAsync(deleteDto As DeleteRolePermissionDto) As Task(Of Boolean)
  overload: MyApp.Auth.Application.Services.RoleService.RemovePermissionFromRoleAsync*
  implements:
  - MyApp.Auth.Application.Contracts.Services.IRoleService.RemovePermissionFromRoleAsync(MyApp.Auth.Application.Contracts.DeleteRolePermissionDto)
- uid: MyApp.Auth.Application.Services.RoleService.HasPermissionAsync(System.Guid,System.Guid)
  commentId: M:MyApp.Auth.Application.Services.RoleService.HasPermissionAsync(System.Guid,System.Guid)
  id: HasPermissionAsync(System.Guid,System.Guid)
  parent: MyApp.Auth.Application.Services.RoleService
  langs:
  - csharp
  - vb
  name: HasPermissionAsync(Guid, Guid)
  nameWithType: RoleService.HasPermissionAsync(Guid, Guid)
  fullName: MyApp.Auth.Application.Services.RoleService.HasPermissionAsync(System.Guid, System.Guid)
  type: Method
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/RoleService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: HasPermissionAsync
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/RoleService.cs
    startLine: 167
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  example: []
  syntax:
    content: public Task<bool> HasPermissionAsync(Guid roleId, Guid permissionId)
    parameters:
    - id: roleId
      type: System.Guid
    - id: permissionId
      type: System.Guid
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function HasPermissionAsync(roleId As Guid, permissionId As Guid) As Task(Of Boolean)
  overload: MyApp.Auth.Application.Services.RoleService.HasPermissionAsync*
  implements:
  - MyApp.Auth.Application.Contracts.Services.IRoleService.HasPermissionAsync(System.Guid,System.Guid)
- uid: MyApp.Auth.Application.Services.RoleService.GetPermissionsForRoleAsync(System.Guid)
  commentId: M:MyApp.Auth.Application.Services.RoleService.GetPermissionsForRoleAsync(System.Guid)
  id: GetPermissionsForRoleAsync(System.Guid)
  parent: MyApp.Auth.Application.Services.RoleService
  langs:
  - csharp
  - vb
  name: GetPermissionsForRoleAsync(Guid)
  nameWithType: RoleService.GetPermissionsForRoleAsync(Guid)
  fullName: MyApp.Auth.Application.Services.RoleService.GetPermissionsForRoleAsync(System.Guid)
  type: Method
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/RoleService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: GetPermissionsForRoleAsync
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/RoleService.cs
    startLine: 172
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  example: []
  syntax:
    content: public Task<IEnumerable<PermissionDto>> GetPermissionsForRoleAsync(Guid roleId)
    parameters:
    - id: roleId
      type: System.Guid
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{MyApp.Auth.Application.Contracts.DTOs.PermissionDto}}
    content.vb: Public Function GetPermissionsForRoleAsync(roleId As Guid) As Task(Of IEnumerable(Of PermissionDto))
  overload: MyApp.Auth.Application.Services.RoleService.GetPermissionsForRoleAsync*
  implements:
  - MyApp.Auth.Application.Contracts.Services.IRoleService.GetPermissionsForRoleAsync(System.Guid)
references:
- uid: MyApp.Auth.Application.Services
  commentId: N:MyApp.Auth.Application.Services
  href: MyApp.html
  name: MyApp.Auth.Application.Services
  nameWithType: MyApp.Auth.Application.Services
  fullName: MyApp.Auth.Application.Services
  spec.csharp:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Auth
    name: Auth
    href: MyApp.Auth.html
  - name: .
  - uid: MyApp.Auth.Application
    name: Application
    href: MyApp.Auth.Application.html
  - name: .
  - uid: MyApp.Auth.Application.Services
    name: Services
    href: MyApp.Auth.Application.Services.html
  spec.vb:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Auth
    name: Auth
    href: MyApp.Auth.html
  - name: .
  - uid: MyApp.Auth.Application
    name: Application
    href: MyApp.Auth.Application.html
  - name: .
  - uid: MyApp.Auth.Application.Services
    name: Services
    href: MyApp.Auth.Application.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService
  commentId: T:MyApp.Auth.Application.Contracts.Services.IRoleService
  parent: MyApp.Auth.Application.Contracts.Services
  href: MyApp.Auth.Application.Contracts.Services.IRoleService.html
  name: IRoleService
  nameWithType: IRoleService
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MyApp.Auth.Application.Contracts.Services
  commentId: N:MyApp.Auth.Application.Contracts.Services
  href: MyApp.html
  name: MyApp.Auth.Application.Contracts.Services
  nameWithType: MyApp.Auth.Application.Contracts.Services
  fullName: MyApp.Auth.Application.Contracts.Services
  spec.csharp:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Auth
    name: Auth
    href: MyApp.Auth.html
  - name: .
  - uid: MyApp.Auth.Application
    name: Application
    href: MyApp.Auth.Application.html
  - name: .
  - uid: MyApp.Auth.Application.Contracts
    name: Contracts
    href: MyApp.Auth.Application.Contracts.html
  - name: .
  - uid: MyApp.Auth.Application.Contracts.Services
    name: Services
    href: MyApp.Auth.Application.Contracts.Services.html
  spec.vb:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Auth
    name: Auth
    href: MyApp.Auth.html
  - name: .
  - uid: MyApp.Auth.Application
    name: Application
    href: MyApp.Auth.Application.html
  - name: .
  - uid: MyApp.Auth.Application.Contracts
    name: Contracts
    href: MyApp.Auth.Application.Contracts.html
  - name: .
  - uid: MyApp.Auth.Application.Contracts.Services
    name: Services
    href: MyApp.Auth.Application.Contracts.Services.html
- uid: MyApp.Auth.Application.Services.RoleService.#ctor*
  commentId: Overload:MyApp.Auth.Application.Services.RoleService.#ctor
  href: MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService__ctor_Microsoft_AspNetCore_Identity_RoleManager_MyApp_Auth_Domain_Entities_ApplicationRole__Microsoft_AspNetCore_Identity_UserManager_MyApp_Auth_Domain_Entities_ApplicationUser__MyApp_Auth_Domain_Repositories_IRoleRepository_MyApp_Auth_Domain_Repositories_IUserRepository_AutoMapper_IMapper_Microsoft_Extensions_Logging_ILogger_MyApp_Auth_Application_Services_RoleService__
  name: RoleService
  nameWithType: RoleService.RoleService
  fullName: MyApp.Auth.Application.Services.RoleService.RoleService
  nameWithType.vb: RoleService.New
  fullName.vb: MyApp.Auth.Application.Services.RoleService.New
  name.vb: New
- uid: Microsoft.AspNetCore.Identity.RoleManager{MyApp.Auth.Domain.Entities.ApplicationRole}
  commentId: T:Microsoft.AspNetCore.Identity.RoleManager{MyApp.Auth.Domain.Entities.ApplicationRole}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.RoleManager`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.rolemanager-1
  name: RoleManager<ApplicationRole>
  nameWithType: RoleManager<ApplicationRole>
  fullName: Microsoft.AspNetCore.Identity.RoleManager<MyApp.Auth.Domain.Entities.ApplicationRole>
  nameWithType.vb: RoleManager(Of ApplicationRole)
  fullName.vb: Microsoft.AspNetCore.Identity.RoleManager(Of MyApp.Auth.Domain.Entities.ApplicationRole)
  name.vb: RoleManager(Of ApplicationRole)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.rolemanager-1
  - name: <
  - uid: MyApp.Auth.Domain.Entities.ApplicationRole
    name: ApplicationRole
  - name: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.rolemanager-1
  - name: (
  - name: Of
  - name: " "
  - uid: MyApp.Auth.Domain.Entities.ApplicationRole
    name: ApplicationRole
  - name: )
- uid: Microsoft.AspNetCore.Identity.UserManager{MyApp.Auth.Domain.Entities.ApplicationUser}
  commentId: T:Microsoft.AspNetCore.Identity.UserManager{MyApp.Auth.Domain.Entities.ApplicationUser}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.UserManager`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.usermanager-1
  name: UserManager<ApplicationUser>
  nameWithType: UserManager<ApplicationUser>
  fullName: Microsoft.AspNetCore.Identity.UserManager<MyApp.Auth.Domain.Entities.ApplicationUser>
  nameWithType.vb: UserManager(Of ApplicationUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of MyApp.Auth.Domain.Entities.ApplicationUser)
  name.vb: UserManager(Of ApplicationUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.usermanager-1
  - name: <
  - uid: MyApp.Auth.Domain.Entities.ApplicationUser
    name: ApplicationUser
  - name: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.usermanager-1
  - name: (
  - name: Of
  - name: " "
  - uid: MyApp.Auth.Domain.Entities.ApplicationUser
    name: ApplicationUser
  - name: )
- uid: MyApp.Auth.Domain.Repositories.IRoleRepository
  commentId: T:MyApp.Auth.Domain.Repositories.IRoleRepository
  parent: MyApp.Auth.Domain.Repositories
  href: MyApp.Auth.Domain.Repositories.IRoleRepository.html
  name: IRoleRepository
  nameWithType: IRoleRepository
  fullName: MyApp.Auth.Domain.Repositories.IRoleRepository
- uid: MyApp.Auth.Domain.Repositories.IUserRepository
  commentId: T:MyApp.Auth.Domain.Repositories.IUserRepository
  parent: MyApp.Auth.Domain.Repositories
  href: MyApp.Auth.Domain.Repositories.IUserRepository.html
  name: IUserRepository
  nameWithType: IUserRepository
  fullName: MyApp.Auth.Domain.Repositories.IUserRepository
- uid: AutoMapper.IMapper
  commentId: T:AutoMapper.IMapper
  parent: AutoMapper
  isExternal: true
  name: IMapper
  nameWithType: IMapper
  fullName: AutoMapper.IMapper
- uid: Microsoft.Extensions.Logging.ILogger{MyApp.Auth.Application.Services.RoleService}
  commentId: T:Microsoft.Extensions.Logging.ILogger{MyApp.Auth.Application.Services.RoleService}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<RoleService>
  nameWithType: ILogger<RoleService>
  fullName: Microsoft.Extensions.Logging.ILogger<MyApp.Auth.Application.Services.RoleService>
  nameWithType.vb: ILogger(Of RoleService)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of MyApp.Auth.Application.Services.RoleService)
  name.vb: ILogger(Of RoleService)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - uid: MyApp.Auth.Application.Services.RoleService
    name: RoleService
    href: MyApp.Auth.Application.Services.RoleService.html
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - uid: MyApp.Auth.Application.Services.RoleService
    name: RoleService
    href: MyApp.Auth.Application.Services.RoleService.html
  - name: )
- uid: Microsoft.AspNetCore.Identity.RoleManager`1
  commentId: T:Microsoft.AspNetCore.Identity.RoleManager`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.rolemanager-1
  name: RoleManager<TRole>
  nameWithType: RoleManager<TRole>
  fullName: Microsoft.AspNetCore.Identity.RoleManager<TRole>
  nameWithType.vb: RoleManager(Of TRole)
  fullName.vb: Microsoft.AspNetCore.Identity.RoleManager(Of TRole)
  name.vb: RoleManager(Of TRole)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.rolemanager-1
  - name: <
  - name: TRole
  - name: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.rolemanager-1
  - name: (
  - name: Of
  - name: " "
  - name: TRole
  - name: )
- uid: Microsoft.AspNetCore.Identity
  commentId: N:Microsoft.AspNetCore.Identity
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.AspNetCore.Identity
  nameWithType: Microsoft.AspNetCore.Identity
  fullName: Microsoft.AspNetCore.Identity
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore
  - name: .
  - uid: Microsoft.AspNetCore.Identity
    name: Identity
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore
  - name: .
  - uid: Microsoft.AspNetCore.Identity
    name: Identity
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity
- uid: Microsoft.AspNetCore.Identity.UserManager`1
  commentId: T:Microsoft.AspNetCore.Identity.UserManager`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.usermanager-1
  name: UserManager<TUser>
  nameWithType: UserManager<TUser>
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>
  nameWithType.vb: UserManager(Of TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser)
  name.vb: UserManager(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.usermanager-1
  - name: <
  - name: TUser
  - name: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.usermanager-1
  - name: (
  - name: Of
  - name: " "
  - name: TUser
  - name: )
- uid: MyApp.Auth.Domain.Repositories
  commentId: N:MyApp.Auth.Domain.Repositories
  href: MyApp.html
  name: MyApp.Auth.Domain.Repositories
  nameWithType: MyApp.Auth.Domain.Repositories
  fullName: MyApp.Auth.Domain.Repositories
  spec.csharp:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Auth
    name: Auth
    href: MyApp.Auth.html
  - name: .
  - uid: MyApp.Auth.Domain
    name: Domain
    href: MyApp.Auth.Domain.html
  - name: .
  - uid: MyApp.Auth.Domain.Repositories
    name: Repositories
    href: MyApp.Auth.Domain.Repositories.html
  spec.vb:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Auth
    name: Auth
    href: MyApp.Auth.html
  - name: .
  - uid: MyApp.Auth.Domain
    name: Domain
    href: MyApp.Auth.Domain.html
  - name: .
  - uid: MyApp.Auth.Domain.Repositories
    name: Repositories
    href: MyApp.Auth.Domain.Repositories.html
- uid: AutoMapper
  commentId: N:AutoMapper
  isExternal: true
  name: AutoMapper
  nameWithType: AutoMapper
  fullName: AutoMapper
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - name: TCategoryName
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - name: TCategoryName
  - name: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: MyApp.Auth.Application.Services.RoleService.GetRoleByIdAsync*
  commentId: Overload:MyApp.Auth.Application.Services.RoleService.GetRoleByIdAsync
  href: MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService_GetRoleByIdAsync_System_Guid_
  name: GetRoleByIdAsync
  nameWithType: RoleService.GetRoleByIdAsync
  fullName: MyApp.Auth.Application.Services.RoleService.GetRoleByIdAsync
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService.GetRoleByIdAsync(System.Guid)
  commentId: M:MyApp.Auth.Application.Contracts.Services.IRoleService.GetRoleByIdAsync(System.Guid)
  parent: MyApp.Auth.Application.Contracts.Services.IRoleService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: GetRoleByIdAsync(Guid)
  nameWithType: IRoleService.GetRoleByIdAsync(Guid)
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService.GetRoleByIdAsync(System.Guid)
  spec.csharp:
  - uid: MyApp.Auth.Application.Contracts.Services.IRoleService.GetRoleByIdAsync(System.Guid)
    name: GetRoleByIdAsync
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
  spec.vb:
  - uid: MyApp.Auth.Application.Contracts.Services.IRoleService.GetRoleByIdAsync(System.Guid)
    name: GetRoleByIdAsync
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Threading.Tasks.Task{MyApp.Auth.Application.Contracts.DTOs.RoleDto}
  commentId: T:System.Threading.Tasks.Task{MyApp.Auth.Application.Contracts.DTOs.RoleDto}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<RoleDto>
  nameWithType: Task<RoleDto>
  fullName: System.Threading.Tasks.Task<MyApp.Auth.Application.Contracts.DTOs.RoleDto>
  nameWithType.vb: Task(Of RoleDto)
  fullName.vb: System.Threading.Tasks.Task(Of MyApp.Auth.Application.Contracts.DTOs.RoleDto)
  name.vb: Task(Of RoleDto)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: MyApp.Auth.Application.Contracts.DTOs.RoleDto
    name: RoleDto
    href: MyApp.Auth.Application.Contracts.DTOs.RoleDto.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: MyApp.Auth.Application.Contracts.DTOs.RoleDto
    name: RoleDto
    href: MyApp.Auth.Application.Contracts.DTOs.RoleDto.html
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: MyApp.Auth.Application.Services.RoleService.GetRoleByNameAsync*
  commentId: Overload:MyApp.Auth.Application.Services.RoleService.GetRoleByNameAsync
  href: MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService_GetRoleByNameAsync_System_String_
  name: GetRoleByNameAsync
  nameWithType: RoleService.GetRoleByNameAsync
  fullName: MyApp.Auth.Application.Services.RoleService.GetRoleByNameAsync
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService.GetRoleByNameAsync(System.String)
  commentId: M:MyApp.Auth.Application.Contracts.Services.IRoleService.GetRoleByNameAsync(System.String)
  parent: MyApp.Auth.Application.Contracts.Services.IRoleService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetRoleByNameAsync(string)
  nameWithType: IRoleService.GetRoleByNameAsync(string)
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService.GetRoleByNameAsync(string)
  nameWithType.vb: IRoleService.GetRoleByNameAsync(String)
  fullName.vb: MyApp.Auth.Application.Contracts.Services.IRoleService.GetRoleByNameAsync(String)
  name.vb: GetRoleByNameAsync(String)
  spec.csharp:
  - uid: MyApp.Auth.Application.Contracts.Services.IRoleService.GetRoleByNameAsync(System.String)
    name: GetRoleByNameAsync
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MyApp.Auth.Application.Contracts.Services.IRoleService.GetRoleByNameAsync(System.String)
    name: GetRoleByNameAsync
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: MyApp.Auth.Application.Services.RoleService.GetAllRolesAsync*
  commentId: Overload:MyApp.Auth.Application.Services.RoleService.GetAllRolesAsync
  href: MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService_GetAllRolesAsync
  name: GetAllRolesAsync
  nameWithType: RoleService.GetAllRolesAsync
  fullName: MyApp.Auth.Application.Services.RoleService.GetAllRolesAsync
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService.GetAllRolesAsync
  commentId: M:MyApp.Auth.Application.Contracts.Services.IRoleService.GetAllRolesAsync
  parent: MyApp.Auth.Application.Contracts.Services.IRoleService
  name: GetAllRolesAsync()
  nameWithType: IRoleService.GetAllRolesAsync()
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService.GetAllRolesAsync()
  spec.csharp:
  - uid: MyApp.Auth.Application.Contracts.Services.IRoleService.GetAllRolesAsync
    name: GetAllRolesAsync
  - name: (
  - name: )
  spec.vb:
  - uid: MyApp.Auth.Application.Contracts.Services.IRoleService.GetAllRolesAsync
    name: GetAllRolesAsync
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{MyApp.Auth.Application.Contracts.DTOs.RoleDto}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{MyApp.Auth.Application.Contracts.DTOs.RoleDto}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IEnumerable<RoleDto>>
  nameWithType: Task<IEnumerable<RoleDto>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<MyApp.Auth.Application.Contracts.DTOs.RoleDto>>
  nameWithType.vb: Task(Of IEnumerable(Of RoleDto))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of MyApp.Auth.Application.Contracts.DTOs.RoleDto))
  name.vb: Task(Of IEnumerable(Of RoleDto))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: MyApp.Auth.Application.Contracts.DTOs.RoleDto
    name: RoleDto
    href: MyApp.Auth.Application.Contracts.DTOs.RoleDto.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: MyApp.Auth.Application.Contracts.DTOs.RoleDto
    name: RoleDto
    href: MyApp.Auth.Application.Contracts.DTOs.RoleDto.html
  - name: )
  - name: )
- uid: MyApp.Auth.Application.Services.RoleService.GetAllRolesPaginatedAsync*
  commentId: Overload:MyApp.Auth.Application.Services.RoleService.GetAllRolesPaginatedAsync
  href: MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService_GetAllRolesPaginatedAsync_System_Int32_System_Int32_
  name: GetAllRolesPaginatedAsync
  nameWithType: RoleService.GetAllRolesPaginatedAsync
  fullName: MyApp.Auth.Application.Services.RoleService.GetAllRolesPaginatedAsync
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService.GetAllRolesPaginatedAsync(System.Int32,System.Int32)
  commentId: M:MyApp.Auth.Application.Contracts.Services.IRoleService.GetAllRolesPaginatedAsync(System.Int32,System.Int32)
  parent: MyApp.Auth.Application.Contracts.Services.IRoleService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: GetAllRolesPaginatedAsync(int, int)
  nameWithType: IRoleService.GetAllRolesPaginatedAsync(int, int)
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService.GetAllRolesPaginatedAsync(int, int)
  nameWithType.vb: IRoleService.GetAllRolesPaginatedAsync(Integer, Integer)
  fullName.vb: MyApp.Auth.Application.Contracts.Services.IRoleService.GetAllRolesPaginatedAsync(Integer, Integer)
  name.vb: GetAllRolesPaginatedAsync(Integer, Integer)
  spec.csharp:
  - uid: MyApp.Auth.Application.Contracts.Services.IRoleService.GetAllRolesPaginatedAsync(System.Int32,System.Int32)
    name: GetAllRolesPaginatedAsync
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: MyApp.Auth.Application.Contracts.Services.IRoleService.GetAllRolesPaginatedAsync(System.Int32,System.Int32)
    name: GetAllRolesPaginatedAsync
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Threading.Tasks.Task{MyApp.Shared.Domain.Pagination.PaginatedResult{MyApp.Auth.Application.Contracts.DTOs.RoleDto}}
  commentId: T:System.Threading.Tasks.Task{MyApp.Shared.Domain.Pagination.PaginatedResult{MyApp.Auth.Application.Contracts.DTOs.RoleDto}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<PaginatedResult<RoleDto>>
  nameWithType: Task<PaginatedResult<RoleDto>>
  fullName: System.Threading.Tasks.Task<MyApp.Shared.Domain.Pagination.PaginatedResult<MyApp.Auth.Application.Contracts.DTOs.RoleDto>>
  nameWithType.vb: Task(Of PaginatedResult(Of RoleDto))
  fullName.vb: System.Threading.Tasks.Task(Of MyApp.Shared.Domain.Pagination.PaginatedResult(Of MyApp.Auth.Application.Contracts.DTOs.RoleDto))
  name.vb: Task(Of PaginatedResult(Of RoleDto))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: MyApp.Shared.Domain.Pagination.PaginatedResult`1
    name: PaginatedResult
  - name: <
  - uid: MyApp.Auth.Application.Contracts.DTOs.RoleDto
    name: RoleDto
    href: MyApp.Auth.Application.Contracts.DTOs.RoleDto.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: MyApp.Shared.Domain.Pagination.PaginatedResult`1
    name: PaginatedResult
  - name: (
  - name: Of
  - name: " "
  - uid: MyApp.Auth.Application.Contracts.DTOs.RoleDto
    name: RoleDto
    href: MyApp.Auth.Application.Contracts.DTOs.RoleDto.html
  - name: )
  - name: )
- uid: MyApp.Auth.Application.Services.RoleService.CreateRoleAsync*
  commentId: Overload:MyApp.Auth.Application.Services.RoleService.CreateRoleAsync
  href: MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService_CreateRoleAsync_MyApp_Auth_Application_Contracts_DTOs_CreateRoleDto_
  name: CreateRoleAsync
  nameWithType: RoleService.CreateRoleAsync
  fullName: MyApp.Auth.Application.Services.RoleService.CreateRoleAsync
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService.CreateRoleAsync(MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
  commentId: M:MyApp.Auth.Application.Contracts.Services.IRoleService.CreateRoleAsync(MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
  parent: MyApp.Auth.Application.Contracts.Services.IRoleService
  name: CreateRoleAsync(CreateRoleDto)
  nameWithType: IRoleService.CreateRoleAsync(CreateRoleDto)
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService.CreateRoleAsync(MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
  spec.csharp:
  - uid: MyApp.Auth.Application.Contracts.Services.IRoleService.CreateRoleAsync(MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
    name: CreateRoleAsync
  - name: (
  - uid: MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto
    name: CreateRoleDto
  - name: )
  spec.vb:
  - uid: MyApp.Auth.Application.Contracts.Services.IRoleService.CreateRoleAsync(MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
    name: CreateRoleAsync
  - name: (
  - uid: MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto
    name: CreateRoleDto
  - name: )
- uid: MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto
  commentId: T:MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto
  parent: MyApp.Auth.Application.Contracts.DTOs
  href: MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto.html
  name: CreateRoleDto
  nameWithType: CreateRoleDto
  fullName: MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto
- uid: MyApp.Auth.Application.Contracts.DTOs
  commentId: N:MyApp.Auth.Application.Contracts.DTOs
  href: MyApp.html
  name: MyApp.Auth.Application.Contracts.DTOs
  nameWithType: MyApp.Auth.Application.Contracts.DTOs
  fullName: MyApp.Auth.Application.Contracts.DTOs
  spec.csharp:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Auth
    name: Auth
    href: MyApp.Auth.html
  - name: .
  - uid: MyApp.Auth.Application
    name: Application
    href: MyApp.Auth.Application.html
  - name: .
  - uid: MyApp.Auth.Application.Contracts
    name: Contracts
    href: MyApp.Auth.Application.Contracts.html
  - name: .
  - uid: MyApp.Auth.Application.Contracts.DTOs
    name: DTOs
    href: MyApp.Auth.Application.Contracts.DTOs.html
  spec.vb:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Auth
    name: Auth
    href: MyApp.Auth.html
  - name: .
  - uid: MyApp.Auth.Application
    name: Application
    href: MyApp.Auth.Application.html
  - name: .
  - uid: MyApp.Auth.Application.Contracts
    name: Contracts
    href: MyApp.Auth.Application.Contracts.html
  - name: .
  - uid: MyApp.Auth.Application.Contracts.DTOs
    name: DTOs
    href: MyApp.Auth.Application.Contracts.DTOs.html
- uid: MyApp.Auth.Application.Services.RoleService.UpdateRoleAsync*
  commentId: Overload:MyApp.Auth.Application.Services.RoleService.UpdateRoleAsync
  href: MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService_UpdateRoleAsync_System_Guid_MyApp_Auth_Application_Contracts_DTOs_CreateRoleDto_
  name: UpdateRoleAsync
  nameWithType: RoleService.UpdateRoleAsync
  fullName: MyApp.Auth.Application.Services.RoleService.UpdateRoleAsync
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService.UpdateRoleAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
  commentId: M:MyApp.Auth.Application.Contracts.Services.IRoleService.UpdateRoleAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
  parent: MyApp.Auth.Application.Contracts.Services.IRoleService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: UpdateRoleAsync(Guid, CreateRoleDto)
  nameWithType: IRoleService.UpdateRoleAsync(Guid, CreateRoleDto)
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService.UpdateRoleAsync(System.Guid, MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
  spec.csharp:
  - uid: MyApp.Auth.Application.Contracts.Services.IRoleService.UpdateRoleAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
    name: UpdateRoleAsync
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: ','
  - name: " "
  - uid: MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto
    name: CreateRoleDto
  - name: )
  spec.vb:
  - uid: MyApp.Auth.Application.Contracts.Services.IRoleService.UpdateRoleAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
    name: UpdateRoleAsync
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: ','
  - name: " "
  - uid: MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto
    name: CreateRoleDto
  - name: )
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: MyApp.Auth.Application.Services.RoleService.DeleteRoleAsync*
  commentId: Overload:MyApp.Auth.Application.Services.RoleService.DeleteRoleAsync
  href: MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService_DeleteRoleAsync_System_Guid_
  name: DeleteRoleAsync
  nameWithType: RoleService.DeleteRoleAsync
  fullName: MyApp.Auth.Application.Services.RoleService.DeleteRoleAsync
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService.DeleteRoleAsync(System.Guid)
  commentId: M:MyApp.Auth.Application.Contracts.Services.IRoleService.DeleteRoleAsync(System.Guid)
  parent: MyApp.Auth.Application.Contracts.Services.IRoleService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: DeleteRoleAsync(Guid)
  nameWithType: IRoleService.DeleteRoleAsync(Guid)
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService.DeleteRoleAsync(System.Guid)
  spec.csharp:
  - uid: MyApp.Auth.Application.Contracts.Services.IRoleService.DeleteRoleAsync(System.Guid)
    name: DeleteRoleAsync
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
  spec.vb:
  - uid: MyApp.Auth.Application.Contracts.Services.IRoleService.DeleteRoleAsync(System.Guid)
    name: DeleteRoleAsync
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
- uid: MyApp.Auth.Application.Services.RoleService.GetUsersInRoleAsync*
  commentId: Overload:MyApp.Auth.Application.Services.RoleService.GetUsersInRoleAsync
  href: MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService_GetUsersInRoleAsync_System_String_
  name: GetUsersInRoleAsync
  nameWithType: RoleService.GetUsersInRoleAsync
  fullName: MyApp.Auth.Application.Services.RoleService.GetUsersInRoleAsync
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService.GetUsersInRoleAsync(System.String)
  commentId: M:MyApp.Auth.Application.Contracts.Services.IRoleService.GetUsersInRoleAsync(System.String)
  parent: MyApp.Auth.Application.Contracts.Services.IRoleService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetUsersInRoleAsync(string)
  nameWithType: IRoleService.GetUsersInRoleAsync(string)
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService.GetUsersInRoleAsync(string)
  nameWithType.vb: IRoleService.GetUsersInRoleAsync(String)
  fullName.vb: MyApp.Auth.Application.Contracts.Services.IRoleService.GetUsersInRoleAsync(String)
  name.vb: GetUsersInRoleAsync(String)
  spec.csharp:
  - uid: MyApp.Auth.Application.Contracts.Services.IRoleService.GetUsersInRoleAsync(System.String)
    name: GetUsersInRoleAsync
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MyApp.Auth.Application.Contracts.Services.IRoleService.GetUsersInRoleAsync(System.String)
    name: GetUsersInRoleAsync
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{MyApp.Auth.Application.Contracts.DTOs.UserDto}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{MyApp.Auth.Application.Contracts.DTOs.UserDto}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IEnumerable<UserDto>>
  nameWithType: Task<IEnumerable<UserDto>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<MyApp.Auth.Application.Contracts.DTOs.UserDto>>
  nameWithType.vb: Task(Of IEnumerable(Of UserDto))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of MyApp.Auth.Application.Contracts.DTOs.UserDto))
  name.vb: Task(Of IEnumerable(Of UserDto))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: MyApp.Auth.Application.Contracts.DTOs.UserDto
    name: UserDto
    href: MyApp.Auth.Application.Contracts.DTOs.UserDto.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: MyApp.Auth.Application.Contracts.DTOs.UserDto
    name: UserDto
    href: MyApp.Auth.Application.Contracts.DTOs.UserDto.html
  - name: )
  - name: )
- uid: MyApp.Auth.Application.Services.RoleService.AddPermissionToRole*
  commentId: Overload:MyApp.Auth.Application.Services.RoleService.AddPermissionToRole
  href: MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService_AddPermissionToRole_MyApp_Auth_Application_Contracts_CreateRolePermissionDto_
  name: AddPermissionToRole
  nameWithType: RoleService.AddPermissionToRole
  fullName: MyApp.Auth.Application.Services.RoleService.AddPermissionToRole
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService.AddPermissionToRole(MyApp.Auth.Application.Contracts.CreateRolePermissionDto)
  commentId: M:MyApp.Auth.Application.Contracts.Services.IRoleService.AddPermissionToRole(MyApp.Auth.Application.Contracts.CreateRolePermissionDto)
  parent: MyApp.Auth.Application.Contracts.Services.IRoleService
  name: AddPermissionToRole(CreateRolePermissionDto)
  nameWithType: IRoleService.AddPermissionToRole(CreateRolePermissionDto)
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService.AddPermissionToRole(MyApp.Auth.Application.Contracts.CreateRolePermissionDto)
  spec.csharp:
  - uid: MyApp.Auth.Application.Contracts.Services.IRoleService.AddPermissionToRole(MyApp.Auth.Application.Contracts.CreateRolePermissionDto)
    name: AddPermissionToRole
  - name: (
  - uid: MyApp.Auth.Application.Contracts.CreateRolePermissionDto
    name: CreateRolePermissionDto
  - name: )
  spec.vb:
  - uid: MyApp.Auth.Application.Contracts.Services.IRoleService.AddPermissionToRole(MyApp.Auth.Application.Contracts.CreateRolePermissionDto)
    name: AddPermissionToRole
  - name: (
  - uid: MyApp.Auth.Application.Contracts.CreateRolePermissionDto
    name: CreateRolePermissionDto
  - name: )
- uid: MyApp.Auth.Application.Contracts.CreateRolePermissionDto
  commentId: T:MyApp.Auth.Application.Contracts.CreateRolePermissionDto
  parent: MyApp.Auth.Application.Contracts
  href: MyApp.Auth.Application.Contracts.CreateRolePermissionDto.html
  name: CreateRolePermissionDto
  nameWithType: CreateRolePermissionDto
  fullName: MyApp.Auth.Application.Contracts.CreateRolePermissionDto
- uid: MyApp.Auth.Application.Contracts
  commentId: N:MyApp.Auth.Application.Contracts
  href: MyApp.html
  name: MyApp.Auth.Application.Contracts
  nameWithType: MyApp.Auth.Application.Contracts
  fullName: MyApp.Auth.Application.Contracts
  spec.csharp:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Auth
    name: Auth
    href: MyApp.Auth.html
  - name: .
  - uid: MyApp.Auth.Application
    name: Application
    href: MyApp.Auth.Application.html
  - name: .
  - uid: MyApp.Auth.Application.Contracts
    name: Contracts
    href: MyApp.Auth.Application.Contracts.html
  spec.vb:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Auth
    name: Auth
    href: MyApp.Auth.html
  - name: .
  - uid: MyApp.Auth.Application
    name: Application
    href: MyApp.Auth.Application.html
  - name: .
  - uid: MyApp.Auth.Application.Contracts
    name: Contracts
    href: MyApp.Auth.Application.Contracts.html
- uid: MyApp.Auth.Application.Services.RoleService.RemovePermissionFromRoleAsync*
  commentId: Overload:MyApp.Auth.Application.Services.RoleService.RemovePermissionFromRoleAsync
  href: MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService_RemovePermissionFromRoleAsync_MyApp_Auth_Application_Contracts_DeleteRolePermissionDto_
  name: RemovePermissionFromRoleAsync
  nameWithType: RoleService.RemovePermissionFromRoleAsync
  fullName: MyApp.Auth.Application.Services.RoleService.RemovePermissionFromRoleAsync
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService.RemovePermissionFromRoleAsync(MyApp.Auth.Application.Contracts.DeleteRolePermissionDto)
  commentId: M:MyApp.Auth.Application.Contracts.Services.IRoleService.RemovePermissionFromRoleAsync(MyApp.Auth.Application.Contracts.DeleteRolePermissionDto)
  parent: MyApp.Auth.Application.Contracts.Services.IRoleService
  name: RemovePermissionFromRoleAsync(DeleteRolePermissionDto)
  nameWithType: IRoleService.RemovePermissionFromRoleAsync(DeleteRolePermissionDto)
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService.RemovePermissionFromRoleAsync(MyApp.Auth.Application.Contracts.DeleteRolePermissionDto)
  spec.csharp:
  - uid: MyApp.Auth.Application.Contracts.Services.IRoleService.RemovePermissionFromRoleAsync(MyApp.Auth.Application.Contracts.DeleteRolePermissionDto)
    name: RemovePermissionFromRoleAsync
  - name: (
  - uid: MyApp.Auth.Application.Contracts.DeleteRolePermissionDto
    name: DeleteRolePermissionDto
  - name: )
  spec.vb:
  - uid: MyApp.Auth.Application.Contracts.Services.IRoleService.RemovePermissionFromRoleAsync(MyApp.Auth.Application.Contracts.DeleteRolePermissionDto)
    name: RemovePermissionFromRoleAsync
  - name: (
  - uid: MyApp.Auth.Application.Contracts.DeleteRolePermissionDto
    name: DeleteRolePermissionDto
  - name: )
- uid: MyApp.Auth.Application.Contracts.DeleteRolePermissionDto
  commentId: T:MyApp.Auth.Application.Contracts.DeleteRolePermissionDto
  parent: MyApp.Auth.Application.Contracts
  href: MyApp.Auth.Application.Contracts.DeleteRolePermissionDto.html
  name: DeleteRolePermissionDto
  nameWithType: DeleteRolePermissionDto
  fullName: MyApp.Auth.Application.Contracts.DeleteRolePermissionDto
- uid: MyApp.Auth.Application.Services.RoleService.HasPermissionAsync*
  commentId: Overload:MyApp.Auth.Application.Services.RoleService.HasPermissionAsync
  href: MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService_HasPermissionAsync_System_Guid_System_Guid_
  name: HasPermissionAsync
  nameWithType: RoleService.HasPermissionAsync
  fullName: MyApp.Auth.Application.Services.RoleService.HasPermissionAsync
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService.HasPermissionAsync(System.Guid,System.Guid)
  commentId: M:MyApp.Auth.Application.Contracts.Services.IRoleService.HasPermissionAsync(System.Guid,System.Guid)
  parent: MyApp.Auth.Application.Contracts.Services.IRoleService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: HasPermissionAsync(Guid, Guid)
  nameWithType: IRoleService.HasPermissionAsync(Guid, Guid)
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService.HasPermissionAsync(System.Guid, System.Guid)
  spec.csharp:
  - uid: MyApp.Auth.Application.Contracts.Services.IRoleService.HasPermissionAsync(System.Guid,System.Guid)
    name: HasPermissionAsync
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: ','
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
  spec.vb:
  - uid: MyApp.Auth.Application.Contracts.Services.IRoleService.HasPermissionAsync(System.Guid,System.Guid)
    name: HasPermissionAsync
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: ','
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
- uid: MyApp.Auth.Application.Services.RoleService.GetPermissionsForRoleAsync*
  commentId: Overload:MyApp.Auth.Application.Services.RoleService.GetPermissionsForRoleAsync
  href: MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService_GetPermissionsForRoleAsync_System_Guid_
  name: GetPermissionsForRoleAsync
  nameWithType: RoleService.GetPermissionsForRoleAsync
  fullName: MyApp.Auth.Application.Services.RoleService.GetPermissionsForRoleAsync
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService.GetPermissionsForRoleAsync(System.Guid)
  commentId: M:MyApp.Auth.Application.Contracts.Services.IRoleService.GetPermissionsForRoleAsync(System.Guid)
  parent: MyApp.Auth.Application.Contracts.Services.IRoleService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: GetPermissionsForRoleAsync(Guid)
  nameWithType: IRoleService.GetPermissionsForRoleAsync(Guid)
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService.GetPermissionsForRoleAsync(System.Guid)
  spec.csharp:
  - uid: MyApp.Auth.Application.Contracts.Services.IRoleService.GetPermissionsForRoleAsync(System.Guid)
    name: GetPermissionsForRoleAsync
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
  spec.vb:
  - uid: MyApp.Auth.Application.Contracts.Services.IRoleService.GetPermissionsForRoleAsync(System.Guid)
    name: GetPermissionsForRoleAsync
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{MyApp.Auth.Application.Contracts.DTOs.PermissionDto}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{MyApp.Auth.Application.Contracts.DTOs.PermissionDto}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IEnumerable<PermissionDto>>
  nameWithType: Task<IEnumerable<PermissionDto>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<MyApp.Auth.Application.Contracts.DTOs.PermissionDto>>
  nameWithType.vb: Task(Of IEnumerable(Of PermissionDto))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of MyApp.Auth.Application.Contracts.DTOs.PermissionDto))
  name.vb: Task(Of IEnumerable(Of PermissionDto))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: MyApp.Auth.Application.Contracts.DTOs.PermissionDto
    name: PermissionDto
    href: MyApp.Auth.Application.Contracts.DTOs.PermissionDto.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: MyApp.Auth.Application.Contracts.DTOs.PermissionDto
    name: PermissionDto
    href: MyApp.Auth.Application.Contracts.DTOs.PermissionDto.html
  - name: )
  - name: )
