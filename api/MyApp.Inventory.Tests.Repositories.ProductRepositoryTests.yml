### YamlMime:ManagedReference
items:
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests
  commentId: T:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests
  id: ProductRepositoryTests
  parent: MyApp.Inventory.Tests.Repositories
  children:
  - MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.#ctor
  - MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.AddAsync_WithValidProduct_CreatesProduct
  - MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.DeleteAsync_WithValidId_DeletesProduct
  - MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetAllAsync_ReturnsAllProducts
  - MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull
  - MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetByIdAsync_WithValidId_ReturnsProduct
  - MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetBySkuAsync_WithNonExistentSku_ReturnsNull
  - MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetBySkuAsync_WithValidSku_ReturnsProduct
  - MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetLowStockProductsAsync_ReturnsEmpty_WhenNoLowStockProducts
  - MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetLowStockProductsAsync_ReturnsProductsBelowReorderLevel
  - MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.UpdateAsync_WithExistingProduct_UpdatesProductData
  langs:
  - csharp
  - vb
  name: ProductRepositoryTests
  nameWithType: ProductRepositoryTests
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests
  type: Class
  source:
    remote:
      path: src/MyApp.Inventory/test/MyApp.Inventory.Infrastructure.Tests/Repositories/ProductRepositoryTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: ProductRepositoryTests
    path: src/MyApp.Inventory/test/MyApp.Inventory.Infrastructure.Tests/Repositories/ProductRepositoryTests.cs
    startLine: 9
  assemblies:
  - MyApp.Inventory.Infrastructure.Tests
  namespace: MyApp.Inventory.Tests.Repositories
  syntax:
    content: public class ProductRepositoryTests
    content.vb: Public Class ProductRepositoryTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.#ctor
  commentId: M:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.#ctor
  id: '#ctor'
  parent: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests
  langs:
  - csharp
  - vb
  name: ProductRepositoryTests()
  nameWithType: ProductRepositoryTests.ProductRepositoryTests()
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.ProductRepositoryTests()
  type: Constructor
  source:
    remote:
      path: src/MyApp.Inventory/test/MyApp.Inventory.Infrastructure.Tests/Repositories/ProductRepositoryTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: .ctor
    path: src/MyApp.Inventory/test/MyApp.Inventory.Infrastructure.Tests/Repositories/ProductRepositoryTests.cs
    startLine: 14
  assemblies:
  - MyApp.Inventory.Infrastructure.Tests
  namespace: MyApp.Inventory.Tests.Repositories
  syntax:
    content: public ProductRepositoryTests()
    content.vb: Public Sub New()
  overload: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.#ctor*
  nameWithType.vb: ProductRepositoryTests.New()
  fullName.vb: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.New()
  name.vb: New()
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetByIdAsync_WithValidId_ReturnsProduct
  commentId: M:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetByIdAsync_WithValidId_ReturnsProduct
  id: GetByIdAsync_WithValidId_ReturnsProduct
  parent: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests
  langs:
  - csharp
  - vb
  name: GetByIdAsync_WithValidId_ReturnsProduct()
  nameWithType: ProductRepositoryTests.GetByIdAsync_WithValidId_ReturnsProduct()
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetByIdAsync_WithValidId_ReturnsProduct()
  type: Method
  source:
    remote:
      path: src/MyApp.Inventory/test/MyApp.Inventory.Infrastructure.Tests/Repositories/ProductRepositoryTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: GetByIdAsync_WithValidId_ReturnsProduct
    path: src/MyApp.Inventory/test/MyApp.Inventory.Infrastructure.Tests/Repositories/ProductRepositoryTests.cs
    startLine: 40
  assemblies:
  - MyApp.Inventory.Infrastructure.Tests
  namespace: MyApp.Inventory.Tests.Repositories
  syntax:
    content: >-
      [Fact]

      public Task GetByIdAsync_WithValidId_ReturnsProduct()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function GetByIdAsync_WithValidId_ReturnsProduct() As Task
  overload: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetByIdAsync_WithValidId_ReturnsProduct*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull
  commentId: M:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull
  id: GetByIdAsync_WithNonExistentId_ReturnsNull
  parent: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests
  langs:
  - csharp
  - vb
  name: GetByIdAsync_WithNonExistentId_ReturnsNull()
  nameWithType: ProductRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull()
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull()
  type: Method
  source:
    remote:
      path: src/MyApp.Inventory/test/MyApp.Inventory.Infrastructure.Tests/Repositories/ProductRepositoryTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: GetByIdAsync_WithNonExistentId_ReturnsNull
    path: src/MyApp.Inventory/test/MyApp.Inventory.Infrastructure.Tests/Repositories/ProductRepositoryTests.cs
    startLine: 56
  assemblies:
  - MyApp.Inventory.Infrastructure.Tests
  namespace: MyApp.Inventory.Tests.Repositories
  syntax:
    content: >-
      [Fact]

      public Task GetByIdAsync_WithNonExistentId_ReturnsNull()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function GetByIdAsync_WithNonExistentId_ReturnsNull() As Task
  overload: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetBySkuAsync_WithValidSku_ReturnsProduct
  commentId: M:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetBySkuAsync_WithValidSku_ReturnsProduct
  id: GetBySkuAsync_WithValidSku_ReturnsProduct
  parent: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests
  langs:
  - csharp
  - vb
  name: GetBySkuAsync_WithValidSku_ReturnsProduct()
  nameWithType: ProductRepositoryTests.GetBySkuAsync_WithValidSku_ReturnsProduct()
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetBySkuAsync_WithValidSku_ReturnsProduct()
  type: Method
  source:
    remote:
      path: src/MyApp.Inventory/test/MyApp.Inventory.Infrastructure.Tests/Repositories/ProductRepositoryTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: GetBySkuAsync_WithValidSku_ReturnsProduct
    path: src/MyApp.Inventory/test/MyApp.Inventory.Infrastructure.Tests/Repositories/ProductRepositoryTests.cs
    startLine: 73
  assemblies:
  - MyApp.Inventory.Infrastructure.Tests
  namespace: MyApp.Inventory.Tests.Repositories
  syntax:
    content: >-
      [Fact]

      public Task GetBySkuAsync_WithValidSku_ReturnsProduct()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function GetBySkuAsync_WithValidSku_ReturnsProduct() As Task
  overload: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetBySkuAsync_WithValidSku_ReturnsProduct*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetBySkuAsync_WithNonExistentSku_ReturnsNull
  commentId: M:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetBySkuAsync_WithNonExistentSku_ReturnsNull
  id: GetBySkuAsync_WithNonExistentSku_ReturnsNull
  parent: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests
  langs:
  - csharp
  - vb
  name: GetBySkuAsync_WithNonExistentSku_ReturnsNull()
  nameWithType: ProductRepositoryTests.GetBySkuAsync_WithNonExistentSku_ReturnsNull()
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetBySkuAsync_WithNonExistentSku_ReturnsNull()
  type: Method
  source:
    remote:
      path: src/MyApp.Inventory/test/MyApp.Inventory.Infrastructure.Tests/Repositories/ProductRepositoryTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: GetBySkuAsync_WithNonExistentSku_ReturnsNull
    path: src/MyApp.Inventory/test/MyApp.Inventory.Infrastructure.Tests/Repositories/ProductRepositoryTests.cs
    startLine: 88
  assemblies:
  - MyApp.Inventory.Infrastructure.Tests
  namespace: MyApp.Inventory.Tests.Repositories
  syntax:
    content: >-
      [Fact]

      public Task GetBySkuAsync_WithNonExistentSku_ReturnsNull()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function GetBySkuAsync_WithNonExistentSku_ReturnsNull() As Task
  overload: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetBySkuAsync_WithNonExistentSku_ReturnsNull*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetLowStockProductsAsync_ReturnsProductsBelowReorderLevel
  commentId: M:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetLowStockProductsAsync_ReturnsProductsBelowReorderLevel
  id: GetLowStockProductsAsync_ReturnsProductsBelowReorderLevel
  parent: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests
  langs:
  - csharp
  - vb
  name: GetLowStockProductsAsync_ReturnsProductsBelowReorderLevel()
  nameWithType: ProductRepositoryTests.GetLowStockProductsAsync_ReturnsProductsBelowReorderLevel()
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetLowStockProductsAsync_ReturnsProductsBelowReorderLevel()
  type: Method
  source:
    remote:
      path: src/MyApp.Inventory/test/MyApp.Inventory.Infrastructure.Tests/Repositories/ProductRepositoryTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: GetLowStockProductsAsync_ReturnsProductsBelowReorderLevel
    path: src/MyApp.Inventory/test/MyApp.Inventory.Infrastructure.Tests/Repositories/ProductRepositoryTests.cs
    startLine: 102
  assemblies:
  - MyApp.Inventory.Infrastructure.Tests
  namespace: MyApp.Inventory.Tests.Repositories
  syntax:
    content: >-
      [Fact]

      public Task GetLowStockProductsAsync_ReturnsProductsBelowReorderLevel()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function GetLowStockProductsAsync_ReturnsProductsBelowReorderLevel() As Task
  overload: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetLowStockProductsAsync_ReturnsProductsBelowReorderLevel*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetLowStockProductsAsync_ReturnsEmpty_WhenNoLowStockProducts
  commentId: M:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetLowStockProductsAsync_ReturnsEmpty_WhenNoLowStockProducts
  id: GetLowStockProductsAsync_ReturnsEmpty_WhenNoLowStockProducts
  parent: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests
  langs:
  - csharp
  - vb
  name: GetLowStockProductsAsync_ReturnsEmpty_WhenNoLowStockProducts()
  nameWithType: ProductRepositoryTests.GetLowStockProductsAsync_ReturnsEmpty_WhenNoLowStockProducts()
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetLowStockProductsAsync_ReturnsEmpty_WhenNoLowStockProducts()
  type: Method
  source:
    remote:
      path: src/MyApp.Inventory/test/MyApp.Inventory.Infrastructure.Tests/Repositories/ProductRepositoryTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: GetLowStockProductsAsync_ReturnsEmpty_WhenNoLowStockProducts
    path: src/MyApp.Inventory/test/MyApp.Inventory.Infrastructure.Tests/Repositories/ProductRepositoryTests.cs
    startLine: 119
  assemblies:
  - MyApp.Inventory.Infrastructure.Tests
  namespace: MyApp.Inventory.Tests.Repositories
  syntax:
    content: >-
      [Fact]

      public Task GetLowStockProductsAsync_ReturnsEmpty_WhenNoLowStockProducts()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function GetLowStockProductsAsync_ReturnsEmpty_WhenNoLowStockProducts() As Task
  overload: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetLowStockProductsAsync_ReturnsEmpty_WhenNoLowStockProducts*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.AddAsync_WithValidProduct_CreatesProduct
  commentId: M:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.AddAsync_WithValidProduct_CreatesProduct
  id: AddAsync_WithValidProduct_CreatesProduct
  parent: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests
  langs:
  - csharp
  - vb
  name: AddAsync_WithValidProduct_CreatesProduct()
  nameWithType: ProductRepositoryTests.AddAsync_WithValidProduct_CreatesProduct()
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.AddAsync_WithValidProduct_CreatesProduct()
  type: Method
  source:
    remote:
      path: src/MyApp.Inventory/test/MyApp.Inventory.Infrastructure.Tests/Repositories/ProductRepositoryTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: AddAsync_WithValidProduct_CreatesProduct
    path: src/MyApp.Inventory/test/MyApp.Inventory.Infrastructure.Tests/Repositories/ProductRepositoryTests.cs
    startLine: 138
  assemblies:
  - MyApp.Inventory.Infrastructure.Tests
  namespace: MyApp.Inventory.Tests.Repositories
  syntax:
    content: >-
      [Fact]

      public Task AddAsync_WithValidProduct_CreatesProduct()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function AddAsync_WithValidProduct_CreatesProduct() As Task
  overload: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.AddAsync_WithValidProduct_CreatesProduct*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.UpdateAsync_WithExistingProduct_UpdatesProductData
  commentId: M:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.UpdateAsync_WithExistingProduct_UpdatesProductData
  id: UpdateAsync_WithExistingProduct_UpdatesProductData
  parent: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests
  langs:
  - csharp
  - vb
  name: UpdateAsync_WithExistingProduct_UpdatesProductData()
  nameWithType: ProductRepositoryTests.UpdateAsync_WithExistingProduct_UpdatesProductData()
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.UpdateAsync_WithExistingProduct_UpdatesProductData()
  type: Method
  source:
    remote:
      path: src/MyApp.Inventory/test/MyApp.Inventory.Infrastructure.Tests/Repositories/ProductRepositoryTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: UpdateAsync_WithExistingProduct_UpdatesProductData
    path: src/MyApp.Inventory/test/MyApp.Inventory.Infrastructure.Tests/Repositories/ProductRepositoryTests.cs
    startLine: 167
  assemblies:
  - MyApp.Inventory.Infrastructure.Tests
  namespace: MyApp.Inventory.Tests.Repositories
  syntax:
    content: >-
      [Fact]

      public Task UpdateAsync_WithExistingProduct_UpdatesProductData()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function UpdateAsync_WithExistingProduct_UpdatesProductData() As Task
  overload: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.UpdateAsync_WithExistingProduct_UpdatesProductData*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.DeleteAsync_WithValidId_DeletesProduct
  commentId: M:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.DeleteAsync_WithValidId_DeletesProduct
  id: DeleteAsync_WithValidId_DeletesProduct
  parent: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests
  langs:
  - csharp
  - vb
  name: DeleteAsync_WithValidId_DeletesProduct()
  nameWithType: ProductRepositoryTests.DeleteAsync_WithValidId_DeletesProduct()
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.DeleteAsync_WithValidId_DeletesProduct()
  type: Method
  source:
    remote:
      path: src/MyApp.Inventory/test/MyApp.Inventory.Infrastructure.Tests/Repositories/ProductRepositoryTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: DeleteAsync_WithValidId_DeletesProduct
    path: src/MyApp.Inventory/test/MyApp.Inventory.Infrastructure.Tests/Repositories/ProductRepositoryTests.cs
    startLine: 189
  assemblies:
  - MyApp.Inventory.Infrastructure.Tests
  namespace: MyApp.Inventory.Tests.Repositories
  syntax:
    content: >-
      [Fact]

      public Task DeleteAsync_WithValidId_DeletesProduct()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function DeleteAsync_WithValidId_DeletesProduct() As Task
  overload: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.DeleteAsync_WithValidId_DeletesProduct*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetAllAsync_ReturnsAllProducts
  commentId: M:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetAllAsync_ReturnsAllProducts
  id: GetAllAsync_ReturnsAllProducts
  parent: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests
  langs:
  - csharp
  - vb
  name: GetAllAsync_ReturnsAllProducts()
  nameWithType: ProductRepositoryTests.GetAllAsync_ReturnsAllProducts()
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetAllAsync_ReturnsAllProducts()
  type: Method
  source:
    remote:
      path: src/MyApp.Inventory/test/MyApp.Inventory.Infrastructure.Tests/Repositories/ProductRepositoryTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: GetAllAsync_ReturnsAllProducts
    path: src/MyApp.Inventory/test/MyApp.Inventory.Infrastructure.Tests/Repositories/ProductRepositoryTests.cs
    startLine: 207
  assemblies:
  - MyApp.Inventory.Infrastructure.Tests
  namespace: MyApp.Inventory.Tests.Repositories
  syntax:
    content: >-
      [Fact]

      public Task GetAllAsync_ReturnsAllProducts()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function GetAllAsync_ReturnsAllProducts() As Task
  overload: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetAllAsync_ReturnsAllProducts*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
references:
- uid: MyApp.Inventory.Tests.Repositories
  commentId: N:MyApp.Inventory.Tests.Repositories
  href: MyApp.html
  name: MyApp.Inventory.Tests.Repositories
  nameWithType: MyApp.Inventory.Tests.Repositories
  fullName: MyApp.Inventory.Tests.Repositories
  spec.csharp:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Inventory
    name: Inventory
    href: MyApp.Inventory.html
  - name: .
  - uid: MyApp.Inventory.Tests
    name: Tests
    href: MyApp.Inventory.Tests.html
  - name: .
  - uid: MyApp.Inventory.Tests.Repositories
    name: Repositories
    href: MyApp.Inventory.Tests.Repositories.html
  spec.vb:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Inventory
    name: Inventory
    href: MyApp.Inventory.html
  - name: .
  - uid: MyApp.Inventory.Tests
    name: Tests
    href: MyApp.Inventory.Tests.html
  - name: .
  - uid: MyApp.Inventory.Tests.Repositories
    name: Repositories
    href: MyApp.Inventory.Tests.Repositories.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.#ctor*
  commentId: Overload:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.#ctor
  href: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.html#MyApp_Inventory_Tests_Repositories_ProductRepositoryTests__ctor
  name: ProductRepositoryTests
  nameWithType: ProductRepositoryTests.ProductRepositoryTests
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.ProductRepositoryTests
  nameWithType.vb: ProductRepositoryTests.New
  fullName.vb: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.New
  name.vb: New
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetByIdAsync_WithValidId_ReturnsProduct*
  commentId: Overload:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetByIdAsync_WithValidId_ReturnsProduct
  href: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.html#MyApp_Inventory_Tests_Repositories_ProductRepositoryTests_GetByIdAsync_WithValidId_ReturnsProduct
  name: GetByIdAsync_WithValidId_ReturnsProduct
  nameWithType: ProductRepositoryTests.GetByIdAsync_WithValidId_ReturnsProduct
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetByIdAsync_WithValidId_ReturnsProduct
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull*
  commentId: Overload:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull
  href: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.html#MyApp_Inventory_Tests_Repositories_ProductRepositoryTests_GetByIdAsync_WithNonExistentId_ReturnsNull
  name: GetByIdAsync_WithNonExistentId_ReturnsNull
  nameWithType: ProductRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetBySkuAsync_WithValidSku_ReturnsProduct*
  commentId: Overload:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetBySkuAsync_WithValidSku_ReturnsProduct
  href: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.html#MyApp_Inventory_Tests_Repositories_ProductRepositoryTests_GetBySkuAsync_WithValidSku_ReturnsProduct
  name: GetBySkuAsync_WithValidSku_ReturnsProduct
  nameWithType: ProductRepositoryTests.GetBySkuAsync_WithValidSku_ReturnsProduct
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetBySkuAsync_WithValidSku_ReturnsProduct
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetBySkuAsync_WithNonExistentSku_ReturnsNull*
  commentId: Overload:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetBySkuAsync_WithNonExistentSku_ReturnsNull
  href: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.html#MyApp_Inventory_Tests_Repositories_ProductRepositoryTests_GetBySkuAsync_WithNonExistentSku_ReturnsNull
  name: GetBySkuAsync_WithNonExistentSku_ReturnsNull
  nameWithType: ProductRepositoryTests.GetBySkuAsync_WithNonExistentSku_ReturnsNull
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetBySkuAsync_WithNonExistentSku_ReturnsNull
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetLowStockProductsAsync_ReturnsProductsBelowReorderLevel*
  commentId: Overload:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetLowStockProductsAsync_ReturnsProductsBelowReorderLevel
  href: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.html#MyApp_Inventory_Tests_Repositories_ProductRepositoryTests_GetLowStockProductsAsync_ReturnsProductsBelowReorderLevel
  name: GetLowStockProductsAsync_ReturnsProductsBelowReorderLevel
  nameWithType: ProductRepositoryTests.GetLowStockProductsAsync_ReturnsProductsBelowReorderLevel
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetLowStockProductsAsync_ReturnsProductsBelowReorderLevel
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetLowStockProductsAsync_ReturnsEmpty_WhenNoLowStockProducts*
  commentId: Overload:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetLowStockProductsAsync_ReturnsEmpty_WhenNoLowStockProducts
  href: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.html#MyApp_Inventory_Tests_Repositories_ProductRepositoryTests_GetLowStockProductsAsync_ReturnsEmpty_WhenNoLowStockProducts
  name: GetLowStockProductsAsync_ReturnsEmpty_WhenNoLowStockProducts
  nameWithType: ProductRepositoryTests.GetLowStockProductsAsync_ReturnsEmpty_WhenNoLowStockProducts
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetLowStockProductsAsync_ReturnsEmpty_WhenNoLowStockProducts
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.AddAsync_WithValidProduct_CreatesProduct*
  commentId: Overload:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.AddAsync_WithValidProduct_CreatesProduct
  href: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.html#MyApp_Inventory_Tests_Repositories_ProductRepositoryTests_AddAsync_WithValidProduct_CreatesProduct
  name: AddAsync_WithValidProduct_CreatesProduct
  nameWithType: ProductRepositoryTests.AddAsync_WithValidProduct_CreatesProduct
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.AddAsync_WithValidProduct_CreatesProduct
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.UpdateAsync_WithExistingProduct_UpdatesProductData*
  commentId: Overload:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.UpdateAsync_WithExistingProduct_UpdatesProductData
  href: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.html#MyApp_Inventory_Tests_Repositories_ProductRepositoryTests_UpdateAsync_WithExistingProduct_UpdatesProductData
  name: UpdateAsync_WithExistingProduct_UpdatesProductData
  nameWithType: ProductRepositoryTests.UpdateAsync_WithExistingProduct_UpdatesProductData
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.UpdateAsync_WithExistingProduct_UpdatesProductData
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.DeleteAsync_WithValidId_DeletesProduct*
  commentId: Overload:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.DeleteAsync_WithValidId_DeletesProduct
  href: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.html#MyApp_Inventory_Tests_Repositories_ProductRepositoryTests_DeleteAsync_WithValidId_DeletesProduct
  name: DeleteAsync_WithValidId_DeletesProduct
  nameWithType: ProductRepositoryTests.DeleteAsync_WithValidId_DeletesProduct
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.DeleteAsync_WithValidId_DeletesProduct
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetAllAsync_ReturnsAllProducts*
  commentId: Overload:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetAllAsync_ReturnsAllProducts
  href: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.html#MyApp_Inventory_Tests_Repositories_ProductRepositoryTests_GetAllAsync_ReturnsAllProducts
  name: GetAllAsync_ReturnsAllProducts
  nameWithType: ProductRepositoryTests.GetAllAsync_ReturnsAllProducts
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetAllAsync_ReturnsAllProducts
