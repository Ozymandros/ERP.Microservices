### YamlMime:ManagedReference
items:
- uid: MyApp.Orders.Infrastructure.Repositories.OrderRepository
  commentId: T:MyApp.Orders.Infrastructure.Repositories.OrderRepository
  id: OrderRepository
  parent: MyApp.Orders.Infrastructure.Repositories
  children:
  - MyApp.Orders.Infrastructure.Repositories.OrderRepository.#ctor(MyApp.Orders.Infrastructure.Data.OrdersDbContext)
  - MyApp.Orders.Infrastructure.Repositories.OrderRepository.AddAsync(MyApp.Orders.Domain.Entities.Order)
  - MyApp.Orders.Infrastructure.Repositories.OrderRepository.DeleteAsync(System.Guid)
  - MyApp.Orders.Infrastructure.Repositories.OrderRepository.GetByIdAsync(System.Guid)
  - MyApp.Orders.Infrastructure.Repositories.OrderRepository.ListAsync
  - MyApp.Orders.Infrastructure.Repositories.OrderRepository.UpdateAsync(MyApp.Orders.Domain.Entities.Order)
  langs:
  - csharp
  - vb
  name: OrderRepository
  nameWithType: OrderRepository
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderRepository
  type: Class
  source:
    remote:
      path: src/MyApp.Orders/MyApp.Orders.Infrastructure/Repositories/OrderRepository.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: OrderRepository
    path: src/MyApp.Orders/MyApp.Orders.Infrastructure/Repositories/OrderRepository.cs
    startLine: 11
  assemblies:
  - MyApp.Orders.Infrastructure
  namespace: MyApp.Orders.Infrastructure.Repositories
  syntax:
    content: 'public class OrderRepository : IOrderRepository, IRepository<Order, Guid>'
    content.vb: Public Class OrderRepository Implements IOrderRepository, IRepository(Of Order, Guid)
  inheritance:
  - System.Object
  implements:
  - MyApp.Orders.Domain.IOrderRepository
  - MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.Order,System.Guid}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: MyApp.Orders.Infrastructure.Repositories.OrderRepository.#ctor(MyApp.Orders.Infrastructure.Data.OrdersDbContext)
  commentId: M:MyApp.Orders.Infrastructure.Repositories.OrderRepository.#ctor(MyApp.Orders.Infrastructure.Data.OrdersDbContext)
  id: '#ctor(MyApp.Orders.Infrastructure.Data.OrdersDbContext)'
  parent: MyApp.Orders.Infrastructure.Repositories.OrderRepository
  langs:
  - csharp
  - vb
  name: OrderRepository(OrdersDbContext)
  nameWithType: OrderRepository.OrderRepository(OrdersDbContext)
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderRepository.OrderRepository(MyApp.Orders.Infrastructure.Data.OrdersDbContext)
  type: Constructor
  source:
    remote:
      path: src/MyApp.Orders/MyApp.Orders.Infrastructure/Repositories/OrderRepository.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: .ctor
    path: src/MyApp.Orders/MyApp.Orders.Infrastructure/Repositories/OrderRepository.cs
    startLine: 15
  assemblies:
  - MyApp.Orders.Infrastructure
  namespace: MyApp.Orders.Infrastructure.Repositories
  syntax:
    content: public OrderRepository(OrdersDbContext db)
    parameters:
    - id: db
      type: MyApp.Orders.Infrastructure.Data.OrdersDbContext
    content.vb: Public Sub New(db As OrdersDbContext)
  overload: MyApp.Orders.Infrastructure.Repositories.OrderRepository.#ctor*
  nameWithType.vb: OrderRepository.New(OrdersDbContext)
  fullName.vb: MyApp.Orders.Infrastructure.Repositories.OrderRepository.New(MyApp.Orders.Infrastructure.Data.OrdersDbContext)
  name.vb: New(OrdersDbContext)
- uid: MyApp.Orders.Infrastructure.Repositories.OrderRepository.AddAsync(MyApp.Orders.Domain.Entities.Order)
  commentId: M:MyApp.Orders.Infrastructure.Repositories.OrderRepository.AddAsync(MyApp.Orders.Domain.Entities.Order)
  id: AddAsync(MyApp.Orders.Domain.Entities.Order)
  parent: MyApp.Orders.Infrastructure.Repositories.OrderRepository
  langs:
  - csharp
  - vb
  name: AddAsync(Order)
  nameWithType: OrderRepository.AddAsync(Order)
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderRepository.AddAsync(MyApp.Orders.Domain.Entities.Order)
  type: Method
  source:
    remote:
      path: src/MyApp.Orders/MyApp.Orders.Infrastructure/Repositories/OrderRepository.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: AddAsync
    path: src/MyApp.Orders/MyApp.Orders.Infrastructure/Repositories/OrderRepository.cs
    startLine: 20
  assemblies:
  - MyApp.Orders.Infrastructure
  namespace: MyApp.Orders.Infrastructure.Repositories
  example: []
  syntax:
    content: public Task AddAsync(Order entity)
    parameters:
    - id: entity
      type: MyApp.Orders.Domain.Entities.Order
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function AddAsync(entity As Order) As Task
  overload: MyApp.Orders.Infrastructure.Repositories.OrderRepository.AddAsync*
  implements:
  - MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.Order,System.Guid}.AddAsync(MyApp.Orders.Domain.Entities.Order)
- uid: MyApp.Orders.Infrastructure.Repositories.OrderRepository.DeleteAsync(System.Guid)
  commentId: M:MyApp.Orders.Infrastructure.Repositories.OrderRepository.DeleteAsync(System.Guid)
  id: DeleteAsync(System.Guid)
  parent: MyApp.Orders.Infrastructure.Repositories.OrderRepository
  langs:
  - csharp
  - vb
  name: DeleteAsync(Guid)
  nameWithType: OrderRepository.DeleteAsync(Guid)
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderRepository.DeleteAsync(System.Guid)
  type: Method
  source:
    remote:
      path: src/MyApp.Orders/MyApp.Orders.Infrastructure/Repositories/OrderRepository.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: DeleteAsync
    path: src/MyApp.Orders/MyApp.Orders.Infrastructure/Repositories/OrderRepository.cs
    startLine: 26
  assemblies:
  - MyApp.Orders.Infrastructure
  namespace: MyApp.Orders.Infrastructure.Repositories
  example: []
  syntax:
    content: public Task DeleteAsync(Guid id)
    parameters:
    - id: id
      type: System.Guid
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeleteAsync(id As Guid) As Task
  overload: MyApp.Orders.Infrastructure.Repositories.OrderRepository.DeleteAsync*
  implements:
  - MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.Order,System.Guid}.DeleteAsync(System.Guid)
- uid: MyApp.Orders.Infrastructure.Repositories.OrderRepository.GetByIdAsync(System.Guid)
  commentId: M:MyApp.Orders.Infrastructure.Repositories.OrderRepository.GetByIdAsync(System.Guid)
  id: GetByIdAsync(System.Guid)
  parent: MyApp.Orders.Infrastructure.Repositories.OrderRepository
  langs:
  - csharp
  - vb
  name: GetByIdAsync(Guid)
  nameWithType: OrderRepository.GetByIdAsync(Guid)
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderRepository.GetByIdAsync(System.Guid)
  type: Method
  source:
    remote:
      path: src/MyApp.Orders/MyApp.Orders.Infrastructure/Repositories/OrderRepository.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: GetByIdAsync
    path: src/MyApp.Orders/MyApp.Orders.Infrastructure/Repositories/OrderRepository.cs
    startLine: 36
  assemblies:
  - MyApp.Orders.Infrastructure
  namespace: MyApp.Orders.Infrastructure.Repositories
  example: []
  syntax:
    content: public Task<Order?> GetByIdAsync(Guid id)
    parameters:
    - id: id
      type: System.Guid
    return:
      type: System.Threading.Tasks.Task{MyApp.Orders.Domain.Entities.Order}
    content.vb: Public Function GetByIdAsync(id As Guid) As Task(Of Order)
  overload: MyApp.Orders.Infrastructure.Repositories.OrderRepository.GetByIdAsync*
  implements:
  - MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.Order,System.Guid}.GetByIdAsync(System.Guid)
- uid: MyApp.Orders.Infrastructure.Repositories.OrderRepository.ListAsync
  commentId: M:MyApp.Orders.Infrastructure.Repositories.OrderRepository.ListAsync
  id: ListAsync
  parent: MyApp.Orders.Infrastructure.Repositories.OrderRepository
  langs:
  - csharp
  - vb
  name: ListAsync()
  nameWithType: OrderRepository.ListAsync()
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderRepository.ListAsync()
  type: Method
  source:
    remote:
      path: src/MyApp.Orders/MyApp.Orders.Infrastructure/Repositories/OrderRepository.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: ListAsync
    path: src/MyApp.Orders/MyApp.Orders.Infrastructure/Repositories/OrderRepository.cs
    startLine: 41
  assemblies:
  - MyApp.Orders.Infrastructure
  namespace: MyApp.Orders.Infrastructure.Repositories
  example: []
  syntax:
    content: public Task<IEnumerable<Order>> ListAsync()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{MyApp.Orders.Domain.Entities.Order}}
    content.vb: Public Function ListAsync() As Task(Of IEnumerable(Of Order))
  overload: MyApp.Orders.Infrastructure.Repositories.OrderRepository.ListAsync*
  implements:
  - MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.Order,System.Guid}.ListAsync
- uid: MyApp.Orders.Infrastructure.Repositories.OrderRepository.UpdateAsync(MyApp.Orders.Domain.Entities.Order)
  commentId: M:MyApp.Orders.Infrastructure.Repositories.OrderRepository.UpdateAsync(MyApp.Orders.Domain.Entities.Order)
  id: UpdateAsync(MyApp.Orders.Domain.Entities.Order)
  parent: MyApp.Orders.Infrastructure.Repositories.OrderRepository
  langs:
  - csharp
  - vb
  name: UpdateAsync(Order)
  nameWithType: OrderRepository.UpdateAsync(Order)
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderRepository.UpdateAsync(MyApp.Orders.Domain.Entities.Order)
  type: Method
  source:
    remote:
      path: src/MyApp.Orders/MyApp.Orders.Infrastructure/Repositories/OrderRepository.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: UpdateAsync
    path: src/MyApp.Orders/MyApp.Orders.Infrastructure/Repositories/OrderRepository.cs
    startLine: 46
  assemblies:
  - MyApp.Orders.Infrastructure
  namespace: MyApp.Orders.Infrastructure.Repositories
  example: []
  syntax:
    content: public Task UpdateAsync(Order entity)
    parameters:
    - id: entity
      type: MyApp.Orders.Domain.Entities.Order
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function UpdateAsync(entity As Order) As Task
  overload: MyApp.Orders.Infrastructure.Repositories.OrderRepository.UpdateAsync*
  implements:
  - MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.Order,System.Guid}.UpdateAsync(MyApp.Orders.Domain.Entities.Order)
references:
- uid: MyApp.Orders.Infrastructure.Repositories
  commentId: N:MyApp.Orders.Infrastructure.Repositories
  href: MyApp.html
  name: MyApp.Orders.Infrastructure.Repositories
  nameWithType: MyApp.Orders.Infrastructure.Repositories
  fullName: MyApp.Orders.Infrastructure.Repositories
  spec.csharp:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Orders
    name: Orders
    href: MyApp.Orders.html
  - name: .
  - uid: MyApp.Orders.Infrastructure
    name: Infrastructure
    href: MyApp.Orders.Infrastructure.html
  - name: .
  - uid: MyApp.Orders.Infrastructure.Repositories
    name: Repositories
    href: MyApp.Orders.Infrastructure.Repositories.html
  spec.vb:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Orders
    name: Orders
    href: MyApp.Orders.html
  - name: .
  - uid: MyApp.Orders.Infrastructure
    name: Infrastructure
    href: MyApp.Orders.Infrastructure.html
  - name: .
  - uid: MyApp.Orders.Infrastructure.Repositories
    name: Repositories
    href: MyApp.Orders.Infrastructure.Repositories.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MyApp.Orders.Domain.IOrderRepository
  commentId: T:MyApp.Orders.Domain.IOrderRepository
  parent: MyApp.Orders.Domain
  href: MyApp.Orders.Domain.IOrderRepository.html
  name: IOrderRepository
  nameWithType: IOrderRepository
  fullName: MyApp.Orders.Domain.IOrderRepository
- uid: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.Order,System.Guid}
  commentId: T:MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.Order,System.Guid}
  parent: MyApp.Orders.Domain
  definition: MyApp.Orders.Domain.IRepository`2
  href: MyApp.Orders.Domain.IRepository-2.html
  name: IRepository<Order, Guid>
  nameWithType: IRepository<Order, Guid>
  fullName: MyApp.Orders.Domain.IRepository<MyApp.Orders.Domain.Entities.Order, System.Guid>
  nameWithType.vb: IRepository(Of Order, Guid)
  fullName.vb: MyApp.Orders.Domain.IRepository(Of MyApp.Orders.Domain.Entities.Order, System.Guid)
  name.vb: IRepository(Of Order, Guid)
  spec.csharp:
  - uid: MyApp.Orders.Domain.IRepository`2
    name: IRepository
    href: MyApp.Orders.Domain.IRepository-2.html
  - name: <
  - uid: MyApp.Orders.Domain.Entities.Order
    name: Order
    href: MyApp.Orders.Domain.Entities.Order.html
  - name: ','
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: '>'
  spec.vb:
  - uid: MyApp.Orders.Domain.IRepository`2
    name: IRepository
    href: MyApp.Orders.Domain.IRepository-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: MyApp.Orders.Domain.Entities.Order
    name: Order
    href: MyApp.Orders.Domain.Entities.Order.html
  - name: ','
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MyApp.Orders.Domain
  commentId: N:MyApp.Orders.Domain
  href: MyApp.html
  name: MyApp.Orders.Domain
  nameWithType: MyApp.Orders.Domain
  fullName: MyApp.Orders.Domain
  spec.csharp:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Orders
    name: Orders
    href: MyApp.Orders.html
  - name: .
  - uid: MyApp.Orders.Domain
    name: Domain
    href: MyApp.Orders.Domain.html
  spec.vb:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Orders
    name: Orders
    href: MyApp.Orders.html
  - name: .
  - uid: MyApp.Orders.Domain
    name: Domain
    href: MyApp.Orders.Domain.html
- uid: MyApp.Orders.Domain.IRepository`2
  commentId: T:MyApp.Orders.Domain.IRepository`2
  href: MyApp.Orders.Domain.IRepository-2.html
  name: IRepository<TEntity, TKey>
  nameWithType: IRepository<TEntity, TKey>
  fullName: MyApp.Orders.Domain.IRepository<TEntity, TKey>
  nameWithType.vb: IRepository(Of TEntity, TKey)
  fullName.vb: MyApp.Orders.Domain.IRepository(Of TEntity, TKey)
  name.vb: IRepository(Of TEntity, TKey)
  spec.csharp:
  - uid: MyApp.Orders.Domain.IRepository`2
    name: IRepository
    href: MyApp.Orders.Domain.IRepository-2.html
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  spec.vb:
  - uid: MyApp.Orders.Domain.IRepository`2
    name: IRepository
    href: MyApp.Orders.Domain.IRepository-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TKey
  - name: )
- uid: MyApp.Orders.Infrastructure.Repositories.OrderRepository.#ctor*
  commentId: Overload:MyApp.Orders.Infrastructure.Repositories.OrderRepository.#ctor
  href: MyApp.Orders.Infrastructure.Repositories.OrderRepository.html#MyApp_Orders_Infrastructure_Repositories_OrderRepository__ctor_MyApp_Orders_Infrastructure_Data_OrdersDbContext_
  name: OrderRepository
  nameWithType: OrderRepository.OrderRepository
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderRepository.OrderRepository
  nameWithType.vb: OrderRepository.New
  fullName.vb: MyApp.Orders.Infrastructure.Repositories.OrderRepository.New
  name.vb: New
- uid: MyApp.Orders.Infrastructure.Data.OrdersDbContext
  commentId: T:MyApp.Orders.Infrastructure.Data.OrdersDbContext
  parent: MyApp.Orders.Infrastructure.Data
  href: MyApp.Orders.Infrastructure.Data.OrdersDbContext.html
  name: OrdersDbContext
  nameWithType: OrdersDbContext
  fullName: MyApp.Orders.Infrastructure.Data.OrdersDbContext
- uid: MyApp.Orders.Infrastructure.Data
  commentId: N:MyApp.Orders.Infrastructure.Data
  href: MyApp.html
  name: MyApp.Orders.Infrastructure.Data
  nameWithType: MyApp.Orders.Infrastructure.Data
  fullName: MyApp.Orders.Infrastructure.Data
  spec.csharp:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Orders
    name: Orders
    href: MyApp.Orders.html
  - name: .
  - uid: MyApp.Orders.Infrastructure
    name: Infrastructure
    href: MyApp.Orders.Infrastructure.html
  - name: .
  - uid: MyApp.Orders.Infrastructure.Data
    name: Data
    href: MyApp.Orders.Infrastructure.Data.html
  spec.vb:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Orders
    name: Orders
    href: MyApp.Orders.html
  - name: .
  - uid: MyApp.Orders.Infrastructure
    name: Infrastructure
    href: MyApp.Orders.Infrastructure.html
  - name: .
  - uid: MyApp.Orders.Infrastructure.Data
    name: Data
    href: MyApp.Orders.Infrastructure.Data.html
- uid: MyApp.Orders.Infrastructure.Repositories.OrderRepository.AddAsync*
  commentId: Overload:MyApp.Orders.Infrastructure.Repositories.OrderRepository.AddAsync
  href: MyApp.Orders.Infrastructure.Repositories.OrderRepository.html#MyApp_Orders_Infrastructure_Repositories_OrderRepository_AddAsync_MyApp_Orders_Domain_Entities_Order_
  name: AddAsync
  nameWithType: OrderRepository.AddAsync
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderRepository.AddAsync
- uid: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.Order,System.Guid}.AddAsync(MyApp.Orders.Domain.Entities.Order)
  commentId: M:MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.Order,System.Guid}.AddAsync(MyApp.Orders.Domain.Entities.Order)
  parent: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.Order,System.Guid}
  definition: MyApp.Orders.Domain.IRepository`2.AddAsync(`0)
  href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_AddAsync__0_
  name: AddAsync(Order)
  nameWithType: IRepository<Order, Guid>.AddAsync(Order)
  fullName: MyApp.Orders.Domain.IRepository<MyApp.Orders.Domain.Entities.Order, System.Guid>.AddAsync(MyApp.Orders.Domain.Entities.Order)
  nameWithType.vb: IRepository(Of Order, Guid).AddAsync(Order)
  fullName.vb: MyApp.Orders.Domain.IRepository(Of MyApp.Orders.Domain.Entities.Order, System.Guid).AddAsync(MyApp.Orders.Domain.Entities.Order)
  spec.csharp:
  - uid: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.Order,System.Guid}.AddAsync(MyApp.Orders.Domain.Entities.Order)
    name: AddAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_AddAsync__0_
  - name: (
  - uid: MyApp.Orders.Domain.Entities.Order
    name: Order
    href: MyApp.Orders.Domain.Entities.Order.html
  - name: )
  spec.vb:
  - uid: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.Order,System.Guid}.AddAsync(MyApp.Orders.Domain.Entities.Order)
    name: AddAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_AddAsync__0_
  - name: (
  - uid: MyApp.Orders.Domain.Entities.Order
    name: Order
    href: MyApp.Orders.Domain.Entities.Order.html
  - name: )
- uid: MyApp.Orders.Domain.Entities.Order
  commentId: T:MyApp.Orders.Domain.Entities.Order
  parent: MyApp.Orders.Domain.Entities
  href: MyApp.Orders.Domain.Entities.Order.html
  name: Order
  nameWithType: Order
  fullName: MyApp.Orders.Domain.Entities.Order
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: MyApp.Orders.Domain.IRepository`2.AddAsync(`0)
  commentId: M:MyApp.Orders.Domain.IRepository`2.AddAsync(`0)
  href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_AddAsync__0_
  name: AddAsync(TEntity)
  nameWithType: IRepository<TEntity, TKey>.AddAsync(TEntity)
  fullName: MyApp.Orders.Domain.IRepository<TEntity, TKey>.AddAsync(TEntity)
  nameWithType.vb: IRepository(Of TEntity, TKey).AddAsync(TEntity)
  fullName.vb: MyApp.Orders.Domain.IRepository(Of TEntity, TKey).AddAsync(TEntity)
  spec.csharp:
  - uid: MyApp.Orders.Domain.IRepository`2.AddAsync(`0)
    name: AddAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_AddAsync__0_
  - name: (
  - name: TEntity
  - name: )
  spec.vb:
  - uid: MyApp.Orders.Domain.IRepository`2.AddAsync(`0)
    name: AddAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_AddAsync__0_
  - name: (
  - name: TEntity
  - name: )
- uid: MyApp.Orders.Domain.Entities
  commentId: N:MyApp.Orders.Domain.Entities
  href: MyApp.html
  name: MyApp.Orders.Domain.Entities
  nameWithType: MyApp.Orders.Domain.Entities
  fullName: MyApp.Orders.Domain.Entities
  spec.csharp:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Orders
    name: Orders
    href: MyApp.Orders.html
  - name: .
  - uid: MyApp.Orders.Domain
    name: Domain
    href: MyApp.Orders.Domain.html
  - name: .
  - uid: MyApp.Orders.Domain.Entities
    name: Entities
    href: MyApp.Orders.Domain.Entities.html
  spec.vb:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Orders
    name: Orders
    href: MyApp.Orders.html
  - name: .
  - uid: MyApp.Orders.Domain
    name: Domain
    href: MyApp.Orders.Domain.html
  - name: .
  - uid: MyApp.Orders.Domain.Entities
    name: Entities
    href: MyApp.Orders.Domain.Entities.html
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: MyApp.Orders.Infrastructure.Repositories.OrderRepository.DeleteAsync*
  commentId: Overload:MyApp.Orders.Infrastructure.Repositories.OrderRepository.DeleteAsync
  href: MyApp.Orders.Infrastructure.Repositories.OrderRepository.html#MyApp_Orders_Infrastructure_Repositories_OrderRepository_DeleteAsync_System_Guid_
  name: DeleteAsync
  nameWithType: OrderRepository.DeleteAsync
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderRepository.DeleteAsync
- uid: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.Order,System.Guid}.DeleteAsync(System.Guid)
  commentId: M:MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.Order,System.Guid}.DeleteAsync(System.Guid)
  parent: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.Order,System.Guid}
  definition: MyApp.Orders.Domain.IRepository`2.DeleteAsync(`1)
  href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_DeleteAsync__1_
  name: DeleteAsync(Guid)
  nameWithType: IRepository<Order, Guid>.DeleteAsync(Guid)
  fullName: MyApp.Orders.Domain.IRepository<MyApp.Orders.Domain.Entities.Order, System.Guid>.DeleteAsync(System.Guid)
  nameWithType.vb: IRepository(Of Order, Guid).DeleteAsync(Guid)
  fullName.vb: MyApp.Orders.Domain.IRepository(Of MyApp.Orders.Domain.Entities.Order, System.Guid).DeleteAsync(System.Guid)
  spec.csharp:
  - uid: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.Order,System.Guid}.DeleteAsync(System.Guid)
    name: DeleteAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_DeleteAsync__1_
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
  spec.vb:
  - uid: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.Order,System.Guid}.DeleteAsync(System.Guid)
    name: DeleteAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_DeleteAsync__1_
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: MyApp.Orders.Domain.IRepository`2.DeleteAsync(`1)
  commentId: M:MyApp.Orders.Domain.IRepository`2.DeleteAsync(`1)
  href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_DeleteAsync__1_
  name: DeleteAsync(TKey)
  nameWithType: IRepository<TEntity, TKey>.DeleteAsync(TKey)
  fullName: MyApp.Orders.Domain.IRepository<TEntity, TKey>.DeleteAsync(TKey)
  nameWithType.vb: IRepository(Of TEntity, TKey).DeleteAsync(TKey)
  fullName.vb: MyApp.Orders.Domain.IRepository(Of TEntity, TKey).DeleteAsync(TKey)
  spec.csharp:
  - uid: MyApp.Orders.Domain.IRepository`2.DeleteAsync(`1)
    name: DeleteAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_DeleteAsync__1_
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: MyApp.Orders.Domain.IRepository`2.DeleteAsync(`1)
    name: DeleteAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_DeleteAsync__1_
  - name: (
  - name: TKey
  - name: )
- uid: MyApp.Orders.Infrastructure.Repositories.OrderRepository.GetByIdAsync*
  commentId: Overload:MyApp.Orders.Infrastructure.Repositories.OrderRepository.GetByIdAsync
  href: MyApp.Orders.Infrastructure.Repositories.OrderRepository.html#MyApp_Orders_Infrastructure_Repositories_OrderRepository_GetByIdAsync_System_Guid_
  name: GetByIdAsync
  nameWithType: OrderRepository.GetByIdAsync
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderRepository.GetByIdAsync
- uid: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.Order,System.Guid}.GetByIdAsync(System.Guid)
  commentId: M:MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.Order,System.Guid}.GetByIdAsync(System.Guid)
  parent: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.Order,System.Guid}
  definition: MyApp.Orders.Domain.IRepository`2.GetByIdAsync(`1)
  href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_GetByIdAsync__1_
  name: GetByIdAsync(Guid)
  nameWithType: IRepository<Order, Guid>.GetByIdAsync(Guid)
  fullName: MyApp.Orders.Domain.IRepository<MyApp.Orders.Domain.Entities.Order, System.Guid>.GetByIdAsync(System.Guid)
  nameWithType.vb: IRepository(Of Order, Guid).GetByIdAsync(Guid)
  fullName.vb: MyApp.Orders.Domain.IRepository(Of MyApp.Orders.Domain.Entities.Order, System.Guid).GetByIdAsync(System.Guid)
  spec.csharp:
  - uid: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.Order,System.Guid}.GetByIdAsync(System.Guid)
    name: GetByIdAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_GetByIdAsync__1_
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
  spec.vb:
  - uid: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.Order,System.Guid}.GetByIdAsync(System.Guid)
    name: GetByIdAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_GetByIdAsync__1_
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
- uid: System.Threading.Tasks.Task{MyApp.Orders.Domain.Entities.Order}
  commentId: T:System.Threading.Tasks.Task{MyApp.Orders.Domain.Entities.Order}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Order>
  nameWithType: Task<Order>
  fullName: System.Threading.Tasks.Task<MyApp.Orders.Domain.Entities.Order>
  nameWithType.vb: Task(Of Order)
  fullName.vb: System.Threading.Tasks.Task(Of MyApp.Orders.Domain.Entities.Order)
  name.vb: Task(Of Order)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: MyApp.Orders.Domain.Entities.Order
    name: Order
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: MyApp.Orders.Domain.Entities.Order
    name: Order
  - name: )
- uid: MyApp.Orders.Domain.IRepository`2.GetByIdAsync(`1)
  commentId: M:MyApp.Orders.Domain.IRepository`2.GetByIdAsync(`1)
  href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_GetByIdAsync__1_
  name: GetByIdAsync(TKey)
  nameWithType: IRepository<TEntity, TKey>.GetByIdAsync(TKey)
  fullName: MyApp.Orders.Domain.IRepository<TEntity, TKey>.GetByIdAsync(TKey)
  nameWithType.vb: IRepository(Of TEntity, TKey).GetByIdAsync(TKey)
  fullName.vb: MyApp.Orders.Domain.IRepository(Of TEntity, TKey).GetByIdAsync(TKey)
  spec.csharp:
  - uid: MyApp.Orders.Domain.IRepository`2.GetByIdAsync(`1)
    name: GetByIdAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_GetByIdAsync__1_
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: MyApp.Orders.Domain.IRepository`2.GetByIdAsync(`1)
    name: GetByIdAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_GetByIdAsync__1_
  - name: (
  - name: TKey
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: MyApp.Orders.Infrastructure.Repositories.OrderRepository.ListAsync*
  commentId: Overload:MyApp.Orders.Infrastructure.Repositories.OrderRepository.ListAsync
  href: MyApp.Orders.Infrastructure.Repositories.OrderRepository.html#MyApp_Orders_Infrastructure_Repositories_OrderRepository_ListAsync
  name: ListAsync
  nameWithType: OrderRepository.ListAsync
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderRepository.ListAsync
- uid: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.Order,System.Guid}.ListAsync
  commentId: M:MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.Order,System.Guid}.ListAsync
  parent: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.Order,System.Guid}
  definition: MyApp.Orders.Domain.IRepository`2.ListAsync
  href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_ListAsync
  name: ListAsync()
  nameWithType: IRepository<Order, Guid>.ListAsync()
  fullName: MyApp.Orders.Domain.IRepository<MyApp.Orders.Domain.Entities.Order, System.Guid>.ListAsync()
  nameWithType.vb: IRepository(Of Order, Guid).ListAsync()
  fullName.vb: MyApp.Orders.Domain.IRepository(Of MyApp.Orders.Domain.Entities.Order, System.Guid).ListAsync()
  spec.csharp:
  - uid: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.Order,System.Guid}.ListAsync
    name: ListAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_ListAsync
  - name: (
  - name: )
  spec.vb:
  - uid: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.Order,System.Guid}.ListAsync
    name: ListAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_ListAsync
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{MyApp.Orders.Domain.Entities.Order}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{MyApp.Orders.Domain.Entities.Order}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IEnumerable<Order>>
  nameWithType: Task<IEnumerable<Order>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<MyApp.Orders.Domain.Entities.Order>>
  nameWithType.vb: Task(Of IEnumerable(Of Order))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of MyApp.Orders.Domain.Entities.Order))
  name.vb: Task(Of IEnumerable(Of Order))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: MyApp.Orders.Domain.Entities.Order
    name: Order
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: MyApp.Orders.Domain.Entities.Order
    name: Order
  - name: )
  - name: )
- uid: MyApp.Orders.Domain.IRepository`2.ListAsync
  commentId: M:MyApp.Orders.Domain.IRepository`2.ListAsync
  href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_ListAsync
  name: ListAsync()
  nameWithType: IRepository<TEntity, TKey>.ListAsync()
  fullName: MyApp.Orders.Domain.IRepository<TEntity, TKey>.ListAsync()
  nameWithType.vb: IRepository(Of TEntity, TKey).ListAsync()
  fullName.vb: MyApp.Orders.Domain.IRepository(Of TEntity, TKey).ListAsync()
  spec.csharp:
  - uid: MyApp.Orders.Domain.IRepository`2.ListAsync
    name: ListAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_ListAsync
  - name: (
  - name: )
  spec.vb:
  - uid: MyApp.Orders.Domain.IRepository`2.ListAsync
    name: ListAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_ListAsync
  - name: (
  - name: )
- uid: MyApp.Orders.Infrastructure.Repositories.OrderRepository.UpdateAsync*
  commentId: Overload:MyApp.Orders.Infrastructure.Repositories.OrderRepository.UpdateAsync
  href: MyApp.Orders.Infrastructure.Repositories.OrderRepository.html#MyApp_Orders_Infrastructure_Repositories_OrderRepository_UpdateAsync_MyApp_Orders_Domain_Entities_Order_
  name: UpdateAsync
  nameWithType: OrderRepository.UpdateAsync
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderRepository.UpdateAsync
- uid: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.Order,System.Guid}.UpdateAsync(MyApp.Orders.Domain.Entities.Order)
  commentId: M:MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.Order,System.Guid}.UpdateAsync(MyApp.Orders.Domain.Entities.Order)
  parent: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.Order,System.Guid}
  definition: MyApp.Orders.Domain.IRepository`2.UpdateAsync(`0)
  href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_UpdateAsync__0_
  name: UpdateAsync(Order)
  nameWithType: IRepository<Order, Guid>.UpdateAsync(Order)
  fullName: MyApp.Orders.Domain.IRepository<MyApp.Orders.Domain.Entities.Order, System.Guid>.UpdateAsync(MyApp.Orders.Domain.Entities.Order)
  nameWithType.vb: IRepository(Of Order, Guid).UpdateAsync(Order)
  fullName.vb: MyApp.Orders.Domain.IRepository(Of MyApp.Orders.Domain.Entities.Order, System.Guid).UpdateAsync(MyApp.Orders.Domain.Entities.Order)
  spec.csharp:
  - uid: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.Order,System.Guid}.UpdateAsync(MyApp.Orders.Domain.Entities.Order)
    name: UpdateAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_UpdateAsync__0_
  - name: (
  - uid: MyApp.Orders.Domain.Entities.Order
    name: Order
    href: MyApp.Orders.Domain.Entities.Order.html
  - name: )
  spec.vb:
  - uid: MyApp.Orders.Domain.IRepository{MyApp.Orders.Domain.Entities.Order,System.Guid}.UpdateAsync(MyApp.Orders.Domain.Entities.Order)
    name: UpdateAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_UpdateAsync__0_
  - name: (
  - uid: MyApp.Orders.Domain.Entities.Order
    name: Order
    href: MyApp.Orders.Domain.Entities.Order.html
  - name: )
- uid: MyApp.Orders.Domain.IRepository`2.UpdateAsync(`0)
  commentId: M:MyApp.Orders.Domain.IRepository`2.UpdateAsync(`0)
  href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_UpdateAsync__0_
  name: UpdateAsync(TEntity)
  nameWithType: IRepository<TEntity, TKey>.UpdateAsync(TEntity)
  fullName: MyApp.Orders.Domain.IRepository<TEntity, TKey>.UpdateAsync(TEntity)
  nameWithType.vb: IRepository(Of TEntity, TKey).UpdateAsync(TEntity)
  fullName.vb: MyApp.Orders.Domain.IRepository(Of TEntity, TKey).UpdateAsync(TEntity)
  spec.csharp:
  - uid: MyApp.Orders.Domain.IRepository`2.UpdateAsync(`0)
    name: UpdateAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_UpdateAsync__0_
  - name: (
  - name: TEntity
  - name: )
  spec.vb:
  - uid: MyApp.Orders.Domain.IRepository`2.UpdateAsync(`0)
    name: UpdateAsync
    href: MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_UpdateAsync__0_
  - name: (
  - name: TEntity
  - name: )
