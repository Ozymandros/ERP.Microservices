### YamlMime:ManagedReference
items:
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests
  commentId: T:MyApp.Orders.Application.Tests.Services.OrderServiceTests
  id: OrderServiceTests
  parent: MyApp.Orders.Application.Tests.Services
  children:
  - MyApp.Orders.Application.Tests.Services.OrderServiceTests.#ctor
  - MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_AssignsGuidsToOrderAndLines
  - MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_CalculatesTotalAmountFromLines
  - MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_SetsOrderStatusToDraft
  - MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_WithValidDto_CallsAddAsyncOnRepository
  - MyApp.Orders.Application.Tests.Services.OrderServiceTests.DeleteAsync_CallsRepositoryDeleteWithCorrectId
  - MyApp.Orders.Application.Tests.Services.OrderServiceTests.GetByIdAsync_WithExistingId_ReturnsOrderDto
  - MyApp.Orders.Application.Tests.Services.OrderServiceTests.ListAsync_ReturnsAllOrdersAsDtos
  - MyApp.Orders.Application.Tests.Services.OrderServiceTests.ListAsync_WithEmptyRepository_ReturnsEmptyList
  - MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_ReplacesAllLinesAndRecalculatesTotal
  - MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_WithExistingOrder_UpdatesSuccessfully
  - MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_WithNonExistentOrder_DoesNotCallUpdateAsync
  langs:
  - csharp
  - vb
  name: OrderServiceTests
  nameWithType: OrderServiceTests
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests
  type: Class
  source:
    remote:
      path: src/MyApp.Orders/test/MyApp.Orders.Application.Tests/Services/OrderServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: OrderServiceTests
    path: src/MyApp.Orders/test/MyApp.Orders.Application.Tests/Services/OrderServiceTests.cs
    startLine: 10
  assemblies:
  - MyApp.Orders.Application.Tests
  namespace: MyApp.Orders.Application.Tests.Services
  syntax:
    content: public class OrderServiceTests
    content.vb: Public Class OrderServiceTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.#ctor
  commentId: M:MyApp.Orders.Application.Tests.Services.OrderServiceTests.#ctor
  id: '#ctor'
  parent: MyApp.Orders.Application.Tests.Services.OrderServiceTests
  langs:
  - csharp
  - vb
  name: OrderServiceTests()
  nameWithType: OrderServiceTests.OrderServiceTests()
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.OrderServiceTests()
  type: Constructor
  source:
    remote:
      path: src/MyApp.Orders/test/MyApp.Orders.Application.Tests/Services/OrderServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: .ctor
    path: src/MyApp.Orders/test/MyApp.Orders.Application.Tests/Services/OrderServiceTests.cs
    startLine: 17
  assemblies:
  - MyApp.Orders.Application.Tests
  namespace: MyApp.Orders.Application.Tests.Services
  syntax:
    content: public OrderServiceTests()
    content.vb: Public Sub New()
  overload: MyApp.Orders.Application.Tests.Services.OrderServiceTests.#ctor*
  nameWithType.vb: OrderServiceTests.New()
  fullName.vb: MyApp.Orders.Application.Tests.Services.OrderServiceTests.New()
  name.vb: New()
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_WithValidDto_CallsAddAsyncOnRepository
  commentId: M:MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_WithValidDto_CallsAddAsyncOnRepository
  id: CreateAsync_WithValidDto_CallsAddAsyncOnRepository
  parent: MyApp.Orders.Application.Tests.Services.OrderServiceTests
  langs:
  - csharp
  - vb
  name: CreateAsync_WithValidDto_CallsAddAsyncOnRepository()
  nameWithType: OrderServiceTests.CreateAsync_WithValidDto_CallsAddAsyncOnRepository()
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_WithValidDto_CallsAddAsyncOnRepository()
  type: Method
  source:
    remote:
      path: src/MyApp.Orders/test/MyApp.Orders.Application.Tests/Services/OrderServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: CreateAsync_WithValidDto_CallsAddAsyncOnRepository
    path: src/MyApp.Orders/test/MyApp.Orders.Application.Tests/Services/OrderServiceTests.cs
    startLine: 31
  assemblies:
  - MyApp.Orders.Application.Tests
  namespace: MyApp.Orders.Application.Tests.Services
  syntax:
    content: >-
      [Fact]

      public Task CreateAsync_WithValidDto_CallsAddAsyncOnRepository()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function CreateAsync_WithValidDto_CallsAddAsyncOnRepository() As Task
  overload: MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_WithValidDto_CallsAddAsyncOnRepository*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_CalculatesTotalAmountFromLines
  commentId: M:MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_CalculatesTotalAmountFromLines
  id: CreateAsync_CalculatesTotalAmountFromLines
  parent: MyApp.Orders.Application.Tests.Services.OrderServiceTests
  langs:
  - csharp
  - vb
  name: CreateAsync_CalculatesTotalAmountFromLines()
  nameWithType: OrderServiceTests.CreateAsync_CalculatesTotalAmountFromLines()
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_CalculatesTotalAmountFromLines()
  type: Method
  source:
    remote:
      path: src/MyApp.Orders/test/MyApp.Orders.Application.Tests/Services/OrderServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: CreateAsync_CalculatesTotalAmountFromLines
    path: src/MyApp.Orders/test/MyApp.Orders.Application.Tests/Services/OrderServiceTests.cs
    startLine: 74
  assemblies:
  - MyApp.Orders.Application.Tests
  namespace: MyApp.Orders.Application.Tests.Services
  syntax:
    content: >-
      [Fact]

      public Task CreateAsync_CalculatesTotalAmountFromLines()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function CreateAsync_CalculatesTotalAmountFromLines() As Task
  overload: MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_CalculatesTotalAmountFromLines*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_SetsOrderStatusToDraft
  commentId: M:MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_SetsOrderStatusToDraft
  id: CreateAsync_SetsOrderStatusToDraft
  parent: MyApp.Orders.Application.Tests.Services.OrderServiceTests
  langs:
  - csharp
  - vb
  name: CreateAsync_SetsOrderStatusToDraft()
  nameWithType: OrderServiceTests.CreateAsync_SetsOrderStatusToDraft()
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_SetsOrderStatusToDraft()
  type: Method
  source:
    remote:
      path: src/MyApp.Orders/test/MyApp.Orders.Application.Tests/Services/OrderServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: CreateAsync_SetsOrderStatusToDraft
    path: src/MyApp.Orders/test/MyApp.Orders.Application.Tests/Services/OrderServiceTests.cs
    startLine: 113
  assemblies:
  - MyApp.Orders.Application.Tests
  namespace: MyApp.Orders.Application.Tests.Services
  syntax:
    content: >-
      [Fact]

      public Task CreateAsync_SetsOrderStatusToDraft()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function CreateAsync_SetsOrderStatusToDraft() As Task
  overload: MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_SetsOrderStatusToDraft*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_AssignsGuidsToOrderAndLines
  commentId: M:MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_AssignsGuidsToOrderAndLines
  id: CreateAsync_AssignsGuidsToOrderAndLines
  parent: MyApp.Orders.Application.Tests.Services.OrderServiceTests
  langs:
  - csharp
  - vb
  name: CreateAsync_AssignsGuidsToOrderAndLines()
  nameWithType: OrderServiceTests.CreateAsync_AssignsGuidsToOrderAndLines()
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_AssignsGuidsToOrderAndLines()
  type: Method
  source:
    remote:
      path: src/MyApp.Orders/test/MyApp.Orders.Application.Tests/Services/OrderServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: CreateAsync_AssignsGuidsToOrderAndLines
    path: src/MyApp.Orders/test/MyApp.Orders.Application.Tests/Services/OrderServiceTests.cs
    startLine: 149
  assemblies:
  - MyApp.Orders.Application.Tests
  namespace: MyApp.Orders.Application.Tests.Services
  syntax:
    content: >-
      [Fact]

      public Task CreateAsync_AssignsGuidsToOrderAndLines()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function CreateAsync_AssignsGuidsToOrderAndLines() As Task
  overload: MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_AssignsGuidsToOrderAndLines*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.GetByIdAsync_WithExistingId_ReturnsOrderDto
  commentId: M:MyApp.Orders.Application.Tests.Services.OrderServiceTests.GetByIdAsync_WithExistingId_ReturnsOrderDto
  id: GetByIdAsync_WithExistingId_ReturnsOrderDto
  parent: MyApp.Orders.Application.Tests.Services.OrderServiceTests
  langs:
  - csharp
  - vb
  name: GetByIdAsync_WithExistingId_ReturnsOrderDto()
  nameWithType: OrderServiceTests.GetByIdAsync_WithExistingId_ReturnsOrderDto()
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.GetByIdAsync_WithExistingId_ReturnsOrderDto()
  type: Method
  source:
    remote:
      path: src/MyApp.Orders/test/MyApp.Orders.Application.Tests/Services/OrderServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: GetByIdAsync_WithExistingId_ReturnsOrderDto
    path: src/MyApp.Orders/test/MyApp.Orders.Application.Tests/Services/OrderServiceTests.cs
    startLine: 192
  assemblies:
  - MyApp.Orders.Application.Tests
  namespace: MyApp.Orders.Application.Tests.Services
  syntax:
    content: >-
      [Fact]

      public Task GetByIdAsync_WithExistingId_ReturnsOrderDto()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function GetByIdAsync_WithExistingId_ReturnsOrderDto() As Task
  overload: MyApp.Orders.Application.Tests.Services.OrderServiceTests.GetByIdAsync_WithExistingId_ReturnsOrderDto*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.ListAsync_ReturnsAllOrdersAsDtos
  commentId: M:MyApp.Orders.Application.Tests.Services.OrderServiceTests.ListAsync_ReturnsAllOrdersAsDtos
  id: ListAsync_ReturnsAllOrdersAsDtos
  parent: MyApp.Orders.Application.Tests.Services.OrderServiceTests
  langs:
  - csharp
  - vb
  name: ListAsync_ReturnsAllOrdersAsDtos()
  nameWithType: OrderServiceTests.ListAsync_ReturnsAllOrdersAsDtos()
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.ListAsync_ReturnsAllOrdersAsDtos()
  type: Method
  source:
    remote:
      path: src/MyApp.Orders/test/MyApp.Orders.Application.Tests/Services/OrderServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: ListAsync_ReturnsAllOrdersAsDtos
    path: src/MyApp.Orders/test/MyApp.Orders.Application.Tests/Services/OrderServiceTests.cs
    startLine: 234
  assemblies:
  - MyApp.Orders.Application.Tests
  namespace: MyApp.Orders.Application.Tests.Services
  syntax:
    content: >-
      [Fact]

      public Task ListAsync_ReturnsAllOrdersAsDtos()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function ListAsync_ReturnsAllOrdersAsDtos() As Task
  overload: MyApp.Orders.Application.Tests.Services.OrderServiceTests.ListAsync_ReturnsAllOrdersAsDtos*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.ListAsync_WithEmptyRepository_ReturnsEmptyList
  commentId: M:MyApp.Orders.Application.Tests.Services.OrderServiceTests.ListAsync_WithEmptyRepository_ReturnsEmptyList
  id: ListAsync_WithEmptyRepository_ReturnsEmptyList
  parent: MyApp.Orders.Application.Tests.Services.OrderServiceTests
  langs:
  - csharp
  - vb
  name: ListAsync_WithEmptyRepository_ReturnsEmptyList()
  nameWithType: OrderServiceTests.ListAsync_WithEmptyRepository_ReturnsEmptyList()
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.ListAsync_WithEmptyRepository_ReturnsEmptyList()
  type: Method
  source:
    remote:
      path: src/MyApp.Orders/test/MyApp.Orders.Application.Tests/Services/OrderServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: ListAsync_WithEmptyRepository_ReturnsEmptyList
    path: src/MyApp.Orders/test/MyApp.Orders.Application.Tests/Services/OrderServiceTests.cs
    startLine: 260
  assemblies:
  - MyApp.Orders.Application.Tests
  namespace: MyApp.Orders.Application.Tests.Services
  syntax:
    content: >-
      [Fact]

      public Task ListAsync_WithEmptyRepository_ReturnsEmptyList()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function ListAsync_WithEmptyRepository_ReturnsEmptyList() As Task
  overload: MyApp.Orders.Application.Tests.Services.OrderServiceTests.ListAsync_WithEmptyRepository_ReturnsEmptyList*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_WithExistingOrder_UpdatesSuccessfully
  commentId: M:MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_WithExistingOrder_UpdatesSuccessfully
  id: UpdateAsync_WithExistingOrder_UpdatesSuccessfully
  parent: MyApp.Orders.Application.Tests.Services.OrderServiceTests
  langs:
  - csharp
  - vb
  name: UpdateAsync_WithExistingOrder_UpdatesSuccessfully()
  nameWithType: OrderServiceTests.UpdateAsync_WithExistingOrder_UpdatesSuccessfully()
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_WithExistingOrder_UpdatesSuccessfully()
  type: Method
  source:
    remote:
      path: src/MyApp.Orders/test/MyApp.Orders.Application.Tests/Services/OrderServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: UpdateAsync_WithExistingOrder_UpdatesSuccessfully
    path: src/MyApp.Orders/test/MyApp.Orders.Application.Tests/Services/OrderServiceTests.cs
    startLine: 280
  assemblies:
  - MyApp.Orders.Application.Tests
  namespace: MyApp.Orders.Application.Tests.Services
  syntax:
    content: >-
      [Fact]

      public Task UpdateAsync_WithExistingOrder_UpdatesSuccessfully()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function UpdateAsync_WithExistingOrder_UpdatesSuccessfully() As Task
  overload: MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_WithExistingOrder_UpdatesSuccessfully*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_WithNonExistentOrder_DoesNotCallUpdateAsync
  commentId: M:MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_WithNonExistentOrder_DoesNotCallUpdateAsync
  id: UpdateAsync_WithNonExistentOrder_DoesNotCallUpdateAsync
  parent: MyApp.Orders.Application.Tests.Services.OrderServiceTests
  langs:
  - csharp
  - vb
  name: UpdateAsync_WithNonExistentOrder_DoesNotCallUpdateAsync()
  nameWithType: OrderServiceTests.UpdateAsync_WithNonExistentOrder_DoesNotCallUpdateAsync()
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_WithNonExistentOrder_DoesNotCallUpdateAsync()
  type: Method
  source:
    remote:
      path: src/MyApp.Orders/test/MyApp.Orders.Application.Tests/Services/OrderServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: UpdateAsync_WithNonExistentOrder_DoesNotCallUpdateAsync
    path: src/MyApp.Orders/test/MyApp.Orders.Application.Tests/Services/OrderServiceTests.cs
    startLine: 323
  assemblies:
  - MyApp.Orders.Application.Tests
  namespace: MyApp.Orders.Application.Tests.Services
  syntax:
    content: >-
      [Fact]

      public Task UpdateAsync_WithNonExistentOrder_DoesNotCallUpdateAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function UpdateAsync_WithNonExistentOrder_DoesNotCallUpdateAsync() As Task
  overload: MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_WithNonExistentOrder_DoesNotCallUpdateAsync*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_ReplacesAllLinesAndRecalculatesTotal
  commentId: M:MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_ReplacesAllLinesAndRecalculatesTotal
  id: UpdateAsync_ReplacesAllLinesAndRecalculatesTotal
  parent: MyApp.Orders.Application.Tests.Services.OrderServiceTests
  langs:
  - csharp
  - vb
  name: UpdateAsync_ReplacesAllLinesAndRecalculatesTotal()
  nameWithType: OrderServiceTests.UpdateAsync_ReplacesAllLinesAndRecalculatesTotal()
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_ReplacesAllLinesAndRecalculatesTotal()
  type: Method
  source:
    remote:
      path: src/MyApp.Orders/test/MyApp.Orders.Application.Tests/Services/OrderServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: UpdateAsync_ReplacesAllLinesAndRecalculatesTotal
    path: src/MyApp.Orders/test/MyApp.Orders.Application.Tests/Services/OrderServiceTests.cs
    startLine: 346
  assemblies:
  - MyApp.Orders.Application.Tests
  namespace: MyApp.Orders.Application.Tests.Services
  syntax:
    content: >-
      [Fact]

      public Task UpdateAsync_ReplacesAllLinesAndRecalculatesTotal()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function UpdateAsync_ReplacesAllLinesAndRecalculatesTotal() As Task
  overload: MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_ReplacesAllLinesAndRecalculatesTotal*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.DeleteAsync_CallsRepositoryDeleteWithCorrectId
  commentId: M:MyApp.Orders.Application.Tests.Services.OrderServiceTests.DeleteAsync_CallsRepositoryDeleteWithCorrectId
  id: DeleteAsync_CallsRepositoryDeleteWithCorrectId
  parent: MyApp.Orders.Application.Tests.Services.OrderServiceTests
  langs:
  - csharp
  - vb
  name: DeleteAsync_CallsRepositoryDeleteWithCorrectId()
  nameWithType: OrderServiceTests.DeleteAsync_CallsRepositoryDeleteWithCorrectId()
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.DeleteAsync_CallsRepositoryDeleteWithCorrectId()
  type: Method
  source:
    remote:
      path: src/MyApp.Orders/test/MyApp.Orders.Application.Tests/Services/OrderServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: DeleteAsync_CallsRepositoryDeleteWithCorrectId
    path: src/MyApp.Orders/test/MyApp.Orders.Application.Tests/Services/OrderServiceTests.cs
    startLine: 398
  assemblies:
  - MyApp.Orders.Application.Tests
  namespace: MyApp.Orders.Application.Tests.Services
  syntax:
    content: >-
      [Fact]

      public Task DeleteAsync_CallsRepositoryDeleteWithCorrectId()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function DeleteAsync_CallsRepositoryDeleteWithCorrectId() As Task
  overload: MyApp.Orders.Application.Tests.Services.OrderServiceTests.DeleteAsync_CallsRepositoryDeleteWithCorrectId*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
references:
- uid: MyApp.Orders.Application.Tests.Services
  commentId: N:MyApp.Orders.Application.Tests.Services
  href: MyApp.html
  name: MyApp.Orders.Application.Tests.Services
  nameWithType: MyApp.Orders.Application.Tests.Services
  fullName: MyApp.Orders.Application.Tests.Services
  spec.csharp:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Orders
    name: Orders
    href: MyApp.Orders.html
  - name: .
  - uid: MyApp.Orders.Application
    name: Application
    href: MyApp.Orders.Application.html
  - name: .
  - uid: MyApp.Orders.Application.Tests
    name: Tests
    href: MyApp.Orders.Application.Tests.html
  - name: .
  - uid: MyApp.Orders.Application.Tests.Services
    name: Services
    href: MyApp.Orders.Application.Tests.Services.html
  spec.vb:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Orders
    name: Orders
    href: MyApp.Orders.html
  - name: .
  - uid: MyApp.Orders.Application
    name: Application
    href: MyApp.Orders.Application.html
  - name: .
  - uid: MyApp.Orders.Application.Tests
    name: Tests
    href: MyApp.Orders.Application.Tests.html
  - name: .
  - uid: MyApp.Orders.Application.Tests.Services
    name: Services
    href: MyApp.Orders.Application.Tests.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.#ctor*
  commentId: Overload:MyApp.Orders.Application.Tests.Services.OrderServiceTests.#ctor
  href: MyApp.Orders.Application.Tests.Services.OrderServiceTests.html#MyApp_Orders_Application_Tests_Services_OrderServiceTests__ctor
  name: OrderServiceTests
  nameWithType: OrderServiceTests.OrderServiceTests
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.OrderServiceTests
  nameWithType.vb: OrderServiceTests.New
  fullName.vb: MyApp.Orders.Application.Tests.Services.OrderServiceTests.New
  name.vb: New
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_WithValidDto_CallsAddAsyncOnRepository*
  commentId: Overload:MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_WithValidDto_CallsAddAsyncOnRepository
  href: MyApp.Orders.Application.Tests.Services.OrderServiceTests.html#MyApp_Orders_Application_Tests_Services_OrderServiceTests_CreateAsync_WithValidDto_CallsAddAsyncOnRepository
  name: CreateAsync_WithValidDto_CallsAddAsyncOnRepository
  nameWithType: OrderServiceTests.CreateAsync_WithValidDto_CallsAddAsyncOnRepository
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_WithValidDto_CallsAddAsyncOnRepository
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_CalculatesTotalAmountFromLines*
  commentId: Overload:MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_CalculatesTotalAmountFromLines
  href: MyApp.Orders.Application.Tests.Services.OrderServiceTests.html#MyApp_Orders_Application_Tests_Services_OrderServiceTests_CreateAsync_CalculatesTotalAmountFromLines
  name: CreateAsync_CalculatesTotalAmountFromLines
  nameWithType: OrderServiceTests.CreateAsync_CalculatesTotalAmountFromLines
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_CalculatesTotalAmountFromLines
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_SetsOrderStatusToDraft*
  commentId: Overload:MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_SetsOrderStatusToDraft
  href: MyApp.Orders.Application.Tests.Services.OrderServiceTests.html#MyApp_Orders_Application_Tests_Services_OrderServiceTests_CreateAsync_SetsOrderStatusToDraft
  name: CreateAsync_SetsOrderStatusToDraft
  nameWithType: OrderServiceTests.CreateAsync_SetsOrderStatusToDraft
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_SetsOrderStatusToDraft
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_AssignsGuidsToOrderAndLines*
  commentId: Overload:MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_AssignsGuidsToOrderAndLines
  href: MyApp.Orders.Application.Tests.Services.OrderServiceTests.html#MyApp_Orders_Application_Tests_Services_OrderServiceTests_CreateAsync_AssignsGuidsToOrderAndLines
  name: CreateAsync_AssignsGuidsToOrderAndLines
  nameWithType: OrderServiceTests.CreateAsync_AssignsGuidsToOrderAndLines
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_AssignsGuidsToOrderAndLines
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.GetByIdAsync_WithExistingId_ReturnsOrderDto*
  commentId: Overload:MyApp.Orders.Application.Tests.Services.OrderServiceTests.GetByIdAsync_WithExistingId_ReturnsOrderDto
  href: MyApp.Orders.Application.Tests.Services.OrderServiceTests.html#MyApp_Orders_Application_Tests_Services_OrderServiceTests_GetByIdAsync_WithExistingId_ReturnsOrderDto
  name: GetByIdAsync_WithExistingId_ReturnsOrderDto
  nameWithType: OrderServiceTests.GetByIdAsync_WithExistingId_ReturnsOrderDto
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.GetByIdAsync_WithExistingId_ReturnsOrderDto
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.ListAsync_ReturnsAllOrdersAsDtos*
  commentId: Overload:MyApp.Orders.Application.Tests.Services.OrderServiceTests.ListAsync_ReturnsAllOrdersAsDtos
  href: MyApp.Orders.Application.Tests.Services.OrderServiceTests.html#MyApp_Orders_Application_Tests_Services_OrderServiceTests_ListAsync_ReturnsAllOrdersAsDtos
  name: ListAsync_ReturnsAllOrdersAsDtos
  nameWithType: OrderServiceTests.ListAsync_ReturnsAllOrdersAsDtos
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.ListAsync_ReturnsAllOrdersAsDtos
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.ListAsync_WithEmptyRepository_ReturnsEmptyList*
  commentId: Overload:MyApp.Orders.Application.Tests.Services.OrderServiceTests.ListAsync_WithEmptyRepository_ReturnsEmptyList
  href: MyApp.Orders.Application.Tests.Services.OrderServiceTests.html#MyApp_Orders_Application_Tests_Services_OrderServiceTests_ListAsync_WithEmptyRepository_ReturnsEmptyList
  name: ListAsync_WithEmptyRepository_ReturnsEmptyList
  nameWithType: OrderServiceTests.ListAsync_WithEmptyRepository_ReturnsEmptyList
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.ListAsync_WithEmptyRepository_ReturnsEmptyList
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_WithExistingOrder_UpdatesSuccessfully*
  commentId: Overload:MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_WithExistingOrder_UpdatesSuccessfully
  href: MyApp.Orders.Application.Tests.Services.OrderServiceTests.html#MyApp_Orders_Application_Tests_Services_OrderServiceTests_UpdateAsync_WithExistingOrder_UpdatesSuccessfully
  name: UpdateAsync_WithExistingOrder_UpdatesSuccessfully
  nameWithType: OrderServiceTests.UpdateAsync_WithExistingOrder_UpdatesSuccessfully
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_WithExistingOrder_UpdatesSuccessfully
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_WithNonExistentOrder_DoesNotCallUpdateAsync*
  commentId: Overload:MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_WithNonExistentOrder_DoesNotCallUpdateAsync
  href: MyApp.Orders.Application.Tests.Services.OrderServiceTests.html#MyApp_Orders_Application_Tests_Services_OrderServiceTests_UpdateAsync_WithNonExistentOrder_DoesNotCallUpdateAsync
  name: UpdateAsync_WithNonExistentOrder_DoesNotCallUpdateAsync
  nameWithType: OrderServiceTests.UpdateAsync_WithNonExistentOrder_DoesNotCallUpdateAsync
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_WithNonExistentOrder_DoesNotCallUpdateAsync
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_ReplacesAllLinesAndRecalculatesTotal*
  commentId: Overload:MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_ReplacesAllLinesAndRecalculatesTotal
  href: MyApp.Orders.Application.Tests.Services.OrderServiceTests.html#MyApp_Orders_Application_Tests_Services_OrderServiceTests_UpdateAsync_ReplacesAllLinesAndRecalculatesTotal
  name: UpdateAsync_ReplacesAllLinesAndRecalculatesTotal
  nameWithType: OrderServiceTests.UpdateAsync_ReplacesAllLinesAndRecalculatesTotal
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_ReplacesAllLinesAndRecalculatesTotal
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.DeleteAsync_CallsRepositoryDeleteWithCorrectId*
  commentId: Overload:MyApp.Orders.Application.Tests.Services.OrderServiceTests.DeleteAsync_CallsRepositoryDeleteWithCorrectId
  href: MyApp.Orders.Application.Tests.Services.OrderServiceTests.html#MyApp_Orders_Application_Tests_Services_OrderServiceTests_DeleteAsync_CallsRepositoryDeleteWithCorrectId
  name: DeleteAsync_CallsRepositoryDeleteWithCorrectId
  nameWithType: OrderServiceTests.DeleteAsync_CallsRepositoryDeleteWithCorrectId
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.DeleteAsync_CallsRepositoryDeleteWithCorrectId
