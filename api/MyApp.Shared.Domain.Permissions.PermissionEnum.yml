### YamlMime:ManagedReference
items:
- uid: MyApp.Shared.Domain.Permissions.PermissionEnum
  commentId: T:MyApp.Shared.Domain.Permissions.PermissionEnum
  id: PermissionEnum
  parent: MyApp.Shared.Domain.Permissions
  children:
  - MyApp.Shared.Domain.Permissions.PermissionEnum.Action
  - MyApp.Shared.Domain.Permissions.PermissionEnum.Module
  - MyApp.Shared.Domain.Permissions.PermissionEnum.Parse(System.String)
  - MyApp.Shared.Domain.Permissions.PermissionEnum.ToString
  - MyApp.Shared.Domain.Permissions.PermissionEnum.TryParse(System.String,MyApp.Shared.Domain.Permissions.PermissionEnum@)
  langs:
  - csharp
  - vb
  name: PermissionEnum
  nameWithType: PermissionEnum
  fullName: MyApp.Shared.Domain.Permissions.PermissionEnum
  type: Class
  source:
    remote:
      path: src/MyApp.Shared/MyApp.Shared.Domain/Permissions/PermissionEnum.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: PermissionEnum
    path: src/MyApp.Shared/MyApp.Shared.Domain/Permissions/PermissionEnum.cs
    startLine: 72
  assemblies:
  - MyApp.Shared.Domain
  namespace: MyApp.Shared.Domain.Permissions
  summary: >-
    Represents a permission as a combination of a module and an action.

    Example: Inventory.Read, Purchasing.Write, Orders.Delete


    Usage:

    <pre><code class="lang-csharp">var permission = new PermissionEnum 

    { 
        Module = ModuleEnum.Inventory, 
        Action = ActionEnum.Read 
    };

    string permissionString = permission.ToString(); // "Inventory.Read"</code></pre>
  example: []
  syntax:
    content: public class PermissionEnum
    content.vb: Public Class PermissionEnum
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: MyApp.Shared.Domain.Permissions.PermissionEnum.Module
  commentId: P:MyApp.Shared.Domain.Permissions.PermissionEnum.Module
  id: Module
  parent: MyApp.Shared.Domain.Permissions.PermissionEnum
  langs:
  - csharp
  - vb
  name: Module
  nameWithType: PermissionEnum.Module
  fullName: MyApp.Shared.Domain.Permissions.PermissionEnum.Module
  type: Property
  source:
    remote:
      path: src/MyApp.Shared/MyApp.Shared.Domain/Permissions/PermissionEnum.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: Module
    path: src/MyApp.Shared/MyApp.Shared.Domain/Permissions/PermissionEnum.cs
    startLine: 77
  assemblies:
  - MyApp.Shared.Domain
  namespace: MyApp.Shared.Domain.Permissions
  summary: Gets or sets the module this permission applies to.
  example: []
  syntax:
    content: public required ModuleEnum Module { get; set; }
    parameters: []
    return:
      type: MyApp.Shared.Domain.Permissions.ModuleEnum
    content.vb: Public Property [Module] As ModuleEnum
  overload: MyApp.Shared.Domain.Permissions.PermissionEnum.Module*
- uid: MyApp.Shared.Domain.Permissions.PermissionEnum.Action
  commentId: P:MyApp.Shared.Domain.Permissions.PermissionEnum.Action
  id: Action
  parent: MyApp.Shared.Domain.Permissions.PermissionEnum
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: PermissionEnum.Action
  fullName: MyApp.Shared.Domain.Permissions.PermissionEnum.Action
  type: Property
  source:
    remote:
      path: src/MyApp.Shared/MyApp.Shared.Domain/Permissions/PermissionEnum.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: Action
    path: src/MyApp.Shared/MyApp.Shared.Domain/Permissions/PermissionEnum.cs
    startLine: 82
  assemblies:
  - MyApp.Shared.Domain
  namespace: MyApp.Shared.Domain.Permissions
  summary: Gets or sets the action this permission allows.
  example: []
  syntax:
    content: public required ActionEnum Action { get; set; }
    parameters: []
    return:
      type: MyApp.Shared.Domain.Permissions.ActionEnum
    content.vb: Public Property Action As ActionEnum
  overload: MyApp.Shared.Domain.Permissions.PermissionEnum.Action*
- uid: MyApp.Shared.Domain.Permissions.PermissionEnum.ToString
  commentId: M:MyApp.Shared.Domain.Permissions.PermissionEnum.ToString
  id: ToString
  parent: MyApp.Shared.Domain.Permissions.PermissionEnum
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: PermissionEnum.ToString()
  fullName: MyApp.Shared.Domain.Permissions.PermissionEnum.ToString()
  type: Method
  source:
    remote:
      path: src/MyApp.Shared/MyApp.Shared.Domain/Permissions/PermissionEnum.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: ToString
    path: src/MyApp.Shared/MyApp.Shared.Domain/Permissions/PermissionEnum.cs
    startLine: 88
  assemblies:
  - MyApp.Shared.Domain
  namespace: MyApp.Shared.Domain.Permissions
  summary: Converts the permission to its string representation in the format "Module.Action".
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string like "Inventory.Read"
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: MyApp.Shared.Domain.Permissions.PermissionEnum.ToString*
- uid: MyApp.Shared.Domain.Permissions.PermissionEnum.Parse(System.String)
  commentId: M:MyApp.Shared.Domain.Permissions.PermissionEnum.Parse(System.String)
  id: Parse(System.String)
  parent: MyApp.Shared.Domain.Permissions.PermissionEnum
  langs:
  - csharp
  - vb
  name: Parse(string)
  nameWithType: PermissionEnum.Parse(string)
  fullName: MyApp.Shared.Domain.Permissions.PermissionEnum.Parse(string)
  type: Method
  source:
    remote:
      path: src/MyApp.Shared/MyApp.Shared.Domain/Permissions/PermissionEnum.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: Parse
    path: src/MyApp.Shared/MyApp.Shared.Domain/Permissions/PermissionEnum.cs
    startLine: 98
  assemblies:
  - MyApp.Shared.Domain
  namespace: MyApp.Shared.Domain.Permissions
  summary: 'Parses a permission string (format: "Module.Action") into a PermissionEnum.'
  example:
  - var permission = PermissionEnum.Parse("Inventory.Read");
  syntax:
    content: public static PermissionEnum? Parse(string permissionString)
    parameters:
    - id: permissionString
      type: System.String
      description: The permission string to parse (e.g., "Inventory.Read")
    return:
      type: MyApp.Shared.Domain.Permissions.PermissionEnum
      description: A PermissionEnum instance, or null if parsing fails
    content.vb: Public Shared Function Parse(permissionString As String) As PermissionEnum
  overload: MyApp.Shared.Domain.Permissions.PermissionEnum.Parse*
  nameWithType.vb: PermissionEnum.Parse(String)
  fullName.vb: MyApp.Shared.Domain.Permissions.PermissionEnum.Parse(String)
  name.vb: Parse(String)
- uid: MyApp.Shared.Domain.Permissions.PermissionEnum.TryParse(System.String,MyApp.Shared.Domain.Permissions.PermissionEnum@)
  commentId: M:MyApp.Shared.Domain.Permissions.PermissionEnum.TryParse(System.String,MyApp.Shared.Domain.Permissions.PermissionEnum@)
  id: TryParse(System.String,MyApp.Shared.Domain.Permissions.PermissionEnum@)
  parent: MyApp.Shared.Domain.Permissions.PermissionEnum
  langs:
  - csharp
  - vb
  name: TryParse(string, out PermissionEnum?)
  nameWithType: PermissionEnum.TryParse(string, out PermissionEnum?)
  fullName: MyApp.Shared.Domain.Permissions.PermissionEnum.TryParse(string, out MyApp.Shared.Domain.Permissions.PermissionEnum?)
  type: Method
  source:
    remote:
      path: src/MyApp.Shared/MyApp.Shared.Domain/Permissions/PermissionEnum.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: TryParse
    path: src/MyApp.Shared/MyApp.Shared.Domain/Permissions/PermissionEnum.cs
    startLine: 122
  assemblies:
  - MyApp.Shared.Domain
  namespace: MyApp.Shared.Domain.Permissions
  summary: Tries to parse a permission string into a PermissionEnum.
  example: []
  syntax:
    content: public static bool TryParse(string permissionString, out PermissionEnum? permission)
    parameters:
    - id: permissionString
      type: System.String
      description: The permission string to parse
    - id: permission
      type: MyApp.Shared.Domain.Permissions.PermissionEnum
      description: The parsed permission, or null if parsing fails
    return:
      type: System.Boolean
      description: True if parsing succeeded, false otherwise
    content.vb: Public Shared Function TryParse(permissionString As String, permission As PermissionEnum) As Boolean
  overload: MyApp.Shared.Domain.Permissions.PermissionEnum.TryParse*
  nameWithType.vb: PermissionEnum.TryParse(String, PermissionEnum)
  fullName.vb: MyApp.Shared.Domain.Permissions.PermissionEnum.TryParse(String, MyApp.Shared.Domain.Permissions.PermissionEnum)
  name.vb: TryParse(String, PermissionEnum)
references:
- uid: MyApp.Shared.Domain.Permissions
  commentId: N:MyApp.Shared.Domain.Permissions
  href: MyApp.html
  name: MyApp.Shared.Domain.Permissions
  nameWithType: MyApp.Shared.Domain.Permissions
  fullName: MyApp.Shared.Domain.Permissions
  spec.csharp:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Shared
    name: Shared
    href: MyApp.Shared.html
  - name: .
  - uid: MyApp.Shared.Domain
    name: Domain
    href: MyApp.Shared.Domain.html
  - name: .
  - uid: MyApp.Shared.Domain.Permissions
    name: Permissions
    href: MyApp.Shared.Domain.Permissions.html
  spec.vb:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Shared
    name: Shared
    href: MyApp.Shared.html
  - name: .
  - uid: MyApp.Shared.Domain
    name: Domain
    href: MyApp.Shared.Domain.html
  - name: .
  - uid: MyApp.Shared.Domain.Permissions
    name: Permissions
    href: MyApp.Shared.Domain.Permissions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MyApp.Shared.Domain.Permissions.PermissionEnum.Module*
  commentId: Overload:MyApp.Shared.Domain.Permissions.PermissionEnum.Module
  href: MyApp.Shared.Domain.Permissions.PermissionEnum.html#MyApp_Shared_Domain_Permissions_PermissionEnum_Module
  name: Module
  nameWithType: PermissionEnum.Module
  fullName: MyApp.Shared.Domain.Permissions.PermissionEnum.Module
- uid: MyApp.Shared.Domain.Permissions.ModuleEnum
  commentId: T:MyApp.Shared.Domain.Permissions.ModuleEnum
  parent: MyApp.Shared.Domain.Permissions
  href: MyApp.Shared.Domain.Permissions.ModuleEnum.html
  name: ModuleEnum
  nameWithType: ModuleEnum
  fullName: MyApp.Shared.Domain.Permissions.ModuleEnum
- uid: MyApp.Shared.Domain.Permissions.PermissionEnum.Action*
  commentId: Overload:MyApp.Shared.Domain.Permissions.PermissionEnum.Action
  href: MyApp.Shared.Domain.Permissions.PermissionEnum.html#MyApp_Shared_Domain_Permissions_PermissionEnum_Action
  name: Action
  nameWithType: PermissionEnum.Action
  fullName: MyApp.Shared.Domain.Permissions.PermissionEnum.Action
- uid: MyApp.Shared.Domain.Permissions.ActionEnum
  commentId: T:MyApp.Shared.Domain.Permissions.ActionEnum
  parent: MyApp.Shared.Domain.Permissions
  href: MyApp.Shared.Domain.Permissions.ActionEnum.html
  name: ActionEnum
  nameWithType: ActionEnum
  fullName: MyApp.Shared.Domain.Permissions.ActionEnum
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: MyApp.Shared.Domain.Permissions.PermissionEnum.ToString*
  commentId: Overload:MyApp.Shared.Domain.Permissions.PermissionEnum.ToString
  href: MyApp.Shared.Domain.Permissions.PermissionEnum.html#MyApp_Shared_Domain_Permissions_PermissionEnum_ToString
  name: ToString
  nameWithType: PermissionEnum.ToString
  fullName: MyApp.Shared.Domain.Permissions.PermissionEnum.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: MyApp.Shared.Domain.Permissions.PermissionEnum.Parse*
  commentId: Overload:MyApp.Shared.Domain.Permissions.PermissionEnum.Parse
  href: MyApp.Shared.Domain.Permissions.PermissionEnum.html#MyApp_Shared_Domain_Permissions_PermissionEnum_Parse_System_String_
  name: Parse
  nameWithType: PermissionEnum.Parse
  fullName: MyApp.Shared.Domain.Permissions.PermissionEnum.Parse
- uid: MyApp.Shared.Domain.Permissions.PermissionEnum
  commentId: T:MyApp.Shared.Domain.Permissions.PermissionEnum
  parent: MyApp.Shared.Domain.Permissions
  href: MyApp.Shared.Domain.Permissions.PermissionEnum.html
  name: PermissionEnum
  nameWithType: PermissionEnum
  fullName: MyApp.Shared.Domain.Permissions.PermissionEnum
- uid: MyApp.Shared.Domain.Permissions.PermissionEnum.TryParse*
  commentId: Overload:MyApp.Shared.Domain.Permissions.PermissionEnum.TryParse
  href: MyApp.Shared.Domain.Permissions.PermissionEnum.html#MyApp_Shared_Domain_Permissions_PermissionEnum_TryParse_System_String_MyApp_Shared_Domain_Permissions_PermissionEnum__
  name: TryParse
  nameWithType: PermissionEnum.TryParse
  fullName: MyApp.Shared.Domain.Permissions.PermissionEnum.TryParse
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
