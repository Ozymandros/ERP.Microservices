### YamlMime:ManagedReference
items:
- uid: MyApp.Purchasing.Domain.Repositories.IPurchaseOrderLineRepository
  commentId: T:MyApp.Purchasing.Domain.Repositories.IPurchaseOrderLineRepository
  id: IPurchaseOrderLineRepository
  parent: MyApp.Purchasing.Domain.Repositories
  children:
  - MyApp.Purchasing.Domain.Repositories.IPurchaseOrderLineRepository.GetByPurchaseOrderIdAsync(System.Guid)
  langs:
  - csharp
  - vb
  name: IPurchaseOrderLineRepository
  nameWithType: IPurchaseOrderLineRepository
  fullName: MyApp.Purchasing.Domain.Repositories.IPurchaseOrderLineRepository
  type: Interface
  source:
    remote:
      path: src/MyApp.Purchasing/MyApp.Purchasing.Domain/Repositories/IPurchaseOrderLineRepository.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: IPurchaseOrderLineRepository
    path: src/MyApp.Purchasing/MyApp.Purchasing.Domain/Repositories/IPurchaseOrderLineRepository.cs
    startLine: 5
  assemblies:
  - MyApp.Purchasing.Domain
  namespace: MyApp.Purchasing.Domain.Repositories
  syntax:
    content: 'public interface IPurchaseOrderLineRepository : IRepository<PurchaseOrderLine, Guid>'
    content.vb: Public Interface IPurchaseOrderLineRepository Inherits IRepository(Of PurchaseOrderLine, Guid)
  inheritedMembers:
  - MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}.GetByIdAsync(System.Guid)
  - MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}.GetAllAsync
  - MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}.GetAllPaginatedAsync(System.Int32,System.Int32)
  - MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}.AddAsync(MyApp.Purchasing.Domain.Entities.PurchaseOrderLine)
  - MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}.UpdateAsync(MyApp.Purchasing.Domain.Entities.PurchaseOrderLine)
  - MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}.DeleteAsync(MyApp.Purchasing.Domain.Entities.PurchaseOrderLine)
- uid: MyApp.Purchasing.Domain.Repositories.IPurchaseOrderLineRepository.GetByPurchaseOrderIdAsync(System.Guid)
  commentId: M:MyApp.Purchasing.Domain.Repositories.IPurchaseOrderLineRepository.GetByPurchaseOrderIdAsync(System.Guid)
  id: GetByPurchaseOrderIdAsync(System.Guid)
  parent: MyApp.Purchasing.Domain.Repositories.IPurchaseOrderLineRepository
  langs:
  - csharp
  - vb
  name: GetByPurchaseOrderIdAsync(Guid)
  nameWithType: IPurchaseOrderLineRepository.GetByPurchaseOrderIdAsync(Guid)
  fullName: MyApp.Purchasing.Domain.Repositories.IPurchaseOrderLineRepository.GetByPurchaseOrderIdAsync(System.Guid)
  type: Method
  source:
    remote:
      path: src/MyApp.Purchasing/MyApp.Purchasing.Domain/Repositories/IPurchaseOrderLineRepository.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: GetByPurchaseOrderIdAsync
    path: src/MyApp.Purchasing/MyApp.Purchasing.Domain/Repositories/IPurchaseOrderLineRepository.cs
    startLine: 7
  assemblies:
  - MyApp.Purchasing.Domain
  namespace: MyApp.Purchasing.Domain.Repositories
  syntax:
    content: Task<IEnumerable<PurchaseOrderLine>> GetByPurchaseOrderIdAsync(Guid purchaseOrderId)
    parameters:
    - id: purchaseOrderId
      type: System.Guid
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine}}
    content.vb: Function GetByPurchaseOrderIdAsync(purchaseOrderId As Guid) As Task(Of IEnumerable(Of PurchaseOrderLine))
  overload: MyApp.Purchasing.Domain.Repositories.IPurchaseOrderLineRepository.GetByPurchaseOrderIdAsync*
references:
- uid: MyApp.Purchasing.Domain.Repositories
  commentId: N:MyApp.Purchasing.Domain.Repositories
  href: MyApp.html
  name: MyApp.Purchasing.Domain.Repositories
  nameWithType: MyApp.Purchasing.Domain.Repositories
  fullName: MyApp.Purchasing.Domain.Repositories
  spec.csharp:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Purchasing
    name: Purchasing
    href: MyApp.Purchasing.html
  - name: .
  - uid: MyApp.Purchasing.Domain
    name: Domain
    href: MyApp.Purchasing.Domain.html
  - name: .
  - uid: MyApp.Purchasing.Domain.Repositories
    name: Repositories
    href: MyApp.Purchasing.Domain.Repositories.html
  spec.vb:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Purchasing
    name: Purchasing
    href: MyApp.Purchasing.html
  - name: .
  - uid: MyApp.Purchasing.Domain
    name: Domain
    href: MyApp.Purchasing.Domain.html
  - name: .
  - uid: MyApp.Purchasing.Domain.Repositories
    name: Repositories
    href: MyApp.Purchasing.Domain.Repositories.html
- uid: MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}.GetByIdAsync(System.Guid)
  commentId: M:MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}.GetByIdAsync(System.Guid)
  parent: MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}
  definition: MyApp.Shared.Domain.Repositories.IRepository`2.GetByIdAsync(`1)
  href: MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_GetByIdAsync__1_
  name: GetByIdAsync(Guid)
  nameWithType: IRepository<PurchaseOrderLine, Guid>.GetByIdAsync(Guid)
  fullName: MyApp.Shared.Domain.Repositories.IRepository<MyApp.Purchasing.Domain.Entities.PurchaseOrderLine, System.Guid>.GetByIdAsync(System.Guid)
  nameWithType.vb: IRepository(Of PurchaseOrderLine, Guid).GetByIdAsync(Guid)
  fullName.vb: MyApp.Shared.Domain.Repositories.IRepository(Of MyApp.Purchasing.Domain.Entities.PurchaseOrderLine, System.Guid).GetByIdAsync(System.Guid)
  spec.csharp:
  - uid: MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}.GetByIdAsync(System.Guid)
    name: GetByIdAsync
    href: MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_GetByIdAsync__1_
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
  spec.vb:
  - uid: MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}.GetByIdAsync(System.Guid)
    name: GetByIdAsync
    href: MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_GetByIdAsync__1_
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
- uid: MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}.GetAllAsync
  commentId: M:MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}.GetAllAsync
  parent: MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}
  definition: MyApp.Shared.Domain.Repositories.IRepository`2.GetAllAsync
  href: MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_GetAllAsync
  name: GetAllAsync()
  nameWithType: IRepository<PurchaseOrderLine, Guid>.GetAllAsync()
  fullName: MyApp.Shared.Domain.Repositories.IRepository<MyApp.Purchasing.Domain.Entities.PurchaseOrderLine, System.Guid>.GetAllAsync()
  nameWithType.vb: IRepository(Of PurchaseOrderLine, Guid).GetAllAsync()
  fullName.vb: MyApp.Shared.Domain.Repositories.IRepository(Of MyApp.Purchasing.Domain.Entities.PurchaseOrderLine, System.Guid).GetAllAsync()
  spec.csharp:
  - uid: MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}.GetAllAsync
    name: GetAllAsync
    href: MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_GetAllAsync
  - name: (
  - name: )
  spec.vb:
  - uid: MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}.GetAllAsync
    name: GetAllAsync
    href: MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_GetAllAsync
  - name: (
  - name: )
- uid: MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}.GetAllPaginatedAsync(System.Int32,System.Int32)
  commentId: M:MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}.GetAllPaginatedAsync(System.Int32,System.Int32)
  parent: MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}
  definition: MyApp.Shared.Domain.Repositories.IRepository`2.GetAllPaginatedAsync(System.Int32,System.Int32)
  href: MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_GetAllPaginatedAsync_System_Int32_System_Int32_
  name: GetAllPaginatedAsync(int, int)
  nameWithType: IRepository<PurchaseOrderLine, Guid>.GetAllPaginatedAsync(int, int)
  fullName: MyApp.Shared.Domain.Repositories.IRepository<MyApp.Purchasing.Domain.Entities.PurchaseOrderLine, System.Guid>.GetAllPaginatedAsync(int, int)
  nameWithType.vb: IRepository(Of PurchaseOrderLine, Guid).GetAllPaginatedAsync(Integer, Integer)
  fullName.vb: MyApp.Shared.Domain.Repositories.IRepository(Of MyApp.Purchasing.Domain.Entities.PurchaseOrderLine, System.Guid).GetAllPaginatedAsync(Integer, Integer)
  name.vb: GetAllPaginatedAsync(Integer, Integer)
  spec.csharp:
  - uid: MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}.GetAllPaginatedAsync(System.Int32,System.Int32)
    name: GetAllPaginatedAsync
    href: MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_GetAllPaginatedAsync_System_Int32_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}.GetAllPaginatedAsync(System.Int32,System.Int32)
    name: GetAllPaginatedAsync
    href: MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_GetAllPaginatedAsync_System_Int32_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}.AddAsync(MyApp.Purchasing.Domain.Entities.PurchaseOrderLine)
  commentId: M:MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}.AddAsync(MyApp.Purchasing.Domain.Entities.PurchaseOrderLine)
  parent: MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}
  definition: MyApp.Shared.Domain.Repositories.IRepository`2.AddAsync(`0)
  href: MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_AddAsync__0_
  name: AddAsync(PurchaseOrderLine)
  nameWithType: IRepository<PurchaseOrderLine, Guid>.AddAsync(PurchaseOrderLine)
  fullName: MyApp.Shared.Domain.Repositories.IRepository<MyApp.Purchasing.Domain.Entities.PurchaseOrderLine, System.Guid>.AddAsync(MyApp.Purchasing.Domain.Entities.PurchaseOrderLine)
  nameWithType.vb: IRepository(Of PurchaseOrderLine, Guid).AddAsync(PurchaseOrderLine)
  fullName.vb: MyApp.Shared.Domain.Repositories.IRepository(Of MyApp.Purchasing.Domain.Entities.PurchaseOrderLine, System.Guid).AddAsync(MyApp.Purchasing.Domain.Entities.PurchaseOrderLine)
  spec.csharp:
  - uid: MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}.AddAsync(MyApp.Purchasing.Domain.Entities.PurchaseOrderLine)
    name: AddAsync
    href: MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_AddAsync__0_
  - name: (
  - uid: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine
    name: PurchaseOrderLine
    href: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.html
  - name: )
  spec.vb:
  - uid: MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}.AddAsync(MyApp.Purchasing.Domain.Entities.PurchaseOrderLine)
    name: AddAsync
    href: MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_AddAsync__0_
  - name: (
  - uid: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine
    name: PurchaseOrderLine
    href: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.html
  - name: )
- uid: MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}.UpdateAsync(MyApp.Purchasing.Domain.Entities.PurchaseOrderLine)
  commentId: M:MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}.UpdateAsync(MyApp.Purchasing.Domain.Entities.PurchaseOrderLine)
  parent: MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}
  definition: MyApp.Shared.Domain.Repositories.IRepository`2.UpdateAsync(`0)
  href: MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_UpdateAsync__0_
  name: UpdateAsync(PurchaseOrderLine)
  nameWithType: IRepository<PurchaseOrderLine, Guid>.UpdateAsync(PurchaseOrderLine)
  fullName: MyApp.Shared.Domain.Repositories.IRepository<MyApp.Purchasing.Domain.Entities.PurchaseOrderLine, System.Guid>.UpdateAsync(MyApp.Purchasing.Domain.Entities.PurchaseOrderLine)
  nameWithType.vb: IRepository(Of PurchaseOrderLine, Guid).UpdateAsync(PurchaseOrderLine)
  fullName.vb: MyApp.Shared.Domain.Repositories.IRepository(Of MyApp.Purchasing.Domain.Entities.PurchaseOrderLine, System.Guid).UpdateAsync(MyApp.Purchasing.Domain.Entities.PurchaseOrderLine)
  spec.csharp:
  - uid: MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}.UpdateAsync(MyApp.Purchasing.Domain.Entities.PurchaseOrderLine)
    name: UpdateAsync
    href: MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_UpdateAsync__0_
  - name: (
  - uid: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine
    name: PurchaseOrderLine
    href: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.html
  - name: )
  spec.vb:
  - uid: MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}.UpdateAsync(MyApp.Purchasing.Domain.Entities.PurchaseOrderLine)
    name: UpdateAsync
    href: MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_UpdateAsync__0_
  - name: (
  - uid: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine
    name: PurchaseOrderLine
    href: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.html
  - name: )
- uid: MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}.DeleteAsync(MyApp.Purchasing.Domain.Entities.PurchaseOrderLine)
  commentId: M:MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}.DeleteAsync(MyApp.Purchasing.Domain.Entities.PurchaseOrderLine)
  parent: MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}
  definition: MyApp.Shared.Domain.Repositories.IRepository`2.DeleteAsync(`0)
  href: MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_DeleteAsync__0_
  name: DeleteAsync(PurchaseOrderLine)
  nameWithType: IRepository<PurchaseOrderLine, Guid>.DeleteAsync(PurchaseOrderLine)
  fullName: MyApp.Shared.Domain.Repositories.IRepository<MyApp.Purchasing.Domain.Entities.PurchaseOrderLine, System.Guid>.DeleteAsync(MyApp.Purchasing.Domain.Entities.PurchaseOrderLine)
  nameWithType.vb: IRepository(Of PurchaseOrderLine, Guid).DeleteAsync(PurchaseOrderLine)
  fullName.vb: MyApp.Shared.Domain.Repositories.IRepository(Of MyApp.Purchasing.Domain.Entities.PurchaseOrderLine, System.Guid).DeleteAsync(MyApp.Purchasing.Domain.Entities.PurchaseOrderLine)
  spec.csharp:
  - uid: MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}.DeleteAsync(MyApp.Purchasing.Domain.Entities.PurchaseOrderLine)
    name: DeleteAsync
    href: MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_DeleteAsync__0_
  - name: (
  - uid: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine
    name: PurchaseOrderLine
    href: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.html
  - name: )
  spec.vb:
  - uid: MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}.DeleteAsync(MyApp.Purchasing.Domain.Entities.PurchaseOrderLine)
    name: DeleteAsync
    href: MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_DeleteAsync__0_
  - name: (
  - uid: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine
    name: PurchaseOrderLine
    href: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.html
  - name: )
- uid: MyApp.Shared.Domain.Repositories.IRepository`2.GetByIdAsync(`1)
  commentId: M:MyApp.Shared.Domain.Repositories.IRepository`2.GetByIdAsync(`1)
  href: MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_GetByIdAsync__1_
  name: GetByIdAsync(TKey)
  nameWithType: IRepository<TEntity, TKey>.GetByIdAsync(TKey)
  fullName: MyApp.Shared.Domain.Repositories.IRepository<TEntity, TKey>.GetByIdAsync(TKey)
  nameWithType.vb: IRepository(Of TEntity, TKey).GetByIdAsync(TKey)
  fullName.vb: MyApp.Shared.Domain.Repositories.IRepository(Of TEntity, TKey).GetByIdAsync(TKey)
  spec.csharp:
  - uid: MyApp.Shared.Domain.Repositories.IRepository`2.GetByIdAsync(`1)
    name: GetByIdAsync
    href: MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_GetByIdAsync__1_
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: MyApp.Shared.Domain.Repositories.IRepository`2.GetByIdAsync(`1)
    name: GetByIdAsync
    href: MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_GetByIdAsync__1_
  - name: (
  - name: TKey
  - name: )
- uid: MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}
  commentId: T:MyApp.Shared.Domain.Repositories.IRepository{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine,System.Guid}
  parent: MyApp.Shared.Domain.Repositories
  definition: MyApp.Shared.Domain.Repositories.IRepository`2
  href: MyApp.Shared.Domain.Repositories.IRepository-2.html
  name: IRepository<PurchaseOrderLine, Guid>
  nameWithType: IRepository<PurchaseOrderLine, Guid>
  fullName: MyApp.Shared.Domain.Repositories.IRepository<MyApp.Purchasing.Domain.Entities.PurchaseOrderLine, System.Guid>
  nameWithType.vb: IRepository(Of PurchaseOrderLine, Guid)
  fullName.vb: MyApp.Shared.Domain.Repositories.IRepository(Of MyApp.Purchasing.Domain.Entities.PurchaseOrderLine, System.Guid)
  name.vb: IRepository(Of PurchaseOrderLine, Guid)
  spec.csharp:
  - uid: MyApp.Shared.Domain.Repositories.IRepository`2
    name: IRepository
    href: MyApp.Shared.Domain.Repositories.IRepository-2.html
  - name: <
  - uid: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine
    name: PurchaseOrderLine
    href: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.html
  - name: ','
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: '>'
  spec.vb:
  - uid: MyApp.Shared.Domain.Repositories.IRepository`2
    name: IRepository
    href: MyApp.Shared.Domain.Repositories.IRepository-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine
    name: PurchaseOrderLine
    href: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.html
  - name: ','
  - name: " "
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
- uid: MyApp.Shared.Domain.Repositories.IRepository`2.GetAllAsync
  commentId: M:MyApp.Shared.Domain.Repositories.IRepository`2.GetAllAsync
  href: MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_GetAllAsync
  name: GetAllAsync()
  nameWithType: IRepository<TEntity, TKey>.GetAllAsync()
  fullName: MyApp.Shared.Domain.Repositories.IRepository<TEntity, TKey>.GetAllAsync()
  nameWithType.vb: IRepository(Of TEntity, TKey).GetAllAsync()
  fullName.vb: MyApp.Shared.Domain.Repositories.IRepository(Of TEntity, TKey).GetAllAsync()
  spec.csharp:
  - uid: MyApp.Shared.Domain.Repositories.IRepository`2.GetAllAsync
    name: GetAllAsync
    href: MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_GetAllAsync
  - name: (
  - name: )
  spec.vb:
  - uid: MyApp.Shared.Domain.Repositories.IRepository`2.GetAllAsync
    name: GetAllAsync
    href: MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_GetAllAsync
  - name: (
  - name: )
- uid: MyApp.Shared.Domain.Repositories.IRepository`2.GetAllPaginatedAsync(System.Int32,System.Int32)
  commentId: M:MyApp.Shared.Domain.Repositories.IRepository`2.GetAllPaginatedAsync(System.Int32,System.Int32)
  isExternal: true
  href: MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_GetAllPaginatedAsync_System_Int32_System_Int32_
  name: GetAllPaginatedAsync(int, int)
  nameWithType: IRepository<TEntity, TKey>.GetAllPaginatedAsync(int, int)
  fullName: MyApp.Shared.Domain.Repositories.IRepository<TEntity, TKey>.GetAllPaginatedAsync(int, int)
  nameWithType.vb: IRepository(Of TEntity, TKey).GetAllPaginatedAsync(Integer, Integer)
  fullName.vb: MyApp.Shared.Domain.Repositories.IRepository(Of TEntity, TKey).GetAllPaginatedAsync(Integer, Integer)
  name.vb: GetAllPaginatedAsync(Integer, Integer)
  spec.csharp:
  - uid: MyApp.Shared.Domain.Repositories.IRepository`2.GetAllPaginatedAsync(System.Int32,System.Int32)
    name: GetAllPaginatedAsync
    href: MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_GetAllPaginatedAsync_System_Int32_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: MyApp.Shared.Domain.Repositories.IRepository`2.GetAllPaginatedAsync(System.Int32,System.Int32)
    name: GetAllPaginatedAsync
    href: MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_GetAllPaginatedAsync_System_Int32_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: MyApp.Shared.Domain.Repositories.IRepository`2.AddAsync(`0)
  commentId: M:MyApp.Shared.Domain.Repositories.IRepository`2.AddAsync(`0)
  href: MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_AddAsync__0_
  name: AddAsync(TEntity)
  nameWithType: IRepository<TEntity, TKey>.AddAsync(TEntity)
  fullName: MyApp.Shared.Domain.Repositories.IRepository<TEntity, TKey>.AddAsync(TEntity)
  nameWithType.vb: IRepository(Of TEntity, TKey).AddAsync(TEntity)
  fullName.vb: MyApp.Shared.Domain.Repositories.IRepository(Of TEntity, TKey).AddAsync(TEntity)
  spec.csharp:
  - uid: MyApp.Shared.Domain.Repositories.IRepository`2.AddAsync(`0)
    name: AddAsync
    href: MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_AddAsync__0_
  - name: (
  - name: TEntity
  - name: )
  spec.vb:
  - uid: MyApp.Shared.Domain.Repositories.IRepository`2.AddAsync(`0)
    name: AddAsync
    href: MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_AddAsync__0_
  - name: (
  - name: TEntity
  - name: )
- uid: MyApp.Shared.Domain.Repositories.IRepository`2.UpdateAsync(`0)
  commentId: M:MyApp.Shared.Domain.Repositories.IRepository`2.UpdateAsync(`0)
  href: MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_UpdateAsync__0_
  name: UpdateAsync(TEntity)
  nameWithType: IRepository<TEntity, TKey>.UpdateAsync(TEntity)
  fullName: MyApp.Shared.Domain.Repositories.IRepository<TEntity, TKey>.UpdateAsync(TEntity)
  nameWithType.vb: IRepository(Of TEntity, TKey).UpdateAsync(TEntity)
  fullName.vb: MyApp.Shared.Domain.Repositories.IRepository(Of TEntity, TKey).UpdateAsync(TEntity)
  spec.csharp:
  - uid: MyApp.Shared.Domain.Repositories.IRepository`2.UpdateAsync(`0)
    name: UpdateAsync
    href: MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_UpdateAsync__0_
  - name: (
  - name: TEntity
  - name: )
  spec.vb:
  - uid: MyApp.Shared.Domain.Repositories.IRepository`2.UpdateAsync(`0)
    name: UpdateAsync
    href: MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_UpdateAsync__0_
  - name: (
  - name: TEntity
  - name: )
- uid: MyApp.Shared.Domain.Repositories.IRepository`2.DeleteAsync(`0)
  commentId: M:MyApp.Shared.Domain.Repositories.IRepository`2.DeleteAsync(`0)
  href: MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_DeleteAsync__0_
  name: DeleteAsync(TEntity)
  nameWithType: IRepository<TEntity, TKey>.DeleteAsync(TEntity)
  fullName: MyApp.Shared.Domain.Repositories.IRepository<TEntity, TKey>.DeleteAsync(TEntity)
  nameWithType.vb: IRepository(Of TEntity, TKey).DeleteAsync(TEntity)
  fullName.vb: MyApp.Shared.Domain.Repositories.IRepository(Of TEntity, TKey).DeleteAsync(TEntity)
  spec.csharp:
  - uid: MyApp.Shared.Domain.Repositories.IRepository`2.DeleteAsync(`0)
    name: DeleteAsync
    href: MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_DeleteAsync__0_
  - name: (
  - name: TEntity
  - name: )
  spec.vb:
  - uid: MyApp.Shared.Domain.Repositories.IRepository`2.DeleteAsync(`0)
    name: DeleteAsync
    href: MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_DeleteAsync__0_
  - name: (
  - name: TEntity
  - name: )
- uid: MyApp.Shared.Domain.Repositories.IRepository`2
  commentId: T:MyApp.Shared.Domain.Repositories.IRepository`2
  href: MyApp.Shared.Domain.Repositories.IRepository-2.html
  name: IRepository<TEntity, TKey>
  nameWithType: IRepository<TEntity, TKey>
  fullName: MyApp.Shared.Domain.Repositories.IRepository<TEntity, TKey>
  nameWithType.vb: IRepository(Of TEntity, TKey)
  fullName.vb: MyApp.Shared.Domain.Repositories.IRepository(Of TEntity, TKey)
  name.vb: IRepository(Of TEntity, TKey)
  spec.csharp:
  - uid: MyApp.Shared.Domain.Repositories.IRepository`2
    name: IRepository
    href: MyApp.Shared.Domain.Repositories.IRepository-2.html
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TKey
  - name: '>'
  spec.vb:
  - uid: MyApp.Shared.Domain.Repositories.IRepository`2
    name: IRepository
    href: MyApp.Shared.Domain.Repositories.IRepository-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TKey
  - name: )
- uid: MyApp.Shared.Domain.Repositories
  commentId: N:MyApp.Shared.Domain.Repositories
  href: MyApp.html
  name: MyApp.Shared.Domain.Repositories
  nameWithType: MyApp.Shared.Domain.Repositories
  fullName: MyApp.Shared.Domain.Repositories
  spec.csharp:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Shared
    name: Shared
    href: MyApp.Shared.html
  - name: .
  - uid: MyApp.Shared.Domain
    name: Domain
    href: MyApp.Shared.Domain.html
  - name: .
  - uid: MyApp.Shared.Domain.Repositories
    name: Repositories
    href: MyApp.Shared.Domain.Repositories.html
  spec.vb:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Shared
    name: Shared
    href: MyApp.Shared.html
  - name: .
  - uid: MyApp.Shared.Domain
    name: Domain
    href: MyApp.Shared.Domain.html
  - name: .
  - uid: MyApp.Shared.Domain.Repositories
    name: Repositories
    href: MyApp.Shared.Domain.Repositories.html
- uid: MyApp.Purchasing.Domain.Repositories.IPurchaseOrderLineRepository.GetByPurchaseOrderIdAsync*
  commentId: Overload:MyApp.Purchasing.Domain.Repositories.IPurchaseOrderLineRepository.GetByPurchaseOrderIdAsync
  href: MyApp.Purchasing.Domain.Repositories.IPurchaseOrderLineRepository.html#MyApp_Purchasing_Domain_Repositories_IPurchaseOrderLineRepository_GetByPurchaseOrderIdAsync_System_Guid_
  name: GetByPurchaseOrderIdAsync
  nameWithType: IPurchaseOrderLineRepository.GetByPurchaseOrderIdAsync
  fullName: MyApp.Purchasing.Domain.Repositories.IPurchaseOrderLineRepository.GetByPurchaseOrderIdAsync
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IEnumerable<PurchaseOrderLine>>
  nameWithType: Task<IEnumerable<PurchaseOrderLine>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<MyApp.Purchasing.Domain.Entities.PurchaseOrderLine>>
  nameWithType.vb: Task(Of IEnumerable(Of PurchaseOrderLine))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of MyApp.Purchasing.Domain.Entities.PurchaseOrderLine))
  name.vb: Task(Of IEnumerable(Of PurchaseOrderLine))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine
    name: PurchaseOrderLine
    href: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine
    name: PurchaseOrderLine
    href: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.html
  - name: )
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
