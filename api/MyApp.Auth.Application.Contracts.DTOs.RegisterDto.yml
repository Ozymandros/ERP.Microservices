### YamlMime:ManagedReference
items:
- uid: MyApp.Auth.Application.Contracts.DTOs.RegisterDto
  commentId: T:MyApp.Auth.Application.Contracts.DTOs.RegisterDto
  id: RegisterDto
  parent: MyApp.Auth.Application.Contracts.DTOs
  children:
  - MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Email
  - MyApp.Auth.Application.Contracts.DTOs.RegisterDto.FirstName
  - MyApp.Auth.Application.Contracts.DTOs.RegisterDto.LastName
  - MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Password
  - MyApp.Auth.Application.Contracts.DTOs.RegisterDto.PasswordConfirm
  - MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Username
  langs:
  - csharp
  - vb
  name: RegisterDto
  nameWithType: RegisterDto
  fullName: MyApp.Auth.Application.Contracts.DTOs.RegisterDto
  type: Class
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application.Contracts/DTOs/RegisterDto.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: RegisterDto
    path: src/MyApp.Auth/MyApp.Auth.Application.Contracts/DTOs/RegisterDto.cs
    startLine: 4
  assemblies:
  - MyApp.Auth.Application.Contracts
  namespace: MyApp.Auth.Application.Contracts.DTOs
  syntax:
    content: public class RegisterDto
    content.vb: Public Class RegisterDto
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Email
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Email
  id: Email
  parent: MyApp.Auth.Application.Contracts.DTOs.RegisterDto
  langs:
  - csharp
  - vb
  name: Email
  nameWithType: RegisterDto.Email
  fullName: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Email
  type: Property
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application.Contracts/DTOs/RegisterDto.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: Email
    path: src/MyApp.Auth/MyApp.Auth.Application.Contracts/DTOs/RegisterDto.cs
    startLine: 6
  assemblies:
  - MyApp.Auth.Application.Contracts
  namespace: MyApp.Auth.Application.Contracts.DTOs
  syntax:
    content: >-
      [Required(ErrorMessage = "Email is required")]

      [EmailAddress(ErrorMessage = "Invalid email address")]

      public string Email { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required(ErrorMessage:="Email is required")>

      <EmailAddress(ErrorMessage:="Invalid email address")>

      Public Property Email As String
  overload: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Email*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Email is required
  - type: System.ComponentModel.DataAnnotations.EmailAddressAttribute
    ctor: System.ComponentModel.DataAnnotations.EmailAddressAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Invalid email address
- uid: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Username
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Username
  id: Username
  parent: MyApp.Auth.Application.Contracts.DTOs.RegisterDto
  langs:
  - csharp
  - vb
  name: Username
  nameWithType: RegisterDto.Username
  fullName: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Username
  type: Property
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application.Contracts/DTOs/RegisterDto.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: Username
    path: src/MyApp.Auth/MyApp.Auth.Application.Contracts/DTOs/RegisterDto.cs
    startLine: 10
  assemblies:
  - MyApp.Auth.Application.Contracts
  namespace: MyApp.Auth.Application.Contracts.DTOs
  syntax:
    content: >-
      [Required(ErrorMessage = "Username is required")]

      [StringLength(100, MinimumLength = 3, ErrorMessage = "Username must be between 3 and 100 characters")]

      public string Username { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required(ErrorMessage:="Username is required")>

      <StringLength(100, MinimumLength:=3, ErrorMessage:="Username must be between 3 and 100 characters")>

      Public Property Username As String
  overload: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Username*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Username is required
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 100
    namedArguments:
    - name: MinimumLength
      type: System.Int32
      value: 3
    - name: ErrorMessage
      type: System.String
      value: Username must be between 3 and 100 characters
- uid: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Password
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Password
  id: Password
  parent: MyApp.Auth.Application.Contracts.DTOs.RegisterDto
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: RegisterDto.Password
  fullName: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Password
  type: Property
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application.Contracts/DTOs/RegisterDto.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: Password
    path: src/MyApp.Auth/MyApp.Auth.Application.Contracts/DTOs/RegisterDto.cs
    startLine: 14
  assemblies:
  - MyApp.Auth.Application.Contracts
  namespace: MyApp.Auth.Application.Contracts.DTOs
  syntax:
    content: >-
      [Required(ErrorMessage = "Password is required")]

      [StringLength(100, MinimumLength = 6, ErrorMessage = "Password must be between 6 and 100 characters")]

      public string Password { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required(ErrorMessage:="Password is required")>

      <StringLength(100, MinimumLength:=6, ErrorMessage:="Password must be between 6 and 100 characters")>

      Public Property Password As String
  overload: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Password*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Password is required
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 100
    namedArguments:
    - name: MinimumLength
      type: System.Int32
      value: 6
    - name: ErrorMessage
      type: System.String
      value: Password must be between 6 and 100 characters
- uid: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.PasswordConfirm
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.RegisterDto.PasswordConfirm
  id: PasswordConfirm
  parent: MyApp.Auth.Application.Contracts.DTOs.RegisterDto
  langs:
  - csharp
  - vb
  name: PasswordConfirm
  nameWithType: RegisterDto.PasswordConfirm
  fullName: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.PasswordConfirm
  type: Property
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application.Contracts/DTOs/RegisterDto.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: PasswordConfirm
    path: src/MyApp.Auth/MyApp.Auth.Application.Contracts/DTOs/RegisterDto.cs
    startLine: 18
  assemblies:
  - MyApp.Auth.Application.Contracts
  namespace: MyApp.Auth.Application.Contracts.DTOs
  syntax:
    content: >-
      [Required(ErrorMessage = "Password confirmation is required")]

      [Compare("Password", ErrorMessage = "Passwords do not match")]

      public string PasswordConfirm { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required(ErrorMessage:="Password confirmation is required")>

      <Compare("Password", ErrorMessage:="Passwords do not match")>

      Public Property PasswordConfirm As String
  overload: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.PasswordConfirm*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Password confirmation is required
  - type: System.ComponentModel.DataAnnotations.CompareAttribute
    ctor: System.ComponentModel.DataAnnotations.CompareAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Password
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Passwords do not match
- uid: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.FirstName
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.RegisterDto.FirstName
  id: FirstName
  parent: MyApp.Auth.Application.Contracts.DTOs.RegisterDto
  langs:
  - csharp
  - vb
  name: FirstName
  nameWithType: RegisterDto.FirstName
  fullName: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.FirstName
  type: Property
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application.Contracts/DTOs/RegisterDto.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: FirstName
    path: src/MyApp.Auth/MyApp.Auth.Application.Contracts/DTOs/RegisterDto.cs
    startLine: 22
  assemblies:
  - MyApp.Auth.Application.Contracts
  namespace: MyApp.Auth.Application.Contracts.DTOs
  syntax:
    content: >-
      [StringLength(100)]

      public string? FirstName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <StringLength(100)>

      Public Property FirstName As String
  overload: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.FirstName*
  attributes:
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 100
- uid: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.LastName
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.RegisterDto.LastName
  id: LastName
  parent: MyApp.Auth.Application.Contracts.DTOs.RegisterDto
  langs:
  - csharp
  - vb
  name: LastName
  nameWithType: RegisterDto.LastName
  fullName: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.LastName
  type: Property
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application.Contracts/DTOs/RegisterDto.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: LastName
    path: src/MyApp.Auth/MyApp.Auth.Application.Contracts/DTOs/RegisterDto.cs
    startLine: 25
  assemblies:
  - MyApp.Auth.Application.Contracts
  namespace: MyApp.Auth.Application.Contracts.DTOs
  syntax:
    content: >-
      [StringLength(100)]

      public string? LastName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <StringLength(100)>

      Public Property LastName As String
  overload: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.LastName*
  attributes:
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 100
references:
- uid: MyApp.Auth.Application.Contracts.DTOs
  commentId: N:MyApp.Auth.Application.Contracts.DTOs
  href: MyApp.html
  name: MyApp.Auth.Application.Contracts.DTOs
  nameWithType: MyApp.Auth.Application.Contracts.DTOs
  fullName: MyApp.Auth.Application.Contracts.DTOs
  spec.csharp:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Auth
    name: Auth
    href: MyApp.Auth.html
  - name: .
  - uid: MyApp.Auth.Application
    name: Application
    href: MyApp.Auth.Application.html
  - name: .
  - uid: MyApp.Auth.Application.Contracts
    name: Contracts
    href: MyApp.Auth.Application.Contracts.html
  - name: .
  - uid: MyApp.Auth.Application.Contracts.DTOs
    name: DTOs
    href: MyApp.Auth.Application.Contracts.DTOs.html
  spec.vb:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Auth
    name: Auth
    href: MyApp.Auth.html
  - name: .
  - uid: MyApp.Auth.Application
    name: Application
    href: MyApp.Auth.Application.html
  - name: .
  - uid: MyApp.Auth.Application.Contracts
    name: Contracts
    href: MyApp.Auth.Application.Contracts.html
  - name: .
  - uid: MyApp.Auth.Application.Contracts.DTOs
    name: DTOs
    href: MyApp.Auth.Application.Contracts.DTOs.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Email*
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Email
  href: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.html#MyApp_Auth_Application_Contracts_DTOs_RegisterDto_Email
  name: Email
  nameWithType: RegisterDto.Email
  fullName: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Email
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Username*
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Username
  href: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.html#MyApp_Auth_Application_Contracts_DTOs_RegisterDto_Username
  name: Username
  nameWithType: RegisterDto.Username
  fullName: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Username
- uid: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Password*
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Password
  href: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.html#MyApp_Auth_Application_Contracts_DTOs_RegisterDto_Password
  name: Password
  nameWithType: RegisterDto.Password
  fullName: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Password
- uid: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.PasswordConfirm*
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.RegisterDto.PasswordConfirm
  href: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.html#MyApp_Auth_Application_Contracts_DTOs_RegisterDto_PasswordConfirm
  name: PasswordConfirm
  nameWithType: RegisterDto.PasswordConfirm
  fullName: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.PasswordConfirm
- uid: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.FirstName*
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.RegisterDto.FirstName
  href: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.html#MyApp_Auth_Application_Contracts_DTOs_RegisterDto_FirstName
  name: FirstName
  nameWithType: RegisterDto.FirstName
  fullName: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.FirstName
- uid: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.LastName*
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.RegisterDto.LastName
  href: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.html#MyApp_Auth_Application_Contracts_DTOs_RegisterDto_LastName
  name: LastName
  nameWithType: RegisterDto.LastName
  fullName: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.LastName
