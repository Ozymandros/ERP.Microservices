### YamlMime:ManagedReference
items:
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests
  commentId: T:MyApp.Sales.Application.Tests.Services.CustomerServiceTests
  id: CustomerServiceTests
  parent: MyApp.Sales.Application.Tests.Services
  children:
  - MyApp.Sales.Application.Tests.Services.CustomerServiceTests.#ctor
  - MyApp.Sales.Application.Tests.Services.CustomerServiceTests.CreateCustomerAsync_AssignsNewGuid
  - MyApp.Sales.Application.Tests.Services.CustomerServiceTests.CreateCustomerAsync_WithValidDto_CreatesCustomer
  - MyApp.Sales.Application.Tests.Services.CustomerServiceTests.DeleteCustomerAsync_CallsRepositoryDeleteWithCorrectId
  - MyApp.Sales.Application.Tests.Services.CustomerServiceTests.GetCustomerByIdAsync_WithExistingId_ReturnsCustomerDto
  - MyApp.Sales.Application.Tests.Services.CustomerServiceTests.GetCustomerByIdAsync_WithNonExistentId_ReturnsNull
  - MyApp.Sales.Application.Tests.Services.CustomerServiceTests.ListCustomersAsync_ReturnsAllCustomers
  - MyApp.Sales.Application.Tests.Services.CustomerServiceTests.ListCustomersAsync_WithEmptyRepository_ReturnsEmptyList
  - MyApp.Sales.Application.Tests.Services.CustomerServiceTests.UpdateCustomerAsync_WithExistingCustomer_UpdatesSuccessfully
  - MyApp.Sales.Application.Tests.Services.CustomerServiceTests.UpdateCustomerAsync_WithNonExistentCustomer_ThrowsInvalidOperationException
  langs:
  - csharp
  - vb
  name: CustomerServiceTests
  nameWithType: CustomerServiceTests
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests
  type: Class
  source:
    remote:
      path: src/MyApp.Sales/test/MyApp.Sales.Application.Tests/Services/CustomerServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: CustomerServiceTests
    path: src/MyApp.Sales/test/MyApp.Sales.Application.Tests/Services/CustomerServiceTests.cs
    startLine: 10
  assemblies:
  - MyApp.Sales.Application.Tests
  namespace: MyApp.Sales.Application.Tests.Services
  syntax:
    content: public class CustomerServiceTests
    content.vb: Public Class CustomerServiceTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.#ctor
  commentId: M:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.#ctor
  id: '#ctor'
  parent: MyApp.Sales.Application.Tests.Services.CustomerServiceTests
  langs:
  - csharp
  - vb
  name: CustomerServiceTests()
  nameWithType: CustomerServiceTests.CustomerServiceTests()
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.CustomerServiceTests()
  type: Constructor
  source:
    remote:
      path: src/MyApp.Sales/test/MyApp.Sales.Application.Tests/Services/CustomerServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: .ctor
    path: src/MyApp.Sales/test/MyApp.Sales.Application.Tests/Services/CustomerServiceTests.cs
    startLine: 16
  assemblies:
  - MyApp.Sales.Application.Tests
  namespace: MyApp.Sales.Application.Tests.Services
  syntax:
    content: public CustomerServiceTests()
    content.vb: Public Sub New()
  overload: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.#ctor*
  nameWithType.vb: CustomerServiceTests.New()
  fullName.vb: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.New()
  name.vb: New()
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.GetCustomerByIdAsync_WithExistingId_ReturnsCustomerDto
  commentId: M:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.GetCustomerByIdAsync_WithExistingId_ReturnsCustomerDto
  id: GetCustomerByIdAsync_WithExistingId_ReturnsCustomerDto
  parent: MyApp.Sales.Application.Tests.Services.CustomerServiceTests
  langs:
  - csharp
  - vb
  name: GetCustomerByIdAsync_WithExistingId_ReturnsCustomerDto()
  nameWithType: CustomerServiceTests.GetCustomerByIdAsync_WithExistingId_ReturnsCustomerDto()
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.GetCustomerByIdAsync_WithExistingId_ReturnsCustomerDto()
  type: Method
  source:
    remote:
      path: src/MyApp.Sales/test/MyApp.Sales.Application.Tests/Services/CustomerServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: GetCustomerByIdAsync_WithExistingId_ReturnsCustomerDto
    path: src/MyApp.Sales/test/MyApp.Sales.Application.Tests/Services/CustomerServiceTests.cs
    startLine: 28
  assemblies:
  - MyApp.Sales.Application.Tests
  namespace: MyApp.Sales.Application.Tests.Services
  syntax:
    content: >-
      [Fact]

      public Task GetCustomerByIdAsync_WithExistingId_ReturnsCustomerDto()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function GetCustomerByIdAsync_WithExistingId_ReturnsCustomerDto() As Task
  overload: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.GetCustomerByIdAsync_WithExistingId_ReturnsCustomerDto*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.GetCustomerByIdAsync_WithNonExistentId_ReturnsNull
  commentId: M:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.GetCustomerByIdAsync_WithNonExistentId_ReturnsNull
  id: GetCustomerByIdAsync_WithNonExistentId_ReturnsNull
  parent: MyApp.Sales.Application.Tests.Services.CustomerServiceTests
  langs:
  - csharp
  - vb
  name: GetCustomerByIdAsync_WithNonExistentId_ReturnsNull()
  nameWithType: CustomerServiceTests.GetCustomerByIdAsync_WithNonExistentId_ReturnsNull()
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.GetCustomerByIdAsync_WithNonExistentId_ReturnsNull()
  type: Method
  source:
    remote:
      path: src/MyApp.Sales/test/MyApp.Sales.Application.Tests/Services/CustomerServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: GetCustomerByIdAsync_WithNonExistentId_ReturnsNull
    path: src/MyApp.Sales/test/MyApp.Sales.Application.Tests/Services/CustomerServiceTests.cs
    startLine: 62
  assemblies:
  - MyApp.Sales.Application.Tests
  namespace: MyApp.Sales.Application.Tests.Services
  syntax:
    content: >-
      [Fact]

      public Task GetCustomerByIdAsync_WithNonExistentId_ReturnsNull()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function GetCustomerByIdAsync_WithNonExistentId_ReturnsNull() As Task
  overload: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.GetCustomerByIdAsync_WithNonExistentId_ReturnsNull*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.ListCustomersAsync_ReturnsAllCustomers
  commentId: M:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.ListCustomersAsync_ReturnsAllCustomers
  id: ListCustomersAsync_ReturnsAllCustomers
  parent: MyApp.Sales.Application.Tests.Services.CustomerServiceTests
  langs:
  - csharp
  - vb
  name: ListCustomersAsync_ReturnsAllCustomers()
  nameWithType: CustomerServiceTests.ListCustomersAsync_ReturnsAllCustomers()
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.ListCustomersAsync_ReturnsAllCustomers()
  type: Method
  source:
    remote:
      path: src/MyApp.Sales/test/MyApp.Sales.Application.Tests/Services/CustomerServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: ListCustomersAsync_ReturnsAllCustomers
    path: src/MyApp.Sales/test/MyApp.Sales.Application.Tests/Services/CustomerServiceTests.cs
    startLine: 82
  assemblies:
  - MyApp.Sales.Application.Tests
  namespace: MyApp.Sales.Application.Tests.Services
  syntax:
    content: >-
      [Fact]

      public Task ListCustomersAsync_ReturnsAllCustomers()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function ListCustomersAsync_ReturnsAllCustomers() As Task
  overload: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.ListCustomersAsync_ReturnsAllCustomers*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.ListCustomersAsync_WithEmptyRepository_ReturnsEmptyList
  commentId: M:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.ListCustomersAsync_WithEmptyRepository_ReturnsEmptyList
  id: ListCustomersAsync_WithEmptyRepository_ReturnsEmptyList
  parent: MyApp.Sales.Application.Tests.Services.CustomerServiceTests
  langs:
  - csharp
  - vb
  name: ListCustomersAsync_WithEmptyRepository_ReturnsEmptyList()
  nameWithType: CustomerServiceTests.ListCustomersAsync_WithEmptyRepository_ReturnsEmptyList()
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.ListCustomersAsync_WithEmptyRepository_ReturnsEmptyList()
  type: Method
  source:
    remote:
      path: src/MyApp.Sales/test/MyApp.Sales.Application.Tests/Services/CustomerServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: ListCustomersAsync_WithEmptyRepository_ReturnsEmptyList
    path: src/MyApp.Sales/test/MyApp.Sales.Application.Tests/Services/CustomerServiceTests.cs
    startLine: 114
  assemblies:
  - MyApp.Sales.Application.Tests
  namespace: MyApp.Sales.Application.Tests.Services
  syntax:
    content: >-
      [Fact]

      public Task ListCustomersAsync_WithEmptyRepository_ReturnsEmptyList()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function ListCustomersAsync_WithEmptyRepository_ReturnsEmptyList() As Task
  overload: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.ListCustomersAsync_WithEmptyRepository_ReturnsEmptyList*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.CreateCustomerAsync_WithValidDto_CreatesCustomer
  commentId: M:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.CreateCustomerAsync_WithValidDto_CreatesCustomer
  id: CreateCustomerAsync_WithValidDto_CreatesCustomer
  parent: MyApp.Sales.Application.Tests.Services.CustomerServiceTests
  langs:
  - csharp
  - vb
  name: CreateCustomerAsync_WithValidDto_CreatesCustomer()
  nameWithType: CustomerServiceTests.CreateCustomerAsync_WithValidDto_CreatesCustomer()
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.CreateCustomerAsync_WithValidDto_CreatesCustomer()
  type: Method
  source:
    remote:
      path: src/MyApp.Sales/test/MyApp.Sales.Application.Tests/Services/CustomerServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: CreateCustomerAsync_WithValidDto_CreatesCustomer
    path: src/MyApp.Sales/test/MyApp.Sales.Application.Tests/Services/CustomerServiceTests.cs
    startLine: 136
  assemblies:
  - MyApp.Sales.Application.Tests
  namespace: MyApp.Sales.Application.Tests.Services
  syntax:
    content: >-
      [Fact]

      public Task CreateCustomerAsync_WithValidDto_CreatesCustomer()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function CreateCustomerAsync_WithValidDto_CreatesCustomer() As Task
  overload: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.CreateCustomerAsync_WithValidDto_CreatesCustomer*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.CreateCustomerAsync_AssignsNewGuid
  commentId: M:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.CreateCustomerAsync_AssignsNewGuid
  id: CreateCustomerAsync_AssignsNewGuid
  parent: MyApp.Sales.Application.Tests.Services.CustomerServiceTests
  langs:
  - csharp
  - vb
  name: CreateCustomerAsync_AssignsNewGuid()
  nameWithType: CustomerServiceTests.CreateCustomerAsync_AssignsNewGuid()
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.CreateCustomerAsync_AssignsNewGuid()
  type: Method
  source:
    remote:
      path: src/MyApp.Sales/test/MyApp.Sales.Application.Tests/Services/CustomerServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: CreateCustomerAsync_AssignsNewGuid
    path: src/MyApp.Sales/test/MyApp.Sales.Application.Tests/Services/CustomerServiceTests.cs
    startLine: 175
  assemblies:
  - MyApp.Sales.Application.Tests
  namespace: MyApp.Sales.Application.Tests.Services
  syntax:
    content: >-
      [Fact]

      public Task CreateCustomerAsync_AssignsNewGuid()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function CreateCustomerAsync_AssignsNewGuid() As Task
  overload: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.CreateCustomerAsync_AssignsNewGuid*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.UpdateCustomerAsync_WithExistingCustomer_UpdatesSuccessfully
  commentId: M:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.UpdateCustomerAsync_WithExistingCustomer_UpdatesSuccessfully
  id: UpdateCustomerAsync_WithExistingCustomer_UpdatesSuccessfully
  parent: MyApp.Sales.Application.Tests.Services.CustomerServiceTests
  langs:
  - csharp
  - vb
  name: UpdateCustomerAsync_WithExistingCustomer_UpdatesSuccessfully()
  nameWithType: CustomerServiceTests.UpdateCustomerAsync_WithExistingCustomer_UpdatesSuccessfully()
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.UpdateCustomerAsync_WithExistingCustomer_UpdatesSuccessfully()
  type: Method
  source:
    remote:
      path: src/MyApp.Sales/test/MyApp.Sales.Application.Tests/Services/CustomerServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: UpdateCustomerAsync_WithExistingCustomer_UpdatesSuccessfully
    path: src/MyApp.Sales/test/MyApp.Sales.Application.Tests/Services/CustomerServiceTests.cs
    startLine: 198
  assemblies:
  - MyApp.Sales.Application.Tests
  namespace: MyApp.Sales.Application.Tests.Services
  syntax:
    content: >-
      [Fact]

      public Task UpdateCustomerAsync_WithExistingCustomer_UpdatesSuccessfully()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function UpdateCustomerAsync_WithExistingCustomer_UpdatesSuccessfully() As Task
  overload: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.UpdateCustomerAsync_WithExistingCustomer_UpdatesSuccessfully*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.UpdateCustomerAsync_WithNonExistentCustomer_ThrowsInvalidOperationException
  commentId: M:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.UpdateCustomerAsync_WithNonExistentCustomer_ThrowsInvalidOperationException
  id: UpdateCustomerAsync_WithNonExistentCustomer_ThrowsInvalidOperationException
  parent: MyApp.Sales.Application.Tests.Services.CustomerServiceTests
  langs:
  - csharp
  - vb
  name: UpdateCustomerAsync_WithNonExistentCustomer_ThrowsInvalidOperationException()
  nameWithType: CustomerServiceTests.UpdateCustomerAsync_WithNonExistentCustomer_ThrowsInvalidOperationException()
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.UpdateCustomerAsync_WithNonExistentCustomer_ThrowsInvalidOperationException()
  type: Method
  source:
    remote:
      path: src/MyApp.Sales/test/MyApp.Sales.Application.Tests/Services/CustomerServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: UpdateCustomerAsync_WithNonExistentCustomer_ThrowsInvalidOperationException
    path: src/MyApp.Sales/test/MyApp.Sales.Application.Tests/Services/CustomerServiceTests.cs
    startLine: 243
  assemblies:
  - MyApp.Sales.Application.Tests
  namespace: MyApp.Sales.Application.Tests.Services
  syntax:
    content: >-
      [Fact]

      public Task UpdateCustomerAsync_WithNonExistentCustomer_ThrowsInvalidOperationException()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function UpdateCustomerAsync_WithNonExistentCustomer_ThrowsInvalidOperationException() As Task
  overload: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.UpdateCustomerAsync_WithNonExistentCustomer_ThrowsInvalidOperationException*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.DeleteCustomerAsync_CallsRepositoryDeleteWithCorrectId
  commentId: M:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.DeleteCustomerAsync_CallsRepositoryDeleteWithCorrectId
  id: DeleteCustomerAsync_CallsRepositoryDeleteWithCorrectId
  parent: MyApp.Sales.Application.Tests.Services.CustomerServiceTests
  langs:
  - csharp
  - vb
  name: DeleteCustomerAsync_CallsRepositoryDeleteWithCorrectId()
  nameWithType: CustomerServiceTests.DeleteCustomerAsync_CallsRepositoryDeleteWithCorrectId()
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.DeleteCustomerAsync_CallsRepositoryDeleteWithCorrectId()
  type: Method
  source:
    remote:
      path: src/MyApp.Sales/test/MyApp.Sales.Application.Tests/Services/CustomerServiceTests.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: DeleteCustomerAsync_CallsRepositoryDeleteWithCorrectId
    path: src/MyApp.Sales/test/MyApp.Sales.Application.Tests/Services/CustomerServiceTests.cs
    startLine: 265
  assemblies:
  - MyApp.Sales.Application.Tests
  namespace: MyApp.Sales.Application.Tests.Services
  syntax:
    content: >-
      [Fact]

      public Task DeleteCustomerAsync_CallsRepositoryDeleteWithCorrectId()
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <Fact>

      Public Function DeleteCustomerAsync_CallsRepositoryDeleteWithCorrectId() As Task
  overload: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.DeleteCustomerAsync_CallsRepositoryDeleteWithCorrectId*
  attributes:
  - type: Xunit.FactAttribute
    ctor: Xunit.FactAttribute.#ctor
    arguments: []
references:
- uid: MyApp.Sales.Application.Tests.Services
  commentId: N:MyApp.Sales.Application.Tests.Services
  href: MyApp.html
  name: MyApp.Sales.Application.Tests.Services
  nameWithType: MyApp.Sales.Application.Tests.Services
  fullName: MyApp.Sales.Application.Tests.Services
  spec.csharp:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Sales
    name: Sales
    href: MyApp.Sales.html
  - name: .
  - uid: MyApp.Sales.Application
    name: Application
    href: MyApp.Sales.Application.html
  - name: .
  - uid: MyApp.Sales.Application.Tests
    name: Tests
    href: MyApp.Sales.Application.Tests.html
  - name: .
  - uid: MyApp.Sales.Application.Tests.Services
    name: Services
    href: MyApp.Sales.Application.Tests.Services.html
  spec.vb:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Sales
    name: Sales
    href: MyApp.Sales.html
  - name: .
  - uid: MyApp.Sales.Application
    name: Application
    href: MyApp.Sales.Application.html
  - name: .
  - uid: MyApp.Sales.Application.Tests
    name: Tests
    href: MyApp.Sales.Application.Tests.html
  - name: .
  - uid: MyApp.Sales.Application.Tests.Services
    name: Services
    href: MyApp.Sales.Application.Tests.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.#ctor*
  commentId: Overload:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.#ctor
  href: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.html#MyApp_Sales_Application_Tests_Services_CustomerServiceTests__ctor
  name: CustomerServiceTests
  nameWithType: CustomerServiceTests.CustomerServiceTests
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.CustomerServiceTests
  nameWithType.vb: CustomerServiceTests.New
  fullName.vb: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.New
  name.vb: New
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.GetCustomerByIdAsync_WithExistingId_ReturnsCustomerDto*
  commentId: Overload:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.GetCustomerByIdAsync_WithExistingId_ReturnsCustomerDto
  href: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.html#MyApp_Sales_Application_Tests_Services_CustomerServiceTests_GetCustomerByIdAsync_WithExistingId_ReturnsCustomerDto
  name: GetCustomerByIdAsync_WithExistingId_ReturnsCustomerDto
  nameWithType: CustomerServiceTests.GetCustomerByIdAsync_WithExistingId_ReturnsCustomerDto
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.GetCustomerByIdAsync_WithExistingId_ReturnsCustomerDto
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.GetCustomerByIdAsync_WithNonExistentId_ReturnsNull*
  commentId: Overload:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.GetCustomerByIdAsync_WithNonExistentId_ReturnsNull
  href: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.html#MyApp_Sales_Application_Tests_Services_CustomerServiceTests_GetCustomerByIdAsync_WithNonExistentId_ReturnsNull
  name: GetCustomerByIdAsync_WithNonExistentId_ReturnsNull
  nameWithType: CustomerServiceTests.GetCustomerByIdAsync_WithNonExistentId_ReturnsNull
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.GetCustomerByIdAsync_WithNonExistentId_ReturnsNull
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.ListCustomersAsync_ReturnsAllCustomers*
  commentId: Overload:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.ListCustomersAsync_ReturnsAllCustomers
  href: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.html#MyApp_Sales_Application_Tests_Services_CustomerServiceTests_ListCustomersAsync_ReturnsAllCustomers
  name: ListCustomersAsync_ReturnsAllCustomers
  nameWithType: CustomerServiceTests.ListCustomersAsync_ReturnsAllCustomers
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.ListCustomersAsync_ReturnsAllCustomers
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.ListCustomersAsync_WithEmptyRepository_ReturnsEmptyList*
  commentId: Overload:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.ListCustomersAsync_WithEmptyRepository_ReturnsEmptyList
  href: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.html#MyApp_Sales_Application_Tests_Services_CustomerServiceTests_ListCustomersAsync_WithEmptyRepository_ReturnsEmptyList
  name: ListCustomersAsync_WithEmptyRepository_ReturnsEmptyList
  nameWithType: CustomerServiceTests.ListCustomersAsync_WithEmptyRepository_ReturnsEmptyList
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.ListCustomersAsync_WithEmptyRepository_ReturnsEmptyList
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.CreateCustomerAsync_WithValidDto_CreatesCustomer*
  commentId: Overload:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.CreateCustomerAsync_WithValidDto_CreatesCustomer
  href: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.html#MyApp_Sales_Application_Tests_Services_CustomerServiceTests_CreateCustomerAsync_WithValidDto_CreatesCustomer
  name: CreateCustomerAsync_WithValidDto_CreatesCustomer
  nameWithType: CustomerServiceTests.CreateCustomerAsync_WithValidDto_CreatesCustomer
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.CreateCustomerAsync_WithValidDto_CreatesCustomer
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.CreateCustomerAsync_AssignsNewGuid*
  commentId: Overload:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.CreateCustomerAsync_AssignsNewGuid
  href: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.html#MyApp_Sales_Application_Tests_Services_CustomerServiceTests_CreateCustomerAsync_AssignsNewGuid
  name: CreateCustomerAsync_AssignsNewGuid
  nameWithType: CustomerServiceTests.CreateCustomerAsync_AssignsNewGuid
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.CreateCustomerAsync_AssignsNewGuid
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.UpdateCustomerAsync_WithExistingCustomer_UpdatesSuccessfully*
  commentId: Overload:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.UpdateCustomerAsync_WithExistingCustomer_UpdatesSuccessfully
  href: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.html#MyApp_Sales_Application_Tests_Services_CustomerServiceTests_UpdateCustomerAsync_WithExistingCustomer_UpdatesSuccessfully
  name: UpdateCustomerAsync_WithExistingCustomer_UpdatesSuccessfully
  nameWithType: CustomerServiceTests.UpdateCustomerAsync_WithExistingCustomer_UpdatesSuccessfully
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.UpdateCustomerAsync_WithExistingCustomer_UpdatesSuccessfully
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.UpdateCustomerAsync_WithNonExistentCustomer_ThrowsInvalidOperationException*
  commentId: Overload:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.UpdateCustomerAsync_WithNonExistentCustomer_ThrowsInvalidOperationException
  href: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.html#MyApp_Sales_Application_Tests_Services_CustomerServiceTests_UpdateCustomerAsync_WithNonExistentCustomer_ThrowsInvalidOperationException
  name: UpdateCustomerAsync_WithNonExistentCustomer_ThrowsInvalidOperationException
  nameWithType: CustomerServiceTests.UpdateCustomerAsync_WithNonExistentCustomer_ThrowsInvalidOperationException
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.UpdateCustomerAsync_WithNonExistentCustomer_ThrowsInvalidOperationException
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.DeleteCustomerAsync_CallsRepositoryDeleteWithCorrectId*
  commentId: Overload:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.DeleteCustomerAsync_CallsRepositoryDeleteWithCorrectId
  href: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.html#MyApp_Sales_Application_Tests_Services_CustomerServiceTests_DeleteCustomerAsync_CallsRepositoryDeleteWithCorrectId
  name: DeleteCustomerAsync_CallsRepositoryDeleteWithCorrectId
  nameWithType: CustomerServiceTests.DeleteCustomerAsync_CallsRepositoryDeleteWithCorrectId
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.DeleteCustomerAsync_CallsRepositoryDeleteWithCorrectId
