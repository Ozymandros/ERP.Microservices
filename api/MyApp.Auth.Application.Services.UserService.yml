### YamlMime:ManagedReference
items:
- uid: MyApp.Auth.Application.Services.UserService
  commentId: T:MyApp.Auth.Application.Services.UserService
  id: UserService
  parent: MyApp.Auth.Application.Services
  children:
  - MyApp.Auth.Application.Services.UserService.#ctor(Microsoft.AspNetCore.Identity.UserManager{MyApp.Auth.Domain.Entities.ApplicationUser},Microsoft.AspNetCore.Identity.RoleManager{MyApp.Auth.Domain.Entities.ApplicationRole},MyApp.Auth.Domain.Repositories.IUserRepository,AutoMapper.IMapper,Microsoft.Extensions.Logging.ILogger{MyApp.Auth.Application.Services.UserService},Microsoft.AspNetCore.Http.IHttpContextAccessor,MyApp.Auth.Domain.Repositories.IPermissionRepository)
  - MyApp.Auth.Application.Services.UserService.AssignRoleAsync(System.Guid,System.String)
  - MyApp.Auth.Application.Services.UserService.ChangePasswordAsync(System.Guid,System.String,System.String)
  - MyApp.Auth.Application.Services.UserService.DeleteUserAsync(System.Guid)
  - MyApp.Auth.Application.Services.UserService.GetAllUsersAsync
  - MyApp.Auth.Application.Services.UserService.GetAllUsersPaginatedAsync(System.Int32,System.Int32)
  - MyApp.Auth.Application.Services.UserService.GetCurrentUserAsync
  - MyApp.Auth.Application.Services.UserService.GetUserByEmailAsync(System.String)
  - MyApp.Auth.Application.Services.UserService.GetUserByIdAsync(System.Guid)
  - MyApp.Auth.Application.Services.UserService.GetUserRolesAsync(System.Guid)
  - MyApp.Auth.Application.Services.UserService.RemoveRoleAsync(System.Guid,System.String)
  - MyApp.Auth.Application.Services.UserService.UpdateUserAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto)
  langs:
  - csharp
  - vb
  name: UserService
  nameWithType: UserService
  fullName: MyApp.Auth.Application.Services.UserService
  type: Class
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/UserService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: UserService
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/UserService.cs
    startLine: 12
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  syntax:
    content: 'public class UserService : IUserService'
    content.vb: Public Class UserService Implements IUserService
  inheritance:
  - System.Object
  implements:
  - MyApp.Auth.Application.Contracts.Services.IUserService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: MyApp.Auth.Application.Services.UserService.#ctor(Microsoft.AspNetCore.Identity.UserManager{MyApp.Auth.Domain.Entities.ApplicationUser},Microsoft.AspNetCore.Identity.RoleManager{MyApp.Auth.Domain.Entities.ApplicationRole},MyApp.Auth.Domain.Repositories.IUserRepository,AutoMapper.IMapper,Microsoft.Extensions.Logging.ILogger{MyApp.Auth.Application.Services.UserService},Microsoft.AspNetCore.Http.IHttpContextAccessor,MyApp.Auth.Domain.Repositories.IPermissionRepository)
  commentId: M:MyApp.Auth.Application.Services.UserService.#ctor(Microsoft.AspNetCore.Identity.UserManager{MyApp.Auth.Domain.Entities.ApplicationUser},Microsoft.AspNetCore.Identity.RoleManager{MyApp.Auth.Domain.Entities.ApplicationRole},MyApp.Auth.Domain.Repositories.IUserRepository,AutoMapper.IMapper,Microsoft.Extensions.Logging.ILogger{MyApp.Auth.Application.Services.UserService},Microsoft.AspNetCore.Http.IHttpContextAccessor,MyApp.Auth.Domain.Repositories.IPermissionRepository)
  id: '#ctor(Microsoft.AspNetCore.Identity.UserManager{MyApp.Auth.Domain.Entities.ApplicationUser},Microsoft.AspNetCore.Identity.RoleManager{MyApp.Auth.Domain.Entities.ApplicationRole},MyApp.Auth.Domain.Repositories.IUserRepository,AutoMapper.IMapper,Microsoft.Extensions.Logging.ILogger{MyApp.Auth.Application.Services.UserService},Microsoft.AspNetCore.Http.IHttpContextAccessor,MyApp.Auth.Domain.Repositories.IPermissionRepository)'
  parent: MyApp.Auth.Application.Services.UserService
  langs:
  - csharp
  - vb
  name: UserService(UserManager<ApplicationUser>, RoleManager<ApplicationRole>, IUserRepository, IMapper, ILogger<UserService>, IHttpContextAccessor, IPermissionRepository)
  nameWithType: UserService.UserService(UserManager<ApplicationUser>, RoleManager<ApplicationRole>, IUserRepository, IMapper, ILogger<UserService>, IHttpContextAccessor, IPermissionRepository)
  fullName: MyApp.Auth.Application.Services.UserService.UserService(Microsoft.AspNetCore.Identity.UserManager<MyApp.Auth.Domain.Entities.ApplicationUser>, Microsoft.AspNetCore.Identity.RoleManager<MyApp.Auth.Domain.Entities.ApplicationRole>, MyApp.Auth.Domain.Repositories.IUserRepository, AutoMapper.IMapper, Microsoft.Extensions.Logging.ILogger<MyApp.Auth.Application.Services.UserService>, Microsoft.AspNetCore.Http.IHttpContextAccessor, MyApp.Auth.Domain.Repositories.IPermissionRepository)
  type: Constructor
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/UserService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: .ctor
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/UserService.cs
    startLine: 22
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  syntax:
    content: public UserService(UserManager<ApplicationUser> userManager, RoleManager<ApplicationRole> roleManager, IUserRepository userRepository, IMapper mapper, ILogger<UserService> logger, IHttpContextAccessor httpContextAccessor, IPermissionRepository permissionRepository)
    parameters:
    - id: userManager
      type: Microsoft.AspNetCore.Identity.UserManager{MyApp.Auth.Domain.Entities.ApplicationUser}
    - id: roleManager
      type: Microsoft.AspNetCore.Identity.RoleManager{MyApp.Auth.Domain.Entities.ApplicationRole}
    - id: userRepository
      type: MyApp.Auth.Domain.Repositories.IUserRepository
    - id: mapper
      type: AutoMapper.IMapper
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{MyApp.Auth.Application.Services.UserService}
    - id: httpContextAccessor
      type: Microsoft.AspNetCore.Http.IHttpContextAccessor
    - id: permissionRepository
      type: MyApp.Auth.Domain.Repositories.IPermissionRepository
    content.vb: Public Sub New(userManager As UserManager(Of ApplicationUser), roleManager As RoleManager(Of ApplicationRole), userRepository As IUserRepository, mapper As IMapper, logger As ILogger(Of UserService), httpContextAccessor As IHttpContextAccessor, permissionRepository As IPermissionRepository)
  overload: MyApp.Auth.Application.Services.UserService.#ctor*
  nameWithType.vb: UserService.New(UserManager(Of ApplicationUser), RoleManager(Of ApplicationRole), IUserRepository, IMapper, ILogger(Of UserService), IHttpContextAccessor, IPermissionRepository)
  fullName.vb: MyApp.Auth.Application.Services.UserService.New(Microsoft.AspNetCore.Identity.UserManager(Of MyApp.Auth.Domain.Entities.ApplicationUser), Microsoft.AspNetCore.Identity.RoleManager(Of MyApp.Auth.Domain.Entities.ApplicationRole), MyApp.Auth.Domain.Repositories.IUserRepository, AutoMapper.IMapper, Microsoft.Extensions.Logging.ILogger(Of MyApp.Auth.Application.Services.UserService), Microsoft.AspNetCore.Http.IHttpContextAccessor, MyApp.Auth.Domain.Repositories.IPermissionRepository)
  name.vb: New(UserManager(Of ApplicationUser), RoleManager(Of ApplicationRole), IUserRepository, IMapper, ILogger(Of UserService), IHttpContextAccessor, IPermissionRepository)
- uid: MyApp.Auth.Application.Services.UserService.GetCurrentUserAsync
  commentId: M:MyApp.Auth.Application.Services.UserService.GetCurrentUserAsync
  id: GetCurrentUserAsync
  parent: MyApp.Auth.Application.Services.UserService
  langs:
  - csharp
  - vb
  name: GetCurrentUserAsync()
  nameWithType: UserService.GetCurrentUserAsync()
  fullName: MyApp.Auth.Application.Services.UserService.GetCurrentUserAsync()
  type: Method
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/UserService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: GetCurrentUserAsync
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/UserService.cs
    startLine: 45
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  summary: Get current user
  example: []
  syntax:
    content: public Task<UserDto?> GetCurrentUserAsync()
    return:
      type: System.Threading.Tasks.Task{MyApp.Auth.Application.Contracts.DTOs.UserDto}
      description: ''
    content.vb: Public Function GetCurrentUserAsync() As Task(Of UserDto)
  overload: MyApp.Auth.Application.Services.UserService.GetCurrentUserAsync*
  implements:
  - MyApp.Auth.Application.Contracts.Services.IUserService.GetCurrentUserAsync
- uid: MyApp.Auth.Application.Services.UserService.GetUserByIdAsync(System.Guid)
  commentId: M:MyApp.Auth.Application.Services.UserService.GetUserByIdAsync(System.Guid)
  id: GetUserByIdAsync(System.Guid)
  parent: MyApp.Auth.Application.Services.UserService
  langs:
  - csharp
  - vb
  name: GetUserByIdAsync(Guid)
  nameWithType: UserService.GetUserByIdAsync(Guid)
  fullName: MyApp.Auth.Application.Services.UserService.GetUserByIdAsync(System.Guid)
  type: Method
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/UserService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: GetUserByIdAsync
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/UserService.cs
    startLine: 82
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  example: []
  syntax:
    content: public Task<UserDto?> GetUserByIdAsync(Guid userId)
    parameters:
    - id: userId
      type: System.Guid
    return:
      type: System.Threading.Tasks.Task{MyApp.Auth.Application.Contracts.DTOs.UserDto}
    content.vb: Public Function GetUserByIdAsync(userId As Guid) As Task(Of UserDto)
  overload: MyApp.Auth.Application.Services.UserService.GetUserByIdAsync*
  implements:
  - MyApp.Auth.Application.Contracts.Services.IUserService.GetUserByIdAsync(System.Guid)
- uid: MyApp.Auth.Application.Services.UserService.GetUserByEmailAsync(System.String)
  commentId: M:MyApp.Auth.Application.Services.UserService.GetUserByEmailAsync(System.String)
  id: GetUserByEmailAsync(System.String)
  parent: MyApp.Auth.Application.Services.UserService
  langs:
  - csharp
  - vb
  name: GetUserByEmailAsync(string)
  nameWithType: UserService.GetUserByEmailAsync(string)
  fullName: MyApp.Auth.Application.Services.UserService.GetUserByEmailAsync(string)
  type: Method
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/UserService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: GetUserByEmailAsync
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/UserService.cs
    startLine: 88
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  example: []
  syntax:
    content: public Task<UserDto?> GetUserByEmailAsync(string email)
    parameters:
    - id: email
      type: System.String
    return:
      type: System.Threading.Tasks.Task{MyApp.Auth.Application.Contracts.DTOs.UserDto}
    content.vb: Public Function GetUserByEmailAsync(email As String) As Task(Of UserDto)
  overload: MyApp.Auth.Application.Services.UserService.GetUserByEmailAsync*
  implements:
  - MyApp.Auth.Application.Contracts.Services.IUserService.GetUserByEmailAsync(System.String)
  nameWithType.vb: UserService.GetUserByEmailAsync(String)
  fullName.vb: MyApp.Auth.Application.Services.UserService.GetUserByEmailAsync(String)
  name.vb: GetUserByEmailAsync(String)
- uid: MyApp.Auth.Application.Services.UserService.GetAllUsersAsync
  commentId: M:MyApp.Auth.Application.Services.UserService.GetAllUsersAsync
  id: GetAllUsersAsync
  parent: MyApp.Auth.Application.Services.UserService
  langs:
  - csharp
  - vb
  name: GetAllUsersAsync()
  nameWithType: UserService.GetAllUsersAsync()
  fullName: MyApp.Auth.Application.Services.UserService.GetAllUsersAsync()
  type: Method
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/UserService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: GetAllUsersAsync
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/UserService.cs
    startLine: 94
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  example: []
  syntax:
    content: public Task<IEnumerable<UserDto>> GetAllUsersAsync()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{MyApp.Auth.Application.Contracts.DTOs.UserDto}}
    content.vb: Public Function GetAllUsersAsync() As Task(Of IEnumerable(Of UserDto))
  overload: MyApp.Auth.Application.Services.UserService.GetAllUsersAsync*
  implements:
  - MyApp.Auth.Application.Contracts.Services.IUserService.GetAllUsersAsync
- uid: MyApp.Auth.Application.Services.UserService.GetAllUsersPaginatedAsync(System.Int32,System.Int32)
  commentId: M:MyApp.Auth.Application.Services.UserService.GetAllUsersPaginatedAsync(System.Int32,System.Int32)
  id: GetAllUsersPaginatedAsync(System.Int32,System.Int32)
  parent: MyApp.Auth.Application.Services.UserService
  langs:
  - csharp
  - vb
  name: GetAllUsersPaginatedAsync(int, int)
  nameWithType: UserService.GetAllUsersPaginatedAsync(int, int)
  fullName: MyApp.Auth.Application.Services.UserService.GetAllUsersPaginatedAsync(int, int)
  type: Method
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/UserService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: GetAllUsersPaginatedAsync
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/UserService.cs
    startLine: 100
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  example: []
  syntax:
    content: public Task<PaginatedResult<UserDto>> GetAllUsersPaginatedAsync(int pageNumber, int pageSize)
    parameters:
    - id: pageNumber
      type: System.Int32
    - id: pageSize
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{MyApp.Shared.Domain.Pagination.PaginatedResult{MyApp.Auth.Application.Contracts.DTOs.UserDto}}
    content.vb: Public Function GetAllUsersPaginatedAsync(pageNumber As Integer, pageSize As Integer) As Task(Of PaginatedResult(Of UserDto))
  overload: MyApp.Auth.Application.Services.UserService.GetAllUsersPaginatedAsync*
  implements:
  - MyApp.Auth.Application.Contracts.Services.IUserService.GetAllUsersPaginatedAsync(System.Int32,System.Int32)
  nameWithType.vb: UserService.GetAllUsersPaginatedAsync(Integer, Integer)
  fullName.vb: MyApp.Auth.Application.Services.UserService.GetAllUsersPaginatedAsync(Integer, Integer)
  name.vb: GetAllUsersPaginatedAsync(Integer, Integer)
- uid: MyApp.Auth.Application.Services.UserService.UpdateUserAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto)
  commentId: M:MyApp.Auth.Application.Services.UserService.UpdateUserAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto)
  id: UpdateUserAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto)
  parent: MyApp.Auth.Application.Services.UserService
  langs:
  - csharp
  - vb
  name: UpdateUserAsync(Guid, UpdateUserDto)
  nameWithType: UserService.UpdateUserAsync(Guid, UpdateUserDto)
  fullName: MyApp.Auth.Application.Services.UserService.UpdateUserAsync(System.Guid, MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto)
  type: Method
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/UserService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: UpdateUserAsync
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/UserService.cs
    startLine: 107
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  example: []
  syntax:
    content: public Task<bool> UpdateUserAsync(Guid userId, UpdateUserDto updateUserDto)
    parameters:
    - id: userId
      type: System.Guid
    - id: updateUserDto
      type: MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function UpdateUserAsync(userId As Guid, updateUserDto As UpdateUserDto) As Task(Of Boolean)
  overload: MyApp.Auth.Application.Services.UserService.UpdateUserAsync*
  implements:
  - MyApp.Auth.Application.Contracts.Services.IUserService.UpdateUserAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto)
- uid: MyApp.Auth.Application.Services.UserService.ChangePasswordAsync(System.Guid,System.String,System.String)
  commentId: M:MyApp.Auth.Application.Services.UserService.ChangePasswordAsync(System.Guid,System.String,System.String)
  id: ChangePasswordAsync(System.Guid,System.String,System.String)
  parent: MyApp.Auth.Application.Services.UserService
  langs:
  - csharp
  - vb
  name: ChangePasswordAsync(Guid, string, string)
  nameWithType: UserService.ChangePasswordAsync(Guid, string, string)
  fullName: MyApp.Auth.Application.Services.UserService.ChangePasswordAsync(System.Guid, string, string)
  type: Method
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/UserService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: ChangePasswordAsync
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/UserService.cs
    startLine: 149
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  example: []
  syntax:
    content: public Task<bool> ChangePasswordAsync(Guid userId, string currentPassword, string newPassword)
    parameters:
    - id: userId
      type: System.Guid
    - id: currentPassword
      type: System.String
    - id: newPassword
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function ChangePasswordAsync(userId As Guid, currentPassword As String, newPassword As String) As Task(Of Boolean)
  overload: MyApp.Auth.Application.Services.UserService.ChangePasswordAsync*
  implements:
  - MyApp.Auth.Application.Contracts.Services.IUserService.ChangePasswordAsync(System.Guid,System.String,System.String)
  nameWithType.vb: UserService.ChangePasswordAsync(Guid, String, String)
  fullName.vb: MyApp.Auth.Application.Services.UserService.ChangePasswordAsync(System.Guid, String, String)
  name.vb: ChangePasswordAsync(Guid, String, String)
- uid: MyApp.Auth.Application.Services.UserService.DeleteUserAsync(System.Guid)
  commentId: M:MyApp.Auth.Application.Services.UserService.DeleteUserAsync(System.Guid)
  id: DeleteUserAsync(System.Guid)
  parent: MyApp.Auth.Application.Services.UserService
  langs:
  - csharp
  - vb
  name: DeleteUserAsync(Guid)
  nameWithType: UserService.DeleteUserAsync(Guid)
  fullName: MyApp.Auth.Application.Services.UserService.DeleteUserAsync(System.Guid)
  type: Method
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/UserService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: DeleteUserAsync
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/UserService.cs
    startLine: 168
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  example: []
  syntax:
    content: public Task<bool> DeleteUserAsync(Guid userId)
    parameters:
    - id: userId
      type: System.Guid
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function DeleteUserAsync(userId As Guid) As Task(Of Boolean)
  overload: MyApp.Auth.Application.Services.UserService.DeleteUserAsync*
  implements:
  - MyApp.Auth.Application.Contracts.Services.IUserService.DeleteUserAsync(System.Guid)
- uid: MyApp.Auth.Application.Services.UserService.AssignRoleAsync(System.Guid,System.String)
  commentId: M:MyApp.Auth.Application.Services.UserService.AssignRoleAsync(System.Guid,System.String)
  id: AssignRoleAsync(System.Guid,System.String)
  parent: MyApp.Auth.Application.Services.UserService
  langs:
  - csharp
  - vb
  name: AssignRoleAsync(Guid, string)
  nameWithType: UserService.AssignRoleAsync(Guid, string)
  fullName: MyApp.Auth.Application.Services.UserService.AssignRoleAsync(System.Guid, string)
  type: Method
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/UserService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: AssignRoleAsync
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/UserService.cs
    startLine: 187
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  example: []
  syntax:
    content: public Task<bool> AssignRoleAsync(Guid userId, string roleName)
    parameters:
    - id: userId
      type: System.Guid
    - id: roleName
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function AssignRoleAsync(userId As Guid, roleName As String) As Task(Of Boolean)
  overload: MyApp.Auth.Application.Services.UserService.AssignRoleAsync*
  implements:
  - MyApp.Auth.Application.Contracts.Services.IUserService.AssignRoleAsync(System.Guid,System.String)
  nameWithType.vb: UserService.AssignRoleAsync(Guid, String)
  fullName.vb: MyApp.Auth.Application.Services.UserService.AssignRoleAsync(System.Guid, String)
  name.vb: AssignRoleAsync(Guid, String)
- uid: MyApp.Auth.Application.Services.UserService.RemoveRoleAsync(System.Guid,System.String)
  commentId: M:MyApp.Auth.Application.Services.UserService.RemoveRoleAsync(System.Guid,System.String)
  id: RemoveRoleAsync(System.Guid,System.String)
  parent: MyApp.Auth.Application.Services.UserService
  langs:
  - csharp
  - vb
  name: RemoveRoleAsync(Guid, string)
  nameWithType: UserService.RemoveRoleAsync(Guid, string)
  fullName: MyApp.Auth.Application.Services.UserService.RemoveRoleAsync(System.Guid, string)
  type: Method
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/UserService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: RemoveRoleAsync
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/UserService.cs
    startLine: 213
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  example: []
  syntax:
    content: public Task<bool> RemoveRoleAsync(Guid userId, string roleName)
    parameters:
    - id: userId
      type: System.Guid
    - id: roleName
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function RemoveRoleAsync(userId As Guid, roleName As String) As Task(Of Boolean)
  overload: MyApp.Auth.Application.Services.UserService.RemoveRoleAsync*
  implements:
  - MyApp.Auth.Application.Contracts.Services.IUserService.RemoveRoleAsync(System.Guid,System.String)
  nameWithType.vb: UserService.RemoveRoleAsync(Guid, String)
  fullName.vb: MyApp.Auth.Application.Services.UserService.RemoveRoleAsync(System.Guid, String)
  name.vb: RemoveRoleAsync(Guid, String)
- uid: MyApp.Auth.Application.Services.UserService.GetUserRolesAsync(System.Guid)
  commentId: M:MyApp.Auth.Application.Services.UserService.GetUserRolesAsync(System.Guid)
  id: GetUserRolesAsync(System.Guid)
  parent: MyApp.Auth.Application.Services.UserService
  langs:
  - csharp
  - vb
  name: GetUserRolesAsync(Guid)
  nameWithType: UserService.GetUserRolesAsync(Guid)
  fullName: MyApp.Auth.Application.Services.UserService.GetUserRolesAsync(System.Guid)
  type: Method
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/UserService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: GetUserRolesAsync
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/UserService.cs
    startLine: 232
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  example: []
  syntax:
    content: public Task<IEnumerable<RoleDto>> GetUserRolesAsync(Guid userId)
    parameters:
    - id: userId
      type: System.Guid
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{MyApp.Auth.Application.Contracts.DTOs.RoleDto}}
    content.vb: Public Function GetUserRolesAsync(userId As Guid) As Task(Of IEnumerable(Of RoleDto))
  overload: MyApp.Auth.Application.Services.UserService.GetUserRolesAsync*
  implements:
  - MyApp.Auth.Application.Contracts.Services.IUserService.GetUserRolesAsync(System.Guid)
references:
- uid: MyApp.Auth.Application.Services
  commentId: N:MyApp.Auth.Application.Services
  href: MyApp.html
  name: MyApp.Auth.Application.Services
  nameWithType: MyApp.Auth.Application.Services
  fullName: MyApp.Auth.Application.Services
  spec.csharp:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Auth
    name: Auth
    href: MyApp.Auth.html
  - name: .
  - uid: MyApp.Auth.Application
    name: Application
    href: MyApp.Auth.Application.html
  - name: .
  - uid: MyApp.Auth.Application.Services
    name: Services
    href: MyApp.Auth.Application.Services.html
  spec.vb:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Auth
    name: Auth
    href: MyApp.Auth.html
  - name: .
  - uid: MyApp.Auth.Application
    name: Application
    href: MyApp.Auth.Application.html
  - name: .
  - uid: MyApp.Auth.Application.Services
    name: Services
    href: MyApp.Auth.Application.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MyApp.Auth.Application.Contracts.Services.IUserService
  commentId: T:MyApp.Auth.Application.Contracts.Services.IUserService
  parent: MyApp.Auth.Application.Contracts.Services
  href: MyApp.Auth.Application.Contracts.Services.IUserService.html
  name: IUserService
  nameWithType: IUserService
  fullName: MyApp.Auth.Application.Contracts.Services.IUserService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MyApp.Auth.Application.Contracts.Services
  commentId: N:MyApp.Auth.Application.Contracts.Services
  href: MyApp.html
  name: MyApp.Auth.Application.Contracts.Services
  nameWithType: MyApp.Auth.Application.Contracts.Services
  fullName: MyApp.Auth.Application.Contracts.Services
  spec.csharp:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Auth
    name: Auth
    href: MyApp.Auth.html
  - name: .
  - uid: MyApp.Auth.Application
    name: Application
    href: MyApp.Auth.Application.html
  - name: .
  - uid: MyApp.Auth.Application.Contracts
    name: Contracts
    href: MyApp.Auth.Application.Contracts.html
  - name: .
  - uid: MyApp.Auth.Application.Contracts.Services
    name: Services
    href: MyApp.Auth.Application.Contracts.Services.html
  spec.vb:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Auth
    name: Auth
    href: MyApp.Auth.html
  - name: .
  - uid: MyApp.Auth.Application
    name: Application
    href: MyApp.Auth.Application.html
  - name: .
  - uid: MyApp.Auth.Application.Contracts
    name: Contracts
    href: MyApp.Auth.Application.Contracts.html
  - name: .
  - uid: MyApp.Auth.Application.Contracts.Services
    name: Services
    href: MyApp.Auth.Application.Contracts.Services.html
- uid: MyApp.Auth.Application.Services.UserService.#ctor*
  commentId: Overload:MyApp.Auth.Application.Services.UserService.#ctor
  href: MyApp.Auth.Application.Services.UserService.html#MyApp_Auth_Application_Services_UserService__ctor_Microsoft_AspNetCore_Identity_UserManager_MyApp_Auth_Domain_Entities_ApplicationUser__Microsoft_AspNetCore_Identity_RoleManager_MyApp_Auth_Domain_Entities_ApplicationRole__MyApp_Auth_Domain_Repositories_IUserRepository_AutoMapper_IMapper_Microsoft_Extensions_Logging_ILogger_MyApp_Auth_Application_Services_UserService__Microsoft_AspNetCore_Http_IHttpContextAccessor_MyApp_Auth_Domain_Repositories_IPermissionRepository_
  name: UserService
  nameWithType: UserService.UserService
  fullName: MyApp.Auth.Application.Services.UserService.UserService
  nameWithType.vb: UserService.New
  fullName.vb: MyApp.Auth.Application.Services.UserService.New
  name.vb: New
- uid: Microsoft.AspNetCore.Identity.UserManager{MyApp.Auth.Domain.Entities.ApplicationUser}
  commentId: T:Microsoft.AspNetCore.Identity.UserManager{MyApp.Auth.Domain.Entities.ApplicationUser}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.UserManager`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.usermanager-1
  name: UserManager<ApplicationUser>
  nameWithType: UserManager<ApplicationUser>
  fullName: Microsoft.AspNetCore.Identity.UserManager<MyApp.Auth.Domain.Entities.ApplicationUser>
  nameWithType.vb: UserManager(Of ApplicationUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of MyApp.Auth.Domain.Entities.ApplicationUser)
  name.vb: UserManager(Of ApplicationUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.usermanager-1
  - name: <
  - uid: MyApp.Auth.Domain.Entities.ApplicationUser
    name: ApplicationUser
  - name: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.usermanager-1
  - name: (
  - name: Of
  - name: " "
  - uid: MyApp.Auth.Domain.Entities.ApplicationUser
    name: ApplicationUser
  - name: )
- uid: Microsoft.AspNetCore.Identity.RoleManager{MyApp.Auth.Domain.Entities.ApplicationRole}
  commentId: T:Microsoft.AspNetCore.Identity.RoleManager{MyApp.Auth.Domain.Entities.ApplicationRole}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.RoleManager`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.rolemanager-1
  name: RoleManager<ApplicationRole>
  nameWithType: RoleManager<ApplicationRole>
  fullName: Microsoft.AspNetCore.Identity.RoleManager<MyApp.Auth.Domain.Entities.ApplicationRole>
  nameWithType.vb: RoleManager(Of ApplicationRole)
  fullName.vb: Microsoft.AspNetCore.Identity.RoleManager(Of MyApp.Auth.Domain.Entities.ApplicationRole)
  name.vb: RoleManager(Of ApplicationRole)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.rolemanager-1
  - name: <
  - uid: MyApp.Auth.Domain.Entities.ApplicationRole
    name: ApplicationRole
  - name: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.rolemanager-1
  - name: (
  - name: Of
  - name: " "
  - uid: MyApp.Auth.Domain.Entities.ApplicationRole
    name: ApplicationRole
  - name: )
- uid: MyApp.Auth.Domain.Repositories.IUserRepository
  commentId: T:MyApp.Auth.Domain.Repositories.IUserRepository
  parent: MyApp.Auth.Domain.Repositories
  href: MyApp.Auth.Domain.Repositories.IUserRepository.html
  name: IUserRepository
  nameWithType: IUserRepository
  fullName: MyApp.Auth.Domain.Repositories.IUserRepository
- uid: AutoMapper.IMapper
  commentId: T:AutoMapper.IMapper
  parent: AutoMapper
  isExternal: true
  name: IMapper
  nameWithType: IMapper
  fullName: AutoMapper.IMapper
- uid: Microsoft.Extensions.Logging.ILogger{MyApp.Auth.Application.Services.UserService}
  commentId: T:Microsoft.Extensions.Logging.ILogger{MyApp.Auth.Application.Services.UserService}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<UserService>
  nameWithType: ILogger<UserService>
  fullName: Microsoft.Extensions.Logging.ILogger<MyApp.Auth.Application.Services.UserService>
  nameWithType.vb: ILogger(Of UserService)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of MyApp.Auth.Application.Services.UserService)
  name.vb: ILogger(Of UserService)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - uid: MyApp.Auth.Application.Services.UserService
    name: UserService
    href: MyApp.Auth.Application.Services.UserService.html
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - uid: MyApp.Auth.Application.Services.UserService
    name: UserService
    href: MyApp.Auth.Application.Services.UserService.html
  - name: )
- uid: Microsoft.AspNetCore.Http.IHttpContextAccessor
  commentId: T:Microsoft.AspNetCore.Http.IHttpContextAccessor
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.http.ihttpcontextaccessor
  name: IHttpContextAccessor
  nameWithType: IHttpContextAccessor
  fullName: Microsoft.AspNetCore.Http.IHttpContextAccessor
- uid: MyApp.Auth.Domain.Repositories.IPermissionRepository
  commentId: T:MyApp.Auth.Domain.Repositories.IPermissionRepository
  parent: MyApp.Auth.Domain.Repositories
  href: MyApp.Auth.Domain.Repositories.IPermissionRepository.html
  name: IPermissionRepository
  nameWithType: IPermissionRepository
  fullName: MyApp.Auth.Domain.Repositories.IPermissionRepository
- uid: Microsoft.AspNetCore.Identity.UserManager`1
  commentId: T:Microsoft.AspNetCore.Identity.UserManager`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.usermanager-1
  name: UserManager<TUser>
  nameWithType: UserManager<TUser>
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>
  nameWithType.vb: UserManager(Of TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser)
  name.vb: UserManager(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.usermanager-1
  - name: <
  - name: TUser
  - name: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.usermanager-1
  - name: (
  - name: Of
  - name: " "
  - name: TUser
  - name: )
- uid: Microsoft.AspNetCore.Identity
  commentId: N:Microsoft.AspNetCore.Identity
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.AspNetCore.Identity
  nameWithType: Microsoft.AspNetCore.Identity
  fullName: Microsoft.AspNetCore.Identity
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore
  - name: .
  - uid: Microsoft.AspNetCore.Identity
    name: Identity
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore
  - name: .
  - uid: Microsoft.AspNetCore.Identity
    name: Identity
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity
- uid: Microsoft.AspNetCore.Identity.RoleManager`1
  commentId: T:Microsoft.AspNetCore.Identity.RoleManager`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.rolemanager-1
  name: RoleManager<TRole>
  nameWithType: RoleManager<TRole>
  fullName: Microsoft.AspNetCore.Identity.RoleManager<TRole>
  nameWithType.vb: RoleManager(Of TRole)
  fullName.vb: Microsoft.AspNetCore.Identity.RoleManager(Of TRole)
  name.vb: RoleManager(Of TRole)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.rolemanager-1
  - name: <
  - name: TRole
  - name: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.RoleManager`1
    name: RoleManager
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.rolemanager-1
  - name: (
  - name: Of
  - name: " "
  - name: TRole
  - name: )
- uid: MyApp.Auth.Domain.Repositories
  commentId: N:MyApp.Auth.Domain.Repositories
  href: MyApp.html
  name: MyApp.Auth.Domain.Repositories
  nameWithType: MyApp.Auth.Domain.Repositories
  fullName: MyApp.Auth.Domain.Repositories
  spec.csharp:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Auth
    name: Auth
    href: MyApp.Auth.html
  - name: .
  - uid: MyApp.Auth.Domain
    name: Domain
    href: MyApp.Auth.Domain.html
  - name: .
  - uid: MyApp.Auth.Domain.Repositories
    name: Repositories
    href: MyApp.Auth.Domain.Repositories.html
  spec.vb:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Auth
    name: Auth
    href: MyApp.Auth.html
  - name: .
  - uid: MyApp.Auth.Domain
    name: Domain
    href: MyApp.Auth.Domain.html
  - name: .
  - uid: MyApp.Auth.Domain.Repositories
    name: Repositories
    href: MyApp.Auth.Domain.Repositories.html
- uid: AutoMapper
  commentId: N:AutoMapper
  isExternal: true
  name: AutoMapper
  nameWithType: AutoMapper
  fullName: AutoMapper
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - name: TCategoryName
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - name: TCategoryName
  - name: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore
  - name: .
  - uid: Microsoft.AspNetCore.Http
    name: Http
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.http
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore
  - name: .
  - uid: Microsoft.AspNetCore.Http
    name: Http
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.http
- uid: MyApp.Auth.Application.Services.UserService.GetCurrentUserAsync*
  commentId: Overload:MyApp.Auth.Application.Services.UserService.GetCurrentUserAsync
  href: MyApp.Auth.Application.Services.UserService.html#MyApp_Auth_Application_Services_UserService_GetCurrentUserAsync
  name: GetCurrentUserAsync
  nameWithType: UserService.GetCurrentUserAsync
  fullName: MyApp.Auth.Application.Services.UserService.GetCurrentUserAsync
- uid: MyApp.Auth.Application.Contracts.Services.IUserService.GetCurrentUserAsync
  commentId: M:MyApp.Auth.Application.Contracts.Services.IUserService.GetCurrentUserAsync
  parent: MyApp.Auth.Application.Contracts.Services.IUserService
  name: GetCurrentUserAsync()
  nameWithType: IUserService.GetCurrentUserAsync()
  fullName: MyApp.Auth.Application.Contracts.Services.IUserService.GetCurrentUserAsync()
  spec.csharp:
  - uid: MyApp.Auth.Application.Contracts.Services.IUserService.GetCurrentUserAsync
    name: GetCurrentUserAsync
  - name: (
  - name: )
  spec.vb:
  - uid: MyApp.Auth.Application.Contracts.Services.IUserService.GetCurrentUserAsync
    name: GetCurrentUserAsync
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{MyApp.Auth.Application.Contracts.DTOs.UserDto}
  commentId: T:System.Threading.Tasks.Task{MyApp.Auth.Application.Contracts.DTOs.UserDto}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<UserDto>
  nameWithType: Task<UserDto>
  fullName: System.Threading.Tasks.Task<MyApp.Auth.Application.Contracts.DTOs.UserDto>
  nameWithType.vb: Task(Of UserDto)
  fullName.vb: System.Threading.Tasks.Task(Of MyApp.Auth.Application.Contracts.DTOs.UserDto)
  name.vb: Task(Of UserDto)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: MyApp.Auth.Application.Contracts.DTOs.UserDto
    name: UserDto
    href: MyApp.Auth.Application.Contracts.DTOs.UserDto.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: MyApp.Auth.Application.Contracts.DTOs.UserDto
    name: UserDto
    href: MyApp.Auth.Application.Contracts.DTOs.UserDto.html
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: MyApp.Auth.Application.Services.UserService.GetUserByIdAsync*
  commentId: Overload:MyApp.Auth.Application.Services.UserService.GetUserByIdAsync
  href: MyApp.Auth.Application.Services.UserService.html#MyApp_Auth_Application_Services_UserService_GetUserByIdAsync_System_Guid_
  name: GetUserByIdAsync
  nameWithType: UserService.GetUserByIdAsync
  fullName: MyApp.Auth.Application.Services.UserService.GetUserByIdAsync
- uid: MyApp.Auth.Application.Contracts.Services.IUserService.GetUserByIdAsync(System.Guid)
  commentId: M:MyApp.Auth.Application.Contracts.Services.IUserService.GetUserByIdAsync(System.Guid)
  parent: MyApp.Auth.Application.Contracts.Services.IUserService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: GetUserByIdAsync(Guid)
  nameWithType: IUserService.GetUserByIdAsync(Guid)
  fullName: MyApp.Auth.Application.Contracts.Services.IUserService.GetUserByIdAsync(System.Guid)
  spec.csharp:
  - uid: MyApp.Auth.Application.Contracts.Services.IUserService.GetUserByIdAsync(System.Guid)
    name: GetUserByIdAsync
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
  spec.vb:
  - uid: MyApp.Auth.Application.Contracts.Services.IUserService.GetUserByIdAsync(System.Guid)
    name: GetUserByIdAsync
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: MyApp.Auth.Application.Services.UserService.GetUserByEmailAsync*
  commentId: Overload:MyApp.Auth.Application.Services.UserService.GetUserByEmailAsync
  href: MyApp.Auth.Application.Services.UserService.html#MyApp_Auth_Application_Services_UserService_GetUserByEmailAsync_System_String_
  name: GetUserByEmailAsync
  nameWithType: UserService.GetUserByEmailAsync
  fullName: MyApp.Auth.Application.Services.UserService.GetUserByEmailAsync
- uid: MyApp.Auth.Application.Contracts.Services.IUserService.GetUserByEmailAsync(System.String)
  commentId: M:MyApp.Auth.Application.Contracts.Services.IUserService.GetUserByEmailAsync(System.String)
  parent: MyApp.Auth.Application.Contracts.Services.IUserService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetUserByEmailAsync(string)
  nameWithType: IUserService.GetUserByEmailAsync(string)
  fullName: MyApp.Auth.Application.Contracts.Services.IUserService.GetUserByEmailAsync(string)
  nameWithType.vb: IUserService.GetUserByEmailAsync(String)
  fullName.vb: MyApp.Auth.Application.Contracts.Services.IUserService.GetUserByEmailAsync(String)
  name.vb: GetUserByEmailAsync(String)
  spec.csharp:
  - uid: MyApp.Auth.Application.Contracts.Services.IUserService.GetUserByEmailAsync(System.String)
    name: GetUserByEmailAsync
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MyApp.Auth.Application.Contracts.Services.IUserService.GetUserByEmailAsync(System.String)
    name: GetUserByEmailAsync
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: MyApp.Auth.Application.Services.UserService.GetAllUsersAsync*
  commentId: Overload:MyApp.Auth.Application.Services.UserService.GetAllUsersAsync
  href: MyApp.Auth.Application.Services.UserService.html#MyApp_Auth_Application_Services_UserService_GetAllUsersAsync
  name: GetAllUsersAsync
  nameWithType: UserService.GetAllUsersAsync
  fullName: MyApp.Auth.Application.Services.UserService.GetAllUsersAsync
- uid: MyApp.Auth.Application.Contracts.Services.IUserService.GetAllUsersAsync
  commentId: M:MyApp.Auth.Application.Contracts.Services.IUserService.GetAllUsersAsync
  parent: MyApp.Auth.Application.Contracts.Services.IUserService
  name: GetAllUsersAsync()
  nameWithType: IUserService.GetAllUsersAsync()
  fullName: MyApp.Auth.Application.Contracts.Services.IUserService.GetAllUsersAsync()
  spec.csharp:
  - uid: MyApp.Auth.Application.Contracts.Services.IUserService.GetAllUsersAsync
    name: GetAllUsersAsync
  - name: (
  - name: )
  spec.vb:
  - uid: MyApp.Auth.Application.Contracts.Services.IUserService.GetAllUsersAsync
    name: GetAllUsersAsync
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{MyApp.Auth.Application.Contracts.DTOs.UserDto}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{MyApp.Auth.Application.Contracts.DTOs.UserDto}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IEnumerable<UserDto>>
  nameWithType: Task<IEnumerable<UserDto>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<MyApp.Auth.Application.Contracts.DTOs.UserDto>>
  nameWithType.vb: Task(Of IEnumerable(Of UserDto))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of MyApp.Auth.Application.Contracts.DTOs.UserDto))
  name.vb: Task(Of IEnumerable(Of UserDto))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: MyApp.Auth.Application.Contracts.DTOs.UserDto
    name: UserDto
    href: MyApp.Auth.Application.Contracts.DTOs.UserDto.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: MyApp.Auth.Application.Contracts.DTOs.UserDto
    name: UserDto
    href: MyApp.Auth.Application.Contracts.DTOs.UserDto.html
  - name: )
  - name: )
- uid: MyApp.Auth.Application.Services.UserService.GetAllUsersPaginatedAsync*
  commentId: Overload:MyApp.Auth.Application.Services.UserService.GetAllUsersPaginatedAsync
  href: MyApp.Auth.Application.Services.UserService.html#MyApp_Auth_Application_Services_UserService_GetAllUsersPaginatedAsync_System_Int32_System_Int32_
  name: GetAllUsersPaginatedAsync
  nameWithType: UserService.GetAllUsersPaginatedAsync
  fullName: MyApp.Auth.Application.Services.UserService.GetAllUsersPaginatedAsync
- uid: MyApp.Auth.Application.Contracts.Services.IUserService.GetAllUsersPaginatedAsync(System.Int32,System.Int32)
  commentId: M:MyApp.Auth.Application.Contracts.Services.IUserService.GetAllUsersPaginatedAsync(System.Int32,System.Int32)
  parent: MyApp.Auth.Application.Contracts.Services.IUserService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: GetAllUsersPaginatedAsync(int, int)
  nameWithType: IUserService.GetAllUsersPaginatedAsync(int, int)
  fullName: MyApp.Auth.Application.Contracts.Services.IUserService.GetAllUsersPaginatedAsync(int, int)
  nameWithType.vb: IUserService.GetAllUsersPaginatedAsync(Integer, Integer)
  fullName.vb: MyApp.Auth.Application.Contracts.Services.IUserService.GetAllUsersPaginatedAsync(Integer, Integer)
  name.vb: GetAllUsersPaginatedAsync(Integer, Integer)
  spec.csharp:
  - uid: MyApp.Auth.Application.Contracts.Services.IUserService.GetAllUsersPaginatedAsync(System.Int32,System.Int32)
    name: GetAllUsersPaginatedAsync
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: MyApp.Auth.Application.Contracts.Services.IUserService.GetAllUsersPaginatedAsync(System.Int32,System.Int32)
    name: GetAllUsersPaginatedAsync
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Threading.Tasks.Task{MyApp.Shared.Domain.Pagination.PaginatedResult{MyApp.Auth.Application.Contracts.DTOs.UserDto}}
  commentId: T:System.Threading.Tasks.Task{MyApp.Shared.Domain.Pagination.PaginatedResult{MyApp.Auth.Application.Contracts.DTOs.UserDto}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<PaginatedResult<UserDto>>
  nameWithType: Task<PaginatedResult<UserDto>>
  fullName: System.Threading.Tasks.Task<MyApp.Shared.Domain.Pagination.PaginatedResult<MyApp.Auth.Application.Contracts.DTOs.UserDto>>
  nameWithType.vb: Task(Of PaginatedResult(Of UserDto))
  fullName.vb: System.Threading.Tasks.Task(Of MyApp.Shared.Domain.Pagination.PaginatedResult(Of MyApp.Auth.Application.Contracts.DTOs.UserDto))
  name.vb: Task(Of PaginatedResult(Of UserDto))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: MyApp.Shared.Domain.Pagination.PaginatedResult`1
    name: PaginatedResult
  - name: <
  - uid: MyApp.Auth.Application.Contracts.DTOs.UserDto
    name: UserDto
    href: MyApp.Auth.Application.Contracts.DTOs.UserDto.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: MyApp.Shared.Domain.Pagination.PaginatedResult`1
    name: PaginatedResult
  - name: (
  - name: Of
  - name: " "
  - uid: MyApp.Auth.Application.Contracts.DTOs.UserDto
    name: UserDto
    href: MyApp.Auth.Application.Contracts.DTOs.UserDto.html
  - name: )
  - name: )
- uid: MyApp.Auth.Application.Services.UserService.UpdateUserAsync*
  commentId: Overload:MyApp.Auth.Application.Services.UserService.UpdateUserAsync
  href: MyApp.Auth.Application.Services.UserService.html#MyApp_Auth_Application_Services_UserService_UpdateUserAsync_System_Guid_MyApp_Auth_Application_Contracts_DTOs_UpdateUserDto_
  name: UpdateUserAsync
  nameWithType: UserService.UpdateUserAsync
  fullName: MyApp.Auth.Application.Services.UserService.UpdateUserAsync
- uid: MyApp.Auth.Application.Contracts.Services.IUserService.UpdateUserAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto)
  commentId: M:MyApp.Auth.Application.Contracts.Services.IUserService.UpdateUserAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto)
  parent: MyApp.Auth.Application.Contracts.Services.IUserService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: UpdateUserAsync(Guid, UpdateUserDto)
  nameWithType: IUserService.UpdateUserAsync(Guid, UpdateUserDto)
  fullName: MyApp.Auth.Application.Contracts.Services.IUserService.UpdateUserAsync(System.Guid, MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto)
  spec.csharp:
  - uid: MyApp.Auth.Application.Contracts.Services.IUserService.UpdateUserAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto)
    name: UpdateUserAsync
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: ','
  - name: " "
  - uid: MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto
    name: UpdateUserDto
  - name: )
  spec.vb:
  - uid: MyApp.Auth.Application.Contracts.Services.IUserService.UpdateUserAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto)
    name: UpdateUserAsync
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: ','
  - name: " "
  - uid: MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto
    name: UpdateUserDto
  - name: )
- uid: MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto
  commentId: T:MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto
  parent: MyApp.Auth.Application.Contracts.DTOs
  href: MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto.html
  name: UpdateUserDto
  nameWithType: UpdateUserDto
  fullName: MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: MyApp.Auth.Application.Contracts.DTOs
  commentId: N:MyApp.Auth.Application.Contracts.DTOs
  href: MyApp.html
  name: MyApp.Auth.Application.Contracts.DTOs
  nameWithType: MyApp.Auth.Application.Contracts.DTOs
  fullName: MyApp.Auth.Application.Contracts.DTOs
  spec.csharp:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Auth
    name: Auth
    href: MyApp.Auth.html
  - name: .
  - uid: MyApp.Auth.Application
    name: Application
    href: MyApp.Auth.Application.html
  - name: .
  - uid: MyApp.Auth.Application.Contracts
    name: Contracts
    href: MyApp.Auth.Application.Contracts.html
  - name: .
  - uid: MyApp.Auth.Application.Contracts.DTOs
    name: DTOs
    href: MyApp.Auth.Application.Contracts.DTOs.html
  spec.vb:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Auth
    name: Auth
    href: MyApp.Auth.html
  - name: .
  - uid: MyApp.Auth.Application
    name: Application
    href: MyApp.Auth.Application.html
  - name: .
  - uid: MyApp.Auth.Application.Contracts
    name: Contracts
    href: MyApp.Auth.Application.Contracts.html
  - name: .
  - uid: MyApp.Auth.Application.Contracts.DTOs
    name: DTOs
    href: MyApp.Auth.Application.Contracts.DTOs.html
- uid: MyApp.Auth.Application.Services.UserService.ChangePasswordAsync*
  commentId: Overload:MyApp.Auth.Application.Services.UserService.ChangePasswordAsync
  href: MyApp.Auth.Application.Services.UserService.html#MyApp_Auth_Application_Services_UserService_ChangePasswordAsync_System_Guid_System_String_System_String_
  name: ChangePasswordAsync
  nameWithType: UserService.ChangePasswordAsync
  fullName: MyApp.Auth.Application.Services.UserService.ChangePasswordAsync
- uid: MyApp.Auth.Application.Contracts.Services.IUserService.ChangePasswordAsync(System.Guid,System.String,System.String)
  commentId: M:MyApp.Auth.Application.Contracts.Services.IUserService.ChangePasswordAsync(System.Guid,System.String,System.String)
  parent: MyApp.Auth.Application.Contracts.Services.IUserService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: ChangePasswordAsync(Guid, string, string)
  nameWithType: IUserService.ChangePasswordAsync(Guid, string, string)
  fullName: MyApp.Auth.Application.Contracts.Services.IUserService.ChangePasswordAsync(System.Guid, string, string)
  nameWithType.vb: IUserService.ChangePasswordAsync(Guid, String, String)
  fullName.vb: MyApp.Auth.Application.Contracts.Services.IUserService.ChangePasswordAsync(System.Guid, String, String)
  name.vb: ChangePasswordAsync(Guid, String, String)
  spec.csharp:
  - uid: MyApp.Auth.Application.Contracts.Services.IUserService.ChangePasswordAsync(System.Guid,System.String,System.String)
    name: ChangePasswordAsync
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MyApp.Auth.Application.Contracts.Services.IUserService.ChangePasswordAsync(System.Guid,System.String,System.String)
    name: ChangePasswordAsync
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MyApp.Auth.Application.Services.UserService.DeleteUserAsync*
  commentId: Overload:MyApp.Auth.Application.Services.UserService.DeleteUserAsync
  href: MyApp.Auth.Application.Services.UserService.html#MyApp_Auth_Application_Services_UserService_DeleteUserAsync_System_Guid_
  name: DeleteUserAsync
  nameWithType: UserService.DeleteUserAsync
  fullName: MyApp.Auth.Application.Services.UserService.DeleteUserAsync
- uid: MyApp.Auth.Application.Contracts.Services.IUserService.DeleteUserAsync(System.Guid)
  commentId: M:MyApp.Auth.Application.Contracts.Services.IUserService.DeleteUserAsync(System.Guid)
  parent: MyApp.Auth.Application.Contracts.Services.IUserService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: DeleteUserAsync(Guid)
  nameWithType: IUserService.DeleteUserAsync(Guid)
  fullName: MyApp.Auth.Application.Contracts.Services.IUserService.DeleteUserAsync(System.Guid)
  spec.csharp:
  - uid: MyApp.Auth.Application.Contracts.Services.IUserService.DeleteUserAsync(System.Guid)
    name: DeleteUserAsync
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
  spec.vb:
  - uid: MyApp.Auth.Application.Contracts.Services.IUserService.DeleteUserAsync(System.Guid)
    name: DeleteUserAsync
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
- uid: MyApp.Auth.Application.Services.UserService.AssignRoleAsync*
  commentId: Overload:MyApp.Auth.Application.Services.UserService.AssignRoleAsync
  href: MyApp.Auth.Application.Services.UserService.html#MyApp_Auth_Application_Services_UserService_AssignRoleAsync_System_Guid_System_String_
  name: AssignRoleAsync
  nameWithType: UserService.AssignRoleAsync
  fullName: MyApp.Auth.Application.Services.UserService.AssignRoleAsync
- uid: MyApp.Auth.Application.Contracts.Services.IUserService.AssignRoleAsync(System.Guid,System.String)
  commentId: M:MyApp.Auth.Application.Contracts.Services.IUserService.AssignRoleAsync(System.Guid,System.String)
  parent: MyApp.Auth.Application.Contracts.Services.IUserService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: AssignRoleAsync(Guid, string)
  nameWithType: IUserService.AssignRoleAsync(Guid, string)
  fullName: MyApp.Auth.Application.Contracts.Services.IUserService.AssignRoleAsync(System.Guid, string)
  nameWithType.vb: IUserService.AssignRoleAsync(Guid, String)
  fullName.vb: MyApp.Auth.Application.Contracts.Services.IUserService.AssignRoleAsync(System.Guid, String)
  name.vb: AssignRoleAsync(Guid, String)
  spec.csharp:
  - uid: MyApp.Auth.Application.Contracts.Services.IUserService.AssignRoleAsync(System.Guid,System.String)
    name: AssignRoleAsync
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MyApp.Auth.Application.Contracts.Services.IUserService.AssignRoleAsync(System.Guid,System.String)
    name: AssignRoleAsync
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MyApp.Auth.Application.Services.UserService.RemoveRoleAsync*
  commentId: Overload:MyApp.Auth.Application.Services.UserService.RemoveRoleAsync
  href: MyApp.Auth.Application.Services.UserService.html#MyApp_Auth_Application_Services_UserService_RemoveRoleAsync_System_Guid_System_String_
  name: RemoveRoleAsync
  nameWithType: UserService.RemoveRoleAsync
  fullName: MyApp.Auth.Application.Services.UserService.RemoveRoleAsync
- uid: MyApp.Auth.Application.Contracts.Services.IUserService.RemoveRoleAsync(System.Guid,System.String)
  commentId: M:MyApp.Auth.Application.Contracts.Services.IUserService.RemoveRoleAsync(System.Guid,System.String)
  parent: MyApp.Auth.Application.Contracts.Services.IUserService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: RemoveRoleAsync(Guid, string)
  nameWithType: IUserService.RemoveRoleAsync(Guid, string)
  fullName: MyApp.Auth.Application.Contracts.Services.IUserService.RemoveRoleAsync(System.Guid, string)
  nameWithType.vb: IUserService.RemoveRoleAsync(Guid, String)
  fullName.vb: MyApp.Auth.Application.Contracts.Services.IUserService.RemoveRoleAsync(System.Guid, String)
  name.vb: RemoveRoleAsync(Guid, String)
  spec.csharp:
  - uid: MyApp.Auth.Application.Contracts.Services.IUserService.RemoveRoleAsync(System.Guid,System.String)
    name: RemoveRoleAsync
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MyApp.Auth.Application.Contracts.Services.IUserService.RemoveRoleAsync(System.Guid,System.String)
    name: RemoveRoleAsync
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MyApp.Auth.Application.Services.UserService.GetUserRolesAsync*
  commentId: Overload:MyApp.Auth.Application.Services.UserService.GetUserRolesAsync
  href: MyApp.Auth.Application.Services.UserService.html#MyApp_Auth_Application_Services_UserService_GetUserRolesAsync_System_Guid_
  name: GetUserRolesAsync
  nameWithType: UserService.GetUserRolesAsync
  fullName: MyApp.Auth.Application.Services.UserService.GetUserRolesAsync
- uid: MyApp.Auth.Application.Contracts.Services.IUserService.GetUserRolesAsync(System.Guid)
  commentId: M:MyApp.Auth.Application.Contracts.Services.IUserService.GetUserRolesAsync(System.Guid)
  parent: MyApp.Auth.Application.Contracts.Services.IUserService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: GetUserRolesAsync(Guid)
  nameWithType: IUserService.GetUserRolesAsync(Guid)
  fullName: MyApp.Auth.Application.Contracts.Services.IUserService.GetUserRolesAsync(System.Guid)
  spec.csharp:
  - uid: MyApp.Auth.Application.Contracts.Services.IUserService.GetUserRolesAsync(System.Guid)
    name: GetUserRolesAsync
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
  spec.vb:
  - uid: MyApp.Auth.Application.Contracts.Services.IUserService.GetUserRolesAsync(System.Guid)
    name: GetUserRolesAsync
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{MyApp.Auth.Application.Contracts.DTOs.RoleDto}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{MyApp.Auth.Application.Contracts.DTOs.RoleDto}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IEnumerable<RoleDto>>
  nameWithType: Task<IEnumerable<RoleDto>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<MyApp.Auth.Application.Contracts.DTOs.RoleDto>>
  nameWithType.vb: Task(Of IEnumerable(Of RoleDto))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of MyApp.Auth.Application.Contracts.DTOs.RoleDto))
  name.vb: Task(Of IEnumerable(Of RoleDto))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: MyApp.Auth.Application.Contracts.DTOs.RoleDto
    name: RoleDto
    href: MyApp.Auth.Application.Contracts.DTOs.RoleDto.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: MyApp.Auth.Application.Contracts.DTOs.RoleDto
    name: RoleDto
    href: MyApp.Auth.Application.Contracts.DTOs.RoleDto.html
  - name: )
  - name: )
