### YamlMime:ManagedReference
items:
- uid: MyApp.Auth.Application.Services.PermissionService
  commentId: T:MyApp.Auth.Application.Services.PermissionService
  id: PermissionService
  parent: MyApp.Auth.Application.Services
  children:
  - MyApp.Auth.Application.Services.PermissionService.#ctor(Microsoft.AspNetCore.Identity.UserManager{MyApp.Auth.Domain.Entities.ApplicationUser},MyApp.Auth.Domain.Repositories.IPermissionRepository,AutoMapper.IMapper,Microsoft.Extensions.Logging.ILogger{MyApp.Auth.Application.Services.PermissionService})
  - MyApp.Auth.Application.Services.PermissionService.CreatePermissionAsync(MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto)
  - MyApp.Auth.Application.Services.PermissionService.DeletePermissionAsync(System.Guid)
  - MyApp.Auth.Application.Services.PermissionService.GetAllPermissionsAsync
  - MyApp.Auth.Application.Services.PermissionService.GetAllPermissionsPaginatedAsync(System.Int32,System.Int32)
  - MyApp.Auth.Application.Services.PermissionService.GetPermissionByIdAsync(System.Guid)
  - MyApp.Auth.Application.Services.PermissionService.GetPermissionByModuleActionAsync(System.String,System.String)
  - MyApp.Auth.Application.Services.PermissionService.HasPermissionAsync(System.Guid,System.String,System.String)
  - MyApp.Auth.Application.Services.PermissionService.HasPermissionAsync(System.String,System.String,System.String)
  - MyApp.Auth.Application.Services.PermissionService.UpdatePermissionAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto)
  langs:
  - csharp
  - vb
  name: PermissionService
  nameWithType: PermissionService
  fullName: MyApp.Auth.Application.Services.PermissionService
  type: Class
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/PermissionService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: PermissionService
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/PermissionService.cs
    startLine: 11
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  syntax:
    content: 'public class PermissionService : IPermissionService'
    content.vb: Public Class PermissionService Implements IPermissionService
  inheritance:
  - System.Object
  implements:
  - MyApp.Auth.Application.Contracts.IPermissionService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: MyApp.Auth.Application.Services.PermissionService.#ctor(Microsoft.AspNetCore.Identity.UserManager{MyApp.Auth.Domain.Entities.ApplicationUser},MyApp.Auth.Domain.Repositories.IPermissionRepository,AutoMapper.IMapper,Microsoft.Extensions.Logging.ILogger{MyApp.Auth.Application.Services.PermissionService})
  commentId: M:MyApp.Auth.Application.Services.PermissionService.#ctor(Microsoft.AspNetCore.Identity.UserManager{MyApp.Auth.Domain.Entities.ApplicationUser},MyApp.Auth.Domain.Repositories.IPermissionRepository,AutoMapper.IMapper,Microsoft.Extensions.Logging.ILogger{MyApp.Auth.Application.Services.PermissionService})
  id: '#ctor(Microsoft.AspNetCore.Identity.UserManager{MyApp.Auth.Domain.Entities.ApplicationUser},MyApp.Auth.Domain.Repositories.IPermissionRepository,AutoMapper.IMapper,Microsoft.Extensions.Logging.ILogger{MyApp.Auth.Application.Services.PermissionService})'
  parent: MyApp.Auth.Application.Services.PermissionService
  langs:
  - csharp
  - vb
  name: PermissionService(UserManager<ApplicationUser>, IPermissionRepository, IMapper, ILogger<PermissionService>)
  nameWithType: PermissionService.PermissionService(UserManager<ApplicationUser>, IPermissionRepository, IMapper, ILogger<PermissionService>)
  fullName: MyApp.Auth.Application.Services.PermissionService.PermissionService(Microsoft.AspNetCore.Identity.UserManager<MyApp.Auth.Domain.Entities.ApplicationUser>, MyApp.Auth.Domain.Repositories.IPermissionRepository, AutoMapper.IMapper, Microsoft.Extensions.Logging.ILogger<MyApp.Auth.Application.Services.PermissionService>)
  type: Constructor
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/PermissionService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: .ctor
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/PermissionService.cs
    startLine: 18
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  syntax:
    content: public PermissionService(UserManager<ApplicationUser> userManager, IPermissionRepository permissionRepository, IMapper mapper, ILogger<PermissionService> logger)
    parameters:
    - id: userManager
      type: Microsoft.AspNetCore.Identity.UserManager{MyApp.Auth.Domain.Entities.ApplicationUser}
    - id: permissionRepository
      type: MyApp.Auth.Domain.Repositories.IPermissionRepository
    - id: mapper
      type: AutoMapper.IMapper
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{MyApp.Auth.Application.Services.PermissionService}
    content.vb: Public Sub New(userManager As UserManager(Of ApplicationUser), permissionRepository As IPermissionRepository, mapper As IMapper, logger As ILogger(Of PermissionService))
  overload: MyApp.Auth.Application.Services.PermissionService.#ctor*
  nameWithType.vb: PermissionService.New(UserManager(Of ApplicationUser), IPermissionRepository, IMapper, ILogger(Of PermissionService))
  fullName.vb: MyApp.Auth.Application.Services.PermissionService.New(Microsoft.AspNetCore.Identity.UserManager(Of MyApp.Auth.Domain.Entities.ApplicationUser), MyApp.Auth.Domain.Repositories.IPermissionRepository, AutoMapper.IMapper, Microsoft.Extensions.Logging.ILogger(Of MyApp.Auth.Application.Services.PermissionService))
  name.vb: New(UserManager(Of ApplicationUser), IPermissionRepository, IMapper, ILogger(Of PermissionService))
- uid: MyApp.Auth.Application.Services.PermissionService.HasPermissionAsync(System.Guid,System.String,System.String)
  commentId: M:MyApp.Auth.Application.Services.PermissionService.HasPermissionAsync(System.Guid,System.String,System.String)
  id: HasPermissionAsync(System.Guid,System.String,System.String)
  parent: MyApp.Auth.Application.Services.PermissionService
  langs:
  - csharp
  - vb
  name: HasPermissionAsync(Guid, string, string)
  nameWithType: PermissionService.HasPermissionAsync(Guid, string, string)
  fullName: MyApp.Auth.Application.Services.PermissionService.HasPermissionAsync(System.Guid, string, string)
  type: Method
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/PermissionService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: HasPermissionAsync
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/PermissionService.cs
    startLine: 29
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  summary: Check if a user has a specific permission
  example: []
  syntax:
    content: public Task<bool> HasPermissionAsync(Guid userId, string module, string action)
    parameters:
    - id: userId
      type: System.Guid
    - id: module
      type: System.String
    - id: action
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function HasPermissionAsync(userId As Guid, [module] As String, action As String) As Task(Of Boolean)
  overload: MyApp.Auth.Application.Services.PermissionService.HasPermissionAsync*
  implements:
  - MyApp.Auth.Application.Contracts.IPermissionService.HasPermissionAsync(System.Guid,System.String,System.String)
  nameWithType.vb: PermissionService.HasPermissionAsync(Guid, String, String)
  fullName.vb: MyApp.Auth.Application.Services.PermissionService.HasPermissionAsync(System.Guid, String, String)
  name.vb: HasPermissionAsync(Guid, String, String)
- uid: MyApp.Auth.Application.Services.PermissionService.HasPermissionAsync(System.String,System.String,System.String)
  commentId: M:MyApp.Auth.Application.Services.PermissionService.HasPermissionAsync(System.String,System.String,System.String)
  id: HasPermissionAsync(System.String,System.String,System.String)
  parent: MyApp.Auth.Application.Services.PermissionService
  langs:
  - csharp
  - vb
  name: HasPermissionAsync(string?, string, string)
  nameWithType: PermissionService.HasPermissionAsync(string?, string, string)
  fullName: MyApp.Auth.Application.Services.PermissionService.HasPermissionAsync(string?, string, string)
  type: Method
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/PermissionService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: HasPermissionAsync
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/PermissionService.cs
    startLine: 43
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  summary: Check if a user has a specific permission by username
  example: []
  syntax:
    content: public Task<bool> HasPermissionAsync(string? username, string module, string action)
    parameters:
    - id: username
      type: System.String
    - id: module
      type: System.String
    - id: action
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function HasPermissionAsync(username As String, [module] As String, action As String) As Task(Of Boolean)
  overload: MyApp.Auth.Application.Services.PermissionService.HasPermissionAsync*
  implements:
  - MyApp.Auth.Application.Contracts.IPermissionService.HasPermissionAsync(System.String,System.String,System.String)
  nameWithType.vb: PermissionService.HasPermissionAsync(String, String, String)
  fullName.vb: MyApp.Auth.Application.Services.PermissionService.HasPermissionAsync(String, String, String)
  name.vb: HasPermissionAsync(String, String, String)
- uid: MyApp.Auth.Application.Services.PermissionService.GetAllPermissionsAsync
  commentId: M:MyApp.Auth.Application.Services.PermissionService.GetAllPermissionsAsync
  id: GetAllPermissionsAsync
  parent: MyApp.Auth.Application.Services.PermissionService
  langs:
  - csharp
  - vb
  name: GetAllPermissionsAsync()
  nameWithType: PermissionService.GetAllPermissionsAsync()
  fullName: MyApp.Auth.Application.Services.PermissionService.GetAllPermissionsAsync()
  type: Method
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/PermissionService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: GetAllPermissionsAsync
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/PermissionService.cs
    startLine: 80
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  summary: Get all permissions
  example: []
  syntax:
    content: public Task<IEnumerable<PermissionDto>> GetAllPermissionsAsync()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{MyApp.Auth.Application.Contracts.DTOs.PermissionDto}}
    content.vb: Public Function GetAllPermissionsAsync() As Task(Of IEnumerable(Of PermissionDto))
  overload: MyApp.Auth.Application.Services.PermissionService.GetAllPermissionsAsync*
  implements:
  - MyApp.Auth.Application.Contracts.IPermissionService.GetAllPermissionsAsync
- uid: MyApp.Auth.Application.Services.PermissionService.GetAllPermissionsPaginatedAsync(System.Int32,System.Int32)
  commentId: M:MyApp.Auth.Application.Services.PermissionService.GetAllPermissionsPaginatedAsync(System.Int32,System.Int32)
  id: GetAllPermissionsPaginatedAsync(System.Int32,System.Int32)
  parent: MyApp.Auth.Application.Services.PermissionService
  langs:
  - csharp
  - vb
  name: GetAllPermissionsPaginatedAsync(int, int)
  nameWithType: PermissionService.GetAllPermissionsPaginatedAsync(int, int)
  fullName: MyApp.Auth.Application.Services.PermissionService.GetAllPermissionsPaginatedAsync(int, int)
  type: Method
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/PermissionService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: GetAllPermissionsPaginatedAsync
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/PermissionService.cs
    startLine: 86
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  summary: Get all permissions with pagination
  example: []
  syntax:
    content: public Task<PaginatedResult<PermissionDto>> GetAllPermissionsPaginatedAsync(int pageNumber, int pageSize)
    parameters:
    - id: pageNumber
      type: System.Int32
    - id: pageSize
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{MyApp.Shared.Domain.Pagination.PaginatedResult{MyApp.Auth.Application.Contracts.DTOs.PermissionDto}}
    content.vb: Public Function GetAllPermissionsPaginatedAsync(pageNumber As Integer, pageSize As Integer) As Task(Of PaginatedResult(Of PermissionDto))
  overload: MyApp.Auth.Application.Services.PermissionService.GetAllPermissionsPaginatedAsync*
  implements:
  - MyApp.Auth.Application.Contracts.IPermissionService.GetAllPermissionsPaginatedAsync(System.Int32,System.Int32)
  nameWithType.vb: PermissionService.GetAllPermissionsPaginatedAsync(Integer, Integer)
  fullName.vb: MyApp.Auth.Application.Services.PermissionService.GetAllPermissionsPaginatedAsync(Integer, Integer)
  name.vb: GetAllPermissionsPaginatedAsync(Integer, Integer)
- uid: MyApp.Auth.Application.Services.PermissionService.GetPermissionByIdAsync(System.Guid)
  commentId: M:MyApp.Auth.Application.Services.PermissionService.GetPermissionByIdAsync(System.Guid)
  id: GetPermissionByIdAsync(System.Guid)
  parent: MyApp.Auth.Application.Services.PermissionService
  langs:
  - csharp
  - vb
  name: GetPermissionByIdAsync(Guid)
  nameWithType: PermissionService.GetPermissionByIdAsync(Guid)
  fullName: MyApp.Auth.Application.Services.PermissionService.GetPermissionByIdAsync(System.Guid)
  type: Method
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/PermissionService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: GetPermissionByIdAsync
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/PermissionService.cs
    startLine: 93
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  summary: Get permission by ID
  example: []
  syntax:
    content: public Task<PermissionDto?> GetPermissionByIdAsync(Guid id)
    parameters:
    - id: id
      type: System.Guid
    return:
      type: System.Threading.Tasks.Task{MyApp.Auth.Application.Contracts.DTOs.PermissionDto}
    content.vb: Public Function GetPermissionByIdAsync(id As Guid) As Task(Of PermissionDto)
  overload: MyApp.Auth.Application.Services.PermissionService.GetPermissionByIdAsync*
  implements:
  - MyApp.Auth.Application.Contracts.IPermissionService.GetPermissionByIdAsync(System.Guid)
- uid: MyApp.Auth.Application.Services.PermissionService.GetPermissionByModuleActionAsync(System.String,System.String)
  commentId: M:MyApp.Auth.Application.Services.PermissionService.GetPermissionByModuleActionAsync(System.String,System.String)
  id: GetPermissionByModuleActionAsync(System.String,System.String)
  parent: MyApp.Auth.Application.Services.PermissionService
  langs:
  - csharp
  - vb
  name: GetPermissionByModuleActionAsync(string, string)
  nameWithType: PermissionService.GetPermissionByModuleActionAsync(string, string)
  fullName: MyApp.Auth.Application.Services.PermissionService.GetPermissionByModuleActionAsync(string, string)
  type: Method
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/PermissionService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: GetPermissionByModuleActionAsync
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/PermissionService.cs
    startLine: 99
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  summary: Get permission by module and action
  example: []
  syntax:
    content: public Task<PermissionDto?> GetPermissionByModuleActionAsync(string module, string action)
    parameters:
    - id: module
      type: System.String
    - id: action
      type: System.String
    return:
      type: System.Threading.Tasks.Task{MyApp.Auth.Application.Contracts.DTOs.PermissionDto}
    content.vb: Public Function GetPermissionByModuleActionAsync([module] As String, action As String) As Task(Of PermissionDto)
  overload: MyApp.Auth.Application.Services.PermissionService.GetPermissionByModuleActionAsync*
  implements:
  - MyApp.Auth.Application.Contracts.IPermissionService.GetPermissionByModuleActionAsync(System.String,System.String)
  nameWithType.vb: PermissionService.GetPermissionByModuleActionAsync(String, String)
  fullName.vb: MyApp.Auth.Application.Services.PermissionService.GetPermissionByModuleActionAsync(String, String)
  name.vb: GetPermissionByModuleActionAsync(String, String)
- uid: MyApp.Auth.Application.Services.PermissionService.CreatePermissionAsync(MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto)
  commentId: M:MyApp.Auth.Application.Services.PermissionService.CreatePermissionAsync(MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto)
  id: CreatePermissionAsync(MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto)
  parent: MyApp.Auth.Application.Services.PermissionService
  langs:
  - csharp
  - vb
  name: CreatePermissionAsync(CreatePermissionDto)
  nameWithType: PermissionService.CreatePermissionAsync(CreatePermissionDto)
  fullName: MyApp.Auth.Application.Services.PermissionService.CreatePermissionAsync(MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto)
  type: Method
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/PermissionService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: CreatePermissionAsync
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/PermissionService.cs
    startLine: 106
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  summary: Create a new permission
  example: []
  syntax:
    content: public Task<PermissionDto?> CreatePermissionAsync(CreatePermissionDto createPermissionDto)
    parameters:
    - id: createPermissionDto
      type: MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto
    return:
      type: System.Threading.Tasks.Task{MyApp.Auth.Application.Contracts.DTOs.PermissionDto}
    content.vb: Public Function CreatePermissionAsync(createPermissionDto As CreatePermissionDto) As Task(Of PermissionDto)
  overload: MyApp.Auth.Application.Services.PermissionService.CreatePermissionAsync*
  implements:
  - MyApp.Auth.Application.Contracts.IPermissionService.CreatePermissionAsync(MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto)
- uid: MyApp.Auth.Application.Services.PermissionService.UpdatePermissionAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto)
  commentId: M:MyApp.Auth.Application.Services.PermissionService.UpdatePermissionAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto)
  id: UpdatePermissionAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto)
  parent: MyApp.Auth.Application.Services.PermissionService
  langs:
  - csharp
  - vb
  name: UpdatePermissionAsync(Guid, UpdatePermissionDto)
  nameWithType: PermissionService.UpdatePermissionAsync(Guid, UpdatePermissionDto)
  fullName: MyApp.Auth.Application.Services.PermissionService.UpdatePermissionAsync(System.Guid, MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto)
  type: Method
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/PermissionService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: UpdatePermissionAsync
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/PermissionService.cs
    startLine: 135
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  summary: Update an existing permission
  example: []
  syntax:
    content: public Task<bool> UpdatePermissionAsync(Guid id, UpdatePermissionDto updatePermissionDto)
    parameters:
    - id: id
      type: System.Guid
    - id: updatePermissionDto
      type: MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function UpdatePermissionAsync(id As Guid, updatePermissionDto As UpdatePermissionDto) As Task(Of Boolean)
  overload: MyApp.Auth.Application.Services.PermissionService.UpdatePermissionAsync*
  implements:
  - MyApp.Auth.Application.Contracts.IPermissionService.UpdatePermissionAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto)
- uid: MyApp.Auth.Application.Services.PermissionService.DeletePermissionAsync(System.Guid)
  commentId: M:MyApp.Auth.Application.Services.PermissionService.DeletePermissionAsync(System.Guid)
  id: DeletePermissionAsync(System.Guid)
  parent: MyApp.Auth.Application.Services.PermissionService
  langs:
  - csharp
  - vb
  name: DeletePermissionAsync(Guid)
  nameWithType: PermissionService.DeletePermissionAsync(Guid)
  fullName: MyApp.Auth.Application.Services.PermissionService.DeletePermissionAsync(System.Guid)
  type: Method
  source:
    remote:
      path: src/MyApp.Auth/MyApp.Auth.Application/Services/PermissionService.cs
      branch: copilot/integrate-docfx-documentation
      repo: https://github.com/Ozymandros/ERP.Microservices.git
    id: DeletePermissionAsync
    path: src/MyApp.Auth/MyApp.Auth.Application/Services/PermissionService.cs
    startLine: 160
  assemblies:
  - MyApp.Auth.Application
  namespace: MyApp.Auth.Application.Services
  summary: Delete a permission
  example: []
  syntax:
    content: public Task<bool> DeletePermissionAsync(Guid id)
    parameters:
    - id: id
      type: System.Guid
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function DeletePermissionAsync(id As Guid) As Task(Of Boolean)
  overload: MyApp.Auth.Application.Services.PermissionService.DeletePermissionAsync*
  implements:
  - MyApp.Auth.Application.Contracts.IPermissionService.DeletePermissionAsync(System.Guid)
references:
- uid: MyApp.Auth.Application.Services
  commentId: N:MyApp.Auth.Application.Services
  href: MyApp.html
  name: MyApp.Auth.Application.Services
  nameWithType: MyApp.Auth.Application.Services
  fullName: MyApp.Auth.Application.Services
  spec.csharp:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Auth
    name: Auth
    href: MyApp.Auth.html
  - name: .
  - uid: MyApp.Auth.Application
    name: Application
    href: MyApp.Auth.Application.html
  - name: .
  - uid: MyApp.Auth.Application.Services
    name: Services
    href: MyApp.Auth.Application.Services.html
  spec.vb:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Auth
    name: Auth
    href: MyApp.Auth.html
  - name: .
  - uid: MyApp.Auth.Application
    name: Application
    href: MyApp.Auth.Application.html
  - name: .
  - uid: MyApp.Auth.Application.Services
    name: Services
    href: MyApp.Auth.Application.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MyApp.Auth.Application.Contracts.IPermissionService
  commentId: T:MyApp.Auth.Application.Contracts.IPermissionService
  parent: MyApp.Auth.Application.Contracts
  href: MyApp.Auth.Application.Contracts.IPermissionService.html
  name: IPermissionService
  nameWithType: IPermissionService
  fullName: MyApp.Auth.Application.Contracts.IPermissionService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MyApp.Auth.Application.Contracts
  commentId: N:MyApp.Auth.Application.Contracts
  href: MyApp.html
  name: MyApp.Auth.Application.Contracts
  nameWithType: MyApp.Auth.Application.Contracts
  fullName: MyApp.Auth.Application.Contracts
  spec.csharp:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Auth
    name: Auth
    href: MyApp.Auth.html
  - name: .
  - uid: MyApp.Auth.Application
    name: Application
    href: MyApp.Auth.Application.html
  - name: .
  - uid: MyApp.Auth.Application.Contracts
    name: Contracts
    href: MyApp.Auth.Application.Contracts.html
  spec.vb:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Auth
    name: Auth
    href: MyApp.Auth.html
  - name: .
  - uid: MyApp.Auth.Application
    name: Application
    href: MyApp.Auth.Application.html
  - name: .
  - uid: MyApp.Auth.Application.Contracts
    name: Contracts
    href: MyApp.Auth.Application.Contracts.html
- uid: MyApp.Auth.Application.Services.PermissionService.#ctor*
  commentId: Overload:MyApp.Auth.Application.Services.PermissionService.#ctor
  href: MyApp.Auth.Application.Services.PermissionService.html#MyApp_Auth_Application_Services_PermissionService__ctor_Microsoft_AspNetCore_Identity_UserManager_MyApp_Auth_Domain_Entities_ApplicationUser__MyApp_Auth_Domain_Repositories_IPermissionRepository_AutoMapper_IMapper_Microsoft_Extensions_Logging_ILogger_MyApp_Auth_Application_Services_PermissionService__
  name: PermissionService
  nameWithType: PermissionService.PermissionService
  fullName: MyApp.Auth.Application.Services.PermissionService.PermissionService
  nameWithType.vb: PermissionService.New
  fullName.vb: MyApp.Auth.Application.Services.PermissionService.New
  name.vb: New
- uid: Microsoft.AspNetCore.Identity.UserManager{MyApp.Auth.Domain.Entities.ApplicationUser}
  commentId: T:Microsoft.AspNetCore.Identity.UserManager{MyApp.Auth.Domain.Entities.ApplicationUser}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.UserManager`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.usermanager-1
  name: UserManager<ApplicationUser>
  nameWithType: UserManager<ApplicationUser>
  fullName: Microsoft.AspNetCore.Identity.UserManager<MyApp.Auth.Domain.Entities.ApplicationUser>
  nameWithType.vb: UserManager(Of ApplicationUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of MyApp.Auth.Domain.Entities.ApplicationUser)
  name.vb: UserManager(Of ApplicationUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.usermanager-1
  - name: <
  - uid: MyApp.Auth.Domain.Entities.ApplicationUser
    name: ApplicationUser
  - name: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.usermanager-1
  - name: (
  - name: Of
  - name: " "
  - uid: MyApp.Auth.Domain.Entities.ApplicationUser
    name: ApplicationUser
  - name: )
- uid: MyApp.Auth.Domain.Repositories.IPermissionRepository
  commentId: T:MyApp.Auth.Domain.Repositories.IPermissionRepository
  parent: MyApp.Auth.Domain.Repositories
  href: MyApp.Auth.Domain.Repositories.IPermissionRepository.html
  name: IPermissionRepository
  nameWithType: IPermissionRepository
  fullName: MyApp.Auth.Domain.Repositories.IPermissionRepository
- uid: AutoMapper.IMapper
  commentId: T:AutoMapper.IMapper
  parent: AutoMapper
  isExternal: true
  name: IMapper
  nameWithType: IMapper
  fullName: AutoMapper.IMapper
- uid: Microsoft.Extensions.Logging.ILogger{MyApp.Auth.Application.Services.PermissionService}
  commentId: T:Microsoft.Extensions.Logging.ILogger{MyApp.Auth.Application.Services.PermissionService}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<PermissionService>
  nameWithType: ILogger<PermissionService>
  fullName: Microsoft.Extensions.Logging.ILogger<MyApp.Auth.Application.Services.PermissionService>
  nameWithType.vb: ILogger(Of PermissionService)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of MyApp.Auth.Application.Services.PermissionService)
  name.vb: ILogger(Of PermissionService)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - uid: MyApp.Auth.Application.Services.PermissionService
    name: PermissionService
    href: MyApp.Auth.Application.Services.PermissionService.html
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - uid: MyApp.Auth.Application.Services.PermissionService
    name: PermissionService
    href: MyApp.Auth.Application.Services.PermissionService.html
  - name: )
- uid: Microsoft.AspNetCore.Identity.UserManager`1
  commentId: T:Microsoft.AspNetCore.Identity.UserManager`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.usermanager-1
  name: UserManager<TUser>
  nameWithType: UserManager<TUser>
  fullName: Microsoft.AspNetCore.Identity.UserManager<TUser>
  nameWithType.vb: UserManager(Of TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.UserManager(Of TUser)
  name.vb: UserManager(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.usermanager-1
  - name: <
  - name: TUser
  - name: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserManager`1
    name: UserManager
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity.usermanager-1
  - name: (
  - name: Of
  - name: " "
  - name: TUser
  - name: )
- uid: Microsoft.AspNetCore.Identity
  commentId: N:Microsoft.AspNetCore.Identity
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.AspNetCore.Identity
  nameWithType: Microsoft.AspNetCore.Identity
  fullName: Microsoft.AspNetCore.Identity
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore
  - name: .
  - uid: Microsoft.AspNetCore.Identity
    name: Identity
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.AspNetCore
    name: AspNetCore
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore
  - name: .
  - uid: Microsoft.AspNetCore.Identity
    name: Identity
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.identity
- uid: MyApp.Auth.Domain.Repositories
  commentId: N:MyApp.Auth.Domain.Repositories
  href: MyApp.html
  name: MyApp.Auth.Domain.Repositories
  nameWithType: MyApp.Auth.Domain.Repositories
  fullName: MyApp.Auth.Domain.Repositories
  spec.csharp:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Auth
    name: Auth
    href: MyApp.Auth.html
  - name: .
  - uid: MyApp.Auth.Domain
    name: Domain
    href: MyApp.Auth.Domain.html
  - name: .
  - uid: MyApp.Auth.Domain.Repositories
    name: Repositories
    href: MyApp.Auth.Domain.Repositories.html
  spec.vb:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Auth
    name: Auth
    href: MyApp.Auth.html
  - name: .
  - uid: MyApp.Auth.Domain
    name: Domain
    href: MyApp.Auth.Domain.html
  - name: .
  - uid: MyApp.Auth.Domain.Repositories
    name: Repositories
    href: MyApp.Auth.Domain.Repositories.html
- uid: AutoMapper
  commentId: N:AutoMapper
  isExternal: true
  name: AutoMapper
  nameWithType: AutoMapper
  fullName: AutoMapper
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - name: TCategoryName
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - name: TCategoryName
  - name: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: MyApp.Auth.Application.Services.PermissionService.HasPermissionAsync*
  commentId: Overload:MyApp.Auth.Application.Services.PermissionService.HasPermissionAsync
  href: MyApp.Auth.Application.Services.PermissionService.html#MyApp_Auth_Application_Services_PermissionService_HasPermissionAsync_System_Guid_System_String_System_String_
  name: HasPermissionAsync
  nameWithType: PermissionService.HasPermissionAsync
  fullName: MyApp.Auth.Application.Services.PermissionService.HasPermissionAsync
- uid: MyApp.Auth.Application.Contracts.IPermissionService.HasPermissionAsync(System.Guid,System.String,System.String)
  commentId: M:MyApp.Auth.Application.Contracts.IPermissionService.HasPermissionAsync(System.Guid,System.String,System.String)
  parent: MyApp.Auth.Application.Contracts.IPermissionService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: HasPermissionAsync(Guid, string, string)
  nameWithType: IPermissionService.HasPermissionAsync(Guid, string, string)
  fullName: MyApp.Auth.Application.Contracts.IPermissionService.HasPermissionAsync(System.Guid, string, string)
  nameWithType.vb: IPermissionService.HasPermissionAsync(Guid, String, String)
  fullName.vb: MyApp.Auth.Application.Contracts.IPermissionService.HasPermissionAsync(System.Guid, String, String)
  name.vb: HasPermissionAsync(Guid, String, String)
  spec.csharp:
  - uid: MyApp.Auth.Application.Contracts.IPermissionService.HasPermissionAsync(System.Guid,System.String,System.String)
    name: HasPermissionAsync
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MyApp.Auth.Application.Contracts.IPermissionService.HasPermissionAsync(System.Guid,System.String,System.String)
    name: HasPermissionAsync
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: MyApp.Auth.Application.Contracts.IPermissionService.HasPermissionAsync(System.String,System.String,System.String)
  commentId: M:MyApp.Auth.Application.Contracts.IPermissionService.HasPermissionAsync(System.String,System.String,System.String)
  parent: MyApp.Auth.Application.Contracts.IPermissionService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: HasPermissionAsync(string, string, string)
  nameWithType: IPermissionService.HasPermissionAsync(string, string, string)
  fullName: MyApp.Auth.Application.Contracts.IPermissionService.HasPermissionAsync(string, string, string)
  nameWithType.vb: IPermissionService.HasPermissionAsync(String, String, String)
  fullName.vb: MyApp.Auth.Application.Contracts.IPermissionService.HasPermissionAsync(String, String, String)
  name.vb: HasPermissionAsync(String, String, String)
  spec.csharp:
  - uid: MyApp.Auth.Application.Contracts.IPermissionService.HasPermissionAsync(System.String,System.String,System.String)
    name: HasPermissionAsync
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MyApp.Auth.Application.Contracts.IPermissionService.HasPermissionAsync(System.String,System.String,System.String)
    name: HasPermissionAsync
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MyApp.Auth.Application.Services.PermissionService.GetAllPermissionsAsync*
  commentId: Overload:MyApp.Auth.Application.Services.PermissionService.GetAllPermissionsAsync
  href: MyApp.Auth.Application.Services.PermissionService.html#MyApp_Auth_Application_Services_PermissionService_GetAllPermissionsAsync
  name: GetAllPermissionsAsync
  nameWithType: PermissionService.GetAllPermissionsAsync
  fullName: MyApp.Auth.Application.Services.PermissionService.GetAllPermissionsAsync
- uid: MyApp.Auth.Application.Contracts.IPermissionService.GetAllPermissionsAsync
  commentId: M:MyApp.Auth.Application.Contracts.IPermissionService.GetAllPermissionsAsync
  parent: MyApp.Auth.Application.Contracts.IPermissionService
  name: GetAllPermissionsAsync()
  nameWithType: IPermissionService.GetAllPermissionsAsync()
  fullName: MyApp.Auth.Application.Contracts.IPermissionService.GetAllPermissionsAsync()
  spec.csharp:
  - uid: MyApp.Auth.Application.Contracts.IPermissionService.GetAllPermissionsAsync
    name: GetAllPermissionsAsync
  - name: (
  - name: )
  spec.vb:
  - uid: MyApp.Auth.Application.Contracts.IPermissionService.GetAllPermissionsAsync
    name: GetAllPermissionsAsync
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{MyApp.Auth.Application.Contracts.DTOs.PermissionDto}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{MyApp.Auth.Application.Contracts.DTOs.PermissionDto}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IEnumerable<PermissionDto>>
  nameWithType: Task<IEnumerable<PermissionDto>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<MyApp.Auth.Application.Contracts.DTOs.PermissionDto>>
  nameWithType.vb: Task(Of IEnumerable(Of PermissionDto))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of MyApp.Auth.Application.Contracts.DTOs.PermissionDto))
  name.vb: Task(Of IEnumerable(Of PermissionDto))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: MyApp.Auth.Application.Contracts.DTOs.PermissionDto
    name: PermissionDto
    href: MyApp.Auth.Application.Contracts.DTOs.PermissionDto.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: MyApp.Auth.Application.Contracts.DTOs.PermissionDto
    name: PermissionDto
    href: MyApp.Auth.Application.Contracts.DTOs.PermissionDto.html
  - name: )
  - name: )
- uid: MyApp.Auth.Application.Services.PermissionService.GetAllPermissionsPaginatedAsync*
  commentId: Overload:MyApp.Auth.Application.Services.PermissionService.GetAllPermissionsPaginatedAsync
  href: MyApp.Auth.Application.Services.PermissionService.html#MyApp_Auth_Application_Services_PermissionService_GetAllPermissionsPaginatedAsync_System_Int32_System_Int32_
  name: GetAllPermissionsPaginatedAsync
  nameWithType: PermissionService.GetAllPermissionsPaginatedAsync
  fullName: MyApp.Auth.Application.Services.PermissionService.GetAllPermissionsPaginatedAsync
- uid: MyApp.Auth.Application.Contracts.IPermissionService.GetAllPermissionsPaginatedAsync(System.Int32,System.Int32)
  commentId: M:MyApp.Auth.Application.Contracts.IPermissionService.GetAllPermissionsPaginatedAsync(System.Int32,System.Int32)
  parent: MyApp.Auth.Application.Contracts.IPermissionService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: GetAllPermissionsPaginatedAsync(int, int)
  nameWithType: IPermissionService.GetAllPermissionsPaginatedAsync(int, int)
  fullName: MyApp.Auth.Application.Contracts.IPermissionService.GetAllPermissionsPaginatedAsync(int, int)
  nameWithType.vb: IPermissionService.GetAllPermissionsPaginatedAsync(Integer, Integer)
  fullName.vb: MyApp.Auth.Application.Contracts.IPermissionService.GetAllPermissionsPaginatedAsync(Integer, Integer)
  name.vb: GetAllPermissionsPaginatedAsync(Integer, Integer)
  spec.csharp:
  - uid: MyApp.Auth.Application.Contracts.IPermissionService.GetAllPermissionsPaginatedAsync(System.Int32,System.Int32)
    name: GetAllPermissionsPaginatedAsync
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: MyApp.Auth.Application.Contracts.IPermissionService.GetAllPermissionsPaginatedAsync(System.Int32,System.Int32)
    name: GetAllPermissionsPaginatedAsync
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Threading.Tasks.Task{MyApp.Shared.Domain.Pagination.PaginatedResult{MyApp.Auth.Application.Contracts.DTOs.PermissionDto}}
  commentId: T:System.Threading.Tasks.Task{MyApp.Shared.Domain.Pagination.PaginatedResult{MyApp.Auth.Application.Contracts.DTOs.PermissionDto}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<PaginatedResult<PermissionDto>>
  nameWithType: Task<PaginatedResult<PermissionDto>>
  fullName: System.Threading.Tasks.Task<MyApp.Shared.Domain.Pagination.PaginatedResult<MyApp.Auth.Application.Contracts.DTOs.PermissionDto>>
  nameWithType.vb: Task(Of PaginatedResult(Of PermissionDto))
  fullName.vb: System.Threading.Tasks.Task(Of MyApp.Shared.Domain.Pagination.PaginatedResult(Of MyApp.Auth.Application.Contracts.DTOs.PermissionDto))
  name.vb: Task(Of PaginatedResult(Of PermissionDto))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: MyApp.Shared.Domain.Pagination.PaginatedResult`1
    name: PaginatedResult
  - name: <
  - uid: MyApp.Auth.Application.Contracts.DTOs.PermissionDto
    name: PermissionDto
    href: MyApp.Auth.Application.Contracts.DTOs.PermissionDto.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: MyApp.Shared.Domain.Pagination.PaginatedResult`1
    name: PaginatedResult
  - name: (
  - name: Of
  - name: " "
  - uid: MyApp.Auth.Application.Contracts.DTOs.PermissionDto
    name: PermissionDto
    href: MyApp.Auth.Application.Contracts.DTOs.PermissionDto.html
  - name: )
  - name: )
- uid: MyApp.Auth.Application.Services.PermissionService.GetPermissionByIdAsync*
  commentId: Overload:MyApp.Auth.Application.Services.PermissionService.GetPermissionByIdAsync
  href: MyApp.Auth.Application.Services.PermissionService.html#MyApp_Auth_Application_Services_PermissionService_GetPermissionByIdAsync_System_Guid_
  name: GetPermissionByIdAsync
  nameWithType: PermissionService.GetPermissionByIdAsync
  fullName: MyApp.Auth.Application.Services.PermissionService.GetPermissionByIdAsync
- uid: MyApp.Auth.Application.Contracts.IPermissionService.GetPermissionByIdAsync(System.Guid)
  commentId: M:MyApp.Auth.Application.Contracts.IPermissionService.GetPermissionByIdAsync(System.Guid)
  parent: MyApp.Auth.Application.Contracts.IPermissionService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: GetPermissionByIdAsync(Guid)
  nameWithType: IPermissionService.GetPermissionByIdAsync(Guid)
  fullName: MyApp.Auth.Application.Contracts.IPermissionService.GetPermissionByIdAsync(System.Guid)
  spec.csharp:
  - uid: MyApp.Auth.Application.Contracts.IPermissionService.GetPermissionByIdAsync(System.Guid)
    name: GetPermissionByIdAsync
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
  spec.vb:
  - uid: MyApp.Auth.Application.Contracts.IPermissionService.GetPermissionByIdAsync(System.Guid)
    name: GetPermissionByIdAsync
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
- uid: System.Threading.Tasks.Task{MyApp.Auth.Application.Contracts.DTOs.PermissionDto}
  commentId: T:System.Threading.Tasks.Task{MyApp.Auth.Application.Contracts.DTOs.PermissionDto}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<PermissionDto>
  nameWithType: Task<PermissionDto>
  fullName: System.Threading.Tasks.Task<MyApp.Auth.Application.Contracts.DTOs.PermissionDto>
  nameWithType.vb: Task(Of PermissionDto)
  fullName.vb: System.Threading.Tasks.Task(Of MyApp.Auth.Application.Contracts.DTOs.PermissionDto)
  name.vb: Task(Of PermissionDto)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: MyApp.Auth.Application.Contracts.DTOs.PermissionDto
    name: PermissionDto
    href: MyApp.Auth.Application.Contracts.DTOs.PermissionDto.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: MyApp.Auth.Application.Contracts.DTOs.PermissionDto
    name: PermissionDto
    href: MyApp.Auth.Application.Contracts.DTOs.PermissionDto.html
  - name: )
- uid: MyApp.Auth.Application.Services.PermissionService.GetPermissionByModuleActionAsync*
  commentId: Overload:MyApp.Auth.Application.Services.PermissionService.GetPermissionByModuleActionAsync
  href: MyApp.Auth.Application.Services.PermissionService.html#MyApp_Auth_Application_Services_PermissionService_GetPermissionByModuleActionAsync_System_String_System_String_
  name: GetPermissionByModuleActionAsync
  nameWithType: PermissionService.GetPermissionByModuleActionAsync
  fullName: MyApp.Auth.Application.Services.PermissionService.GetPermissionByModuleActionAsync
- uid: MyApp.Auth.Application.Contracts.IPermissionService.GetPermissionByModuleActionAsync(System.String,System.String)
  commentId: M:MyApp.Auth.Application.Contracts.IPermissionService.GetPermissionByModuleActionAsync(System.String,System.String)
  parent: MyApp.Auth.Application.Contracts.IPermissionService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetPermissionByModuleActionAsync(string, string)
  nameWithType: IPermissionService.GetPermissionByModuleActionAsync(string, string)
  fullName: MyApp.Auth.Application.Contracts.IPermissionService.GetPermissionByModuleActionAsync(string, string)
  nameWithType.vb: IPermissionService.GetPermissionByModuleActionAsync(String, String)
  fullName.vb: MyApp.Auth.Application.Contracts.IPermissionService.GetPermissionByModuleActionAsync(String, String)
  name.vb: GetPermissionByModuleActionAsync(String, String)
  spec.csharp:
  - uid: MyApp.Auth.Application.Contracts.IPermissionService.GetPermissionByModuleActionAsync(System.String,System.String)
    name: GetPermissionByModuleActionAsync
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MyApp.Auth.Application.Contracts.IPermissionService.GetPermissionByModuleActionAsync(System.String,System.String)
    name: GetPermissionByModuleActionAsync
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MyApp.Auth.Application.Services.PermissionService.CreatePermissionAsync*
  commentId: Overload:MyApp.Auth.Application.Services.PermissionService.CreatePermissionAsync
  href: MyApp.Auth.Application.Services.PermissionService.html#MyApp_Auth_Application_Services_PermissionService_CreatePermissionAsync_MyApp_Auth_Application_Contracts_DTOs_CreatePermissionDto_
  name: CreatePermissionAsync
  nameWithType: PermissionService.CreatePermissionAsync
  fullName: MyApp.Auth.Application.Services.PermissionService.CreatePermissionAsync
- uid: MyApp.Auth.Application.Contracts.IPermissionService.CreatePermissionAsync(MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto)
  commentId: M:MyApp.Auth.Application.Contracts.IPermissionService.CreatePermissionAsync(MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto)
  parent: MyApp.Auth.Application.Contracts.IPermissionService
  name: CreatePermissionAsync(CreatePermissionDto)
  nameWithType: IPermissionService.CreatePermissionAsync(CreatePermissionDto)
  fullName: MyApp.Auth.Application.Contracts.IPermissionService.CreatePermissionAsync(MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto)
  spec.csharp:
  - uid: MyApp.Auth.Application.Contracts.IPermissionService.CreatePermissionAsync(MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto)
    name: CreatePermissionAsync
  - name: (
  - uid: MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto
    name: CreatePermissionDto
  - name: )
  spec.vb:
  - uid: MyApp.Auth.Application.Contracts.IPermissionService.CreatePermissionAsync(MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto)
    name: CreatePermissionAsync
  - name: (
  - uid: MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto
    name: CreatePermissionDto
  - name: )
- uid: MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto
  commentId: T:MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto
  parent: MyApp.Auth.Application.Contracts.DTOs
  href: MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto.html
  name: CreatePermissionDto
  nameWithType: CreatePermissionDto
  fullName: MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto
- uid: MyApp.Auth.Application.Contracts.DTOs
  commentId: N:MyApp.Auth.Application.Contracts.DTOs
  href: MyApp.html
  name: MyApp.Auth.Application.Contracts.DTOs
  nameWithType: MyApp.Auth.Application.Contracts.DTOs
  fullName: MyApp.Auth.Application.Contracts.DTOs
  spec.csharp:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Auth
    name: Auth
    href: MyApp.Auth.html
  - name: .
  - uid: MyApp.Auth.Application
    name: Application
    href: MyApp.Auth.Application.html
  - name: .
  - uid: MyApp.Auth.Application.Contracts
    name: Contracts
    href: MyApp.Auth.Application.Contracts.html
  - name: .
  - uid: MyApp.Auth.Application.Contracts.DTOs
    name: DTOs
    href: MyApp.Auth.Application.Contracts.DTOs.html
  spec.vb:
  - uid: MyApp
    name: MyApp
    href: MyApp.html
  - name: .
  - uid: MyApp.Auth
    name: Auth
    href: MyApp.Auth.html
  - name: .
  - uid: MyApp.Auth.Application
    name: Application
    href: MyApp.Auth.Application.html
  - name: .
  - uid: MyApp.Auth.Application.Contracts
    name: Contracts
    href: MyApp.Auth.Application.Contracts.html
  - name: .
  - uid: MyApp.Auth.Application.Contracts.DTOs
    name: DTOs
    href: MyApp.Auth.Application.Contracts.DTOs.html
- uid: MyApp.Auth.Application.Services.PermissionService.UpdatePermissionAsync*
  commentId: Overload:MyApp.Auth.Application.Services.PermissionService.UpdatePermissionAsync
  href: MyApp.Auth.Application.Services.PermissionService.html#MyApp_Auth_Application_Services_PermissionService_UpdatePermissionAsync_System_Guid_MyApp_Auth_Application_Contracts_DTOs_UpdatePermissionDto_
  name: UpdatePermissionAsync
  nameWithType: PermissionService.UpdatePermissionAsync
  fullName: MyApp.Auth.Application.Services.PermissionService.UpdatePermissionAsync
- uid: MyApp.Auth.Application.Contracts.IPermissionService.UpdatePermissionAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto)
  commentId: M:MyApp.Auth.Application.Contracts.IPermissionService.UpdatePermissionAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto)
  parent: MyApp.Auth.Application.Contracts.IPermissionService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: UpdatePermissionAsync(Guid, UpdatePermissionDto)
  nameWithType: IPermissionService.UpdatePermissionAsync(Guid, UpdatePermissionDto)
  fullName: MyApp.Auth.Application.Contracts.IPermissionService.UpdatePermissionAsync(System.Guid, MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto)
  spec.csharp:
  - uid: MyApp.Auth.Application.Contracts.IPermissionService.UpdatePermissionAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto)
    name: UpdatePermissionAsync
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: ','
  - name: " "
  - uid: MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto
    name: UpdatePermissionDto
  - name: )
  spec.vb:
  - uid: MyApp.Auth.Application.Contracts.IPermissionService.UpdatePermissionAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto)
    name: UpdatePermissionAsync
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: ','
  - name: " "
  - uid: MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto
    name: UpdatePermissionDto
  - name: )
- uid: MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto
  commentId: T:MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto
  parent: MyApp.Auth.Application.Contracts.DTOs
  href: MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto.html
  name: UpdatePermissionDto
  nameWithType: UpdatePermissionDto
  fullName: MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto
- uid: MyApp.Auth.Application.Services.PermissionService.DeletePermissionAsync*
  commentId: Overload:MyApp.Auth.Application.Services.PermissionService.DeletePermissionAsync
  href: MyApp.Auth.Application.Services.PermissionService.html#MyApp_Auth_Application_Services_PermissionService_DeletePermissionAsync_System_Guid_
  name: DeletePermissionAsync
  nameWithType: PermissionService.DeletePermissionAsync
  fullName: MyApp.Auth.Application.Services.PermissionService.DeletePermissionAsync
- uid: MyApp.Auth.Application.Contracts.IPermissionService.DeletePermissionAsync(System.Guid)
  commentId: M:MyApp.Auth.Application.Contracts.IPermissionService.DeletePermissionAsync(System.Guid)
  parent: MyApp.Auth.Application.Contracts.IPermissionService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: DeletePermissionAsync(Guid)
  nameWithType: IPermissionService.DeletePermissionAsync(Guid)
  fullName: MyApp.Auth.Application.Contracts.IPermissionService.DeletePermissionAsync(System.Guid)
  spec.csharp:
  - uid: MyApp.Auth.Application.Contracts.IPermissionService.DeletePermissionAsync(System.Guid)
    name: DeletePermissionAsync
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
  spec.vb:
  - uid: MyApp.Auth.Application.Contracts.IPermissionService.DeletePermissionAsync(System.Guid)
    name: DeletePermissionAsync
  - name: (
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: )
