name: Deploy to Azure Container Apps

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  # 'id-token: write' és per a OIDC, el podem eliminar, però el mantindrem per si cal una futura actualització
  id-token: write
  contents: read

env:
  # Eliminem els secrets AZURE_CLIENT_ID i AZURE_TENANT_ID de l'env global
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
  AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Install Azure Developer CLI
        # Utilitzem l'última versió estable per evitar el bug que teniu localment
        uses: Azure/setup-azd@v1

      - name: Log in with Azure (Client Credentials)
        # Utilitza l'acció d'inici de sessió d'Azure, que llegeix el JSON de AZURE_CREDENTIALS
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true
          
      # ⚠️ PAS IMPORTANT: Configuració manual de l'entorn abans de l'azd up
      - name: Set AZD Environment Variables
        run: |
          # Aquestes variables són necessàries per a azd up, especialment la ubicació i subscripció
          azd env set AZURE_LOCATION ${{ env.AZURE_LOCATION }}
          azd env set AZURE_SUBSCRIPTION_ID ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        shell: bash

      - name: Provision and Deploy
        run: |
          # azd up executarà la provisió i la implementació
          # azd up --no-prompt
          azd provision --preview
        env:
          # Passar secrets directament com a variables d'entorn per a l'execució azd up
          SQL_ADMIN_PASSWORD: ${{ secrets.SQL_ADMIN_PASSWORD }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          FRONTEND_ORIGIN: ${{ vars.FRONTEND_ORIGIN }}
