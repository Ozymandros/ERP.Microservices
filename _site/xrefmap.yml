### YamlMime:XRefMap
sorted: true
references:
- uid: MyApp.Auth.API.Controllers
  name: MyApp.Auth.API.Controllers
  href: api/MyApp.Auth.API.Controllers.html
  commentId: N:MyApp.Auth.API.Controllers
  fullName: MyApp.Auth.API.Controllers
  nameWithType: MyApp.Auth.API.Controllers
- uid: MyApp.Auth.API.Controllers.AuthController
  name: AuthController
  href: api/MyApp.Auth.API.Controllers.AuthController.html
  commentId: T:MyApp.Auth.API.Controllers.AuthController
  fullName: MyApp.Auth.API.Controllers.AuthController
  nameWithType: AuthController
- uid: MyApp.Auth.API.Controllers.AuthController.#ctor(MyApp.Auth.Application.Contracts.Services.IAuthService,Microsoft.Extensions.Logging.ILogger{MyApp.Auth.API.Controllers.AuthController})
  name: AuthController(IAuthService, ILogger<AuthController>)
  href: api/MyApp.Auth.API.Controllers.AuthController.html#MyApp_Auth_API_Controllers_AuthController__ctor_MyApp_Auth_Application_Contracts_Services_IAuthService_Microsoft_Extensions_Logging_ILogger_MyApp_Auth_API_Controllers_AuthController__
  commentId: M:MyApp.Auth.API.Controllers.AuthController.#ctor(MyApp.Auth.Application.Contracts.Services.IAuthService,Microsoft.Extensions.Logging.ILogger{MyApp.Auth.API.Controllers.AuthController})
  name.vb: New(IAuthService, ILogger(Of AuthController))
  fullName: MyApp.Auth.API.Controllers.AuthController.AuthController(MyApp.Auth.Application.Contracts.Services.IAuthService, Microsoft.Extensions.Logging.ILogger<MyApp.Auth.API.Controllers.AuthController>)
  fullName.vb: MyApp.Auth.API.Controllers.AuthController.New(MyApp.Auth.Application.Contracts.Services.IAuthService, Microsoft.Extensions.Logging.ILogger(Of MyApp.Auth.API.Controllers.AuthController))
  nameWithType: AuthController.AuthController(IAuthService, ILogger<AuthController>)
  nameWithType.vb: AuthController.New(IAuthService, ILogger(Of AuthController))
- uid: MyApp.Auth.API.Controllers.AuthController.#ctor*
  name: AuthController
  href: api/MyApp.Auth.API.Controllers.AuthController.html#MyApp_Auth_API_Controllers_AuthController__ctor_
  commentId: Overload:MyApp.Auth.API.Controllers.AuthController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Auth.API.Controllers.AuthController.AuthController
  fullName.vb: MyApp.Auth.API.Controllers.AuthController.New
  nameWithType: AuthController.AuthController
  nameWithType.vb: AuthController.New
- uid: MyApp.Auth.API.Controllers.AuthController.ExternalLogin(System.String)
  name: ExternalLogin(string)
  href: api/MyApp.Auth.API.Controllers.AuthController.html#MyApp_Auth_API_Controllers_AuthController_ExternalLogin_System_String_
  commentId: M:MyApp.Auth.API.Controllers.AuthController.ExternalLogin(System.String)
  name.vb: ExternalLogin(String)
  fullName: MyApp.Auth.API.Controllers.AuthController.ExternalLogin(string)
  fullName.vb: MyApp.Auth.API.Controllers.AuthController.ExternalLogin(String)
  nameWithType: AuthController.ExternalLogin(string)
  nameWithType.vb: AuthController.ExternalLogin(String)
- uid: MyApp.Auth.API.Controllers.AuthController.ExternalLogin*
  name: ExternalLogin
  href: api/MyApp.Auth.API.Controllers.AuthController.html#MyApp_Auth_API_Controllers_AuthController_ExternalLogin_
  commentId: Overload:MyApp.Auth.API.Controllers.AuthController.ExternalLogin
  isSpec: "True"
  fullName: MyApp.Auth.API.Controllers.AuthController.ExternalLogin
  nameWithType: AuthController.ExternalLogin
- uid: MyApp.Auth.API.Controllers.AuthController.ExternalLoginCallback(System.String,System.String)
  name: ExternalLoginCallback(string?, string?)
  href: api/MyApp.Auth.API.Controllers.AuthController.html#MyApp_Auth_API_Controllers_AuthController_ExternalLoginCallback_System_String_System_String_
  commentId: M:MyApp.Auth.API.Controllers.AuthController.ExternalLoginCallback(System.String,System.String)
  name.vb: ExternalLoginCallback(String, String)
  fullName: MyApp.Auth.API.Controllers.AuthController.ExternalLoginCallback(string?, string?)
  fullName.vb: MyApp.Auth.API.Controllers.AuthController.ExternalLoginCallback(String, String)
  nameWithType: AuthController.ExternalLoginCallback(string?, string?)
  nameWithType.vb: AuthController.ExternalLoginCallback(String, String)
- uid: MyApp.Auth.API.Controllers.AuthController.ExternalLoginCallback*
  name: ExternalLoginCallback
  href: api/MyApp.Auth.API.Controllers.AuthController.html#MyApp_Auth_API_Controllers_AuthController_ExternalLoginCallback_
  commentId: Overload:MyApp.Auth.API.Controllers.AuthController.ExternalLoginCallback
  isSpec: "True"
  fullName: MyApp.Auth.API.Controllers.AuthController.ExternalLoginCallback
  nameWithType: AuthController.ExternalLoginCallback
- uid: MyApp.Auth.API.Controllers.AuthController.HandleRefreshOptions
  name: HandleRefreshOptions()
  href: api/MyApp.Auth.API.Controllers.AuthController.html#MyApp_Auth_API_Controllers_AuthController_HandleRefreshOptions
  commentId: M:MyApp.Auth.API.Controllers.AuthController.HandleRefreshOptions
  fullName: MyApp.Auth.API.Controllers.AuthController.HandleRefreshOptions()
  nameWithType: AuthController.HandleRefreshOptions()
- uid: MyApp.Auth.API.Controllers.AuthController.HandleRefreshOptions*
  name: HandleRefreshOptions
  href: api/MyApp.Auth.API.Controllers.AuthController.html#MyApp_Auth_API_Controllers_AuthController_HandleRefreshOptions_
  commentId: Overload:MyApp.Auth.API.Controllers.AuthController.HandleRefreshOptions
  isSpec: "True"
  fullName: MyApp.Auth.API.Controllers.AuthController.HandleRefreshOptions
  nameWithType: AuthController.HandleRefreshOptions
- uid: MyApp.Auth.API.Controllers.AuthController.Login(MyApp.Auth.Application.Contracts.DTOs.LoginDto)
  name: Login(LoginDto)
  href: api/MyApp.Auth.API.Controllers.AuthController.html#MyApp_Auth_API_Controllers_AuthController_Login_MyApp_Auth_Application_Contracts_DTOs_LoginDto_
  commentId: M:MyApp.Auth.API.Controllers.AuthController.Login(MyApp.Auth.Application.Contracts.DTOs.LoginDto)
  fullName: MyApp.Auth.API.Controllers.AuthController.Login(MyApp.Auth.Application.Contracts.DTOs.LoginDto)
  nameWithType: AuthController.Login(LoginDto)
- uid: MyApp.Auth.API.Controllers.AuthController.Login*
  name: Login
  href: api/MyApp.Auth.API.Controllers.AuthController.html#MyApp_Auth_API_Controllers_AuthController_Login_
  commentId: Overload:MyApp.Auth.API.Controllers.AuthController.Login
  isSpec: "True"
  fullName: MyApp.Auth.API.Controllers.AuthController.Login
  nameWithType: AuthController.Login
- uid: MyApp.Auth.API.Controllers.AuthController.Logout
  name: Logout()
  href: api/MyApp.Auth.API.Controllers.AuthController.html#MyApp_Auth_API_Controllers_AuthController_Logout
  commentId: M:MyApp.Auth.API.Controllers.AuthController.Logout
  fullName: MyApp.Auth.API.Controllers.AuthController.Logout()
  nameWithType: AuthController.Logout()
- uid: MyApp.Auth.API.Controllers.AuthController.Logout*
  name: Logout
  href: api/MyApp.Auth.API.Controllers.AuthController.html#MyApp_Auth_API_Controllers_AuthController_Logout_
  commentId: Overload:MyApp.Auth.API.Controllers.AuthController.Logout
  isSpec: "True"
  fullName: MyApp.Auth.API.Controllers.AuthController.Logout
  nameWithType: AuthController.Logout
- uid: MyApp.Auth.API.Controllers.AuthController.RefreshToken(MyApp.Auth.Application.Contracts.DTOs.RefreshTokenDto)
  name: RefreshToken(RefreshTokenDto)
  href: api/MyApp.Auth.API.Controllers.AuthController.html#MyApp_Auth_API_Controllers_AuthController_RefreshToken_MyApp_Auth_Application_Contracts_DTOs_RefreshTokenDto_
  commentId: M:MyApp.Auth.API.Controllers.AuthController.RefreshToken(MyApp.Auth.Application.Contracts.DTOs.RefreshTokenDto)
  fullName: MyApp.Auth.API.Controllers.AuthController.RefreshToken(MyApp.Auth.Application.Contracts.DTOs.RefreshTokenDto)
  nameWithType: AuthController.RefreshToken(RefreshTokenDto)
- uid: MyApp.Auth.API.Controllers.AuthController.RefreshToken*
  name: RefreshToken
  href: api/MyApp.Auth.API.Controllers.AuthController.html#MyApp_Auth_API_Controllers_AuthController_RefreshToken_
  commentId: Overload:MyApp.Auth.API.Controllers.AuthController.RefreshToken
  isSpec: "True"
  fullName: MyApp.Auth.API.Controllers.AuthController.RefreshToken
  nameWithType: AuthController.RefreshToken
- uid: MyApp.Auth.API.Controllers.AuthController.Register(MyApp.Auth.Application.Contracts.DTOs.RegisterDto)
  name: Register(RegisterDto)
  href: api/MyApp.Auth.API.Controllers.AuthController.html#MyApp_Auth_API_Controllers_AuthController_Register_MyApp_Auth_Application_Contracts_DTOs_RegisterDto_
  commentId: M:MyApp.Auth.API.Controllers.AuthController.Register(MyApp.Auth.Application.Contracts.DTOs.RegisterDto)
  fullName: MyApp.Auth.API.Controllers.AuthController.Register(MyApp.Auth.Application.Contracts.DTOs.RegisterDto)
  nameWithType: AuthController.Register(RegisterDto)
- uid: MyApp.Auth.API.Controllers.AuthController.Register*
  name: Register
  href: api/MyApp.Auth.API.Controllers.AuthController.html#MyApp_Auth_API_Controllers_AuthController_Register_
  commentId: Overload:MyApp.Auth.API.Controllers.AuthController.Register
  isSpec: "True"
  fullName: MyApp.Auth.API.Controllers.AuthController.Register
  nameWithType: AuthController.Register
- uid: MyApp.Auth.API.Controllers.PermissionsController
  name: PermissionsController
  href: api/MyApp.Auth.API.Controllers.PermissionsController.html
  commentId: T:MyApp.Auth.API.Controllers.PermissionsController
  fullName: MyApp.Auth.API.Controllers.PermissionsController
  nameWithType: PermissionsController
- uid: MyApp.Auth.API.Controllers.PermissionsController.#ctor(MyApp.Auth.Application.Contracts.IPermissionService,MyApp.Shared.Domain.Caching.ICacheService,Microsoft.Extensions.Logging.ILogger{MyApp.Auth.API.Controllers.PermissionsController})
  name: PermissionsController(IPermissionService, ICacheService, ILogger<PermissionsController>)
  href: api/MyApp.Auth.API.Controllers.PermissionsController.html#MyApp_Auth_API_Controllers_PermissionsController__ctor_MyApp_Auth_Application_Contracts_IPermissionService_MyApp_Shared_Domain_Caching_ICacheService_Microsoft_Extensions_Logging_ILogger_MyApp_Auth_API_Controllers_PermissionsController__
  commentId: M:MyApp.Auth.API.Controllers.PermissionsController.#ctor(MyApp.Auth.Application.Contracts.IPermissionService,MyApp.Shared.Domain.Caching.ICacheService,Microsoft.Extensions.Logging.ILogger{MyApp.Auth.API.Controllers.PermissionsController})
  name.vb: New(IPermissionService, ICacheService, ILogger(Of PermissionsController))
  fullName: MyApp.Auth.API.Controllers.PermissionsController.PermissionsController(MyApp.Auth.Application.Contracts.IPermissionService, MyApp.Shared.Domain.Caching.ICacheService, Microsoft.Extensions.Logging.ILogger<MyApp.Auth.API.Controllers.PermissionsController>)
  fullName.vb: MyApp.Auth.API.Controllers.PermissionsController.New(MyApp.Auth.Application.Contracts.IPermissionService, MyApp.Shared.Domain.Caching.ICacheService, Microsoft.Extensions.Logging.ILogger(Of MyApp.Auth.API.Controllers.PermissionsController))
  nameWithType: PermissionsController.PermissionsController(IPermissionService, ICacheService, ILogger<PermissionsController>)
  nameWithType.vb: PermissionsController.New(IPermissionService, ICacheService, ILogger(Of PermissionsController))
- uid: MyApp.Auth.API.Controllers.PermissionsController.#ctor*
  name: PermissionsController
  href: api/MyApp.Auth.API.Controllers.PermissionsController.html#MyApp_Auth_API_Controllers_PermissionsController__ctor_
  commentId: Overload:MyApp.Auth.API.Controllers.PermissionsController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Auth.API.Controllers.PermissionsController.PermissionsController
  fullName.vb: MyApp.Auth.API.Controllers.PermissionsController.New
  nameWithType: PermissionsController.PermissionsController
  nameWithType.vb: PermissionsController.New
- uid: MyApp.Auth.API.Controllers.PermissionsController.CheckPermission(System.String,System.String)
  name: CheckPermission(string, string)
  href: api/MyApp.Auth.API.Controllers.PermissionsController.html#MyApp_Auth_API_Controllers_PermissionsController_CheckPermission_System_String_System_String_
  commentId: M:MyApp.Auth.API.Controllers.PermissionsController.CheckPermission(System.String,System.String)
  name.vb: CheckPermission(String, String)
  fullName: MyApp.Auth.API.Controllers.PermissionsController.CheckPermission(string, string)
  fullName.vb: MyApp.Auth.API.Controllers.PermissionsController.CheckPermission(String, String)
  nameWithType: PermissionsController.CheckPermission(string, string)
  nameWithType.vb: PermissionsController.CheckPermission(String, String)
- uid: MyApp.Auth.API.Controllers.PermissionsController.CheckPermission*
  name: CheckPermission
  href: api/MyApp.Auth.API.Controllers.PermissionsController.html#MyApp_Auth_API_Controllers_PermissionsController_CheckPermission_
  commentId: Overload:MyApp.Auth.API.Controllers.PermissionsController.CheckPermission
  isSpec: "True"
  fullName: MyApp.Auth.API.Controllers.PermissionsController.CheckPermission
  nameWithType: PermissionsController.CheckPermission
- uid: MyApp.Auth.API.Controllers.PermissionsController.Create(MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto)
  name: Create(CreatePermissionDto)
  href: api/MyApp.Auth.API.Controllers.PermissionsController.html#MyApp_Auth_API_Controllers_PermissionsController_Create_MyApp_Auth_Application_Contracts_DTOs_CreatePermissionDto_
  commentId: M:MyApp.Auth.API.Controllers.PermissionsController.Create(MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto)
  fullName: MyApp.Auth.API.Controllers.PermissionsController.Create(MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto)
  nameWithType: PermissionsController.Create(CreatePermissionDto)
- uid: MyApp.Auth.API.Controllers.PermissionsController.Create*
  name: Create
  href: api/MyApp.Auth.API.Controllers.PermissionsController.html#MyApp_Auth_API_Controllers_PermissionsController_Create_
  commentId: Overload:MyApp.Auth.API.Controllers.PermissionsController.Create
  isSpec: "True"
  fullName: MyApp.Auth.API.Controllers.PermissionsController.Create
  nameWithType: PermissionsController.Create
- uid: MyApp.Auth.API.Controllers.PermissionsController.Delete(System.Guid)
  name: Delete(Guid)
  href: api/MyApp.Auth.API.Controllers.PermissionsController.html#MyApp_Auth_API_Controllers_PermissionsController_Delete_System_Guid_
  commentId: M:MyApp.Auth.API.Controllers.PermissionsController.Delete(System.Guid)
  fullName: MyApp.Auth.API.Controllers.PermissionsController.Delete(System.Guid)
  nameWithType: PermissionsController.Delete(Guid)
- uid: MyApp.Auth.API.Controllers.PermissionsController.Delete*
  name: Delete
  href: api/MyApp.Auth.API.Controllers.PermissionsController.html#MyApp_Auth_API_Controllers_PermissionsController_Delete_
  commentId: Overload:MyApp.Auth.API.Controllers.PermissionsController.Delete
  isSpec: "True"
  fullName: MyApp.Auth.API.Controllers.PermissionsController.Delete
  nameWithType: PermissionsController.Delete
- uid: MyApp.Auth.API.Controllers.PermissionsController.GetAll
  name: GetAll()
  href: api/MyApp.Auth.API.Controllers.PermissionsController.html#MyApp_Auth_API_Controllers_PermissionsController_GetAll
  commentId: M:MyApp.Auth.API.Controllers.PermissionsController.GetAll
  fullName: MyApp.Auth.API.Controllers.PermissionsController.GetAll()
  nameWithType: PermissionsController.GetAll()
- uid: MyApp.Auth.API.Controllers.PermissionsController.GetAll*
  name: GetAll
  href: api/MyApp.Auth.API.Controllers.PermissionsController.html#MyApp_Auth_API_Controllers_PermissionsController_GetAll_
  commentId: Overload:MyApp.Auth.API.Controllers.PermissionsController.GetAll
  isSpec: "True"
  fullName: MyApp.Auth.API.Controllers.PermissionsController.GetAll
  nameWithType: PermissionsController.GetAll
- uid: MyApp.Auth.API.Controllers.PermissionsController.GetAllPaginated(System.Int32,System.Int32)
  name: GetAllPaginated(int, int)
  href: api/MyApp.Auth.API.Controllers.PermissionsController.html#MyApp_Auth_API_Controllers_PermissionsController_GetAllPaginated_System_Int32_System_Int32_
  commentId: M:MyApp.Auth.API.Controllers.PermissionsController.GetAllPaginated(System.Int32,System.Int32)
  name.vb: GetAllPaginated(Integer, Integer)
  fullName: MyApp.Auth.API.Controllers.PermissionsController.GetAllPaginated(int, int)
  fullName.vb: MyApp.Auth.API.Controllers.PermissionsController.GetAllPaginated(Integer, Integer)
  nameWithType: PermissionsController.GetAllPaginated(int, int)
  nameWithType.vb: PermissionsController.GetAllPaginated(Integer, Integer)
- uid: MyApp.Auth.API.Controllers.PermissionsController.GetAllPaginated*
  name: GetAllPaginated
  href: api/MyApp.Auth.API.Controllers.PermissionsController.html#MyApp_Auth_API_Controllers_PermissionsController_GetAllPaginated_
  commentId: Overload:MyApp.Auth.API.Controllers.PermissionsController.GetAllPaginated
  isSpec: "True"
  fullName: MyApp.Auth.API.Controllers.PermissionsController.GetAllPaginated
  nameWithType: PermissionsController.GetAllPaginated
- uid: MyApp.Auth.API.Controllers.PermissionsController.GetById(System.Guid)
  name: GetById(Guid)
  href: api/MyApp.Auth.API.Controllers.PermissionsController.html#MyApp_Auth_API_Controllers_PermissionsController_GetById_System_Guid_
  commentId: M:MyApp.Auth.API.Controllers.PermissionsController.GetById(System.Guid)
  fullName: MyApp.Auth.API.Controllers.PermissionsController.GetById(System.Guid)
  nameWithType: PermissionsController.GetById(Guid)
- uid: MyApp.Auth.API.Controllers.PermissionsController.GetById*
  name: GetById
  href: api/MyApp.Auth.API.Controllers.PermissionsController.html#MyApp_Auth_API_Controllers_PermissionsController_GetById_
  commentId: Overload:MyApp.Auth.API.Controllers.PermissionsController.GetById
  isSpec: "True"
  fullName: MyApp.Auth.API.Controllers.PermissionsController.GetById
  nameWithType: PermissionsController.GetById
- uid: MyApp.Auth.API.Controllers.PermissionsController.GetByModuleAction(System.String,System.String)
  name: GetByModuleAction(string, string)
  href: api/MyApp.Auth.API.Controllers.PermissionsController.html#MyApp_Auth_API_Controllers_PermissionsController_GetByModuleAction_System_String_System_String_
  commentId: M:MyApp.Auth.API.Controllers.PermissionsController.GetByModuleAction(System.String,System.String)
  name.vb: GetByModuleAction(String, String)
  fullName: MyApp.Auth.API.Controllers.PermissionsController.GetByModuleAction(string, string)
  fullName.vb: MyApp.Auth.API.Controllers.PermissionsController.GetByModuleAction(String, String)
  nameWithType: PermissionsController.GetByModuleAction(string, string)
  nameWithType.vb: PermissionsController.GetByModuleAction(String, String)
- uid: MyApp.Auth.API.Controllers.PermissionsController.GetByModuleAction*
  name: GetByModuleAction
  href: api/MyApp.Auth.API.Controllers.PermissionsController.html#MyApp_Auth_API_Controllers_PermissionsController_GetByModuleAction_
  commentId: Overload:MyApp.Auth.API.Controllers.PermissionsController.GetByModuleAction
  isSpec: "True"
  fullName: MyApp.Auth.API.Controllers.PermissionsController.GetByModuleAction
  nameWithType: PermissionsController.GetByModuleAction
- uid: MyApp.Auth.API.Controllers.PermissionsController.Update(System.Guid,MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto)
  name: Update(Guid, UpdatePermissionDto)
  href: api/MyApp.Auth.API.Controllers.PermissionsController.html#MyApp_Auth_API_Controllers_PermissionsController_Update_System_Guid_MyApp_Auth_Application_Contracts_DTOs_UpdatePermissionDto_
  commentId: M:MyApp.Auth.API.Controllers.PermissionsController.Update(System.Guid,MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto)
  fullName: MyApp.Auth.API.Controllers.PermissionsController.Update(System.Guid, MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto)
  nameWithType: PermissionsController.Update(Guid, UpdatePermissionDto)
- uid: MyApp.Auth.API.Controllers.PermissionsController.Update*
  name: Update
  href: api/MyApp.Auth.API.Controllers.PermissionsController.html#MyApp_Auth_API_Controllers_PermissionsController_Update_
  commentId: Overload:MyApp.Auth.API.Controllers.PermissionsController.Update
  isSpec: "True"
  fullName: MyApp.Auth.API.Controllers.PermissionsController.Update
  nameWithType: PermissionsController.Update
- uid: MyApp.Auth.API.Controllers.RolesController
  name: RolesController
  href: api/MyApp.Auth.API.Controllers.RolesController.html
  commentId: T:MyApp.Auth.API.Controllers.RolesController
  fullName: MyApp.Auth.API.Controllers.RolesController
  nameWithType: RolesController
- uid: MyApp.Auth.API.Controllers.RolesController.#ctor(MyApp.Auth.Application.Contracts.Services.IRoleService,Microsoft.Extensions.Logging.ILogger{MyApp.Auth.API.Controllers.RolesController},MyApp.Shared.Domain.Caching.ICacheService,MyApp.Auth.Application.Contracts.IPermissionService)
  name: RolesController(IRoleService, ILogger<RolesController>, ICacheService, IPermissionService)
  href: api/MyApp.Auth.API.Controllers.RolesController.html#MyApp_Auth_API_Controllers_RolesController__ctor_MyApp_Auth_Application_Contracts_Services_IRoleService_Microsoft_Extensions_Logging_ILogger_MyApp_Auth_API_Controllers_RolesController__MyApp_Shared_Domain_Caching_ICacheService_MyApp_Auth_Application_Contracts_IPermissionService_
  commentId: M:MyApp.Auth.API.Controllers.RolesController.#ctor(MyApp.Auth.Application.Contracts.Services.IRoleService,Microsoft.Extensions.Logging.ILogger{MyApp.Auth.API.Controllers.RolesController},MyApp.Shared.Domain.Caching.ICacheService,MyApp.Auth.Application.Contracts.IPermissionService)
  name.vb: New(IRoleService, ILogger(Of RolesController), ICacheService, IPermissionService)
  fullName: MyApp.Auth.API.Controllers.RolesController.RolesController(MyApp.Auth.Application.Contracts.Services.IRoleService, Microsoft.Extensions.Logging.ILogger<MyApp.Auth.API.Controllers.RolesController>, MyApp.Shared.Domain.Caching.ICacheService, MyApp.Auth.Application.Contracts.IPermissionService)
  fullName.vb: MyApp.Auth.API.Controllers.RolesController.New(MyApp.Auth.Application.Contracts.Services.IRoleService, Microsoft.Extensions.Logging.ILogger(Of MyApp.Auth.API.Controllers.RolesController), MyApp.Shared.Domain.Caching.ICacheService, MyApp.Auth.Application.Contracts.IPermissionService)
  nameWithType: RolesController.RolesController(IRoleService, ILogger<RolesController>, ICacheService, IPermissionService)
  nameWithType.vb: RolesController.New(IRoleService, ILogger(Of RolesController), ICacheService, IPermissionService)
- uid: MyApp.Auth.API.Controllers.RolesController.#ctor*
  name: RolesController
  href: api/MyApp.Auth.API.Controllers.RolesController.html#MyApp_Auth_API_Controllers_RolesController__ctor_
  commentId: Overload:MyApp.Auth.API.Controllers.RolesController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Auth.API.Controllers.RolesController.RolesController
  fullName.vb: MyApp.Auth.API.Controllers.RolesController.New
  nameWithType: RolesController.RolesController
  nameWithType.vb: RolesController.New
- uid: MyApp.Auth.API.Controllers.RolesController.AddPermissionToRole(System.Guid,System.Guid)
  name: AddPermissionToRole(Guid, Guid)
  href: api/MyApp.Auth.API.Controllers.RolesController.html#MyApp_Auth_API_Controllers_RolesController_AddPermissionToRole_System_Guid_System_Guid_
  commentId: M:MyApp.Auth.API.Controllers.RolesController.AddPermissionToRole(System.Guid,System.Guid)
  fullName: MyApp.Auth.API.Controllers.RolesController.AddPermissionToRole(System.Guid, System.Guid)
  nameWithType: RolesController.AddPermissionToRole(Guid, Guid)
- uid: MyApp.Auth.API.Controllers.RolesController.AddPermissionToRole*
  name: AddPermissionToRole
  href: api/MyApp.Auth.API.Controllers.RolesController.html#MyApp_Auth_API_Controllers_RolesController_AddPermissionToRole_
  commentId: Overload:MyApp.Auth.API.Controllers.RolesController.AddPermissionToRole
  isSpec: "True"
  fullName: MyApp.Auth.API.Controllers.RolesController.AddPermissionToRole
  nameWithType: RolesController.AddPermissionToRole
- uid: MyApp.Auth.API.Controllers.RolesController.Create(MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
  name: Create(CreateRoleDto)
  href: api/MyApp.Auth.API.Controllers.RolesController.html#MyApp_Auth_API_Controllers_RolesController_Create_MyApp_Auth_Application_Contracts_DTOs_CreateRoleDto_
  commentId: M:MyApp.Auth.API.Controllers.RolesController.Create(MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
  fullName: MyApp.Auth.API.Controllers.RolesController.Create(MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
  nameWithType: RolesController.Create(CreateRoleDto)
- uid: MyApp.Auth.API.Controllers.RolesController.Create*
  name: Create
  href: api/MyApp.Auth.API.Controllers.RolesController.html#MyApp_Auth_API_Controllers_RolesController_Create_
  commentId: Overload:MyApp.Auth.API.Controllers.RolesController.Create
  isSpec: "True"
  fullName: MyApp.Auth.API.Controllers.RolesController.Create
  nameWithType: RolesController.Create
- uid: MyApp.Auth.API.Controllers.RolesController.Delete(System.Guid)
  name: Delete(Guid)
  href: api/MyApp.Auth.API.Controllers.RolesController.html#MyApp_Auth_API_Controllers_RolesController_Delete_System_Guid_
  commentId: M:MyApp.Auth.API.Controllers.RolesController.Delete(System.Guid)
  fullName: MyApp.Auth.API.Controllers.RolesController.Delete(System.Guid)
  nameWithType: RolesController.Delete(Guid)
- uid: MyApp.Auth.API.Controllers.RolesController.Delete*
  name: Delete
  href: api/MyApp.Auth.API.Controllers.RolesController.html#MyApp_Auth_API_Controllers_RolesController_Delete_
  commentId: Overload:MyApp.Auth.API.Controllers.RolesController.Delete
  isSpec: "True"
  fullName: MyApp.Auth.API.Controllers.RolesController.Delete
  nameWithType: RolesController.Delete
- uid: MyApp.Auth.API.Controllers.RolesController.GetAll
  name: GetAll()
  href: api/MyApp.Auth.API.Controllers.RolesController.html#MyApp_Auth_API_Controllers_RolesController_GetAll
  commentId: M:MyApp.Auth.API.Controllers.RolesController.GetAll
  fullName: MyApp.Auth.API.Controllers.RolesController.GetAll()
  nameWithType: RolesController.GetAll()
- uid: MyApp.Auth.API.Controllers.RolesController.GetAll*
  name: GetAll
  href: api/MyApp.Auth.API.Controllers.RolesController.html#MyApp_Auth_API_Controllers_RolesController_GetAll_
  commentId: Overload:MyApp.Auth.API.Controllers.RolesController.GetAll
  isSpec: "True"
  fullName: MyApp.Auth.API.Controllers.RolesController.GetAll
  nameWithType: RolesController.GetAll
- uid: MyApp.Auth.API.Controllers.RolesController.GetAllPaginated(System.Int32,System.Int32)
  name: GetAllPaginated(int, int)
  href: api/MyApp.Auth.API.Controllers.RolesController.html#MyApp_Auth_API_Controllers_RolesController_GetAllPaginated_System_Int32_System_Int32_
  commentId: M:MyApp.Auth.API.Controllers.RolesController.GetAllPaginated(System.Int32,System.Int32)
  name.vb: GetAllPaginated(Integer, Integer)
  fullName: MyApp.Auth.API.Controllers.RolesController.GetAllPaginated(int, int)
  fullName.vb: MyApp.Auth.API.Controllers.RolesController.GetAllPaginated(Integer, Integer)
  nameWithType: RolesController.GetAllPaginated(int, int)
  nameWithType.vb: RolesController.GetAllPaginated(Integer, Integer)
- uid: MyApp.Auth.API.Controllers.RolesController.GetAllPaginated*
  name: GetAllPaginated
  href: api/MyApp.Auth.API.Controllers.RolesController.html#MyApp_Auth_API_Controllers_RolesController_GetAllPaginated_
  commentId: Overload:MyApp.Auth.API.Controllers.RolesController.GetAllPaginated
  isSpec: "True"
  fullName: MyApp.Auth.API.Controllers.RolesController.GetAllPaginated
  nameWithType: RolesController.GetAllPaginated
- uid: MyApp.Auth.API.Controllers.RolesController.GetById(System.Guid)
  name: GetById(Guid)
  href: api/MyApp.Auth.API.Controllers.RolesController.html#MyApp_Auth_API_Controllers_RolesController_GetById_System_Guid_
  commentId: M:MyApp.Auth.API.Controllers.RolesController.GetById(System.Guid)
  fullName: MyApp.Auth.API.Controllers.RolesController.GetById(System.Guid)
  nameWithType: RolesController.GetById(Guid)
- uid: MyApp.Auth.API.Controllers.RolesController.GetById*
  name: GetById
  href: api/MyApp.Auth.API.Controllers.RolesController.html#MyApp_Auth_API_Controllers_RolesController_GetById_
  commentId: Overload:MyApp.Auth.API.Controllers.RolesController.GetById
  isSpec: "True"
  fullName: MyApp.Auth.API.Controllers.RolesController.GetById
  nameWithType: RolesController.GetById
- uid: MyApp.Auth.API.Controllers.RolesController.GetByName(System.String)
  name: GetByName(string)
  href: api/MyApp.Auth.API.Controllers.RolesController.html#MyApp_Auth_API_Controllers_RolesController_GetByName_System_String_
  commentId: M:MyApp.Auth.API.Controllers.RolesController.GetByName(System.String)
  name.vb: GetByName(String)
  fullName: MyApp.Auth.API.Controllers.RolesController.GetByName(string)
  fullName.vb: MyApp.Auth.API.Controllers.RolesController.GetByName(String)
  nameWithType: RolesController.GetByName(string)
  nameWithType.vb: RolesController.GetByName(String)
- uid: MyApp.Auth.API.Controllers.RolesController.GetByName*
  name: GetByName
  href: api/MyApp.Auth.API.Controllers.RolesController.html#MyApp_Auth_API_Controllers_RolesController_GetByName_
  commentId: Overload:MyApp.Auth.API.Controllers.RolesController.GetByName
  isSpec: "True"
  fullName: MyApp.Auth.API.Controllers.RolesController.GetByName
  nameWithType: RolesController.GetByName
- uid: MyApp.Auth.API.Controllers.RolesController.GetRolePermissions(System.Guid)
  name: GetRolePermissions(Guid)
  href: api/MyApp.Auth.API.Controllers.RolesController.html#MyApp_Auth_API_Controllers_RolesController_GetRolePermissions_System_Guid_
  commentId: M:MyApp.Auth.API.Controllers.RolesController.GetRolePermissions(System.Guid)
  fullName: MyApp.Auth.API.Controllers.RolesController.GetRolePermissions(System.Guid)
  nameWithType: RolesController.GetRolePermissions(Guid)
- uid: MyApp.Auth.API.Controllers.RolesController.GetRolePermissions*
  name: GetRolePermissions
  href: api/MyApp.Auth.API.Controllers.RolesController.html#MyApp_Auth_API_Controllers_RolesController_GetRolePermissions_
  commentId: Overload:MyApp.Auth.API.Controllers.RolesController.GetRolePermissions
  isSpec: "True"
  fullName: MyApp.Auth.API.Controllers.RolesController.GetRolePermissions
  nameWithType: RolesController.GetRolePermissions
- uid: MyApp.Auth.API.Controllers.RolesController.GetUsersInRole(System.String)
  name: GetUsersInRole(string)
  href: api/MyApp.Auth.API.Controllers.RolesController.html#MyApp_Auth_API_Controllers_RolesController_GetUsersInRole_System_String_
  commentId: M:MyApp.Auth.API.Controllers.RolesController.GetUsersInRole(System.String)
  name.vb: GetUsersInRole(String)
  fullName: MyApp.Auth.API.Controllers.RolesController.GetUsersInRole(string)
  fullName.vb: MyApp.Auth.API.Controllers.RolesController.GetUsersInRole(String)
  nameWithType: RolesController.GetUsersInRole(string)
  nameWithType.vb: RolesController.GetUsersInRole(String)
- uid: MyApp.Auth.API.Controllers.RolesController.GetUsersInRole*
  name: GetUsersInRole
  href: api/MyApp.Auth.API.Controllers.RolesController.html#MyApp_Auth_API_Controllers_RolesController_GetUsersInRole_
  commentId: Overload:MyApp.Auth.API.Controllers.RolesController.GetUsersInRole
  isSpec: "True"
  fullName: MyApp.Auth.API.Controllers.RolesController.GetUsersInRole
  nameWithType: RolesController.GetUsersInRole
- uid: MyApp.Auth.API.Controllers.RolesController.RemovePermissionFromRole(System.Guid,System.Guid)
  name: RemovePermissionFromRole(Guid, Guid)
  href: api/MyApp.Auth.API.Controllers.RolesController.html#MyApp_Auth_API_Controllers_RolesController_RemovePermissionFromRole_System_Guid_System_Guid_
  commentId: M:MyApp.Auth.API.Controllers.RolesController.RemovePermissionFromRole(System.Guid,System.Guid)
  fullName: MyApp.Auth.API.Controllers.RolesController.RemovePermissionFromRole(System.Guid, System.Guid)
  nameWithType: RolesController.RemovePermissionFromRole(Guid, Guid)
- uid: MyApp.Auth.API.Controllers.RolesController.RemovePermissionFromRole*
  name: RemovePermissionFromRole
  href: api/MyApp.Auth.API.Controllers.RolesController.html#MyApp_Auth_API_Controllers_RolesController_RemovePermissionFromRole_
  commentId: Overload:MyApp.Auth.API.Controllers.RolesController.RemovePermissionFromRole
  isSpec: "True"
  fullName: MyApp.Auth.API.Controllers.RolesController.RemovePermissionFromRole
  nameWithType: RolesController.RemovePermissionFromRole
- uid: MyApp.Auth.API.Controllers.RolesController.Update(System.Guid,MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
  name: Update(Guid, CreateRoleDto)
  href: api/MyApp.Auth.API.Controllers.RolesController.html#MyApp_Auth_API_Controllers_RolesController_Update_System_Guid_MyApp_Auth_Application_Contracts_DTOs_CreateRoleDto_
  commentId: M:MyApp.Auth.API.Controllers.RolesController.Update(System.Guid,MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
  fullName: MyApp.Auth.API.Controllers.RolesController.Update(System.Guid, MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
  nameWithType: RolesController.Update(Guid, CreateRoleDto)
- uid: MyApp.Auth.API.Controllers.RolesController.Update*
  name: Update
  href: api/MyApp.Auth.API.Controllers.RolesController.html#MyApp_Auth_API_Controllers_RolesController_Update_
  commentId: Overload:MyApp.Auth.API.Controllers.RolesController.Update
  isSpec: "True"
  fullName: MyApp.Auth.API.Controllers.RolesController.Update
  nameWithType: RolesController.Update
- uid: MyApp.Auth.API.Controllers.UsersController
  name: UsersController
  href: api/MyApp.Auth.API.Controllers.UsersController.html
  commentId: T:MyApp.Auth.API.Controllers.UsersController
  fullName: MyApp.Auth.API.Controllers.UsersController
  nameWithType: UsersController
- uid: MyApp.Auth.API.Controllers.UsersController.#ctor(MyApp.Auth.Application.Contracts.Services.IUserService,Microsoft.Extensions.Logging.ILogger{MyApp.Auth.API.Controllers.UsersController},MyApp.Shared.Domain.Caching.ICacheService)
  name: UsersController(IUserService, ILogger<UsersController>, ICacheService)
  href: api/MyApp.Auth.API.Controllers.UsersController.html#MyApp_Auth_API_Controllers_UsersController__ctor_MyApp_Auth_Application_Contracts_Services_IUserService_Microsoft_Extensions_Logging_ILogger_MyApp_Auth_API_Controllers_UsersController__MyApp_Shared_Domain_Caching_ICacheService_
  commentId: M:MyApp.Auth.API.Controllers.UsersController.#ctor(MyApp.Auth.Application.Contracts.Services.IUserService,Microsoft.Extensions.Logging.ILogger{MyApp.Auth.API.Controllers.UsersController},MyApp.Shared.Domain.Caching.ICacheService)
  name.vb: New(IUserService, ILogger(Of UsersController), ICacheService)
  fullName: MyApp.Auth.API.Controllers.UsersController.UsersController(MyApp.Auth.Application.Contracts.Services.IUserService, Microsoft.Extensions.Logging.ILogger<MyApp.Auth.API.Controllers.UsersController>, MyApp.Shared.Domain.Caching.ICacheService)
  fullName.vb: MyApp.Auth.API.Controllers.UsersController.New(MyApp.Auth.Application.Contracts.Services.IUserService, Microsoft.Extensions.Logging.ILogger(Of MyApp.Auth.API.Controllers.UsersController), MyApp.Shared.Domain.Caching.ICacheService)
  nameWithType: UsersController.UsersController(IUserService, ILogger<UsersController>, ICacheService)
  nameWithType.vb: UsersController.New(IUserService, ILogger(Of UsersController), ICacheService)
- uid: MyApp.Auth.API.Controllers.UsersController.#ctor*
  name: UsersController
  href: api/MyApp.Auth.API.Controllers.UsersController.html#MyApp_Auth_API_Controllers_UsersController__ctor_
  commentId: Overload:MyApp.Auth.API.Controllers.UsersController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Auth.API.Controllers.UsersController.UsersController
  fullName.vb: MyApp.Auth.API.Controllers.UsersController.New
  nameWithType: UsersController.UsersController
  nameWithType.vb: UsersController.New
- uid: MyApp.Auth.API.Controllers.UsersController.AssignRole(System.Guid,System.String)
  name: AssignRole(Guid, string)
  href: api/MyApp.Auth.API.Controllers.UsersController.html#MyApp_Auth_API_Controllers_UsersController_AssignRole_System_Guid_System_String_
  commentId: M:MyApp.Auth.API.Controllers.UsersController.AssignRole(System.Guid,System.String)
  name.vb: AssignRole(Guid, String)
  fullName: MyApp.Auth.API.Controllers.UsersController.AssignRole(System.Guid, string)
  fullName.vb: MyApp.Auth.API.Controllers.UsersController.AssignRole(System.Guid, String)
  nameWithType: UsersController.AssignRole(Guid, string)
  nameWithType.vb: UsersController.AssignRole(Guid, String)
- uid: MyApp.Auth.API.Controllers.UsersController.AssignRole*
  name: AssignRole
  href: api/MyApp.Auth.API.Controllers.UsersController.html#MyApp_Auth_API_Controllers_UsersController_AssignRole_
  commentId: Overload:MyApp.Auth.API.Controllers.UsersController.AssignRole
  isSpec: "True"
  fullName: MyApp.Auth.API.Controllers.UsersController.AssignRole
  nameWithType: UsersController.AssignRole
- uid: MyApp.Auth.API.Controllers.UsersController.Delete(System.Guid)
  name: Delete(Guid)
  href: api/MyApp.Auth.API.Controllers.UsersController.html#MyApp_Auth_API_Controllers_UsersController_Delete_System_Guid_
  commentId: M:MyApp.Auth.API.Controllers.UsersController.Delete(System.Guid)
  fullName: MyApp.Auth.API.Controllers.UsersController.Delete(System.Guid)
  nameWithType: UsersController.Delete(Guid)
- uid: MyApp.Auth.API.Controllers.UsersController.Delete*
  name: Delete
  href: api/MyApp.Auth.API.Controllers.UsersController.html#MyApp_Auth_API_Controllers_UsersController_Delete_
  commentId: Overload:MyApp.Auth.API.Controllers.UsersController.Delete
  isSpec: "True"
  fullName: MyApp.Auth.API.Controllers.UsersController.Delete
  nameWithType: UsersController.Delete
- uid: MyApp.Auth.API.Controllers.UsersController.GetAll
  name: GetAll()
  href: api/MyApp.Auth.API.Controllers.UsersController.html#MyApp_Auth_API_Controllers_UsersController_GetAll
  commentId: M:MyApp.Auth.API.Controllers.UsersController.GetAll
  fullName: MyApp.Auth.API.Controllers.UsersController.GetAll()
  nameWithType: UsersController.GetAll()
- uid: MyApp.Auth.API.Controllers.UsersController.GetAll*
  name: GetAll
  href: api/MyApp.Auth.API.Controllers.UsersController.html#MyApp_Auth_API_Controllers_UsersController_GetAll_
  commentId: Overload:MyApp.Auth.API.Controllers.UsersController.GetAll
  isSpec: "True"
  fullName: MyApp.Auth.API.Controllers.UsersController.GetAll
  nameWithType: UsersController.GetAll
- uid: MyApp.Auth.API.Controllers.UsersController.GetAllPaginated(System.Int32,System.Int32)
  name: GetAllPaginated(int, int)
  href: api/MyApp.Auth.API.Controllers.UsersController.html#MyApp_Auth_API_Controllers_UsersController_GetAllPaginated_System_Int32_System_Int32_
  commentId: M:MyApp.Auth.API.Controllers.UsersController.GetAllPaginated(System.Int32,System.Int32)
  name.vb: GetAllPaginated(Integer, Integer)
  fullName: MyApp.Auth.API.Controllers.UsersController.GetAllPaginated(int, int)
  fullName.vb: MyApp.Auth.API.Controllers.UsersController.GetAllPaginated(Integer, Integer)
  nameWithType: UsersController.GetAllPaginated(int, int)
  nameWithType.vb: UsersController.GetAllPaginated(Integer, Integer)
- uid: MyApp.Auth.API.Controllers.UsersController.GetAllPaginated*
  name: GetAllPaginated
  href: api/MyApp.Auth.API.Controllers.UsersController.html#MyApp_Auth_API_Controllers_UsersController_GetAllPaginated_
  commentId: Overload:MyApp.Auth.API.Controllers.UsersController.GetAllPaginated
  isSpec: "True"
  fullName: MyApp.Auth.API.Controllers.UsersController.GetAllPaginated
  nameWithType: UsersController.GetAllPaginated
- uid: MyApp.Auth.API.Controllers.UsersController.GetByEmail(System.String)
  name: GetByEmail(string)
  href: api/MyApp.Auth.API.Controllers.UsersController.html#MyApp_Auth_API_Controllers_UsersController_GetByEmail_System_String_
  commentId: M:MyApp.Auth.API.Controllers.UsersController.GetByEmail(System.String)
  name.vb: GetByEmail(String)
  fullName: MyApp.Auth.API.Controllers.UsersController.GetByEmail(string)
  fullName.vb: MyApp.Auth.API.Controllers.UsersController.GetByEmail(String)
  nameWithType: UsersController.GetByEmail(string)
  nameWithType.vb: UsersController.GetByEmail(String)
- uid: MyApp.Auth.API.Controllers.UsersController.GetByEmail*
  name: GetByEmail
  href: api/MyApp.Auth.API.Controllers.UsersController.html#MyApp_Auth_API_Controllers_UsersController_GetByEmail_
  commentId: Overload:MyApp.Auth.API.Controllers.UsersController.GetByEmail
  isSpec: "True"
  fullName: MyApp.Auth.API.Controllers.UsersController.GetByEmail
  nameWithType: UsersController.GetByEmail
- uid: MyApp.Auth.API.Controllers.UsersController.GetById(System.Guid)
  name: GetById(Guid)
  href: api/MyApp.Auth.API.Controllers.UsersController.html#MyApp_Auth_API_Controllers_UsersController_GetById_System_Guid_
  commentId: M:MyApp.Auth.API.Controllers.UsersController.GetById(System.Guid)
  fullName: MyApp.Auth.API.Controllers.UsersController.GetById(System.Guid)
  nameWithType: UsersController.GetById(Guid)
- uid: MyApp.Auth.API.Controllers.UsersController.GetById*
  name: GetById
  href: api/MyApp.Auth.API.Controllers.UsersController.html#MyApp_Auth_API_Controllers_UsersController_GetById_
  commentId: Overload:MyApp.Auth.API.Controllers.UsersController.GetById
  isSpec: "True"
  fullName: MyApp.Auth.API.Controllers.UsersController.GetById
  nameWithType: UsersController.GetById
- uid: MyApp.Auth.API.Controllers.UsersController.GetCurrentUser
  name: GetCurrentUser()
  href: api/MyApp.Auth.API.Controllers.UsersController.html#MyApp_Auth_API_Controllers_UsersController_GetCurrentUser
  commentId: M:MyApp.Auth.API.Controllers.UsersController.GetCurrentUser
  fullName: MyApp.Auth.API.Controllers.UsersController.GetCurrentUser()
  nameWithType: UsersController.GetCurrentUser()
- uid: MyApp.Auth.API.Controllers.UsersController.GetCurrentUser*
  name: GetCurrentUser
  href: api/MyApp.Auth.API.Controllers.UsersController.html#MyApp_Auth_API_Controllers_UsersController_GetCurrentUser_
  commentId: Overload:MyApp.Auth.API.Controllers.UsersController.GetCurrentUser
  isSpec: "True"
  fullName: MyApp.Auth.API.Controllers.UsersController.GetCurrentUser
  nameWithType: UsersController.GetCurrentUser
- uid: MyApp.Auth.API.Controllers.UsersController.GetRoles(System.Guid)
  name: GetRoles(Guid)
  href: api/MyApp.Auth.API.Controllers.UsersController.html#MyApp_Auth_API_Controllers_UsersController_GetRoles_System_Guid_
  commentId: M:MyApp.Auth.API.Controllers.UsersController.GetRoles(System.Guid)
  fullName: MyApp.Auth.API.Controllers.UsersController.GetRoles(System.Guid)
  nameWithType: UsersController.GetRoles(Guid)
- uid: MyApp.Auth.API.Controllers.UsersController.GetRoles*
  name: GetRoles
  href: api/MyApp.Auth.API.Controllers.UsersController.html#MyApp_Auth_API_Controllers_UsersController_GetRoles_
  commentId: Overload:MyApp.Auth.API.Controllers.UsersController.GetRoles
  isSpec: "True"
  fullName: MyApp.Auth.API.Controllers.UsersController.GetRoles
  nameWithType: UsersController.GetRoles
- uid: MyApp.Auth.API.Controllers.UsersController.RemoveRole(System.Guid,System.String)
  name: RemoveRole(Guid, string)
  href: api/MyApp.Auth.API.Controllers.UsersController.html#MyApp_Auth_API_Controllers_UsersController_RemoveRole_System_Guid_System_String_
  commentId: M:MyApp.Auth.API.Controllers.UsersController.RemoveRole(System.Guid,System.String)
  name.vb: RemoveRole(Guid, String)
  fullName: MyApp.Auth.API.Controllers.UsersController.RemoveRole(System.Guid, string)
  fullName.vb: MyApp.Auth.API.Controllers.UsersController.RemoveRole(System.Guid, String)
  nameWithType: UsersController.RemoveRole(Guid, string)
  nameWithType.vb: UsersController.RemoveRole(Guid, String)
- uid: MyApp.Auth.API.Controllers.UsersController.RemoveRole*
  name: RemoveRole
  href: api/MyApp.Auth.API.Controllers.UsersController.html#MyApp_Auth_API_Controllers_UsersController_RemoveRole_
  commentId: Overload:MyApp.Auth.API.Controllers.UsersController.RemoveRole
  isSpec: "True"
  fullName: MyApp.Auth.API.Controllers.UsersController.RemoveRole
  nameWithType: UsersController.RemoveRole
- uid: MyApp.Auth.API.Controllers.UsersController.Update(System.Guid,MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto)
  name: Update(Guid, UpdateUserDto)
  href: api/MyApp.Auth.API.Controllers.UsersController.html#MyApp_Auth_API_Controllers_UsersController_Update_System_Guid_MyApp_Auth_Application_Contracts_DTOs_UpdateUserDto_
  commentId: M:MyApp.Auth.API.Controllers.UsersController.Update(System.Guid,MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto)
  fullName: MyApp.Auth.API.Controllers.UsersController.Update(System.Guid, MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto)
  nameWithType: UsersController.Update(Guid, UpdateUserDto)
- uid: MyApp.Auth.API.Controllers.UsersController.Update*
  name: Update
  href: api/MyApp.Auth.API.Controllers.UsersController.html#MyApp_Auth_API_Controllers_UsersController_Update_
  commentId: Overload:MyApp.Auth.API.Controllers.UsersController.Update
  isSpec: "True"
  fullName: MyApp.Auth.API.Controllers.UsersController.Update
  nameWithType: UsersController.Update
- uid: MyApp.Auth.Application.Contracts
  name: MyApp.Auth.Application.Contracts
  href: api/MyApp.Auth.Application.Contracts.html
  commentId: N:MyApp.Auth.Application.Contracts
  fullName: MyApp.Auth.Application.Contracts
  nameWithType: MyApp.Auth.Application.Contracts
- uid: MyApp.Auth.Application.Contracts.CreateRolePermissionDto
  name: CreateRolePermissionDto
  href: api/MyApp.Auth.Application.Contracts.CreateRolePermissionDto.html
  commentId: T:MyApp.Auth.Application.Contracts.CreateRolePermissionDto
  fullName: MyApp.Auth.Application.Contracts.CreateRolePermissionDto
  nameWithType: CreateRolePermissionDto
- uid: MyApp.Auth.Application.Contracts.CreateRolePermissionDto.#ctor(System.Guid,System.Guid)
  name: CreateRolePermissionDto(Guid, Guid)
  href: api/MyApp.Auth.Application.Contracts.CreateRolePermissionDto.html#MyApp_Auth_Application_Contracts_CreateRolePermissionDto__ctor_System_Guid_System_Guid_
  commentId: M:MyApp.Auth.Application.Contracts.CreateRolePermissionDto.#ctor(System.Guid,System.Guid)
  name.vb: New(Guid, Guid)
  fullName: MyApp.Auth.Application.Contracts.CreateRolePermissionDto.CreateRolePermissionDto(System.Guid, System.Guid)
  fullName.vb: MyApp.Auth.Application.Contracts.CreateRolePermissionDto.New(System.Guid, System.Guid)
  nameWithType: CreateRolePermissionDto.CreateRolePermissionDto(Guid, Guid)
  nameWithType.vb: CreateRolePermissionDto.New(Guid, Guid)
- uid: MyApp.Auth.Application.Contracts.CreateRolePermissionDto.#ctor*
  name: CreateRolePermissionDto
  href: api/MyApp.Auth.Application.Contracts.CreateRolePermissionDto.html#MyApp_Auth_Application_Contracts_CreateRolePermissionDto__ctor_
  commentId: Overload:MyApp.Auth.Application.Contracts.CreateRolePermissionDto.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Auth.Application.Contracts.CreateRolePermissionDto.CreateRolePermissionDto
  fullName.vb: MyApp.Auth.Application.Contracts.CreateRolePermissionDto.New
  nameWithType: CreateRolePermissionDto.CreateRolePermissionDto
  nameWithType.vb: CreateRolePermissionDto.New
- uid: MyApp.Auth.Application.Contracts.CreateRolePermissionDto.PermissionId
  name: PermissionId
  href: api/MyApp.Auth.Application.Contracts.CreateRolePermissionDto.html#MyApp_Auth_Application_Contracts_CreateRolePermissionDto_PermissionId
  commentId: P:MyApp.Auth.Application.Contracts.CreateRolePermissionDto.PermissionId
  fullName: MyApp.Auth.Application.Contracts.CreateRolePermissionDto.PermissionId
  nameWithType: CreateRolePermissionDto.PermissionId
- uid: MyApp.Auth.Application.Contracts.CreateRolePermissionDto.PermissionId*
  name: PermissionId
  href: api/MyApp.Auth.Application.Contracts.CreateRolePermissionDto.html#MyApp_Auth_Application_Contracts_CreateRolePermissionDto_PermissionId_
  commentId: Overload:MyApp.Auth.Application.Contracts.CreateRolePermissionDto.PermissionId
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.CreateRolePermissionDto.PermissionId
  nameWithType: CreateRolePermissionDto.PermissionId
- uid: MyApp.Auth.Application.Contracts.CreateRolePermissionDto.RoleId
  name: RoleId
  href: api/MyApp.Auth.Application.Contracts.CreateRolePermissionDto.html#MyApp_Auth_Application_Contracts_CreateRolePermissionDto_RoleId
  commentId: P:MyApp.Auth.Application.Contracts.CreateRolePermissionDto.RoleId
  fullName: MyApp.Auth.Application.Contracts.CreateRolePermissionDto.RoleId
  nameWithType: CreateRolePermissionDto.RoleId
- uid: MyApp.Auth.Application.Contracts.CreateRolePermissionDto.RoleId*
  name: RoleId
  href: api/MyApp.Auth.Application.Contracts.CreateRolePermissionDto.html#MyApp_Auth_Application_Contracts_CreateRolePermissionDto_RoleId_
  commentId: Overload:MyApp.Auth.Application.Contracts.CreateRolePermissionDto.RoleId
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.CreateRolePermissionDto.RoleId
  nameWithType: CreateRolePermissionDto.RoleId
- uid: MyApp.Auth.Application.Contracts.DTOs
  name: MyApp.Auth.Application.Contracts.DTOs
  href: api/MyApp.Auth.Application.Contracts.DTOs.html
  commentId: N:MyApp.Auth.Application.Contracts.DTOs
  fullName: MyApp.Auth.Application.Contracts.DTOs
  nameWithType: MyApp.Auth.Application.Contracts.DTOs
- uid: MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto
  name: CreatePermissionDto
  href: api/MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto.html
  commentId: T:MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto
  fullName: MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto
  nameWithType: CreatePermissionDto
- uid: MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto.Action
  name: Action
  href: api/MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto.html#MyApp_Auth_Application_Contracts_DTOs_CreatePermissionDto_Action
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto.Action
  fullName: MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto.Action
  nameWithType: CreatePermissionDto.Action
- uid: MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto.Action*
  name: Action
  href: api/MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto.html#MyApp_Auth_Application_Contracts_DTOs_CreatePermissionDto_Action_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto.Action
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto.Action
  nameWithType: CreatePermissionDto.Action
- uid: MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto.Description
  name: Description
  href: api/MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto.html#MyApp_Auth_Application_Contracts_DTOs_CreatePermissionDto_Description
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto.Description
  fullName: MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto.Description
  nameWithType: CreatePermissionDto.Description
- uid: MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto.Description*
  name: Description
  href: api/MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto.html#MyApp_Auth_Application_Contracts_DTOs_CreatePermissionDto_Description_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto.Description
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto.Description
  nameWithType: CreatePermissionDto.Description
- uid: MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto.Module
  name: Module
  href: api/MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto.html#MyApp_Auth_Application_Contracts_DTOs_CreatePermissionDto_Module
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto.Module
  fullName: MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto.Module
  nameWithType: CreatePermissionDto.Module
- uid: MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto.Module*
  name: Module
  href: api/MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto.html#MyApp_Auth_Application_Contracts_DTOs_CreatePermissionDto_Module_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto.Module
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto.Module
  nameWithType: CreatePermissionDto.Module
- uid: MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto
  name: CreateRoleDto
  href: api/MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto.html
  commentId: T:MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto
  fullName: MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto
  nameWithType: CreateRoleDto
- uid: MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto.Description
  name: Description
  href: api/MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto.html#MyApp_Auth_Application_Contracts_DTOs_CreateRoleDto_Description
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto.Description
  fullName: MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto.Description
  nameWithType: CreateRoleDto.Description
- uid: MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto.Description*
  name: Description
  href: api/MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto.html#MyApp_Auth_Application_Contracts_DTOs_CreateRoleDto_Description_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto.Description
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto.Description
  nameWithType: CreateRoleDto.Description
- uid: MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto.Name
  name: Name
  href: api/MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto.html#MyApp_Auth_Application_Contracts_DTOs_CreateRoleDto_Name
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto.Name
  fullName: MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto.Name
  nameWithType: CreateRoleDto.Name
- uid: MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto.Name*
  name: Name
  href: api/MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto.html#MyApp_Auth_Application_Contracts_DTOs_CreateRoleDto_Name_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto.Name
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto.Name
  nameWithType: CreateRoleDto.Name
- uid: MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto
  name: ExternalLoginDto
  href: api/MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.html
  commentId: T:MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto
  fullName: MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto
  nameWithType: ExternalLoginDto
- uid: MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.Email
  name: Email
  href: api/MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.html#MyApp_Auth_Application_Contracts_DTOs_ExternalLoginDto_Email
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.Email
  fullName: MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.Email
  nameWithType: ExternalLoginDto.Email
- uid: MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.Email*
  name: Email
  href: api/MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.html#MyApp_Auth_Application_Contracts_DTOs_ExternalLoginDto_Email_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.Email
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.Email
  nameWithType: ExternalLoginDto.Email
- uid: MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.ExternalId
  name: ExternalId
  href: api/MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.html#MyApp_Auth_Application_Contracts_DTOs_ExternalLoginDto_ExternalId
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.ExternalId
  fullName: MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.ExternalId
  nameWithType: ExternalLoginDto.ExternalId
- uid: MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.ExternalId*
  name: ExternalId
  href: api/MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.html#MyApp_Auth_Application_Contracts_DTOs_ExternalLoginDto_ExternalId_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.ExternalId
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.ExternalId
  nameWithType: ExternalLoginDto.ExternalId
- uid: MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.FirstName
  name: FirstName
  href: api/MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.html#MyApp_Auth_Application_Contracts_DTOs_ExternalLoginDto_FirstName
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.FirstName
  fullName: MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.FirstName
  nameWithType: ExternalLoginDto.FirstName
- uid: MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.FirstName*
  name: FirstName
  href: api/MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.html#MyApp_Auth_Application_Contracts_DTOs_ExternalLoginDto_FirstName_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.FirstName
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.FirstName
  nameWithType: ExternalLoginDto.FirstName
- uid: MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.LastName
  name: LastName
  href: api/MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.html#MyApp_Auth_Application_Contracts_DTOs_ExternalLoginDto_LastName
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.LastName
  fullName: MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.LastName
  nameWithType: ExternalLoginDto.LastName
- uid: MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.LastName*
  name: LastName
  href: api/MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.html#MyApp_Auth_Application_Contracts_DTOs_ExternalLoginDto_LastName_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.LastName
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.LastName
  nameWithType: ExternalLoginDto.LastName
- uid: MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.Provider
  name: Provider
  href: api/MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.html#MyApp_Auth_Application_Contracts_DTOs_ExternalLoginDto_Provider
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.Provider
  fullName: MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.Provider
  nameWithType: ExternalLoginDto.Provider
- uid: MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.Provider*
  name: Provider
  href: api/MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.html#MyApp_Auth_Application_Contracts_DTOs_ExternalLoginDto_Provider_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.Provider
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto.Provider
  nameWithType: ExternalLoginDto.Provider
- uid: MyApp.Auth.Application.Contracts.DTOs.LoginDto
  name: LoginDto
  href: api/MyApp.Auth.Application.Contracts.DTOs.LoginDto.html
  commentId: T:MyApp.Auth.Application.Contracts.DTOs.LoginDto
  fullName: MyApp.Auth.Application.Contracts.DTOs.LoginDto
  nameWithType: LoginDto
- uid: MyApp.Auth.Application.Contracts.DTOs.LoginDto.Email
  name: Email
  href: api/MyApp.Auth.Application.Contracts.DTOs.LoginDto.html#MyApp_Auth_Application_Contracts_DTOs_LoginDto_Email
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.LoginDto.Email
  fullName: MyApp.Auth.Application.Contracts.DTOs.LoginDto.Email
  nameWithType: LoginDto.Email
- uid: MyApp.Auth.Application.Contracts.DTOs.LoginDto.Email*
  name: Email
  href: api/MyApp.Auth.Application.Contracts.DTOs.LoginDto.html#MyApp_Auth_Application_Contracts_DTOs_LoginDto_Email_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.LoginDto.Email
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.LoginDto.Email
  nameWithType: LoginDto.Email
- uid: MyApp.Auth.Application.Contracts.DTOs.LoginDto.Password
  name: Password
  href: api/MyApp.Auth.Application.Contracts.DTOs.LoginDto.html#MyApp_Auth_Application_Contracts_DTOs_LoginDto_Password
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.LoginDto.Password
  fullName: MyApp.Auth.Application.Contracts.DTOs.LoginDto.Password
  nameWithType: LoginDto.Password
- uid: MyApp.Auth.Application.Contracts.DTOs.LoginDto.Password*
  name: Password
  href: api/MyApp.Auth.Application.Contracts.DTOs.LoginDto.html#MyApp_Auth_Application_Contracts_DTOs_LoginDto_Password_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.LoginDto.Password
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.LoginDto.Password
  nameWithType: LoginDto.Password
- uid: MyApp.Auth.Application.Contracts.DTOs.PermissionDto
  name: PermissionDto
  href: api/MyApp.Auth.Application.Contracts.DTOs.PermissionDto.html
  commentId: T:MyApp.Auth.Application.Contracts.DTOs.PermissionDto
  fullName: MyApp.Auth.Application.Contracts.DTOs.PermissionDto
  nameWithType: PermissionDto
- uid: MyApp.Auth.Application.Contracts.DTOs.PermissionDto.Action
  name: Action
  href: api/MyApp.Auth.Application.Contracts.DTOs.PermissionDto.html#MyApp_Auth_Application_Contracts_DTOs_PermissionDto_Action
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.PermissionDto.Action
  fullName: MyApp.Auth.Application.Contracts.DTOs.PermissionDto.Action
  nameWithType: PermissionDto.Action
- uid: MyApp.Auth.Application.Contracts.DTOs.PermissionDto.Action*
  name: Action
  href: api/MyApp.Auth.Application.Contracts.DTOs.PermissionDto.html#MyApp_Auth_Application_Contracts_DTOs_PermissionDto_Action_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.PermissionDto.Action
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.PermissionDto.Action
  nameWithType: PermissionDto.Action
- uid: MyApp.Auth.Application.Contracts.DTOs.PermissionDto.Description
  name: Description
  href: api/MyApp.Auth.Application.Contracts.DTOs.PermissionDto.html#MyApp_Auth_Application_Contracts_DTOs_PermissionDto_Description
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.PermissionDto.Description
  fullName: MyApp.Auth.Application.Contracts.DTOs.PermissionDto.Description
  nameWithType: PermissionDto.Description
- uid: MyApp.Auth.Application.Contracts.DTOs.PermissionDto.Description*
  name: Description
  href: api/MyApp.Auth.Application.Contracts.DTOs.PermissionDto.html#MyApp_Auth_Application_Contracts_DTOs_PermissionDto_Description_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.PermissionDto.Description
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.PermissionDto.Description
  nameWithType: PermissionDto.Description
- uid: MyApp.Auth.Application.Contracts.DTOs.PermissionDto.Id
  name: Id
  href: api/MyApp.Auth.Application.Contracts.DTOs.PermissionDto.html#MyApp_Auth_Application_Contracts_DTOs_PermissionDto_Id
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.PermissionDto.Id
  fullName: MyApp.Auth.Application.Contracts.DTOs.PermissionDto.Id
  nameWithType: PermissionDto.Id
- uid: MyApp.Auth.Application.Contracts.DTOs.PermissionDto.Id*
  name: Id
  href: api/MyApp.Auth.Application.Contracts.DTOs.PermissionDto.html#MyApp_Auth_Application_Contracts_DTOs_PermissionDto_Id_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.PermissionDto.Id
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.PermissionDto.Id
  nameWithType: PermissionDto.Id
- uid: MyApp.Auth.Application.Contracts.DTOs.PermissionDto.Module
  name: Module
  href: api/MyApp.Auth.Application.Contracts.DTOs.PermissionDto.html#MyApp_Auth_Application_Contracts_DTOs_PermissionDto_Module
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.PermissionDto.Module
  fullName: MyApp.Auth.Application.Contracts.DTOs.PermissionDto.Module
  nameWithType: PermissionDto.Module
- uid: MyApp.Auth.Application.Contracts.DTOs.PermissionDto.Module*
  name: Module
  href: api/MyApp.Auth.Application.Contracts.DTOs.PermissionDto.html#MyApp_Auth_Application_Contracts_DTOs_PermissionDto_Module_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.PermissionDto.Module
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.PermissionDto.Module
  nameWithType: PermissionDto.Module
- uid: MyApp.Auth.Application.Contracts.DTOs.RefreshTokenDto
  name: RefreshTokenDto
  href: api/MyApp.Auth.Application.Contracts.DTOs.RefreshTokenDto.html
  commentId: T:MyApp.Auth.Application.Contracts.DTOs.RefreshTokenDto
  fullName: MyApp.Auth.Application.Contracts.DTOs.RefreshTokenDto
  nameWithType: RefreshTokenDto
- uid: MyApp.Auth.Application.Contracts.DTOs.RefreshTokenDto.AccessToken
  name: AccessToken
  href: api/MyApp.Auth.Application.Contracts.DTOs.RefreshTokenDto.html#MyApp_Auth_Application_Contracts_DTOs_RefreshTokenDto_AccessToken
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.RefreshTokenDto.AccessToken
  fullName: MyApp.Auth.Application.Contracts.DTOs.RefreshTokenDto.AccessToken
  nameWithType: RefreshTokenDto.AccessToken
- uid: MyApp.Auth.Application.Contracts.DTOs.RefreshTokenDto.AccessToken*
  name: AccessToken
  href: api/MyApp.Auth.Application.Contracts.DTOs.RefreshTokenDto.html#MyApp_Auth_Application_Contracts_DTOs_RefreshTokenDto_AccessToken_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.RefreshTokenDto.AccessToken
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.RefreshTokenDto.AccessToken
  nameWithType: RefreshTokenDto.AccessToken
- uid: MyApp.Auth.Application.Contracts.DTOs.RefreshTokenDto.RefreshToken
  name: RefreshToken
  href: api/MyApp.Auth.Application.Contracts.DTOs.RefreshTokenDto.html#MyApp_Auth_Application_Contracts_DTOs_RefreshTokenDto_RefreshToken
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.RefreshTokenDto.RefreshToken
  fullName: MyApp.Auth.Application.Contracts.DTOs.RefreshTokenDto.RefreshToken
  nameWithType: RefreshTokenDto.RefreshToken
- uid: MyApp.Auth.Application.Contracts.DTOs.RefreshTokenDto.RefreshToken*
  name: RefreshToken
  href: api/MyApp.Auth.Application.Contracts.DTOs.RefreshTokenDto.html#MyApp_Auth_Application_Contracts_DTOs_RefreshTokenDto_RefreshToken_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.RefreshTokenDto.RefreshToken
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.RefreshTokenDto.RefreshToken
  nameWithType: RefreshTokenDto.RefreshToken
- uid: MyApp.Auth.Application.Contracts.DTOs.RegisterDto
  name: RegisterDto
  href: api/MyApp.Auth.Application.Contracts.DTOs.RegisterDto.html
  commentId: T:MyApp.Auth.Application.Contracts.DTOs.RegisterDto
  fullName: MyApp.Auth.Application.Contracts.DTOs.RegisterDto
  nameWithType: RegisterDto
- uid: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Email
  name: Email
  href: api/MyApp.Auth.Application.Contracts.DTOs.RegisterDto.html#MyApp_Auth_Application_Contracts_DTOs_RegisterDto_Email
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Email
  fullName: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Email
  nameWithType: RegisterDto.Email
- uid: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Email*
  name: Email
  href: api/MyApp.Auth.Application.Contracts.DTOs.RegisterDto.html#MyApp_Auth_Application_Contracts_DTOs_RegisterDto_Email_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Email
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Email
  nameWithType: RegisterDto.Email
- uid: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.FirstName
  name: FirstName
  href: api/MyApp.Auth.Application.Contracts.DTOs.RegisterDto.html#MyApp_Auth_Application_Contracts_DTOs_RegisterDto_FirstName
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.RegisterDto.FirstName
  fullName: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.FirstName
  nameWithType: RegisterDto.FirstName
- uid: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.FirstName*
  name: FirstName
  href: api/MyApp.Auth.Application.Contracts.DTOs.RegisterDto.html#MyApp_Auth_Application_Contracts_DTOs_RegisterDto_FirstName_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.RegisterDto.FirstName
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.FirstName
  nameWithType: RegisterDto.FirstName
- uid: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.LastName
  name: LastName
  href: api/MyApp.Auth.Application.Contracts.DTOs.RegisterDto.html#MyApp_Auth_Application_Contracts_DTOs_RegisterDto_LastName
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.RegisterDto.LastName
  fullName: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.LastName
  nameWithType: RegisterDto.LastName
- uid: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.LastName*
  name: LastName
  href: api/MyApp.Auth.Application.Contracts.DTOs.RegisterDto.html#MyApp_Auth_Application_Contracts_DTOs_RegisterDto_LastName_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.RegisterDto.LastName
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.LastName
  nameWithType: RegisterDto.LastName
- uid: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Password
  name: Password
  href: api/MyApp.Auth.Application.Contracts.DTOs.RegisterDto.html#MyApp_Auth_Application_Contracts_DTOs_RegisterDto_Password
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Password
  fullName: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Password
  nameWithType: RegisterDto.Password
- uid: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Password*
  name: Password
  href: api/MyApp.Auth.Application.Contracts.DTOs.RegisterDto.html#MyApp_Auth_Application_Contracts_DTOs_RegisterDto_Password_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Password
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Password
  nameWithType: RegisterDto.Password
- uid: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.PasswordConfirm
  name: PasswordConfirm
  href: api/MyApp.Auth.Application.Contracts.DTOs.RegisterDto.html#MyApp_Auth_Application_Contracts_DTOs_RegisterDto_PasswordConfirm
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.RegisterDto.PasswordConfirm
  fullName: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.PasswordConfirm
  nameWithType: RegisterDto.PasswordConfirm
- uid: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.PasswordConfirm*
  name: PasswordConfirm
  href: api/MyApp.Auth.Application.Contracts.DTOs.RegisterDto.html#MyApp_Auth_Application_Contracts_DTOs_RegisterDto_PasswordConfirm_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.RegisterDto.PasswordConfirm
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.PasswordConfirm
  nameWithType: RegisterDto.PasswordConfirm
- uid: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Username
  name: Username
  href: api/MyApp.Auth.Application.Contracts.DTOs.RegisterDto.html#MyApp_Auth_Application_Contracts_DTOs_RegisterDto_Username
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Username
  fullName: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Username
  nameWithType: RegisterDto.Username
- uid: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Username*
  name: Username
  href: api/MyApp.Auth.Application.Contracts.DTOs.RegisterDto.html#MyApp_Auth_Application_Contracts_DTOs_RegisterDto_Username_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Username
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.RegisterDto.Username
  nameWithType: RegisterDto.Username
- uid: MyApp.Auth.Application.Contracts.DTOs.RoleDto
  name: RoleDto
  href: api/MyApp.Auth.Application.Contracts.DTOs.RoleDto.html
  commentId: T:MyApp.Auth.Application.Contracts.DTOs.RoleDto
  fullName: MyApp.Auth.Application.Contracts.DTOs.RoleDto
  nameWithType: RoleDto
- uid: MyApp.Auth.Application.Contracts.DTOs.RoleDto.Description
  name: Description
  href: api/MyApp.Auth.Application.Contracts.DTOs.RoleDto.html#MyApp_Auth_Application_Contracts_DTOs_RoleDto_Description
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.RoleDto.Description
  fullName: MyApp.Auth.Application.Contracts.DTOs.RoleDto.Description
  nameWithType: RoleDto.Description
- uid: MyApp.Auth.Application.Contracts.DTOs.RoleDto.Description*
  name: Description
  href: api/MyApp.Auth.Application.Contracts.DTOs.RoleDto.html#MyApp_Auth_Application_Contracts_DTOs_RoleDto_Description_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.RoleDto.Description
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.RoleDto.Description
  nameWithType: RoleDto.Description
- uid: MyApp.Auth.Application.Contracts.DTOs.RoleDto.Id
  name: Id
  href: api/MyApp.Auth.Application.Contracts.DTOs.RoleDto.html#MyApp_Auth_Application_Contracts_DTOs_RoleDto_Id
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.RoleDto.Id
  fullName: MyApp.Auth.Application.Contracts.DTOs.RoleDto.Id
  nameWithType: RoleDto.Id
- uid: MyApp.Auth.Application.Contracts.DTOs.RoleDto.Id*
  name: Id
  href: api/MyApp.Auth.Application.Contracts.DTOs.RoleDto.html#MyApp_Auth_Application_Contracts_DTOs_RoleDto_Id_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.RoleDto.Id
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.RoleDto.Id
  nameWithType: RoleDto.Id
- uid: MyApp.Auth.Application.Contracts.DTOs.RoleDto.Name
  name: Name
  href: api/MyApp.Auth.Application.Contracts.DTOs.RoleDto.html#MyApp_Auth_Application_Contracts_DTOs_RoleDto_Name
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.RoleDto.Name
  fullName: MyApp.Auth.Application.Contracts.DTOs.RoleDto.Name
  nameWithType: RoleDto.Name
- uid: MyApp.Auth.Application.Contracts.DTOs.RoleDto.Name*
  name: Name
  href: api/MyApp.Auth.Application.Contracts.DTOs.RoleDto.html#MyApp_Auth_Application_Contracts_DTOs_RoleDto_Name_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.RoleDto.Name
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.RoleDto.Name
  nameWithType: RoleDto.Name
- uid: MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto
  name: TokenResponseDto
  href: api/MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.html
  commentId: T:MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto
  fullName: MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto
  nameWithType: TokenResponseDto
- uid: MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.AccessToken
  name: AccessToken
  href: api/MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.html#MyApp_Auth_Application_Contracts_DTOs_TokenResponseDto_AccessToken
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.AccessToken
  fullName: MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.AccessToken
  nameWithType: TokenResponseDto.AccessToken
- uid: MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.AccessToken*
  name: AccessToken
  href: api/MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.html#MyApp_Auth_Application_Contracts_DTOs_TokenResponseDto_AccessToken_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.AccessToken
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.AccessToken
  nameWithType: TokenResponseDto.AccessToken
- uid: MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.ExpiresIn
  name: ExpiresIn
  href: api/MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.html#MyApp_Auth_Application_Contracts_DTOs_TokenResponseDto_ExpiresIn
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.ExpiresIn
  fullName: MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.ExpiresIn
  nameWithType: TokenResponseDto.ExpiresIn
- uid: MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.ExpiresIn*
  name: ExpiresIn
  href: api/MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.html#MyApp_Auth_Application_Contracts_DTOs_TokenResponseDto_ExpiresIn_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.ExpiresIn
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.ExpiresIn
  nameWithType: TokenResponseDto.ExpiresIn
- uid: MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.RefreshToken
  name: RefreshToken
  href: api/MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.html#MyApp_Auth_Application_Contracts_DTOs_TokenResponseDto_RefreshToken
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.RefreshToken
  fullName: MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.RefreshToken
  nameWithType: TokenResponseDto.RefreshToken
- uid: MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.RefreshToken*
  name: RefreshToken
  href: api/MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.html#MyApp_Auth_Application_Contracts_DTOs_TokenResponseDto_RefreshToken_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.RefreshToken
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.RefreshToken
  nameWithType: TokenResponseDto.RefreshToken
- uid: MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.TokenType
  name: TokenType
  href: api/MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.html#MyApp_Auth_Application_Contracts_DTOs_TokenResponseDto_TokenType
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.TokenType
  fullName: MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.TokenType
  nameWithType: TokenResponseDto.TokenType
- uid: MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.TokenType*
  name: TokenType
  href: api/MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.html#MyApp_Auth_Application_Contracts_DTOs_TokenResponseDto_TokenType_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.TokenType
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.TokenType
  nameWithType: TokenResponseDto.TokenType
- uid: MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.User
  name: User
  href: api/MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.html#MyApp_Auth_Application_Contracts_DTOs_TokenResponseDto_User
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.User
  fullName: MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.User
  nameWithType: TokenResponseDto.User
- uid: MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.User*
  name: User
  href: api/MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.html#MyApp_Auth_Application_Contracts_DTOs_TokenResponseDto_User_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.User
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto.User
  nameWithType: TokenResponseDto.User
- uid: MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto
  name: UpdatePermissionDto
  href: api/MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto.html
  commentId: T:MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto
  fullName: MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto
  nameWithType: UpdatePermissionDto
- uid: MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto.Action
  name: Action
  href: api/MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto.html#MyApp_Auth_Application_Contracts_DTOs_UpdatePermissionDto_Action
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto.Action
  fullName: MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto.Action
  nameWithType: UpdatePermissionDto.Action
- uid: MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto.Action*
  name: Action
  href: api/MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto.html#MyApp_Auth_Application_Contracts_DTOs_UpdatePermissionDto_Action_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto.Action
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto.Action
  nameWithType: UpdatePermissionDto.Action
- uid: MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto.Description
  name: Description
  href: api/MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto.html#MyApp_Auth_Application_Contracts_DTOs_UpdatePermissionDto_Description
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto.Description
  fullName: MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto.Description
  nameWithType: UpdatePermissionDto.Description
- uid: MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto.Description*
  name: Description
  href: api/MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto.html#MyApp_Auth_Application_Contracts_DTOs_UpdatePermissionDto_Description_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto.Description
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto.Description
  nameWithType: UpdatePermissionDto.Description
- uid: MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto.Module
  name: Module
  href: api/MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto.html#MyApp_Auth_Application_Contracts_DTOs_UpdatePermissionDto_Module
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto.Module
  fullName: MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto.Module
  nameWithType: UpdatePermissionDto.Module
- uid: MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto.Module*
  name: Module
  href: api/MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto.html#MyApp_Auth_Application_Contracts_DTOs_UpdatePermissionDto_Module_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto.Module
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto.Module
  nameWithType: UpdatePermissionDto.Module
- uid: MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto
  name: UpdateUserDto
  href: api/MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto.html
  commentId: T:MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto
  fullName: MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto
  nameWithType: UpdateUserDto
- uid: MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto.Email
  name: Email
  href: api/MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto.html#MyApp_Auth_Application_Contracts_DTOs_UpdateUserDto_Email
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto.Email
  fullName: MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto.Email
  nameWithType: UpdateUserDto.Email
- uid: MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto.Email*
  name: Email
  href: api/MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto.html#MyApp_Auth_Application_Contracts_DTOs_UpdateUserDto_Email_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto.Email
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto.Email
  nameWithType: UpdateUserDto.Email
- uid: MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto.FirstName
  name: FirstName
  href: api/MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto.html#MyApp_Auth_Application_Contracts_DTOs_UpdateUserDto_FirstName
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto.FirstName
  fullName: MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto.FirstName
  nameWithType: UpdateUserDto.FirstName
- uid: MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto.FirstName*
  name: FirstName
  href: api/MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto.html#MyApp_Auth_Application_Contracts_DTOs_UpdateUserDto_FirstName_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto.FirstName
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto.FirstName
  nameWithType: UpdateUserDto.FirstName
- uid: MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto.LastName
  name: LastName
  href: api/MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto.html#MyApp_Auth_Application_Contracts_DTOs_UpdateUserDto_LastName
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto.LastName
  fullName: MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto.LastName
  nameWithType: UpdateUserDto.LastName
- uid: MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto.LastName*
  name: LastName
  href: api/MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto.html#MyApp_Auth_Application_Contracts_DTOs_UpdateUserDto_LastName_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto.LastName
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto.LastName
  nameWithType: UpdateUserDto.LastName
- uid: MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto.PhoneNumber
  name: PhoneNumber
  href: api/MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto.html#MyApp_Auth_Application_Contracts_DTOs_UpdateUserDto_PhoneNumber
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto.PhoneNumber
  fullName: MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto.PhoneNumber
  nameWithType: UpdateUserDto.PhoneNumber
- uid: MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto.PhoneNumber*
  name: PhoneNumber
  href: api/MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto.html#MyApp_Auth_Application_Contracts_DTOs_UpdateUserDto_PhoneNumber_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto.PhoneNumber
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto.PhoneNumber
  nameWithType: UpdateUserDto.PhoneNumber
- uid: MyApp.Auth.Application.Contracts.DTOs.UserDto
  name: UserDto
  href: api/MyApp.Auth.Application.Contracts.DTOs.UserDto.html
  commentId: T:MyApp.Auth.Application.Contracts.DTOs.UserDto
  fullName: MyApp.Auth.Application.Contracts.DTOs.UserDto
  nameWithType: UserDto
- uid: MyApp.Auth.Application.Contracts.DTOs.UserDto.Email
  name: Email
  href: api/MyApp.Auth.Application.Contracts.DTOs.UserDto.html#MyApp_Auth_Application_Contracts_DTOs_UserDto_Email
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.UserDto.Email
  fullName: MyApp.Auth.Application.Contracts.DTOs.UserDto.Email
  nameWithType: UserDto.Email
- uid: MyApp.Auth.Application.Contracts.DTOs.UserDto.Email*
  name: Email
  href: api/MyApp.Auth.Application.Contracts.DTOs.UserDto.html#MyApp_Auth_Application_Contracts_DTOs_UserDto_Email_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.UserDto.Email
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.UserDto.Email
  nameWithType: UserDto.Email
- uid: MyApp.Auth.Application.Contracts.DTOs.UserDto.EmailConfirmed
  name: EmailConfirmed
  href: api/MyApp.Auth.Application.Contracts.DTOs.UserDto.html#MyApp_Auth_Application_Contracts_DTOs_UserDto_EmailConfirmed
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.UserDto.EmailConfirmed
  fullName: MyApp.Auth.Application.Contracts.DTOs.UserDto.EmailConfirmed
  nameWithType: UserDto.EmailConfirmed
- uid: MyApp.Auth.Application.Contracts.DTOs.UserDto.EmailConfirmed*
  name: EmailConfirmed
  href: api/MyApp.Auth.Application.Contracts.DTOs.UserDto.html#MyApp_Auth_Application_Contracts_DTOs_UserDto_EmailConfirmed_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.UserDto.EmailConfirmed
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.UserDto.EmailConfirmed
  nameWithType: UserDto.EmailConfirmed
- uid: MyApp.Auth.Application.Contracts.DTOs.UserDto.ExternalProvider
  name: ExternalProvider
  href: api/MyApp.Auth.Application.Contracts.DTOs.UserDto.html#MyApp_Auth_Application_Contracts_DTOs_UserDto_ExternalProvider
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.UserDto.ExternalProvider
  fullName: MyApp.Auth.Application.Contracts.DTOs.UserDto.ExternalProvider
  nameWithType: UserDto.ExternalProvider
- uid: MyApp.Auth.Application.Contracts.DTOs.UserDto.ExternalProvider*
  name: ExternalProvider
  href: api/MyApp.Auth.Application.Contracts.DTOs.UserDto.html#MyApp_Auth_Application_Contracts_DTOs_UserDto_ExternalProvider_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.UserDto.ExternalProvider
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.UserDto.ExternalProvider
  nameWithType: UserDto.ExternalProvider
- uid: MyApp.Auth.Application.Contracts.DTOs.UserDto.FirstName
  name: FirstName
  href: api/MyApp.Auth.Application.Contracts.DTOs.UserDto.html#MyApp_Auth_Application_Contracts_DTOs_UserDto_FirstName
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.UserDto.FirstName
  fullName: MyApp.Auth.Application.Contracts.DTOs.UserDto.FirstName
  nameWithType: UserDto.FirstName
- uid: MyApp.Auth.Application.Contracts.DTOs.UserDto.FirstName*
  name: FirstName
  href: api/MyApp.Auth.Application.Contracts.DTOs.UserDto.html#MyApp_Auth_Application_Contracts_DTOs_UserDto_FirstName_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.UserDto.FirstName
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.UserDto.FirstName
  nameWithType: UserDto.FirstName
- uid: MyApp.Auth.Application.Contracts.DTOs.UserDto.Id
  name: Id
  href: api/MyApp.Auth.Application.Contracts.DTOs.UserDto.html#MyApp_Auth_Application_Contracts_DTOs_UserDto_Id
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.UserDto.Id
  fullName: MyApp.Auth.Application.Contracts.DTOs.UserDto.Id
  nameWithType: UserDto.Id
- uid: MyApp.Auth.Application.Contracts.DTOs.UserDto.Id*
  name: Id
  href: api/MyApp.Auth.Application.Contracts.DTOs.UserDto.html#MyApp_Auth_Application_Contracts_DTOs_UserDto_Id_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.UserDto.Id
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.UserDto.Id
  nameWithType: UserDto.Id
- uid: MyApp.Auth.Application.Contracts.DTOs.UserDto.IsAdmin
  name: IsAdmin
  href: api/MyApp.Auth.Application.Contracts.DTOs.UserDto.html#MyApp_Auth_Application_Contracts_DTOs_UserDto_IsAdmin
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.UserDto.IsAdmin
  fullName: MyApp.Auth.Application.Contracts.DTOs.UserDto.IsAdmin
  nameWithType: UserDto.IsAdmin
- uid: MyApp.Auth.Application.Contracts.DTOs.UserDto.IsAdmin*
  name: IsAdmin
  href: api/MyApp.Auth.Application.Contracts.DTOs.UserDto.html#MyApp_Auth_Application_Contracts_DTOs_UserDto_IsAdmin_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.UserDto.IsAdmin
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.UserDto.IsAdmin
  nameWithType: UserDto.IsAdmin
- uid: MyApp.Auth.Application.Contracts.DTOs.UserDto.IsExternalLogin
  name: IsExternalLogin
  href: api/MyApp.Auth.Application.Contracts.DTOs.UserDto.html#MyApp_Auth_Application_Contracts_DTOs_UserDto_IsExternalLogin
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.UserDto.IsExternalLogin
  fullName: MyApp.Auth.Application.Contracts.DTOs.UserDto.IsExternalLogin
  nameWithType: UserDto.IsExternalLogin
- uid: MyApp.Auth.Application.Contracts.DTOs.UserDto.IsExternalLogin*
  name: IsExternalLogin
  href: api/MyApp.Auth.Application.Contracts.DTOs.UserDto.html#MyApp_Auth_Application_Contracts_DTOs_UserDto_IsExternalLogin_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.UserDto.IsExternalLogin
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.UserDto.IsExternalLogin
  nameWithType: UserDto.IsExternalLogin
- uid: MyApp.Auth.Application.Contracts.DTOs.UserDto.LastName
  name: LastName
  href: api/MyApp.Auth.Application.Contracts.DTOs.UserDto.html#MyApp_Auth_Application_Contracts_DTOs_UserDto_LastName
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.UserDto.LastName
  fullName: MyApp.Auth.Application.Contracts.DTOs.UserDto.LastName
  nameWithType: UserDto.LastName
- uid: MyApp.Auth.Application.Contracts.DTOs.UserDto.LastName*
  name: LastName
  href: api/MyApp.Auth.Application.Contracts.DTOs.UserDto.html#MyApp_Auth_Application_Contracts_DTOs_UserDto_LastName_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.UserDto.LastName
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.UserDto.LastName
  nameWithType: UserDto.LastName
- uid: MyApp.Auth.Application.Contracts.DTOs.UserDto.Permissions
  name: Permissions
  href: api/MyApp.Auth.Application.Contracts.DTOs.UserDto.html#MyApp_Auth_Application_Contracts_DTOs_UserDto_Permissions
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.UserDto.Permissions
  fullName: MyApp.Auth.Application.Contracts.DTOs.UserDto.Permissions
  nameWithType: UserDto.Permissions
- uid: MyApp.Auth.Application.Contracts.DTOs.UserDto.Permissions*
  name: Permissions
  href: api/MyApp.Auth.Application.Contracts.DTOs.UserDto.html#MyApp_Auth_Application_Contracts_DTOs_UserDto_Permissions_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.UserDto.Permissions
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.UserDto.Permissions
  nameWithType: UserDto.Permissions
- uid: MyApp.Auth.Application.Contracts.DTOs.UserDto.Roles
  name: Roles
  href: api/MyApp.Auth.Application.Contracts.DTOs.UserDto.html#MyApp_Auth_Application_Contracts_DTOs_UserDto_Roles
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.UserDto.Roles
  fullName: MyApp.Auth.Application.Contracts.DTOs.UserDto.Roles
  nameWithType: UserDto.Roles
- uid: MyApp.Auth.Application.Contracts.DTOs.UserDto.Roles*
  name: Roles
  href: api/MyApp.Auth.Application.Contracts.DTOs.UserDto.html#MyApp_Auth_Application_Contracts_DTOs_UserDto_Roles_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.UserDto.Roles
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.UserDto.Roles
  nameWithType: UserDto.Roles
- uid: MyApp.Auth.Application.Contracts.DTOs.UserDto.Username
  name: Username
  href: api/MyApp.Auth.Application.Contracts.DTOs.UserDto.html#MyApp_Auth_Application_Contracts_DTOs_UserDto_Username
  commentId: P:MyApp.Auth.Application.Contracts.DTOs.UserDto.Username
  fullName: MyApp.Auth.Application.Contracts.DTOs.UserDto.Username
  nameWithType: UserDto.Username
- uid: MyApp.Auth.Application.Contracts.DTOs.UserDto.Username*
  name: Username
  href: api/MyApp.Auth.Application.Contracts.DTOs.UserDto.html#MyApp_Auth_Application_Contracts_DTOs_UserDto_Username_
  commentId: Overload:MyApp.Auth.Application.Contracts.DTOs.UserDto.Username
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.DTOs.UserDto.Username
  nameWithType: UserDto.Username
- uid: MyApp.Auth.Application.Contracts.DeleteRolePermissionDto
  name: DeleteRolePermissionDto
  href: api/MyApp.Auth.Application.Contracts.DeleteRolePermissionDto.html
  commentId: T:MyApp.Auth.Application.Contracts.DeleteRolePermissionDto
  fullName: MyApp.Auth.Application.Contracts.DeleteRolePermissionDto
  nameWithType: DeleteRolePermissionDto
- uid: MyApp.Auth.Application.Contracts.DeleteRolePermissionDto.#ctor(System.Guid,System.Guid)
  name: DeleteRolePermissionDto(Guid, Guid)
  href: api/MyApp.Auth.Application.Contracts.DeleteRolePermissionDto.html#MyApp_Auth_Application_Contracts_DeleteRolePermissionDto__ctor_System_Guid_System_Guid_
  commentId: M:MyApp.Auth.Application.Contracts.DeleteRolePermissionDto.#ctor(System.Guid,System.Guid)
  name.vb: New(Guid, Guid)
  fullName: MyApp.Auth.Application.Contracts.DeleteRolePermissionDto.DeleteRolePermissionDto(System.Guid, System.Guid)
  fullName.vb: MyApp.Auth.Application.Contracts.DeleteRolePermissionDto.New(System.Guid, System.Guid)
  nameWithType: DeleteRolePermissionDto.DeleteRolePermissionDto(Guid, Guid)
  nameWithType.vb: DeleteRolePermissionDto.New(Guid, Guid)
- uid: MyApp.Auth.Application.Contracts.DeleteRolePermissionDto.#ctor*
  name: DeleteRolePermissionDto
  href: api/MyApp.Auth.Application.Contracts.DeleteRolePermissionDto.html#MyApp_Auth_Application_Contracts_DeleteRolePermissionDto__ctor_
  commentId: Overload:MyApp.Auth.Application.Contracts.DeleteRolePermissionDto.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Auth.Application.Contracts.DeleteRolePermissionDto.DeleteRolePermissionDto
  fullName.vb: MyApp.Auth.Application.Contracts.DeleteRolePermissionDto.New
  nameWithType: DeleteRolePermissionDto.DeleteRolePermissionDto
  nameWithType.vb: DeleteRolePermissionDto.New
- uid: MyApp.Auth.Application.Contracts.IPermissionService
  name: IPermissionService
  href: api/MyApp.Auth.Application.Contracts.IPermissionService.html
  commentId: T:MyApp.Auth.Application.Contracts.IPermissionService
  fullName: MyApp.Auth.Application.Contracts.IPermissionService
  nameWithType: IPermissionService
- uid: MyApp.Auth.Application.Contracts.IPermissionService.CreatePermissionAsync(MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto)
  name: CreatePermissionAsync(CreatePermissionDto)
  href: api/MyApp.Auth.Application.Contracts.IPermissionService.html#MyApp_Auth_Application_Contracts_IPermissionService_CreatePermissionAsync_MyApp_Auth_Application_Contracts_DTOs_CreatePermissionDto_
  commentId: M:MyApp.Auth.Application.Contracts.IPermissionService.CreatePermissionAsync(MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto)
  fullName: MyApp.Auth.Application.Contracts.IPermissionService.CreatePermissionAsync(MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto)
  nameWithType: IPermissionService.CreatePermissionAsync(CreatePermissionDto)
- uid: MyApp.Auth.Application.Contracts.IPermissionService.CreatePermissionAsync*
  name: CreatePermissionAsync
  href: api/MyApp.Auth.Application.Contracts.IPermissionService.html#MyApp_Auth_Application_Contracts_IPermissionService_CreatePermissionAsync_
  commentId: Overload:MyApp.Auth.Application.Contracts.IPermissionService.CreatePermissionAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.IPermissionService.CreatePermissionAsync
  nameWithType: IPermissionService.CreatePermissionAsync
- uid: MyApp.Auth.Application.Contracts.IPermissionService.DeletePermissionAsync(System.Guid)
  name: DeletePermissionAsync(Guid)
  href: api/MyApp.Auth.Application.Contracts.IPermissionService.html#MyApp_Auth_Application_Contracts_IPermissionService_DeletePermissionAsync_System_Guid_
  commentId: M:MyApp.Auth.Application.Contracts.IPermissionService.DeletePermissionAsync(System.Guid)
  fullName: MyApp.Auth.Application.Contracts.IPermissionService.DeletePermissionAsync(System.Guid)
  nameWithType: IPermissionService.DeletePermissionAsync(Guid)
- uid: MyApp.Auth.Application.Contracts.IPermissionService.DeletePermissionAsync*
  name: DeletePermissionAsync
  href: api/MyApp.Auth.Application.Contracts.IPermissionService.html#MyApp_Auth_Application_Contracts_IPermissionService_DeletePermissionAsync_
  commentId: Overload:MyApp.Auth.Application.Contracts.IPermissionService.DeletePermissionAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.IPermissionService.DeletePermissionAsync
  nameWithType: IPermissionService.DeletePermissionAsync
- uid: MyApp.Auth.Application.Contracts.IPermissionService.GetAllPermissionsAsync
  name: GetAllPermissionsAsync()
  href: api/MyApp.Auth.Application.Contracts.IPermissionService.html#MyApp_Auth_Application_Contracts_IPermissionService_GetAllPermissionsAsync
  commentId: M:MyApp.Auth.Application.Contracts.IPermissionService.GetAllPermissionsAsync
  fullName: MyApp.Auth.Application.Contracts.IPermissionService.GetAllPermissionsAsync()
  nameWithType: IPermissionService.GetAllPermissionsAsync()
- uid: MyApp.Auth.Application.Contracts.IPermissionService.GetAllPermissionsAsync*
  name: GetAllPermissionsAsync
  href: api/MyApp.Auth.Application.Contracts.IPermissionService.html#MyApp_Auth_Application_Contracts_IPermissionService_GetAllPermissionsAsync_
  commentId: Overload:MyApp.Auth.Application.Contracts.IPermissionService.GetAllPermissionsAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.IPermissionService.GetAllPermissionsAsync
  nameWithType: IPermissionService.GetAllPermissionsAsync
- uid: MyApp.Auth.Application.Contracts.IPermissionService.GetAllPermissionsPaginatedAsync(System.Int32,System.Int32)
  name: GetAllPermissionsPaginatedAsync(int, int)
  href: api/MyApp.Auth.Application.Contracts.IPermissionService.html#MyApp_Auth_Application_Contracts_IPermissionService_GetAllPermissionsPaginatedAsync_System_Int32_System_Int32_
  commentId: M:MyApp.Auth.Application.Contracts.IPermissionService.GetAllPermissionsPaginatedAsync(System.Int32,System.Int32)
  name.vb: GetAllPermissionsPaginatedAsync(Integer, Integer)
  fullName: MyApp.Auth.Application.Contracts.IPermissionService.GetAllPermissionsPaginatedAsync(int, int)
  fullName.vb: MyApp.Auth.Application.Contracts.IPermissionService.GetAllPermissionsPaginatedAsync(Integer, Integer)
  nameWithType: IPermissionService.GetAllPermissionsPaginatedAsync(int, int)
  nameWithType.vb: IPermissionService.GetAllPermissionsPaginatedAsync(Integer, Integer)
- uid: MyApp.Auth.Application.Contracts.IPermissionService.GetAllPermissionsPaginatedAsync*
  name: GetAllPermissionsPaginatedAsync
  href: api/MyApp.Auth.Application.Contracts.IPermissionService.html#MyApp_Auth_Application_Contracts_IPermissionService_GetAllPermissionsPaginatedAsync_
  commentId: Overload:MyApp.Auth.Application.Contracts.IPermissionService.GetAllPermissionsPaginatedAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.IPermissionService.GetAllPermissionsPaginatedAsync
  nameWithType: IPermissionService.GetAllPermissionsPaginatedAsync
- uid: MyApp.Auth.Application.Contracts.IPermissionService.GetPermissionByIdAsync(System.Guid)
  name: GetPermissionByIdAsync(Guid)
  href: api/MyApp.Auth.Application.Contracts.IPermissionService.html#MyApp_Auth_Application_Contracts_IPermissionService_GetPermissionByIdAsync_System_Guid_
  commentId: M:MyApp.Auth.Application.Contracts.IPermissionService.GetPermissionByIdAsync(System.Guid)
  fullName: MyApp.Auth.Application.Contracts.IPermissionService.GetPermissionByIdAsync(System.Guid)
  nameWithType: IPermissionService.GetPermissionByIdAsync(Guid)
- uid: MyApp.Auth.Application.Contracts.IPermissionService.GetPermissionByIdAsync*
  name: GetPermissionByIdAsync
  href: api/MyApp.Auth.Application.Contracts.IPermissionService.html#MyApp_Auth_Application_Contracts_IPermissionService_GetPermissionByIdAsync_
  commentId: Overload:MyApp.Auth.Application.Contracts.IPermissionService.GetPermissionByIdAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.IPermissionService.GetPermissionByIdAsync
  nameWithType: IPermissionService.GetPermissionByIdAsync
- uid: MyApp.Auth.Application.Contracts.IPermissionService.GetPermissionByModuleActionAsync(System.String,System.String)
  name: GetPermissionByModuleActionAsync(string, string)
  href: api/MyApp.Auth.Application.Contracts.IPermissionService.html#MyApp_Auth_Application_Contracts_IPermissionService_GetPermissionByModuleActionAsync_System_String_System_String_
  commentId: M:MyApp.Auth.Application.Contracts.IPermissionService.GetPermissionByModuleActionAsync(System.String,System.String)
  name.vb: GetPermissionByModuleActionAsync(String, String)
  fullName: MyApp.Auth.Application.Contracts.IPermissionService.GetPermissionByModuleActionAsync(string, string)
  fullName.vb: MyApp.Auth.Application.Contracts.IPermissionService.GetPermissionByModuleActionAsync(String, String)
  nameWithType: IPermissionService.GetPermissionByModuleActionAsync(string, string)
  nameWithType.vb: IPermissionService.GetPermissionByModuleActionAsync(String, String)
- uid: MyApp.Auth.Application.Contracts.IPermissionService.GetPermissionByModuleActionAsync*
  name: GetPermissionByModuleActionAsync
  href: api/MyApp.Auth.Application.Contracts.IPermissionService.html#MyApp_Auth_Application_Contracts_IPermissionService_GetPermissionByModuleActionAsync_
  commentId: Overload:MyApp.Auth.Application.Contracts.IPermissionService.GetPermissionByModuleActionAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.IPermissionService.GetPermissionByModuleActionAsync
  nameWithType: IPermissionService.GetPermissionByModuleActionAsync
- uid: MyApp.Auth.Application.Contracts.IPermissionService.HasPermissionAsync(System.Guid,System.String,System.String)
  name: HasPermissionAsync(Guid, string, string)
  href: api/MyApp.Auth.Application.Contracts.IPermissionService.html#MyApp_Auth_Application_Contracts_IPermissionService_HasPermissionAsync_System_Guid_System_String_System_String_
  commentId: M:MyApp.Auth.Application.Contracts.IPermissionService.HasPermissionAsync(System.Guid,System.String,System.String)
  name.vb: HasPermissionAsync(Guid, String, String)
  fullName: MyApp.Auth.Application.Contracts.IPermissionService.HasPermissionAsync(System.Guid, string, string)
  fullName.vb: MyApp.Auth.Application.Contracts.IPermissionService.HasPermissionAsync(System.Guid, String, String)
  nameWithType: IPermissionService.HasPermissionAsync(Guid, string, string)
  nameWithType.vb: IPermissionService.HasPermissionAsync(Guid, String, String)
- uid: MyApp.Auth.Application.Contracts.IPermissionService.HasPermissionAsync(System.String,System.String,System.String)
  name: HasPermissionAsync(string?, string, string)
  href: api/MyApp.Auth.Application.Contracts.IPermissionService.html#MyApp_Auth_Application_Contracts_IPermissionService_HasPermissionAsync_System_String_System_String_System_String_
  commentId: M:MyApp.Auth.Application.Contracts.IPermissionService.HasPermissionAsync(System.String,System.String,System.String)
  name.vb: HasPermissionAsync(String, String, String)
  fullName: MyApp.Auth.Application.Contracts.IPermissionService.HasPermissionAsync(string?, string, string)
  fullName.vb: MyApp.Auth.Application.Contracts.IPermissionService.HasPermissionAsync(String, String, String)
  nameWithType: IPermissionService.HasPermissionAsync(string?, string, string)
  nameWithType.vb: IPermissionService.HasPermissionAsync(String, String, String)
- uid: MyApp.Auth.Application.Contracts.IPermissionService.HasPermissionAsync*
  name: HasPermissionAsync
  href: api/MyApp.Auth.Application.Contracts.IPermissionService.html#MyApp_Auth_Application_Contracts_IPermissionService_HasPermissionAsync_
  commentId: Overload:MyApp.Auth.Application.Contracts.IPermissionService.HasPermissionAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.IPermissionService.HasPermissionAsync
  nameWithType: IPermissionService.HasPermissionAsync
- uid: MyApp.Auth.Application.Contracts.IPermissionService.UpdatePermissionAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto)
  name: UpdatePermissionAsync(Guid, UpdatePermissionDto)
  href: api/MyApp.Auth.Application.Contracts.IPermissionService.html#MyApp_Auth_Application_Contracts_IPermissionService_UpdatePermissionAsync_System_Guid_MyApp_Auth_Application_Contracts_DTOs_UpdatePermissionDto_
  commentId: M:MyApp.Auth.Application.Contracts.IPermissionService.UpdatePermissionAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto)
  fullName: MyApp.Auth.Application.Contracts.IPermissionService.UpdatePermissionAsync(System.Guid, MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto)
  nameWithType: IPermissionService.UpdatePermissionAsync(Guid, UpdatePermissionDto)
- uid: MyApp.Auth.Application.Contracts.IPermissionService.UpdatePermissionAsync*
  name: UpdatePermissionAsync
  href: api/MyApp.Auth.Application.Contracts.IPermissionService.html#MyApp_Auth_Application_Contracts_IPermissionService_UpdatePermissionAsync_
  commentId: Overload:MyApp.Auth.Application.Contracts.IPermissionService.UpdatePermissionAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.IPermissionService.UpdatePermissionAsync
  nameWithType: IPermissionService.UpdatePermissionAsync
- uid: MyApp.Auth.Application.Contracts.Services
  name: MyApp.Auth.Application.Contracts.Services
  href: api/MyApp.Auth.Application.Contracts.Services.html
  commentId: N:MyApp.Auth.Application.Contracts.Services
  fullName: MyApp.Auth.Application.Contracts.Services
  nameWithType: MyApp.Auth.Application.Contracts.Services
- uid: MyApp.Auth.Application.Contracts.Services.IAuthService
  name: IAuthService
  href: api/MyApp.Auth.Application.Contracts.Services.IAuthService.html
  commentId: T:MyApp.Auth.Application.Contracts.Services.IAuthService
  fullName: MyApp.Auth.Application.Contracts.Services.IAuthService
  nameWithType: IAuthService
- uid: MyApp.Auth.Application.Contracts.Services.IAuthService.ExternalLoginAsync(MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto)
  name: ExternalLoginAsync(ExternalLoginDto)
  href: api/MyApp.Auth.Application.Contracts.Services.IAuthService.html#MyApp_Auth_Application_Contracts_Services_IAuthService_ExternalLoginAsync_MyApp_Auth_Application_Contracts_DTOs_ExternalLoginDto_
  commentId: M:MyApp.Auth.Application.Contracts.Services.IAuthService.ExternalLoginAsync(MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto)
  fullName: MyApp.Auth.Application.Contracts.Services.IAuthService.ExternalLoginAsync(MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto)
  nameWithType: IAuthService.ExternalLoginAsync(ExternalLoginDto)
- uid: MyApp.Auth.Application.Contracts.Services.IAuthService.ExternalLoginAsync*
  name: ExternalLoginAsync
  href: api/MyApp.Auth.Application.Contracts.Services.IAuthService.html#MyApp_Auth_Application_Contracts_Services_IAuthService_ExternalLoginAsync_
  commentId: Overload:MyApp.Auth.Application.Contracts.Services.IAuthService.ExternalLoginAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.Services.IAuthService.ExternalLoginAsync
  nameWithType: IAuthService.ExternalLoginAsync
- uid: MyApp.Auth.Application.Contracts.Services.IAuthService.LoginAsync(MyApp.Auth.Application.Contracts.DTOs.LoginDto)
  name: LoginAsync(LoginDto)
  href: api/MyApp.Auth.Application.Contracts.Services.IAuthService.html#MyApp_Auth_Application_Contracts_Services_IAuthService_LoginAsync_MyApp_Auth_Application_Contracts_DTOs_LoginDto_
  commentId: M:MyApp.Auth.Application.Contracts.Services.IAuthService.LoginAsync(MyApp.Auth.Application.Contracts.DTOs.LoginDto)
  fullName: MyApp.Auth.Application.Contracts.Services.IAuthService.LoginAsync(MyApp.Auth.Application.Contracts.DTOs.LoginDto)
  nameWithType: IAuthService.LoginAsync(LoginDto)
- uid: MyApp.Auth.Application.Contracts.Services.IAuthService.LoginAsync*
  name: LoginAsync
  href: api/MyApp.Auth.Application.Contracts.Services.IAuthService.html#MyApp_Auth_Application_Contracts_Services_IAuthService_LoginAsync_
  commentId: Overload:MyApp.Auth.Application.Contracts.Services.IAuthService.LoginAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.Services.IAuthService.LoginAsync
  nameWithType: IAuthService.LoginAsync
- uid: MyApp.Auth.Application.Contracts.Services.IAuthService.LogoutAsync(System.Guid)
  name: LogoutAsync(Guid)
  href: api/MyApp.Auth.Application.Contracts.Services.IAuthService.html#MyApp_Auth_Application_Contracts_Services_IAuthService_LogoutAsync_System_Guid_
  commentId: M:MyApp.Auth.Application.Contracts.Services.IAuthService.LogoutAsync(System.Guid)
  fullName: MyApp.Auth.Application.Contracts.Services.IAuthService.LogoutAsync(System.Guid)
  nameWithType: IAuthService.LogoutAsync(Guid)
- uid: MyApp.Auth.Application.Contracts.Services.IAuthService.LogoutAsync*
  name: LogoutAsync
  href: api/MyApp.Auth.Application.Contracts.Services.IAuthService.html#MyApp_Auth_Application_Contracts_Services_IAuthService_LogoutAsync_
  commentId: Overload:MyApp.Auth.Application.Contracts.Services.IAuthService.LogoutAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.Services.IAuthService.LogoutAsync
  nameWithType: IAuthService.LogoutAsync
- uid: MyApp.Auth.Application.Contracts.Services.IAuthService.RefreshTokenAsync(MyApp.Auth.Application.Contracts.DTOs.RefreshTokenDto)
  name: RefreshTokenAsync(RefreshTokenDto)
  href: api/MyApp.Auth.Application.Contracts.Services.IAuthService.html#MyApp_Auth_Application_Contracts_Services_IAuthService_RefreshTokenAsync_MyApp_Auth_Application_Contracts_DTOs_RefreshTokenDto_
  commentId: M:MyApp.Auth.Application.Contracts.Services.IAuthService.RefreshTokenAsync(MyApp.Auth.Application.Contracts.DTOs.RefreshTokenDto)
  fullName: MyApp.Auth.Application.Contracts.Services.IAuthService.RefreshTokenAsync(MyApp.Auth.Application.Contracts.DTOs.RefreshTokenDto)
  nameWithType: IAuthService.RefreshTokenAsync(RefreshTokenDto)
- uid: MyApp.Auth.Application.Contracts.Services.IAuthService.RefreshTokenAsync*
  name: RefreshTokenAsync
  href: api/MyApp.Auth.Application.Contracts.Services.IAuthService.html#MyApp_Auth_Application_Contracts_Services_IAuthService_RefreshTokenAsync_
  commentId: Overload:MyApp.Auth.Application.Contracts.Services.IAuthService.RefreshTokenAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.Services.IAuthService.RefreshTokenAsync
  nameWithType: IAuthService.RefreshTokenAsync
- uid: MyApp.Auth.Application.Contracts.Services.IAuthService.RegisterAsync(MyApp.Auth.Application.Contracts.DTOs.RegisterDto)
  name: RegisterAsync(RegisterDto)
  href: api/MyApp.Auth.Application.Contracts.Services.IAuthService.html#MyApp_Auth_Application_Contracts_Services_IAuthService_RegisterAsync_MyApp_Auth_Application_Contracts_DTOs_RegisterDto_
  commentId: M:MyApp.Auth.Application.Contracts.Services.IAuthService.RegisterAsync(MyApp.Auth.Application.Contracts.DTOs.RegisterDto)
  fullName: MyApp.Auth.Application.Contracts.Services.IAuthService.RegisterAsync(MyApp.Auth.Application.Contracts.DTOs.RegisterDto)
  nameWithType: IAuthService.RegisterAsync(RegisterDto)
- uid: MyApp.Auth.Application.Contracts.Services.IAuthService.RegisterAsync*
  name: RegisterAsync
  href: api/MyApp.Auth.Application.Contracts.Services.IAuthService.html#MyApp_Auth_Application_Contracts_Services_IAuthService_RegisterAsync_
  commentId: Overload:MyApp.Auth.Application.Contracts.Services.IAuthService.RegisterAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.Services.IAuthService.RegisterAsync
  nameWithType: IAuthService.RegisterAsync
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService
  name: IRoleService
  href: api/MyApp.Auth.Application.Contracts.Services.IRoleService.html
  commentId: T:MyApp.Auth.Application.Contracts.Services.IRoleService
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService
  nameWithType: IRoleService
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService.AddPermissionToRole(MyApp.Auth.Application.Contracts.CreateRolePermissionDto)
  name: AddPermissionToRole(CreateRolePermissionDto)
  href: api/MyApp.Auth.Application.Contracts.Services.IRoleService.html#MyApp_Auth_Application_Contracts_Services_IRoleService_AddPermissionToRole_MyApp_Auth_Application_Contracts_CreateRolePermissionDto_
  commentId: M:MyApp.Auth.Application.Contracts.Services.IRoleService.AddPermissionToRole(MyApp.Auth.Application.Contracts.CreateRolePermissionDto)
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService.AddPermissionToRole(MyApp.Auth.Application.Contracts.CreateRolePermissionDto)
  nameWithType: IRoleService.AddPermissionToRole(CreateRolePermissionDto)
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService.AddPermissionToRole*
  name: AddPermissionToRole
  href: api/MyApp.Auth.Application.Contracts.Services.IRoleService.html#MyApp_Auth_Application_Contracts_Services_IRoleService_AddPermissionToRole_
  commentId: Overload:MyApp.Auth.Application.Contracts.Services.IRoleService.AddPermissionToRole
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService.AddPermissionToRole
  nameWithType: IRoleService.AddPermissionToRole
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService.CreateRoleAsync(MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
  name: CreateRoleAsync(CreateRoleDto)
  href: api/MyApp.Auth.Application.Contracts.Services.IRoleService.html#MyApp_Auth_Application_Contracts_Services_IRoleService_CreateRoleAsync_MyApp_Auth_Application_Contracts_DTOs_CreateRoleDto_
  commentId: M:MyApp.Auth.Application.Contracts.Services.IRoleService.CreateRoleAsync(MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService.CreateRoleAsync(MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
  nameWithType: IRoleService.CreateRoleAsync(CreateRoleDto)
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService.CreateRoleAsync*
  name: CreateRoleAsync
  href: api/MyApp.Auth.Application.Contracts.Services.IRoleService.html#MyApp_Auth_Application_Contracts_Services_IRoleService_CreateRoleAsync_
  commentId: Overload:MyApp.Auth.Application.Contracts.Services.IRoleService.CreateRoleAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService.CreateRoleAsync
  nameWithType: IRoleService.CreateRoleAsync
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService.DeleteRoleAsync(System.Guid)
  name: DeleteRoleAsync(Guid)
  href: api/MyApp.Auth.Application.Contracts.Services.IRoleService.html#MyApp_Auth_Application_Contracts_Services_IRoleService_DeleteRoleAsync_System_Guid_
  commentId: M:MyApp.Auth.Application.Contracts.Services.IRoleService.DeleteRoleAsync(System.Guid)
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService.DeleteRoleAsync(System.Guid)
  nameWithType: IRoleService.DeleteRoleAsync(Guid)
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService.DeleteRoleAsync*
  name: DeleteRoleAsync
  href: api/MyApp.Auth.Application.Contracts.Services.IRoleService.html#MyApp_Auth_Application_Contracts_Services_IRoleService_DeleteRoleAsync_
  commentId: Overload:MyApp.Auth.Application.Contracts.Services.IRoleService.DeleteRoleAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService.DeleteRoleAsync
  nameWithType: IRoleService.DeleteRoleAsync
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService.GetAllRolesAsync
  name: GetAllRolesAsync()
  href: api/MyApp.Auth.Application.Contracts.Services.IRoleService.html#MyApp_Auth_Application_Contracts_Services_IRoleService_GetAllRolesAsync
  commentId: M:MyApp.Auth.Application.Contracts.Services.IRoleService.GetAllRolesAsync
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService.GetAllRolesAsync()
  nameWithType: IRoleService.GetAllRolesAsync()
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService.GetAllRolesAsync*
  name: GetAllRolesAsync
  href: api/MyApp.Auth.Application.Contracts.Services.IRoleService.html#MyApp_Auth_Application_Contracts_Services_IRoleService_GetAllRolesAsync_
  commentId: Overload:MyApp.Auth.Application.Contracts.Services.IRoleService.GetAllRolesAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService.GetAllRolesAsync
  nameWithType: IRoleService.GetAllRolesAsync
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService.GetAllRolesPaginatedAsync(System.Int32,System.Int32)
  name: GetAllRolesPaginatedAsync(int, int)
  href: api/MyApp.Auth.Application.Contracts.Services.IRoleService.html#MyApp_Auth_Application_Contracts_Services_IRoleService_GetAllRolesPaginatedAsync_System_Int32_System_Int32_
  commentId: M:MyApp.Auth.Application.Contracts.Services.IRoleService.GetAllRolesPaginatedAsync(System.Int32,System.Int32)
  name.vb: GetAllRolesPaginatedAsync(Integer, Integer)
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService.GetAllRolesPaginatedAsync(int, int)
  fullName.vb: MyApp.Auth.Application.Contracts.Services.IRoleService.GetAllRolesPaginatedAsync(Integer, Integer)
  nameWithType: IRoleService.GetAllRolesPaginatedAsync(int, int)
  nameWithType.vb: IRoleService.GetAllRolesPaginatedAsync(Integer, Integer)
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService.GetAllRolesPaginatedAsync*
  name: GetAllRolesPaginatedAsync
  href: api/MyApp.Auth.Application.Contracts.Services.IRoleService.html#MyApp_Auth_Application_Contracts_Services_IRoleService_GetAllRolesPaginatedAsync_
  commentId: Overload:MyApp.Auth.Application.Contracts.Services.IRoleService.GetAllRolesPaginatedAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService.GetAllRolesPaginatedAsync
  nameWithType: IRoleService.GetAllRolesPaginatedAsync
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService.GetPermissionsForRoleAsync(System.Guid)
  name: GetPermissionsForRoleAsync(Guid)
  href: api/MyApp.Auth.Application.Contracts.Services.IRoleService.html#MyApp_Auth_Application_Contracts_Services_IRoleService_GetPermissionsForRoleAsync_System_Guid_
  commentId: M:MyApp.Auth.Application.Contracts.Services.IRoleService.GetPermissionsForRoleAsync(System.Guid)
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService.GetPermissionsForRoleAsync(System.Guid)
  nameWithType: IRoleService.GetPermissionsForRoleAsync(Guid)
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService.GetPermissionsForRoleAsync*
  name: GetPermissionsForRoleAsync
  href: api/MyApp.Auth.Application.Contracts.Services.IRoleService.html#MyApp_Auth_Application_Contracts_Services_IRoleService_GetPermissionsForRoleAsync_
  commentId: Overload:MyApp.Auth.Application.Contracts.Services.IRoleService.GetPermissionsForRoleAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService.GetPermissionsForRoleAsync
  nameWithType: IRoleService.GetPermissionsForRoleAsync
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService.GetRoleByIdAsync(System.Guid)
  name: GetRoleByIdAsync(Guid)
  href: api/MyApp.Auth.Application.Contracts.Services.IRoleService.html#MyApp_Auth_Application_Contracts_Services_IRoleService_GetRoleByIdAsync_System_Guid_
  commentId: M:MyApp.Auth.Application.Contracts.Services.IRoleService.GetRoleByIdAsync(System.Guid)
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService.GetRoleByIdAsync(System.Guid)
  nameWithType: IRoleService.GetRoleByIdAsync(Guid)
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService.GetRoleByIdAsync*
  name: GetRoleByIdAsync
  href: api/MyApp.Auth.Application.Contracts.Services.IRoleService.html#MyApp_Auth_Application_Contracts_Services_IRoleService_GetRoleByIdAsync_
  commentId: Overload:MyApp.Auth.Application.Contracts.Services.IRoleService.GetRoleByIdAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService.GetRoleByIdAsync
  nameWithType: IRoleService.GetRoleByIdAsync
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService.GetRoleByNameAsync(System.String)
  name: GetRoleByNameAsync(string)
  href: api/MyApp.Auth.Application.Contracts.Services.IRoleService.html#MyApp_Auth_Application_Contracts_Services_IRoleService_GetRoleByNameAsync_System_String_
  commentId: M:MyApp.Auth.Application.Contracts.Services.IRoleService.GetRoleByNameAsync(System.String)
  name.vb: GetRoleByNameAsync(String)
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService.GetRoleByNameAsync(string)
  fullName.vb: MyApp.Auth.Application.Contracts.Services.IRoleService.GetRoleByNameAsync(String)
  nameWithType: IRoleService.GetRoleByNameAsync(string)
  nameWithType.vb: IRoleService.GetRoleByNameAsync(String)
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService.GetRoleByNameAsync*
  name: GetRoleByNameAsync
  href: api/MyApp.Auth.Application.Contracts.Services.IRoleService.html#MyApp_Auth_Application_Contracts_Services_IRoleService_GetRoleByNameAsync_
  commentId: Overload:MyApp.Auth.Application.Contracts.Services.IRoleService.GetRoleByNameAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService.GetRoleByNameAsync
  nameWithType: IRoleService.GetRoleByNameAsync
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService.GetUsersInRoleAsync(System.String)
  name: GetUsersInRoleAsync(string)
  href: api/MyApp.Auth.Application.Contracts.Services.IRoleService.html#MyApp_Auth_Application_Contracts_Services_IRoleService_GetUsersInRoleAsync_System_String_
  commentId: M:MyApp.Auth.Application.Contracts.Services.IRoleService.GetUsersInRoleAsync(System.String)
  name.vb: GetUsersInRoleAsync(String)
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService.GetUsersInRoleAsync(string)
  fullName.vb: MyApp.Auth.Application.Contracts.Services.IRoleService.GetUsersInRoleAsync(String)
  nameWithType: IRoleService.GetUsersInRoleAsync(string)
  nameWithType.vb: IRoleService.GetUsersInRoleAsync(String)
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService.GetUsersInRoleAsync*
  name: GetUsersInRoleAsync
  href: api/MyApp.Auth.Application.Contracts.Services.IRoleService.html#MyApp_Auth_Application_Contracts_Services_IRoleService_GetUsersInRoleAsync_
  commentId: Overload:MyApp.Auth.Application.Contracts.Services.IRoleService.GetUsersInRoleAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService.GetUsersInRoleAsync
  nameWithType: IRoleService.GetUsersInRoleAsync
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService.HasPermissionAsync(System.Guid,System.Guid)
  name: HasPermissionAsync(Guid, Guid)
  href: api/MyApp.Auth.Application.Contracts.Services.IRoleService.html#MyApp_Auth_Application_Contracts_Services_IRoleService_HasPermissionAsync_System_Guid_System_Guid_
  commentId: M:MyApp.Auth.Application.Contracts.Services.IRoleService.HasPermissionAsync(System.Guid,System.Guid)
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService.HasPermissionAsync(System.Guid, System.Guid)
  nameWithType: IRoleService.HasPermissionAsync(Guid, Guid)
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService.HasPermissionAsync*
  name: HasPermissionAsync
  href: api/MyApp.Auth.Application.Contracts.Services.IRoleService.html#MyApp_Auth_Application_Contracts_Services_IRoleService_HasPermissionAsync_
  commentId: Overload:MyApp.Auth.Application.Contracts.Services.IRoleService.HasPermissionAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService.HasPermissionAsync
  nameWithType: IRoleService.HasPermissionAsync
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService.RemovePermissionFromRoleAsync(MyApp.Auth.Application.Contracts.DeleteRolePermissionDto)
  name: RemovePermissionFromRoleAsync(DeleteRolePermissionDto)
  href: api/MyApp.Auth.Application.Contracts.Services.IRoleService.html#MyApp_Auth_Application_Contracts_Services_IRoleService_RemovePermissionFromRoleAsync_MyApp_Auth_Application_Contracts_DeleteRolePermissionDto_
  commentId: M:MyApp.Auth.Application.Contracts.Services.IRoleService.RemovePermissionFromRoleAsync(MyApp.Auth.Application.Contracts.DeleteRolePermissionDto)
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService.RemovePermissionFromRoleAsync(MyApp.Auth.Application.Contracts.DeleteRolePermissionDto)
  nameWithType: IRoleService.RemovePermissionFromRoleAsync(DeleteRolePermissionDto)
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService.RemovePermissionFromRoleAsync*
  name: RemovePermissionFromRoleAsync
  href: api/MyApp.Auth.Application.Contracts.Services.IRoleService.html#MyApp_Auth_Application_Contracts_Services_IRoleService_RemovePermissionFromRoleAsync_
  commentId: Overload:MyApp.Auth.Application.Contracts.Services.IRoleService.RemovePermissionFromRoleAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService.RemovePermissionFromRoleAsync
  nameWithType: IRoleService.RemovePermissionFromRoleAsync
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService.UpdateRoleAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
  name: UpdateRoleAsync(Guid, CreateRoleDto)
  href: api/MyApp.Auth.Application.Contracts.Services.IRoleService.html#MyApp_Auth_Application_Contracts_Services_IRoleService_UpdateRoleAsync_System_Guid_MyApp_Auth_Application_Contracts_DTOs_CreateRoleDto_
  commentId: M:MyApp.Auth.Application.Contracts.Services.IRoleService.UpdateRoleAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService.UpdateRoleAsync(System.Guid, MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
  nameWithType: IRoleService.UpdateRoleAsync(Guid, CreateRoleDto)
- uid: MyApp.Auth.Application.Contracts.Services.IRoleService.UpdateRoleAsync*
  name: UpdateRoleAsync
  href: api/MyApp.Auth.Application.Contracts.Services.IRoleService.html#MyApp_Auth_Application_Contracts_Services_IRoleService_UpdateRoleAsync_
  commentId: Overload:MyApp.Auth.Application.Contracts.Services.IRoleService.UpdateRoleAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.Services.IRoleService.UpdateRoleAsync
  nameWithType: IRoleService.UpdateRoleAsync
- uid: MyApp.Auth.Application.Contracts.Services.IUserService
  name: IUserService
  href: api/MyApp.Auth.Application.Contracts.Services.IUserService.html
  commentId: T:MyApp.Auth.Application.Contracts.Services.IUserService
  fullName: MyApp.Auth.Application.Contracts.Services.IUserService
  nameWithType: IUserService
- uid: MyApp.Auth.Application.Contracts.Services.IUserService.AssignRoleAsync(System.Guid,System.String)
  name: AssignRoleAsync(Guid, string)
  href: api/MyApp.Auth.Application.Contracts.Services.IUserService.html#MyApp_Auth_Application_Contracts_Services_IUserService_AssignRoleAsync_System_Guid_System_String_
  commentId: M:MyApp.Auth.Application.Contracts.Services.IUserService.AssignRoleAsync(System.Guid,System.String)
  name.vb: AssignRoleAsync(Guid, String)
  fullName: MyApp.Auth.Application.Contracts.Services.IUserService.AssignRoleAsync(System.Guid, string)
  fullName.vb: MyApp.Auth.Application.Contracts.Services.IUserService.AssignRoleAsync(System.Guid, String)
  nameWithType: IUserService.AssignRoleAsync(Guid, string)
  nameWithType.vb: IUserService.AssignRoleAsync(Guid, String)
- uid: MyApp.Auth.Application.Contracts.Services.IUserService.AssignRoleAsync*
  name: AssignRoleAsync
  href: api/MyApp.Auth.Application.Contracts.Services.IUserService.html#MyApp_Auth_Application_Contracts_Services_IUserService_AssignRoleAsync_
  commentId: Overload:MyApp.Auth.Application.Contracts.Services.IUserService.AssignRoleAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.Services.IUserService.AssignRoleAsync
  nameWithType: IUserService.AssignRoleAsync
- uid: MyApp.Auth.Application.Contracts.Services.IUserService.ChangePasswordAsync(System.Guid,System.String,System.String)
  name: ChangePasswordAsync(Guid, string, string)
  href: api/MyApp.Auth.Application.Contracts.Services.IUserService.html#MyApp_Auth_Application_Contracts_Services_IUserService_ChangePasswordAsync_System_Guid_System_String_System_String_
  commentId: M:MyApp.Auth.Application.Contracts.Services.IUserService.ChangePasswordAsync(System.Guid,System.String,System.String)
  name.vb: ChangePasswordAsync(Guid, String, String)
  fullName: MyApp.Auth.Application.Contracts.Services.IUserService.ChangePasswordAsync(System.Guid, string, string)
  fullName.vb: MyApp.Auth.Application.Contracts.Services.IUserService.ChangePasswordAsync(System.Guid, String, String)
  nameWithType: IUserService.ChangePasswordAsync(Guid, string, string)
  nameWithType.vb: IUserService.ChangePasswordAsync(Guid, String, String)
- uid: MyApp.Auth.Application.Contracts.Services.IUserService.ChangePasswordAsync*
  name: ChangePasswordAsync
  href: api/MyApp.Auth.Application.Contracts.Services.IUserService.html#MyApp_Auth_Application_Contracts_Services_IUserService_ChangePasswordAsync_
  commentId: Overload:MyApp.Auth.Application.Contracts.Services.IUserService.ChangePasswordAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.Services.IUserService.ChangePasswordAsync
  nameWithType: IUserService.ChangePasswordAsync
- uid: MyApp.Auth.Application.Contracts.Services.IUserService.DeleteUserAsync(System.Guid)
  name: DeleteUserAsync(Guid)
  href: api/MyApp.Auth.Application.Contracts.Services.IUserService.html#MyApp_Auth_Application_Contracts_Services_IUserService_DeleteUserAsync_System_Guid_
  commentId: M:MyApp.Auth.Application.Contracts.Services.IUserService.DeleteUserAsync(System.Guid)
  fullName: MyApp.Auth.Application.Contracts.Services.IUserService.DeleteUserAsync(System.Guid)
  nameWithType: IUserService.DeleteUserAsync(Guid)
- uid: MyApp.Auth.Application.Contracts.Services.IUserService.DeleteUserAsync*
  name: DeleteUserAsync
  href: api/MyApp.Auth.Application.Contracts.Services.IUserService.html#MyApp_Auth_Application_Contracts_Services_IUserService_DeleteUserAsync_
  commentId: Overload:MyApp.Auth.Application.Contracts.Services.IUserService.DeleteUserAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.Services.IUserService.DeleteUserAsync
  nameWithType: IUserService.DeleteUserAsync
- uid: MyApp.Auth.Application.Contracts.Services.IUserService.GetAllUsersAsync
  name: GetAllUsersAsync()
  href: api/MyApp.Auth.Application.Contracts.Services.IUserService.html#MyApp_Auth_Application_Contracts_Services_IUserService_GetAllUsersAsync
  commentId: M:MyApp.Auth.Application.Contracts.Services.IUserService.GetAllUsersAsync
  fullName: MyApp.Auth.Application.Contracts.Services.IUserService.GetAllUsersAsync()
  nameWithType: IUserService.GetAllUsersAsync()
- uid: MyApp.Auth.Application.Contracts.Services.IUserService.GetAllUsersAsync*
  name: GetAllUsersAsync
  href: api/MyApp.Auth.Application.Contracts.Services.IUserService.html#MyApp_Auth_Application_Contracts_Services_IUserService_GetAllUsersAsync_
  commentId: Overload:MyApp.Auth.Application.Contracts.Services.IUserService.GetAllUsersAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.Services.IUserService.GetAllUsersAsync
  nameWithType: IUserService.GetAllUsersAsync
- uid: MyApp.Auth.Application.Contracts.Services.IUserService.GetAllUsersPaginatedAsync(System.Int32,System.Int32)
  name: GetAllUsersPaginatedAsync(int, int)
  href: api/MyApp.Auth.Application.Contracts.Services.IUserService.html#MyApp_Auth_Application_Contracts_Services_IUserService_GetAllUsersPaginatedAsync_System_Int32_System_Int32_
  commentId: M:MyApp.Auth.Application.Contracts.Services.IUserService.GetAllUsersPaginatedAsync(System.Int32,System.Int32)
  name.vb: GetAllUsersPaginatedAsync(Integer, Integer)
  fullName: MyApp.Auth.Application.Contracts.Services.IUserService.GetAllUsersPaginatedAsync(int, int)
  fullName.vb: MyApp.Auth.Application.Contracts.Services.IUserService.GetAllUsersPaginatedAsync(Integer, Integer)
  nameWithType: IUserService.GetAllUsersPaginatedAsync(int, int)
  nameWithType.vb: IUserService.GetAllUsersPaginatedAsync(Integer, Integer)
- uid: MyApp.Auth.Application.Contracts.Services.IUserService.GetAllUsersPaginatedAsync*
  name: GetAllUsersPaginatedAsync
  href: api/MyApp.Auth.Application.Contracts.Services.IUserService.html#MyApp_Auth_Application_Contracts_Services_IUserService_GetAllUsersPaginatedAsync_
  commentId: Overload:MyApp.Auth.Application.Contracts.Services.IUserService.GetAllUsersPaginatedAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.Services.IUserService.GetAllUsersPaginatedAsync
  nameWithType: IUserService.GetAllUsersPaginatedAsync
- uid: MyApp.Auth.Application.Contracts.Services.IUserService.GetCurrentUserAsync
  name: GetCurrentUserAsync()
  href: api/MyApp.Auth.Application.Contracts.Services.IUserService.html#MyApp_Auth_Application_Contracts_Services_IUserService_GetCurrentUserAsync
  commentId: M:MyApp.Auth.Application.Contracts.Services.IUserService.GetCurrentUserAsync
  fullName: MyApp.Auth.Application.Contracts.Services.IUserService.GetCurrentUserAsync()
  nameWithType: IUserService.GetCurrentUserAsync()
- uid: MyApp.Auth.Application.Contracts.Services.IUserService.GetCurrentUserAsync*
  name: GetCurrentUserAsync
  href: api/MyApp.Auth.Application.Contracts.Services.IUserService.html#MyApp_Auth_Application_Contracts_Services_IUserService_GetCurrentUserAsync_
  commentId: Overload:MyApp.Auth.Application.Contracts.Services.IUserService.GetCurrentUserAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.Services.IUserService.GetCurrentUserAsync
  nameWithType: IUserService.GetCurrentUserAsync
- uid: MyApp.Auth.Application.Contracts.Services.IUserService.GetUserByEmailAsync(System.String)
  name: GetUserByEmailAsync(string)
  href: api/MyApp.Auth.Application.Contracts.Services.IUserService.html#MyApp_Auth_Application_Contracts_Services_IUserService_GetUserByEmailAsync_System_String_
  commentId: M:MyApp.Auth.Application.Contracts.Services.IUserService.GetUserByEmailAsync(System.String)
  name.vb: GetUserByEmailAsync(String)
  fullName: MyApp.Auth.Application.Contracts.Services.IUserService.GetUserByEmailAsync(string)
  fullName.vb: MyApp.Auth.Application.Contracts.Services.IUserService.GetUserByEmailAsync(String)
  nameWithType: IUserService.GetUserByEmailAsync(string)
  nameWithType.vb: IUserService.GetUserByEmailAsync(String)
- uid: MyApp.Auth.Application.Contracts.Services.IUserService.GetUserByEmailAsync*
  name: GetUserByEmailAsync
  href: api/MyApp.Auth.Application.Contracts.Services.IUserService.html#MyApp_Auth_Application_Contracts_Services_IUserService_GetUserByEmailAsync_
  commentId: Overload:MyApp.Auth.Application.Contracts.Services.IUserService.GetUserByEmailAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.Services.IUserService.GetUserByEmailAsync
  nameWithType: IUserService.GetUserByEmailAsync
- uid: MyApp.Auth.Application.Contracts.Services.IUserService.GetUserByIdAsync(System.Guid)
  name: GetUserByIdAsync(Guid)
  href: api/MyApp.Auth.Application.Contracts.Services.IUserService.html#MyApp_Auth_Application_Contracts_Services_IUserService_GetUserByIdAsync_System_Guid_
  commentId: M:MyApp.Auth.Application.Contracts.Services.IUserService.GetUserByIdAsync(System.Guid)
  fullName: MyApp.Auth.Application.Contracts.Services.IUserService.GetUserByIdAsync(System.Guid)
  nameWithType: IUserService.GetUserByIdAsync(Guid)
- uid: MyApp.Auth.Application.Contracts.Services.IUserService.GetUserByIdAsync*
  name: GetUserByIdAsync
  href: api/MyApp.Auth.Application.Contracts.Services.IUserService.html#MyApp_Auth_Application_Contracts_Services_IUserService_GetUserByIdAsync_
  commentId: Overload:MyApp.Auth.Application.Contracts.Services.IUserService.GetUserByIdAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.Services.IUserService.GetUserByIdAsync
  nameWithType: IUserService.GetUserByIdAsync
- uid: MyApp.Auth.Application.Contracts.Services.IUserService.GetUserRolesAsync(System.Guid)
  name: GetUserRolesAsync(Guid)
  href: api/MyApp.Auth.Application.Contracts.Services.IUserService.html#MyApp_Auth_Application_Contracts_Services_IUserService_GetUserRolesAsync_System_Guid_
  commentId: M:MyApp.Auth.Application.Contracts.Services.IUserService.GetUserRolesAsync(System.Guid)
  fullName: MyApp.Auth.Application.Contracts.Services.IUserService.GetUserRolesAsync(System.Guid)
  nameWithType: IUserService.GetUserRolesAsync(Guid)
- uid: MyApp.Auth.Application.Contracts.Services.IUserService.GetUserRolesAsync*
  name: GetUserRolesAsync
  href: api/MyApp.Auth.Application.Contracts.Services.IUserService.html#MyApp_Auth_Application_Contracts_Services_IUserService_GetUserRolesAsync_
  commentId: Overload:MyApp.Auth.Application.Contracts.Services.IUserService.GetUserRolesAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.Services.IUserService.GetUserRolesAsync
  nameWithType: IUserService.GetUserRolesAsync
- uid: MyApp.Auth.Application.Contracts.Services.IUserService.RemoveRoleAsync(System.Guid,System.String)
  name: RemoveRoleAsync(Guid, string)
  href: api/MyApp.Auth.Application.Contracts.Services.IUserService.html#MyApp_Auth_Application_Contracts_Services_IUserService_RemoveRoleAsync_System_Guid_System_String_
  commentId: M:MyApp.Auth.Application.Contracts.Services.IUserService.RemoveRoleAsync(System.Guid,System.String)
  name.vb: RemoveRoleAsync(Guid, String)
  fullName: MyApp.Auth.Application.Contracts.Services.IUserService.RemoveRoleAsync(System.Guid, string)
  fullName.vb: MyApp.Auth.Application.Contracts.Services.IUserService.RemoveRoleAsync(System.Guid, String)
  nameWithType: IUserService.RemoveRoleAsync(Guid, string)
  nameWithType.vb: IUserService.RemoveRoleAsync(Guid, String)
- uid: MyApp.Auth.Application.Contracts.Services.IUserService.RemoveRoleAsync*
  name: RemoveRoleAsync
  href: api/MyApp.Auth.Application.Contracts.Services.IUserService.html#MyApp_Auth_Application_Contracts_Services_IUserService_RemoveRoleAsync_
  commentId: Overload:MyApp.Auth.Application.Contracts.Services.IUserService.RemoveRoleAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.Services.IUserService.RemoveRoleAsync
  nameWithType: IUserService.RemoveRoleAsync
- uid: MyApp.Auth.Application.Contracts.Services.IUserService.UpdateUserAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto)
  name: UpdateUserAsync(Guid, UpdateUserDto)
  href: api/MyApp.Auth.Application.Contracts.Services.IUserService.html#MyApp_Auth_Application_Contracts_Services_IUserService_UpdateUserAsync_System_Guid_MyApp_Auth_Application_Contracts_DTOs_UpdateUserDto_
  commentId: M:MyApp.Auth.Application.Contracts.Services.IUserService.UpdateUserAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto)
  fullName: MyApp.Auth.Application.Contracts.Services.IUserService.UpdateUserAsync(System.Guid, MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto)
  nameWithType: IUserService.UpdateUserAsync(Guid, UpdateUserDto)
- uid: MyApp.Auth.Application.Contracts.Services.IUserService.UpdateUserAsync*
  name: UpdateUserAsync
  href: api/MyApp.Auth.Application.Contracts.Services.IUserService.html#MyApp_Auth_Application_Contracts_Services_IUserService_UpdateUserAsync_
  commentId: Overload:MyApp.Auth.Application.Contracts.Services.IUserService.UpdateUserAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Contracts.Services.IUserService.UpdateUserAsync
  nameWithType: IUserService.UpdateUserAsync
- uid: MyApp.Auth.Application.Mappings
  name: MyApp.Auth.Application.Mappings
  href: api/MyApp.Auth.Application.Mappings.html
  commentId: N:MyApp.Auth.Application.Mappings
  fullName: MyApp.Auth.Application.Mappings
  nameWithType: MyApp.Auth.Application.Mappings
- uid: MyApp.Auth.Application.Mappings.AuthMappingProfile
  name: AuthMappingProfile
  href: api/MyApp.Auth.Application.Mappings.AuthMappingProfile.html
  commentId: T:MyApp.Auth.Application.Mappings.AuthMappingProfile
  fullName: MyApp.Auth.Application.Mappings.AuthMappingProfile
  nameWithType: AuthMappingProfile
- uid: MyApp.Auth.Application.Mappings.AuthMappingProfile.#ctor
  name: AuthMappingProfile()
  href: api/MyApp.Auth.Application.Mappings.AuthMappingProfile.html#MyApp_Auth_Application_Mappings_AuthMappingProfile__ctor
  commentId: M:MyApp.Auth.Application.Mappings.AuthMappingProfile.#ctor
  name.vb: New()
  fullName: MyApp.Auth.Application.Mappings.AuthMappingProfile.AuthMappingProfile()
  fullName.vb: MyApp.Auth.Application.Mappings.AuthMappingProfile.New()
  nameWithType: AuthMappingProfile.AuthMappingProfile()
  nameWithType.vb: AuthMappingProfile.New()
- uid: MyApp.Auth.Application.Mappings.AuthMappingProfile.#ctor*
  name: AuthMappingProfile
  href: api/MyApp.Auth.Application.Mappings.AuthMappingProfile.html#MyApp_Auth_Application_Mappings_AuthMappingProfile__ctor_
  commentId: Overload:MyApp.Auth.Application.Mappings.AuthMappingProfile.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Auth.Application.Mappings.AuthMappingProfile.AuthMappingProfile
  fullName.vb: MyApp.Auth.Application.Mappings.AuthMappingProfile.New
  nameWithType: AuthMappingProfile.AuthMappingProfile
  nameWithType.vb: AuthMappingProfile.New
- uid: MyApp.Auth.Application.Services
  name: MyApp.Auth.Application.Services
  href: api/MyApp.Auth.Application.Services.html
  commentId: N:MyApp.Auth.Application.Services
  fullName: MyApp.Auth.Application.Services
  nameWithType: MyApp.Auth.Application.Services
- uid: MyApp.Auth.Application.Services.AuthService
  name: AuthService
  href: api/MyApp.Auth.Application.Services.AuthService.html
  commentId: T:MyApp.Auth.Application.Services.AuthService
  fullName: MyApp.Auth.Application.Services.AuthService
  nameWithType: AuthService
- uid: MyApp.Auth.Application.Services.AuthService.#ctor(Microsoft.AspNetCore.Identity.UserManager{MyApp.Auth.Domain.Entities.ApplicationUser},MyApp.Auth.Infrastructure.Services.IJwtTokenProvider,MyApp.Auth.Domain.Repositories.IRefreshTokenRepository,MyApp.Auth.Domain.Repositories.IUserRepository,Microsoft.Extensions.Logging.ILogger{MyApp.Auth.Application.Services.AuthService})
  name: AuthService(UserManager<ApplicationUser>, IJwtTokenProvider, IRefreshTokenRepository, IUserRepository, ILogger<AuthService>)
  href: api/MyApp.Auth.Application.Services.AuthService.html#MyApp_Auth_Application_Services_AuthService__ctor_Microsoft_AspNetCore_Identity_UserManager_MyApp_Auth_Domain_Entities_ApplicationUser__MyApp_Auth_Infrastructure_Services_IJwtTokenProvider_MyApp_Auth_Domain_Repositories_IRefreshTokenRepository_MyApp_Auth_Domain_Repositories_IUserRepository_Microsoft_Extensions_Logging_ILogger_MyApp_Auth_Application_Services_AuthService__
  commentId: M:MyApp.Auth.Application.Services.AuthService.#ctor(Microsoft.AspNetCore.Identity.UserManager{MyApp.Auth.Domain.Entities.ApplicationUser},MyApp.Auth.Infrastructure.Services.IJwtTokenProvider,MyApp.Auth.Domain.Repositories.IRefreshTokenRepository,MyApp.Auth.Domain.Repositories.IUserRepository,Microsoft.Extensions.Logging.ILogger{MyApp.Auth.Application.Services.AuthService})
  name.vb: New(UserManager(Of ApplicationUser), IJwtTokenProvider, IRefreshTokenRepository, IUserRepository, ILogger(Of AuthService))
  fullName: MyApp.Auth.Application.Services.AuthService.AuthService(Microsoft.AspNetCore.Identity.UserManager<MyApp.Auth.Domain.Entities.ApplicationUser>, MyApp.Auth.Infrastructure.Services.IJwtTokenProvider, MyApp.Auth.Domain.Repositories.IRefreshTokenRepository, MyApp.Auth.Domain.Repositories.IUserRepository, Microsoft.Extensions.Logging.ILogger<MyApp.Auth.Application.Services.AuthService>)
  fullName.vb: MyApp.Auth.Application.Services.AuthService.New(Microsoft.AspNetCore.Identity.UserManager(Of MyApp.Auth.Domain.Entities.ApplicationUser), MyApp.Auth.Infrastructure.Services.IJwtTokenProvider, MyApp.Auth.Domain.Repositories.IRefreshTokenRepository, MyApp.Auth.Domain.Repositories.IUserRepository, Microsoft.Extensions.Logging.ILogger(Of MyApp.Auth.Application.Services.AuthService))
  nameWithType: AuthService.AuthService(UserManager<ApplicationUser>, IJwtTokenProvider, IRefreshTokenRepository, IUserRepository, ILogger<AuthService>)
  nameWithType.vb: AuthService.New(UserManager(Of ApplicationUser), IJwtTokenProvider, IRefreshTokenRepository, IUserRepository, ILogger(Of AuthService))
- uid: MyApp.Auth.Application.Services.AuthService.#ctor*
  name: AuthService
  href: api/MyApp.Auth.Application.Services.AuthService.html#MyApp_Auth_Application_Services_AuthService__ctor_
  commentId: Overload:MyApp.Auth.Application.Services.AuthService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Auth.Application.Services.AuthService.AuthService
  fullName.vb: MyApp.Auth.Application.Services.AuthService.New
  nameWithType: AuthService.AuthService
  nameWithType.vb: AuthService.New
- uid: MyApp.Auth.Application.Services.AuthService.ExternalLoginAsync(MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto)
  name: ExternalLoginAsync(ExternalLoginDto)
  href: api/MyApp.Auth.Application.Services.AuthService.html#MyApp_Auth_Application_Services_AuthService_ExternalLoginAsync_MyApp_Auth_Application_Contracts_DTOs_ExternalLoginDto_
  commentId: M:MyApp.Auth.Application.Services.AuthService.ExternalLoginAsync(MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto)
  fullName: MyApp.Auth.Application.Services.AuthService.ExternalLoginAsync(MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto)
  nameWithType: AuthService.ExternalLoginAsync(ExternalLoginDto)
- uid: MyApp.Auth.Application.Services.AuthService.ExternalLoginAsync*
  name: ExternalLoginAsync
  href: api/MyApp.Auth.Application.Services.AuthService.html#MyApp_Auth_Application_Services_AuthService_ExternalLoginAsync_
  commentId: Overload:MyApp.Auth.Application.Services.AuthService.ExternalLoginAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Services.AuthService.ExternalLoginAsync
  nameWithType: AuthService.ExternalLoginAsync
- uid: MyApp.Auth.Application.Services.AuthService.LoginAsync(MyApp.Auth.Application.Contracts.DTOs.LoginDto)
  name: LoginAsync(LoginDto)
  href: api/MyApp.Auth.Application.Services.AuthService.html#MyApp_Auth_Application_Services_AuthService_LoginAsync_MyApp_Auth_Application_Contracts_DTOs_LoginDto_
  commentId: M:MyApp.Auth.Application.Services.AuthService.LoginAsync(MyApp.Auth.Application.Contracts.DTOs.LoginDto)
  fullName: MyApp.Auth.Application.Services.AuthService.LoginAsync(MyApp.Auth.Application.Contracts.DTOs.LoginDto)
  nameWithType: AuthService.LoginAsync(LoginDto)
- uid: MyApp.Auth.Application.Services.AuthService.LoginAsync*
  name: LoginAsync
  href: api/MyApp.Auth.Application.Services.AuthService.html#MyApp_Auth_Application_Services_AuthService_LoginAsync_
  commentId: Overload:MyApp.Auth.Application.Services.AuthService.LoginAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Services.AuthService.LoginAsync
  nameWithType: AuthService.LoginAsync
- uid: MyApp.Auth.Application.Services.AuthService.LogoutAsync(System.Guid)
  name: LogoutAsync(Guid)
  href: api/MyApp.Auth.Application.Services.AuthService.html#MyApp_Auth_Application_Services_AuthService_LogoutAsync_System_Guid_
  commentId: M:MyApp.Auth.Application.Services.AuthService.LogoutAsync(System.Guid)
  fullName: MyApp.Auth.Application.Services.AuthService.LogoutAsync(System.Guid)
  nameWithType: AuthService.LogoutAsync(Guid)
- uid: MyApp.Auth.Application.Services.AuthService.LogoutAsync*
  name: LogoutAsync
  href: api/MyApp.Auth.Application.Services.AuthService.html#MyApp_Auth_Application_Services_AuthService_LogoutAsync_
  commentId: Overload:MyApp.Auth.Application.Services.AuthService.LogoutAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Services.AuthService.LogoutAsync
  nameWithType: AuthService.LogoutAsync
- uid: MyApp.Auth.Application.Services.AuthService.RefreshTokenAsync(MyApp.Auth.Application.Contracts.DTOs.RefreshTokenDto)
  name: RefreshTokenAsync(RefreshTokenDto)
  href: api/MyApp.Auth.Application.Services.AuthService.html#MyApp_Auth_Application_Services_AuthService_RefreshTokenAsync_MyApp_Auth_Application_Contracts_DTOs_RefreshTokenDto_
  commentId: M:MyApp.Auth.Application.Services.AuthService.RefreshTokenAsync(MyApp.Auth.Application.Contracts.DTOs.RefreshTokenDto)
  fullName: MyApp.Auth.Application.Services.AuthService.RefreshTokenAsync(MyApp.Auth.Application.Contracts.DTOs.RefreshTokenDto)
  nameWithType: AuthService.RefreshTokenAsync(RefreshTokenDto)
- uid: MyApp.Auth.Application.Services.AuthService.RefreshTokenAsync*
  name: RefreshTokenAsync
  href: api/MyApp.Auth.Application.Services.AuthService.html#MyApp_Auth_Application_Services_AuthService_RefreshTokenAsync_
  commentId: Overload:MyApp.Auth.Application.Services.AuthService.RefreshTokenAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Services.AuthService.RefreshTokenAsync
  nameWithType: AuthService.RefreshTokenAsync
- uid: MyApp.Auth.Application.Services.AuthService.RegisterAsync(MyApp.Auth.Application.Contracts.DTOs.RegisterDto)
  name: RegisterAsync(RegisterDto)
  href: api/MyApp.Auth.Application.Services.AuthService.html#MyApp_Auth_Application_Services_AuthService_RegisterAsync_MyApp_Auth_Application_Contracts_DTOs_RegisterDto_
  commentId: M:MyApp.Auth.Application.Services.AuthService.RegisterAsync(MyApp.Auth.Application.Contracts.DTOs.RegisterDto)
  fullName: MyApp.Auth.Application.Services.AuthService.RegisterAsync(MyApp.Auth.Application.Contracts.DTOs.RegisterDto)
  nameWithType: AuthService.RegisterAsync(RegisterDto)
- uid: MyApp.Auth.Application.Services.AuthService.RegisterAsync*
  name: RegisterAsync
  href: api/MyApp.Auth.Application.Services.AuthService.html#MyApp_Auth_Application_Services_AuthService_RegisterAsync_
  commentId: Overload:MyApp.Auth.Application.Services.AuthService.RegisterAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Services.AuthService.RegisterAsync
  nameWithType: AuthService.RegisterAsync
- uid: MyApp.Auth.Application.Services.PermissionService
  name: PermissionService
  href: api/MyApp.Auth.Application.Services.PermissionService.html
  commentId: T:MyApp.Auth.Application.Services.PermissionService
  fullName: MyApp.Auth.Application.Services.PermissionService
  nameWithType: PermissionService
- uid: MyApp.Auth.Application.Services.PermissionService.#ctor(Microsoft.AspNetCore.Identity.UserManager{MyApp.Auth.Domain.Entities.ApplicationUser},MyApp.Auth.Domain.Repositories.IPermissionRepository,AutoMapper.IMapper,Microsoft.Extensions.Logging.ILogger{MyApp.Auth.Application.Services.PermissionService})
  name: PermissionService(UserManager<ApplicationUser>, IPermissionRepository, IMapper, ILogger<PermissionService>)
  href: api/MyApp.Auth.Application.Services.PermissionService.html#MyApp_Auth_Application_Services_PermissionService__ctor_Microsoft_AspNetCore_Identity_UserManager_MyApp_Auth_Domain_Entities_ApplicationUser__MyApp_Auth_Domain_Repositories_IPermissionRepository_AutoMapper_IMapper_Microsoft_Extensions_Logging_ILogger_MyApp_Auth_Application_Services_PermissionService__
  commentId: M:MyApp.Auth.Application.Services.PermissionService.#ctor(Microsoft.AspNetCore.Identity.UserManager{MyApp.Auth.Domain.Entities.ApplicationUser},MyApp.Auth.Domain.Repositories.IPermissionRepository,AutoMapper.IMapper,Microsoft.Extensions.Logging.ILogger{MyApp.Auth.Application.Services.PermissionService})
  name.vb: New(UserManager(Of ApplicationUser), IPermissionRepository, IMapper, ILogger(Of PermissionService))
  fullName: MyApp.Auth.Application.Services.PermissionService.PermissionService(Microsoft.AspNetCore.Identity.UserManager<MyApp.Auth.Domain.Entities.ApplicationUser>, MyApp.Auth.Domain.Repositories.IPermissionRepository, AutoMapper.IMapper, Microsoft.Extensions.Logging.ILogger<MyApp.Auth.Application.Services.PermissionService>)
  fullName.vb: MyApp.Auth.Application.Services.PermissionService.New(Microsoft.AspNetCore.Identity.UserManager(Of MyApp.Auth.Domain.Entities.ApplicationUser), MyApp.Auth.Domain.Repositories.IPermissionRepository, AutoMapper.IMapper, Microsoft.Extensions.Logging.ILogger(Of MyApp.Auth.Application.Services.PermissionService))
  nameWithType: PermissionService.PermissionService(UserManager<ApplicationUser>, IPermissionRepository, IMapper, ILogger<PermissionService>)
  nameWithType.vb: PermissionService.New(UserManager(Of ApplicationUser), IPermissionRepository, IMapper, ILogger(Of PermissionService))
- uid: MyApp.Auth.Application.Services.PermissionService.#ctor*
  name: PermissionService
  href: api/MyApp.Auth.Application.Services.PermissionService.html#MyApp_Auth_Application_Services_PermissionService__ctor_
  commentId: Overload:MyApp.Auth.Application.Services.PermissionService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Auth.Application.Services.PermissionService.PermissionService
  fullName.vb: MyApp.Auth.Application.Services.PermissionService.New
  nameWithType: PermissionService.PermissionService
  nameWithType.vb: PermissionService.New
- uid: MyApp.Auth.Application.Services.PermissionService.CreatePermissionAsync(MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto)
  name: CreatePermissionAsync(CreatePermissionDto)
  href: api/MyApp.Auth.Application.Services.PermissionService.html#MyApp_Auth_Application_Services_PermissionService_CreatePermissionAsync_MyApp_Auth_Application_Contracts_DTOs_CreatePermissionDto_
  commentId: M:MyApp.Auth.Application.Services.PermissionService.CreatePermissionAsync(MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto)
  fullName: MyApp.Auth.Application.Services.PermissionService.CreatePermissionAsync(MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto)
  nameWithType: PermissionService.CreatePermissionAsync(CreatePermissionDto)
- uid: MyApp.Auth.Application.Services.PermissionService.CreatePermissionAsync*
  name: CreatePermissionAsync
  href: api/MyApp.Auth.Application.Services.PermissionService.html#MyApp_Auth_Application_Services_PermissionService_CreatePermissionAsync_
  commentId: Overload:MyApp.Auth.Application.Services.PermissionService.CreatePermissionAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Services.PermissionService.CreatePermissionAsync
  nameWithType: PermissionService.CreatePermissionAsync
- uid: MyApp.Auth.Application.Services.PermissionService.DeletePermissionAsync(System.Guid)
  name: DeletePermissionAsync(Guid)
  href: api/MyApp.Auth.Application.Services.PermissionService.html#MyApp_Auth_Application_Services_PermissionService_DeletePermissionAsync_System_Guid_
  commentId: M:MyApp.Auth.Application.Services.PermissionService.DeletePermissionAsync(System.Guid)
  fullName: MyApp.Auth.Application.Services.PermissionService.DeletePermissionAsync(System.Guid)
  nameWithType: PermissionService.DeletePermissionAsync(Guid)
- uid: MyApp.Auth.Application.Services.PermissionService.DeletePermissionAsync*
  name: DeletePermissionAsync
  href: api/MyApp.Auth.Application.Services.PermissionService.html#MyApp_Auth_Application_Services_PermissionService_DeletePermissionAsync_
  commentId: Overload:MyApp.Auth.Application.Services.PermissionService.DeletePermissionAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Services.PermissionService.DeletePermissionAsync
  nameWithType: PermissionService.DeletePermissionAsync
- uid: MyApp.Auth.Application.Services.PermissionService.GetAllPermissionsAsync
  name: GetAllPermissionsAsync()
  href: api/MyApp.Auth.Application.Services.PermissionService.html#MyApp_Auth_Application_Services_PermissionService_GetAllPermissionsAsync
  commentId: M:MyApp.Auth.Application.Services.PermissionService.GetAllPermissionsAsync
  fullName: MyApp.Auth.Application.Services.PermissionService.GetAllPermissionsAsync()
  nameWithType: PermissionService.GetAllPermissionsAsync()
- uid: MyApp.Auth.Application.Services.PermissionService.GetAllPermissionsAsync*
  name: GetAllPermissionsAsync
  href: api/MyApp.Auth.Application.Services.PermissionService.html#MyApp_Auth_Application_Services_PermissionService_GetAllPermissionsAsync_
  commentId: Overload:MyApp.Auth.Application.Services.PermissionService.GetAllPermissionsAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Services.PermissionService.GetAllPermissionsAsync
  nameWithType: PermissionService.GetAllPermissionsAsync
- uid: MyApp.Auth.Application.Services.PermissionService.GetAllPermissionsPaginatedAsync(System.Int32,System.Int32)
  name: GetAllPermissionsPaginatedAsync(int, int)
  href: api/MyApp.Auth.Application.Services.PermissionService.html#MyApp_Auth_Application_Services_PermissionService_GetAllPermissionsPaginatedAsync_System_Int32_System_Int32_
  commentId: M:MyApp.Auth.Application.Services.PermissionService.GetAllPermissionsPaginatedAsync(System.Int32,System.Int32)
  name.vb: GetAllPermissionsPaginatedAsync(Integer, Integer)
  fullName: MyApp.Auth.Application.Services.PermissionService.GetAllPermissionsPaginatedAsync(int, int)
  fullName.vb: MyApp.Auth.Application.Services.PermissionService.GetAllPermissionsPaginatedAsync(Integer, Integer)
  nameWithType: PermissionService.GetAllPermissionsPaginatedAsync(int, int)
  nameWithType.vb: PermissionService.GetAllPermissionsPaginatedAsync(Integer, Integer)
- uid: MyApp.Auth.Application.Services.PermissionService.GetAllPermissionsPaginatedAsync*
  name: GetAllPermissionsPaginatedAsync
  href: api/MyApp.Auth.Application.Services.PermissionService.html#MyApp_Auth_Application_Services_PermissionService_GetAllPermissionsPaginatedAsync_
  commentId: Overload:MyApp.Auth.Application.Services.PermissionService.GetAllPermissionsPaginatedAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Services.PermissionService.GetAllPermissionsPaginatedAsync
  nameWithType: PermissionService.GetAllPermissionsPaginatedAsync
- uid: MyApp.Auth.Application.Services.PermissionService.GetPermissionByIdAsync(System.Guid)
  name: GetPermissionByIdAsync(Guid)
  href: api/MyApp.Auth.Application.Services.PermissionService.html#MyApp_Auth_Application_Services_PermissionService_GetPermissionByIdAsync_System_Guid_
  commentId: M:MyApp.Auth.Application.Services.PermissionService.GetPermissionByIdAsync(System.Guid)
  fullName: MyApp.Auth.Application.Services.PermissionService.GetPermissionByIdAsync(System.Guid)
  nameWithType: PermissionService.GetPermissionByIdAsync(Guid)
- uid: MyApp.Auth.Application.Services.PermissionService.GetPermissionByIdAsync*
  name: GetPermissionByIdAsync
  href: api/MyApp.Auth.Application.Services.PermissionService.html#MyApp_Auth_Application_Services_PermissionService_GetPermissionByIdAsync_
  commentId: Overload:MyApp.Auth.Application.Services.PermissionService.GetPermissionByIdAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Services.PermissionService.GetPermissionByIdAsync
  nameWithType: PermissionService.GetPermissionByIdAsync
- uid: MyApp.Auth.Application.Services.PermissionService.GetPermissionByModuleActionAsync(System.String,System.String)
  name: GetPermissionByModuleActionAsync(string, string)
  href: api/MyApp.Auth.Application.Services.PermissionService.html#MyApp_Auth_Application_Services_PermissionService_GetPermissionByModuleActionAsync_System_String_System_String_
  commentId: M:MyApp.Auth.Application.Services.PermissionService.GetPermissionByModuleActionAsync(System.String,System.String)
  name.vb: GetPermissionByModuleActionAsync(String, String)
  fullName: MyApp.Auth.Application.Services.PermissionService.GetPermissionByModuleActionAsync(string, string)
  fullName.vb: MyApp.Auth.Application.Services.PermissionService.GetPermissionByModuleActionAsync(String, String)
  nameWithType: PermissionService.GetPermissionByModuleActionAsync(string, string)
  nameWithType.vb: PermissionService.GetPermissionByModuleActionAsync(String, String)
- uid: MyApp.Auth.Application.Services.PermissionService.GetPermissionByModuleActionAsync*
  name: GetPermissionByModuleActionAsync
  href: api/MyApp.Auth.Application.Services.PermissionService.html#MyApp_Auth_Application_Services_PermissionService_GetPermissionByModuleActionAsync_
  commentId: Overload:MyApp.Auth.Application.Services.PermissionService.GetPermissionByModuleActionAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Services.PermissionService.GetPermissionByModuleActionAsync
  nameWithType: PermissionService.GetPermissionByModuleActionAsync
- uid: MyApp.Auth.Application.Services.PermissionService.HasPermissionAsync(System.Guid,System.String,System.String)
  name: HasPermissionAsync(Guid, string, string)
  href: api/MyApp.Auth.Application.Services.PermissionService.html#MyApp_Auth_Application_Services_PermissionService_HasPermissionAsync_System_Guid_System_String_System_String_
  commentId: M:MyApp.Auth.Application.Services.PermissionService.HasPermissionAsync(System.Guid,System.String,System.String)
  name.vb: HasPermissionAsync(Guid, String, String)
  fullName: MyApp.Auth.Application.Services.PermissionService.HasPermissionAsync(System.Guid, string, string)
  fullName.vb: MyApp.Auth.Application.Services.PermissionService.HasPermissionAsync(System.Guid, String, String)
  nameWithType: PermissionService.HasPermissionAsync(Guid, string, string)
  nameWithType.vb: PermissionService.HasPermissionAsync(Guid, String, String)
- uid: MyApp.Auth.Application.Services.PermissionService.HasPermissionAsync(System.String,System.String,System.String)
  name: HasPermissionAsync(string?, string, string)
  href: api/MyApp.Auth.Application.Services.PermissionService.html#MyApp_Auth_Application_Services_PermissionService_HasPermissionAsync_System_String_System_String_System_String_
  commentId: M:MyApp.Auth.Application.Services.PermissionService.HasPermissionAsync(System.String,System.String,System.String)
  name.vb: HasPermissionAsync(String, String, String)
  fullName: MyApp.Auth.Application.Services.PermissionService.HasPermissionAsync(string?, string, string)
  fullName.vb: MyApp.Auth.Application.Services.PermissionService.HasPermissionAsync(String, String, String)
  nameWithType: PermissionService.HasPermissionAsync(string?, string, string)
  nameWithType.vb: PermissionService.HasPermissionAsync(String, String, String)
- uid: MyApp.Auth.Application.Services.PermissionService.HasPermissionAsync*
  name: HasPermissionAsync
  href: api/MyApp.Auth.Application.Services.PermissionService.html#MyApp_Auth_Application_Services_PermissionService_HasPermissionAsync_
  commentId: Overload:MyApp.Auth.Application.Services.PermissionService.HasPermissionAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Services.PermissionService.HasPermissionAsync
  nameWithType: PermissionService.HasPermissionAsync
- uid: MyApp.Auth.Application.Services.PermissionService.UpdatePermissionAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto)
  name: UpdatePermissionAsync(Guid, UpdatePermissionDto)
  href: api/MyApp.Auth.Application.Services.PermissionService.html#MyApp_Auth_Application_Services_PermissionService_UpdatePermissionAsync_System_Guid_MyApp_Auth_Application_Contracts_DTOs_UpdatePermissionDto_
  commentId: M:MyApp.Auth.Application.Services.PermissionService.UpdatePermissionAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto)
  fullName: MyApp.Auth.Application.Services.PermissionService.UpdatePermissionAsync(System.Guid, MyApp.Auth.Application.Contracts.DTOs.UpdatePermissionDto)
  nameWithType: PermissionService.UpdatePermissionAsync(Guid, UpdatePermissionDto)
- uid: MyApp.Auth.Application.Services.PermissionService.UpdatePermissionAsync*
  name: UpdatePermissionAsync
  href: api/MyApp.Auth.Application.Services.PermissionService.html#MyApp_Auth_Application_Services_PermissionService_UpdatePermissionAsync_
  commentId: Overload:MyApp.Auth.Application.Services.PermissionService.UpdatePermissionAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Services.PermissionService.UpdatePermissionAsync
  nameWithType: PermissionService.UpdatePermissionAsync
- uid: MyApp.Auth.Application.Services.RoleService
  name: RoleService
  href: api/MyApp.Auth.Application.Services.RoleService.html
  commentId: T:MyApp.Auth.Application.Services.RoleService
  fullName: MyApp.Auth.Application.Services.RoleService
  nameWithType: RoleService
- uid: MyApp.Auth.Application.Services.RoleService.#ctor(Microsoft.AspNetCore.Identity.RoleManager{MyApp.Auth.Domain.Entities.ApplicationRole},Microsoft.AspNetCore.Identity.UserManager{MyApp.Auth.Domain.Entities.ApplicationUser},MyApp.Auth.Domain.Repositories.IRoleRepository,MyApp.Auth.Domain.Repositories.IUserRepository,AutoMapper.IMapper,Microsoft.Extensions.Logging.ILogger{MyApp.Auth.Application.Services.RoleService})
  name: RoleService(RoleManager<ApplicationRole>, UserManager<ApplicationUser>, IRoleRepository, IUserRepository, IMapper, ILogger<RoleService>)
  href: api/MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService__ctor_Microsoft_AspNetCore_Identity_RoleManager_MyApp_Auth_Domain_Entities_ApplicationRole__Microsoft_AspNetCore_Identity_UserManager_MyApp_Auth_Domain_Entities_ApplicationUser__MyApp_Auth_Domain_Repositories_IRoleRepository_MyApp_Auth_Domain_Repositories_IUserRepository_AutoMapper_IMapper_Microsoft_Extensions_Logging_ILogger_MyApp_Auth_Application_Services_RoleService__
  commentId: M:MyApp.Auth.Application.Services.RoleService.#ctor(Microsoft.AspNetCore.Identity.RoleManager{MyApp.Auth.Domain.Entities.ApplicationRole},Microsoft.AspNetCore.Identity.UserManager{MyApp.Auth.Domain.Entities.ApplicationUser},MyApp.Auth.Domain.Repositories.IRoleRepository,MyApp.Auth.Domain.Repositories.IUserRepository,AutoMapper.IMapper,Microsoft.Extensions.Logging.ILogger{MyApp.Auth.Application.Services.RoleService})
  name.vb: New(RoleManager(Of ApplicationRole), UserManager(Of ApplicationUser), IRoleRepository, IUserRepository, IMapper, ILogger(Of RoleService))
  fullName: MyApp.Auth.Application.Services.RoleService.RoleService(Microsoft.AspNetCore.Identity.RoleManager<MyApp.Auth.Domain.Entities.ApplicationRole>, Microsoft.AspNetCore.Identity.UserManager<MyApp.Auth.Domain.Entities.ApplicationUser>, MyApp.Auth.Domain.Repositories.IRoleRepository, MyApp.Auth.Domain.Repositories.IUserRepository, AutoMapper.IMapper, Microsoft.Extensions.Logging.ILogger<MyApp.Auth.Application.Services.RoleService>)
  fullName.vb: MyApp.Auth.Application.Services.RoleService.New(Microsoft.AspNetCore.Identity.RoleManager(Of MyApp.Auth.Domain.Entities.ApplicationRole), Microsoft.AspNetCore.Identity.UserManager(Of MyApp.Auth.Domain.Entities.ApplicationUser), MyApp.Auth.Domain.Repositories.IRoleRepository, MyApp.Auth.Domain.Repositories.IUserRepository, AutoMapper.IMapper, Microsoft.Extensions.Logging.ILogger(Of MyApp.Auth.Application.Services.RoleService))
  nameWithType: RoleService.RoleService(RoleManager<ApplicationRole>, UserManager<ApplicationUser>, IRoleRepository, IUserRepository, IMapper, ILogger<RoleService>)
  nameWithType.vb: RoleService.New(RoleManager(Of ApplicationRole), UserManager(Of ApplicationUser), IRoleRepository, IUserRepository, IMapper, ILogger(Of RoleService))
- uid: MyApp.Auth.Application.Services.RoleService.#ctor*
  name: RoleService
  href: api/MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService__ctor_
  commentId: Overload:MyApp.Auth.Application.Services.RoleService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Auth.Application.Services.RoleService.RoleService
  fullName.vb: MyApp.Auth.Application.Services.RoleService.New
  nameWithType: RoleService.RoleService
  nameWithType.vb: RoleService.New
- uid: MyApp.Auth.Application.Services.RoleService.AddPermissionToRole(MyApp.Auth.Application.Contracts.CreateRolePermissionDto)
  name: AddPermissionToRole(CreateRolePermissionDto)
  href: api/MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService_AddPermissionToRole_MyApp_Auth_Application_Contracts_CreateRolePermissionDto_
  commentId: M:MyApp.Auth.Application.Services.RoleService.AddPermissionToRole(MyApp.Auth.Application.Contracts.CreateRolePermissionDto)
  fullName: MyApp.Auth.Application.Services.RoleService.AddPermissionToRole(MyApp.Auth.Application.Contracts.CreateRolePermissionDto)
  nameWithType: RoleService.AddPermissionToRole(CreateRolePermissionDto)
- uid: MyApp.Auth.Application.Services.RoleService.AddPermissionToRole*
  name: AddPermissionToRole
  href: api/MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService_AddPermissionToRole_
  commentId: Overload:MyApp.Auth.Application.Services.RoleService.AddPermissionToRole
  isSpec: "True"
  fullName: MyApp.Auth.Application.Services.RoleService.AddPermissionToRole
  nameWithType: RoleService.AddPermissionToRole
- uid: MyApp.Auth.Application.Services.RoleService.CreateRoleAsync(MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
  name: CreateRoleAsync(CreateRoleDto)
  href: api/MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService_CreateRoleAsync_MyApp_Auth_Application_Contracts_DTOs_CreateRoleDto_
  commentId: M:MyApp.Auth.Application.Services.RoleService.CreateRoleAsync(MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
  fullName: MyApp.Auth.Application.Services.RoleService.CreateRoleAsync(MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
  nameWithType: RoleService.CreateRoleAsync(CreateRoleDto)
- uid: MyApp.Auth.Application.Services.RoleService.CreateRoleAsync*
  name: CreateRoleAsync
  href: api/MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService_CreateRoleAsync_
  commentId: Overload:MyApp.Auth.Application.Services.RoleService.CreateRoleAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Services.RoleService.CreateRoleAsync
  nameWithType: RoleService.CreateRoleAsync
- uid: MyApp.Auth.Application.Services.RoleService.DeleteRoleAsync(System.Guid)
  name: DeleteRoleAsync(Guid)
  href: api/MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService_DeleteRoleAsync_System_Guid_
  commentId: M:MyApp.Auth.Application.Services.RoleService.DeleteRoleAsync(System.Guid)
  fullName: MyApp.Auth.Application.Services.RoleService.DeleteRoleAsync(System.Guid)
  nameWithType: RoleService.DeleteRoleAsync(Guid)
- uid: MyApp.Auth.Application.Services.RoleService.DeleteRoleAsync*
  name: DeleteRoleAsync
  href: api/MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService_DeleteRoleAsync_
  commentId: Overload:MyApp.Auth.Application.Services.RoleService.DeleteRoleAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Services.RoleService.DeleteRoleAsync
  nameWithType: RoleService.DeleteRoleAsync
- uid: MyApp.Auth.Application.Services.RoleService.GetAllRolesAsync
  name: GetAllRolesAsync()
  href: api/MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService_GetAllRolesAsync
  commentId: M:MyApp.Auth.Application.Services.RoleService.GetAllRolesAsync
  fullName: MyApp.Auth.Application.Services.RoleService.GetAllRolesAsync()
  nameWithType: RoleService.GetAllRolesAsync()
- uid: MyApp.Auth.Application.Services.RoleService.GetAllRolesAsync*
  name: GetAllRolesAsync
  href: api/MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService_GetAllRolesAsync_
  commentId: Overload:MyApp.Auth.Application.Services.RoleService.GetAllRolesAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Services.RoleService.GetAllRolesAsync
  nameWithType: RoleService.GetAllRolesAsync
- uid: MyApp.Auth.Application.Services.RoleService.GetAllRolesPaginatedAsync(System.Int32,System.Int32)
  name: GetAllRolesPaginatedAsync(int, int)
  href: api/MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService_GetAllRolesPaginatedAsync_System_Int32_System_Int32_
  commentId: M:MyApp.Auth.Application.Services.RoleService.GetAllRolesPaginatedAsync(System.Int32,System.Int32)
  name.vb: GetAllRolesPaginatedAsync(Integer, Integer)
  fullName: MyApp.Auth.Application.Services.RoleService.GetAllRolesPaginatedAsync(int, int)
  fullName.vb: MyApp.Auth.Application.Services.RoleService.GetAllRolesPaginatedAsync(Integer, Integer)
  nameWithType: RoleService.GetAllRolesPaginatedAsync(int, int)
  nameWithType.vb: RoleService.GetAllRolesPaginatedAsync(Integer, Integer)
- uid: MyApp.Auth.Application.Services.RoleService.GetAllRolesPaginatedAsync*
  name: GetAllRolesPaginatedAsync
  href: api/MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService_GetAllRolesPaginatedAsync_
  commentId: Overload:MyApp.Auth.Application.Services.RoleService.GetAllRolesPaginatedAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Services.RoleService.GetAllRolesPaginatedAsync
  nameWithType: RoleService.GetAllRolesPaginatedAsync
- uid: MyApp.Auth.Application.Services.RoleService.GetPermissionsForRoleAsync(System.Guid)
  name: GetPermissionsForRoleAsync(Guid)
  href: api/MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService_GetPermissionsForRoleAsync_System_Guid_
  commentId: M:MyApp.Auth.Application.Services.RoleService.GetPermissionsForRoleAsync(System.Guid)
  fullName: MyApp.Auth.Application.Services.RoleService.GetPermissionsForRoleAsync(System.Guid)
  nameWithType: RoleService.GetPermissionsForRoleAsync(Guid)
- uid: MyApp.Auth.Application.Services.RoleService.GetPermissionsForRoleAsync*
  name: GetPermissionsForRoleAsync
  href: api/MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService_GetPermissionsForRoleAsync_
  commentId: Overload:MyApp.Auth.Application.Services.RoleService.GetPermissionsForRoleAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Services.RoleService.GetPermissionsForRoleAsync
  nameWithType: RoleService.GetPermissionsForRoleAsync
- uid: MyApp.Auth.Application.Services.RoleService.GetRoleByIdAsync(System.Guid)
  name: GetRoleByIdAsync(Guid)
  href: api/MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService_GetRoleByIdAsync_System_Guid_
  commentId: M:MyApp.Auth.Application.Services.RoleService.GetRoleByIdAsync(System.Guid)
  fullName: MyApp.Auth.Application.Services.RoleService.GetRoleByIdAsync(System.Guid)
  nameWithType: RoleService.GetRoleByIdAsync(Guid)
- uid: MyApp.Auth.Application.Services.RoleService.GetRoleByIdAsync*
  name: GetRoleByIdAsync
  href: api/MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService_GetRoleByIdAsync_
  commentId: Overload:MyApp.Auth.Application.Services.RoleService.GetRoleByIdAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Services.RoleService.GetRoleByIdAsync
  nameWithType: RoleService.GetRoleByIdAsync
- uid: MyApp.Auth.Application.Services.RoleService.GetRoleByNameAsync(System.String)
  name: GetRoleByNameAsync(string)
  href: api/MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService_GetRoleByNameAsync_System_String_
  commentId: M:MyApp.Auth.Application.Services.RoleService.GetRoleByNameAsync(System.String)
  name.vb: GetRoleByNameAsync(String)
  fullName: MyApp.Auth.Application.Services.RoleService.GetRoleByNameAsync(string)
  fullName.vb: MyApp.Auth.Application.Services.RoleService.GetRoleByNameAsync(String)
  nameWithType: RoleService.GetRoleByNameAsync(string)
  nameWithType.vb: RoleService.GetRoleByNameAsync(String)
- uid: MyApp.Auth.Application.Services.RoleService.GetRoleByNameAsync*
  name: GetRoleByNameAsync
  href: api/MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService_GetRoleByNameAsync_
  commentId: Overload:MyApp.Auth.Application.Services.RoleService.GetRoleByNameAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Services.RoleService.GetRoleByNameAsync
  nameWithType: RoleService.GetRoleByNameAsync
- uid: MyApp.Auth.Application.Services.RoleService.GetUsersInRoleAsync(System.String)
  name: GetUsersInRoleAsync(string)
  href: api/MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService_GetUsersInRoleAsync_System_String_
  commentId: M:MyApp.Auth.Application.Services.RoleService.GetUsersInRoleAsync(System.String)
  name.vb: GetUsersInRoleAsync(String)
  fullName: MyApp.Auth.Application.Services.RoleService.GetUsersInRoleAsync(string)
  fullName.vb: MyApp.Auth.Application.Services.RoleService.GetUsersInRoleAsync(String)
  nameWithType: RoleService.GetUsersInRoleAsync(string)
  nameWithType.vb: RoleService.GetUsersInRoleAsync(String)
- uid: MyApp.Auth.Application.Services.RoleService.GetUsersInRoleAsync*
  name: GetUsersInRoleAsync
  href: api/MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService_GetUsersInRoleAsync_
  commentId: Overload:MyApp.Auth.Application.Services.RoleService.GetUsersInRoleAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Services.RoleService.GetUsersInRoleAsync
  nameWithType: RoleService.GetUsersInRoleAsync
- uid: MyApp.Auth.Application.Services.RoleService.HasPermissionAsync(System.Guid,System.Guid)
  name: HasPermissionAsync(Guid, Guid)
  href: api/MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService_HasPermissionAsync_System_Guid_System_Guid_
  commentId: M:MyApp.Auth.Application.Services.RoleService.HasPermissionAsync(System.Guid,System.Guid)
  fullName: MyApp.Auth.Application.Services.RoleService.HasPermissionAsync(System.Guid, System.Guid)
  nameWithType: RoleService.HasPermissionAsync(Guid, Guid)
- uid: MyApp.Auth.Application.Services.RoleService.HasPermissionAsync*
  name: HasPermissionAsync
  href: api/MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService_HasPermissionAsync_
  commentId: Overload:MyApp.Auth.Application.Services.RoleService.HasPermissionAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Services.RoleService.HasPermissionAsync
  nameWithType: RoleService.HasPermissionAsync
- uid: MyApp.Auth.Application.Services.RoleService.RemovePermissionFromRoleAsync(MyApp.Auth.Application.Contracts.DeleteRolePermissionDto)
  name: RemovePermissionFromRoleAsync(DeleteRolePermissionDto)
  href: api/MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService_RemovePermissionFromRoleAsync_MyApp_Auth_Application_Contracts_DeleteRolePermissionDto_
  commentId: M:MyApp.Auth.Application.Services.RoleService.RemovePermissionFromRoleAsync(MyApp.Auth.Application.Contracts.DeleteRolePermissionDto)
  fullName: MyApp.Auth.Application.Services.RoleService.RemovePermissionFromRoleAsync(MyApp.Auth.Application.Contracts.DeleteRolePermissionDto)
  nameWithType: RoleService.RemovePermissionFromRoleAsync(DeleteRolePermissionDto)
- uid: MyApp.Auth.Application.Services.RoleService.RemovePermissionFromRoleAsync*
  name: RemovePermissionFromRoleAsync
  href: api/MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService_RemovePermissionFromRoleAsync_
  commentId: Overload:MyApp.Auth.Application.Services.RoleService.RemovePermissionFromRoleAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Services.RoleService.RemovePermissionFromRoleAsync
  nameWithType: RoleService.RemovePermissionFromRoleAsync
- uid: MyApp.Auth.Application.Services.RoleService.UpdateRoleAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
  name: UpdateRoleAsync(Guid, CreateRoleDto)
  href: api/MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService_UpdateRoleAsync_System_Guid_MyApp_Auth_Application_Contracts_DTOs_CreateRoleDto_
  commentId: M:MyApp.Auth.Application.Services.RoleService.UpdateRoleAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
  fullName: MyApp.Auth.Application.Services.RoleService.UpdateRoleAsync(System.Guid, MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto)
  nameWithType: RoleService.UpdateRoleAsync(Guid, CreateRoleDto)
- uid: MyApp.Auth.Application.Services.RoleService.UpdateRoleAsync*
  name: UpdateRoleAsync
  href: api/MyApp.Auth.Application.Services.RoleService.html#MyApp_Auth_Application_Services_RoleService_UpdateRoleAsync_
  commentId: Overload:MyApp.Auth.Application.Services.RoleService.UpdateRoleAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Services.RoleService.UpdateRoleAsync
  nameWithType: RoleService.UpdateRoleAsync
- uid: MyApp.Auth.Application.Services.UserService
  name: UserService
  href: api/MyApp.Auth.Application.Services.UserService.html
  commentId: T:MyApp.Auth.Application.Services.UserService
  fullName: MyApp.Auth.Application.Services.UserService
  nameWithType: UserService
- uid: MyApp.Auth.Application.Services.UserService.#ctor(Microsoft.AspNetCore.Identity.UserManager{MyApp.Auth.Domain.Entities.ApplicationUser},Microsoft.AspNetCore.Identity.RoleManager{MyApp.Auth.Domain.Entities.ApplicationRole},MyApp.Auth.Domain.Repositories.IUserRepository,AutoMapper.IMapper,Microsoft.Extensions.Logging.ILogger{MyApp.Auth.Application.Services.UserService},Microsoft.AspNetCore.Http.IHttpContextAccessor,MyApp.Auth.Domain.Repositories.IPermissionRepository)
  name: UserService(UserManager<ApplicationUser>, RoleManager<ApplicationRole>, IUserRepository, IMapper, ILogger<UserService>, IHttpContextAccessor, IPermissionRepository)
  href: api/MyApp.Auth.Application.Services.UserService.html#MyApp_Auth_Application_Services_UserService__ctor_Microsoft_AspNetCore_Identity_UserManager_MyApp_Auth_Domain_Entities_ApplicationUser__Microsoft_AspNetCore_Identity_RoleManager_MyApp_Auth_Domain_Entities_ApplicationRole__MyApp_Auth_Domain_Repositories_IUserRepository_AutoMapper_IMapper_Microsoft_Extensions_Logging_ILogger_MyApp_Auth_Application_Services_UserService__Microsoft_AspNetCore_Http_IHttpContextAccessor_MyApp_Auth_Domain_Repositories_IPermissionRepository_
  commentId: M:MyApp.Auth.Application.Services.UserService.#ctor(Microsoft.AspNetCore.Identity.UserManager{MyApp.Auth.Domain.Entities.ApplicationUser},Microsoft.AspNetCore.Identity.RoleManager{MyApp.Auth.Domain.Entities.ApplicationRole},MyApp.Auth.Domain.Repositories.IUserRepository,AutoMapper.IMapper,Microsoft.Extensions.Logging.ILogger{MyApp.Auth.Application.Services.UserService},Microsoft.AspNetCore.Http.IHttpContextAccessor,MyApp.Auth.Domain.Repositories.IPermissionRepository)
  name.vb: New(UserManager(Of ApplicationUser), RoleManager(Of ApplicationRole), IUserRepository, IMapper, ILogger(Of UserService), IHttpContextAccessor, IPermissionRepository)
  fullName: MyApp.Auth.Application.Services.UserService.UserService(Microsoft.AspNetCore.Identity.UserManager<MyApp.Auth.Domain.Entities.ApplicationUser>, Microsoft.AspNetCore.Identity.RoleManager<MyApp.Auth.Domain.Entities.ApplicationRole>, MyApp.Auth.Domain.Repositories.IUserRepository, AutoMapper.IMapper, Microsoft.Extensions.Logging.ILogger<MyApp.Auth.Application.Services.UserService>, Microsoft.AspNetCore.Http.IHttpContextAccessor, MyApp.Auth.Domain.Repositories.IPermissionRepository)
  fullName.vb: MyApp.Auth.Application.Services.UserService.New(Microsoft.AspNetCore.Identity.UserManager(Of MyApp.Auth.Domain.Entities.ApplicationUser), Microsoft.AspNetCore.Identity.RoleManager(Of MyApp.Auth.Domain.Entities.ApplicationRole), MyApp.Auth.Domain.Repositories.IUserRepository, AutoMapper.IMapper, Microsoft.Extensions.Logging.ILogger(Of MyApp.Auth.Application.Services.UserService), Microsoft.AspNetCore.Http.IHttpContextAccessor, MyApp.Auth.Domain.Repositories.IPermissionRepository)
  nameWithType: UserService.UserService(UserManager<ApplicationUser>, RoleManager<ApplicationRole>, IUserRepository, IMapper, ILogger<UserService>, IHttpContextAccessor, IPermissionRepository)
  nameWithType.vb: UserService.New(UserManager(Of ApplicationUser), RoleManager(Of ApplicationRole), IUserRepository, IMapper, ILogger(Of UserService), IHttpContextAccessor, IPermissionRepository)
- uid: MyApp.Auth.Application.Services.UserService.#ctor*
  name: UserService
  href: api/MyApp.Auth.Application.Services.UserService.html#MyApp_Auth_Application_Services_UserService__ctor_
  commentId: Overload:MyApp.Auth.Application.Services.UserService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Auth.Application.Services.UserService.UserService
  fullName.vb: MyApp.Auth.Application.Services.UserService.New
  nameWithType: UserService.UserService
  nameWithType.vb: UserService.New
- uid: MyApp.Auth.Application.Services.UserService.AssignRoleAsync(System.Guid,System.String)
  name: AssignRoleAsync(Guid, string)
  href: api/MyApp.Auth.Application.Services.UserService.html#MyApp_Auth_Application_Services_UserService_AssignRoleAsync_System_Guid_System_String_
  commentId: M:MyApp.Auth.Application.Services.UserService.AssignRoleAsync(System.Guid,System.String)
  name.vb: AssignRoleAsync(Guid, String)
  fullName: MyApp.Auth.Application.Services.UserService.AssignRoleAsync(System.Guid, string)
  fullName.vb: MyApp.Auth.Application.Services.UserService.AssignRoleAsync(System.Guid, String)
  nameWithType: UserService.AssignRoleAsync(Guid, string)
  nameWithType.vb: UserService.AssignRoleAsync(Guid, String)
- uid: MyApp.Auth.Application.Services.UserService.AssignRoleAsync*
  name: AssignRoleAsync
  href: api/MyApp.Auth.Application.Services.UserService.html#MyApp_Auth_Application_Services_UserService_AssignRoleAsync_
  commentId: Overload:MyApp.Auth.Application.Services.UserService.AssignRoleAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Services.UserService.AssignRoleAsync
  nameWithType: UserService.AssignRoleAsync
- uid: MyApp.Auth.Application.Services.UserService.ChangePasswordAsync(System.Guid,System.String,System.String)
  name: ChangePasswordAsync(Guid, string, string)
  href: api/MyApp.Auth.Application.Services.UserService.html#MyApp_Auth_Application_Services_UserService_ChangePasswordAsync_System_Guid_System_String_System_String_
  commentId: M:MyApp.Auth.Application.Services.UserService.ChangePasswordAsync(System.Guid,System.String,System.String)
  name.vb: ChangePasswordAsync(Guid, String, String)
  fullName: MyApp.Auth.Application.Services.UserService.ChangePasswordAsync(System.Guid, string, string)
  fullName.vb: MyApp.Auth.Application.Services.UserService.ChangePasswordAsync(System.Guid, String, String)
  nameWithType: UserService.ChangePasswordAsync(Guid, string, string)
  nameWithType.vb: UserService.ChangePasswordAsync(Guid, String, String)
- uid: MyApp.Auth.Application.Services.UserService.ChangePasswordAsync*
  name: ChangePasswordAsync
  href: api/MyApp.Auth.Application.Services.UserService.html#MyApp_Auth_Application_Services_UserService_ChangePasswordAsync_
  commentId: Overload:MyApp.Auth.Application.Services.UserService.ChangePasswordAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Services.UserService.ChangePasswordAsync
  nameWithType: UserService.ChangePasswordAsync
- uid: MyApp.Auth.Application.Services.UserService.DeleteUserAsync(System.Guid)
  name: DeleteUserAsync(Guid)
  href: api/MyApp.Auth.Application.Services.UserService.html#MyApp_Auth_Application_Services_UserService_DeleteUserAsync_System_Guid_
  commentId: M:MyApp.Auth.Application.Services.UserService.DeleteUserAsync(System.Guid)
  fullName: MyApp.Auth.Application.Services.UserService.DeleteUserAsync(System.Guid)
  nameWithType: UserService.DeleteUserAsync(Guid)
- uid: MyApp.Auth.Application.Services.UserService.DeleteUserAsync*
  name: DeleteUserAsync
  href: api/MyApp.Auth.Application.Services.UserService.html#MyApp_Auth_Application_Services_UserService_DeleteUserAsync_
  commentId: Overload:MyApp.Auth.Application.Services.UserService.DeleteUserAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Services.UserService.DeleteUserAsync
  nameWithType: UserService.DeleteUserAsync
- uid: MyApp.Auth.Application.Services.UserService.GetAllUsersAsync
  name: GetAllUsersAsync()
  href: api/MyApp.Auth.Application.Services.UserService.html#MyApp_Auth_Application_Services_UserService_GetAllUsersAsync
  commentId: M:MyApp.Auth.Application.Services.UserService.GetAllUsersAsync
  fullName: MyApp.Auth.Application.Services.UserService.GetAllUsersAsync()
  nameWithType: UserService.GetAllUsersAsync()
- uid: MyApp.Auth.Application.Services.UserService.GetAllUsersAsync*
  name: GetAllUsersAsync
  href: api/MyApp.Auth.Application.Services.UserService.html#MyApp_Auth_Application_Services_UserService_GetAllUsersAsync_
  commentId: Overload:MyApp.Auth.Application.Services.UserService.GetAllUsersAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Services.UserService.GetAllUsersAsync
  nameWithType: UserService.GetAllUsersAsync
- uid: MyApp.Auth.Application.Services.UserService.GetAllUsersPaginatedAsync(System.Int32,System.Int32)
  name: GetAllUsersPaginatedAsync(int, int)
  href: api/MyApp.Auth.Application.Services.UserService.html#MyApp_Auth_Application_Services_UserService_GetAllUsersPaginatedAsync_System_Int32_System_Int32_
  commentId: M:MyApp.Auth.Application.Services.UserService.GetAllUsersPaginatedAsync(System.Int32,System.Int32)
  name.vb: GetAllUsersPaginatedAsync(Integer, Integer)
  fullName: MyApp.Auth.Application.Services.UserService.GetAllUsersPaginatedAsync(int, int)
  fullName.vb: MyApp.Auth.Application.Services.UserService.GetAllUsersPaginatedAsync(Integer, Integer)
  nameWithType: UserService.GetAllUsersPaginatedAsync(int, int)
  nameWithType.vb: UserService.GetAllUsersPaginatedAsync(Integer, Integer)
- uid: MyApp.Auth.Application.Services.UserService.GetAllUsersPaginatedAsync*
  name: GetAllUsersPaginatedAsync
  href: api/MyApp.Auth.Application.Services.UserService.html#MyApp_Auth_Application_Services_UserService_GetAllUsersPaginatedAsync_
  commentId: Overload:MyApp.Auth.Application.Services.UserService.GetAllUsersPaginatedAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Services.UserService.GetAllUsersPaginatedAsync
  nameWithType: UserService.GetAllUsersPaginatedAsync
- uid: MyApp.Auth.Application.Services.UserService.GetCurrentUserAsync
  name: GetCurrentUserAsync()
  href: api/MyApp.Auth.Application.Services.UserService.html#MyApp_Auth_Application_Services_UserService_GetCurrentUserAsync
  commentId: M:MyApp.Auth.Application.Services.UserService.GetCurrentUserAsync
  fullName: MyApp.Auth.Application.Services.UserService.GetCurrentUserAsync()
  nameWithType: UserService.GetCurrentUserAsync()
- uid: MyApp.Auth.Application.Services.UserService.GetCurrentUserAsync*
  name: GetCurrentUserAsync
  href: api/MyApp.Auth.Application.Services.UserService.html#MyApp_Auth_Application_Services_UserService_GetCurrentUserAsync_
  commentId: Overload:MyApp.Auth.Application.Services.UserService.GetCurrentUserAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Services.UserService.GetCurrentUserAsync
  nameWithType: UserService.GetCurrentUserAsync
- uid: MyApp.Auth.Application.Services.UserService.GetUserByEmailAsync(System.String)
  name: GetUserByEmailAsync(string)
  href: api/MyApp.Auth.Application.Services.UserService.html#MyApp_Auth_Application_Services_UserService_GetUserByEmailAsync_System_String_
  commentId: M:MyApp.Auth.Application.Services.UserService.GetUserByEmailAsync(System.String)
  name.vb: GetUserByEmailAsync(String)
  fullName: MyApp.Auth.Application.Services.UserService.GetUserByEmailAsync(string)
  fullName.vb: MyApp.Auth.Application.Services.UserService.GetUserByEmailAsync(String)
  nameWithType: UserService.GetUserByEmailAsync(string)
  nameWithType.vb: UserService.GetUserByEmailAsync(String)
- uid: MyApp.Auth.Application.Services.UserService.GetUserByEmailAsync*
  name: GetUserByEmailAsync
  href: api/MyApp.Auth.Application.Services.UserService.html#MyApp_Auth_Application_Services_UserService_GetUserByEmailAsync_
  commentId: Overload:MyApp.Auth.Application.Services.UserService.GetUserByEmailAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Services.UserService.GetUserByEmailAsync
  nameWithType: UserService.GetUserByEmailAsync
- uid: MyApp.Auth.Application.Services.UserService.GetUserByIdAsync(System.Guid)
  name: GetUserByIdAsync(Guid)
  href: api/MyApp.Auth.Application.Services.UserService.html#MyApp_Auth_Application_Services_UserService_GetUserByIdAsync_System_Guid_
  commentId: M:MyApp.Auth.Application.Services.UserService.GetUserByIdAsync(System.Guid)
  fullName: MyApp.Auth.Application.Services.UserService.GetUserByIdAsync(System.Guid)
  nameWithType: UserService.GetUserByIdAsync(Guid)
- uid: MyApp.Auth.Application.Services.UserService.GetUserByIdAsync*
  name: GetUserByIdAsync
  href: api/MyApp.Auth.Application.Services.UserService.html#MyApp_Auth_Application_Services_UserService_GetUserByIdAsync_
  commentId: Overload:MyApp.Auth.Application.Services.UserService.GetUserByIdAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Services.UserService.GetUserByIdAsync
  nameWithType: UserService.GetUserByIdAsync
- uid: MyApp.Auth.Application.Services.UserService.GetUserRolesAsync(System.Guid)
  name: GetUserRolesAsync(Guid)
  href: api/MyApp.Auth.Application.Services.UserService.html#MyApp_Auth_Application_Services_UserService_GetUserRolesAsync_System_Guid_
  commentId: M:MyApp.Auth.Application.Services.UserService.GetUserRolesAsync(System.Guid)
  fullName: MyApp.Auth.Application.Services.UserService.GetUserRolesAsync(System.Guid)
  nameWithType: UserService.GetUserRolesAsync(Guid)
- uid: MyApp.Auth.Application.Services.UserService.GetUserRolesAsync*
  name: GetUserRolesAsync
  href: api/MyApp.Auth.Application.Services.UserService.html#MyApp_Auth_Application_Services_UserService_GetUserRolesAsync_
  commentId: Overload:MyApp.Auth.Application.Services.UserService.GetUserRolesAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Services.UserService.GetUserRolesAsync
  nameWithType: UserService.GetUserRolesAsync
- uid: MyApp.Auth.Application.Services.UserService.RemoveRoleAsync(System.Guid,System.String)
  name: RemoveRoleAsync(Guid, string)
  href: api/MyApp.Auth.Application.Services.UserService.html#MyApp_Auth_Application_Services_UserService_RemoveRoleAsync_System_Guid_System_String_
  commentId: M:MyApp.Auth.Application.Services.UserService.RemoveRoleAsync(System.Guid,System.String)
  name.vb: RemoveRoleAsync(Guid, String)
  fullName: MyApp.Auth.Application.Services.UserService.RemoveRoleAsync(System.Guid, string)
  fullName.vb: MyApp.Auth.Application.Services.UserService.RemoveRoleAsync(System.Guid, String)
  nameWithType: UserService.RemoveRoleAsync(Guid, string)
  nameWithType.vb: UserService.RemoveRoleAsync(Guid, String)
- uid: MyApp.Auth.Application.Services.UserService.RemoveRoleAsync*
  name: RemoveRoleAsync
  href: api/MyApp.Auth.Application.Services.UserService.html#MyApp_Auth_Application_Services_UserService_RemoveRoleAsync_
  commentId: Overload:MyApp.Auth.Application.Services.UserService.RemoveRoleAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Services.UserService.RemoveRoleAsync
  nameWithType: UserService.RemoveRoleAsync
- uid: MyApp.Auth.Application.Services.UserService.UpdateUserAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto)
  name: UpdateUserAsync(Guid, UpdateUserDto)
  href: api/MyApp.Auth.Application.Services.UserService.html#MyApp_Auth_Application_Services_UserService_UpdateUserAsync_System_Guid_MyApp_Auth_Application_Contracts_DTOs_UpdateUserDto_
  commentId: M:MyApp.Auth.Application.Services.UserService.UpdateUserAsync(System.Guid,MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto)
  fullName: MyApp.Auth.Application.Services.UserService.UpdateUserAsync(System.Guid, MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto)
  nameWithType: UserService.UpdateUserAsync(Guid, UpdateUserDto)
- uid: MyApp.Auth.Application.Services.UserService.UpdateUserAsync*
  name: UpdateUserAsync
  href: api/MyApp.Auth.Application.Services.UserService.html#MyApp_Auth_Application_Services_UserService_UpdateUserAsync_
  commentId: Overload:MyApp.Auth.Application.Services.UserService.UpdateUserAsync
  isSpec: "True"
  fullName: MyApp.Auth.Application.Services.UserService.UpdateUserAsync
  nameWithType: UserService.UpdateUserAsync
- uid: MyApp.Auth.Application.Tests.Builders
  name: MyApp.Auth.Application.Tests.Builders
  href: api/MyApp.Auth.Application.Tests.Builders.html
  commentId: N:MyApp.Auth.Application.Tests.Builders
  fullName: MyApp.Auth.Application.Tests.Builders
  nameWithType: MyApp.Auth.Application.Tests.Builders
- uid: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder
  name: ApplicationRoleBuilder
  href: api/MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.html
  commentId: T:MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder
  fullName: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder
  nameWithType: ApplicationRoleBuilder
- uid: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.Build
  name: Build()
  href: api/MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.html#MyApp_Auth_Application_Tests_Builders_ApplicationRoleBuilder_Build
  commentId: M:MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.Build
  fullName: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.Build()
  nameWithType: ApplicationRoleBuilder.Build()
- uid: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.Build*
  name: Build
  href: api/MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.html#MyApp_Auth_Application_Tests_Builders_ApplicationRoleBuilder_Build_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.Build
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.Build
  nameWithType: ApplicationRoleBuilder.Build
- uid: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithCreatedAt(System.DateTime)
  name: WithCreatedAt(DateTime)
  href: api/MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.html#MyApp_Auth_Application_Tests_Builders_ApplicationRoleBuilder_WithCreatedAt_System_DateTime_
  commentId: M:MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithCreatedAt(System.DateTime)
  name.vb: WithCreatedAt(Date)
  fullName: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithCreatedAt(System.DateTime)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithCreatedAt(Date)
  nameWithType: ApplicationRoleBuilder.WithCreatedAt(DateTime)
  nameWithType.vb: ApplicationRoleBuilder.WithCreatedAt(Date)
- uid: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithCreatedAt*
  name: WithCreatedAt
  href: api/MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.html#MyApp_Auth_Application_Tests_Builders_ApplicationRoleBuilder_WithCreatedAt_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithCreatedAt
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithCreatedAt
  nameWithType: ApplicationRoleBuilder.WithCreatedAt
- uid: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithDescription(System.String)
  name: WithDescription(string)
  href: api/MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.html#MyApp_Auth_Application_Tests_Builders_ApplicationRoleBuilder_WithDescription_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithDescription(System.String)
  name.vb: WithDescription(String)
  fullName: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithDescription(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithDescription(String)
  nameWithType: ApplicationRoleBuilder.WithDescription(string)
  nameWithType.vb: ApplicationRoleBuilder.WithDescription(String)
- uid: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithDescription*
  name: WithDescription
  href: api/MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.html#MyApp_Auth_Application_Tests_Builders_ApplicationRoleBuilder_WithDescription_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithDescription
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithDescription
  nameWithType: ApplicationRoleBuilder.WithDescription
- uid: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithId(System.Guid)
  name: WithId(Guid)
  href: api/MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.html#MyApp_Auth_Application_Tests_Builders_ApplicationRoleBuilder_WithId_System_Guid_
  commentId: M:MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithId(System.Guid)
  fullName: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithId(System.Guid)
  nameWithType: ApplicationRoleBuilder.WithId(Guid)
- uid: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithId*
  name: WithId
  href: api/MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.html#MyApp_Auth_Application_Tests_Builders_ApplicationRoleBuilder_WithId_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithId
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithId
  nameWithType: ApplicationRoleBuilder.WithId
- uid: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithIsActive(System.Boolean)
  name: WithIsActive(bool)
  href: api/MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.html#MyApp_Auth_Application_Tests_Builders_ApplicationRoleBuilder_WithIsActive_System_Boolean_
  commentId: M:MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithIsActive(System.Boolean)
  name.vb: WithIsActive(Boolean)
  fullName: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithIsActive(bool)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithIsActive(Boolean)
  nameWithType: ApplicationRoleBuilder.WithIsActive(bool)
  nameWithType.vb: ApplicationRoleBuilder.WithIsActive(Boolean)
- uid: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithIsActive*
  name: WithIsActive
  href: api/MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.html#MyApp_Auth_Application_Tests_Builders_ApplicationRoleBuilder_WithIsActive_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithIsActive
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithIsActive
  nameWithType: ApplicationRoleBuilder.WithIsActive
- uid: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithName(System.String)
  name: WithName(string)
  href: api/MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.html#MyApp_Auth_Application_Tests_Builders_ApplicationRoleBuilder_WithName_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithName(System.String)
  name.vb: WithName(String)
  fullName: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithName(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithName(String)
  nameWithType: ApplicationRoleBuilder.WithName(string)
  nameWithType.vb: ApplicationRoleBuilder.WithName(String)
- uid: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithName*
  name: WithName
  href: api/MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.html#MyApp_Auth_Application_Tests_Builders_ApplicationRoleBuilder_WithName_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithName
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithName
  nameWithType: ApplicationRoleBuilder.WithName
- uid: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithUpdatedAt(System.DateTime)
  name: WithUpdatedAt(DateTime)
  href: api/MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.html#MyApp_Auth_Application_Tests_Builders_ApplicationRoleBuilder_WithUpdatedAt_System_DateTime_
  commentId: M:MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithUpdatedAt(System.DateTime)
  name.vb: WithUpdatedAt(Date)
  fullName: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithUpdatedAt(System.DateTime)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithUpdatedAt(Date)
  nameWithType: ApplicationRoleBuilder.WithUpdatedAt(DateTime)
  nameWithType.vb: ApplicationRoleBuilder.WithUpdatedAt(Date)
- uid: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithUpdatedAt*
  name: WithUpdatedAt
  href: api/MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.html#MyApp_Auth_Application_Tests_Builders_ApplicationRoleBuilder_WithUpdatedAt_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithUpdatedAt
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.WithUpdatedAt
  nameWithType: ApplicationRoleBuilder.WithUpdatedAt
- uid: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.op_Implicit(MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder)~MyApp.Auth.Domain.Entities.ApplicationRole
  name: implicit operator ApplicationRole(ApplicationRoleBuilder)
  href: api/MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.html#MyApp_Auth_Application_Tests_Builders_ApplicationRoleBuilder_op_Implicit_MyApp_Auth_Application_Tests_Builders_ApplicationRoleBuilder__MyApp_Auth_Domain_Entities_ApplicationRole
  commentId: M:MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.op_Implicit(MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder)~MyApp.Auth.Domain.Entities.ApplicationRole
  name.vb: CType(ApplicationRoleBuilder)
  fullName: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.implicit operator MyApp.Auth.Domain.Entities.ApplicationRole(MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.CType(MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder)
  nameWithType: ApplicationRoleBuilder.implicit operator ApplicationRole(ApplicationRoleBuilder)
  nameWithType.vb: ApplicationRoleBuilder.CType(ApplicationRoleBuilder)
- uid: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.op_Implicit*
  name: implicit operator
  href: api/MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.html#MyApp_Auth_Application_Tests_Builders_ApplicationRoleBuilder_op_Implicit_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.implicit operator
  fullName.vb: MyApp.Auth.Application.Tests.Builders.ApplicationRoleBuilder.CType
  nameWithType: ApplicationRoleBuilder.implicit operator
  nameWithType.vb: ApplicationRoleBuilder.CType
- uid: MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder
  name: CreatePermissionDtoBuilder
  href: api/MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.html
  commentId: T:MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder
  fullName: MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder
  nameWithType: CreatePermissionDtoBuilder
- uid: MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.Build
  name: Build()
  href: api/MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_CreatePermissionDtoBuilder_Build
  commentId: M:MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.Build
  fullName: MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.Build()
  nameWithType: CreatePermissionDtoBuilder.Build()
- uid: MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.Build*
  name: Build
  href: api/MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_CreatePermissionDtoBuilder_Build_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.Build
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.Build
  nameWithType: CreatePermissionDtoBuilder.Build
- uid: MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.WithAction(System.String)
  name: WithAction(string)
  href: api/MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_CreatePermissionDtoBuilder_WithAction_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.WithAction(System.String)
  name.vb: WithAction(String)
  fullName: MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.WithAction(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.WithAction(String)
  nameWithType: CreatePermissionDtoBuilder.WithAction(string)
  nameWithType.vb: CreatePermissionDtoBuilder.WithAction(String)
- uid: MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.WithAction*
  name: WithAction
  href: api/MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_CreatePermissionDtoBuilder_WithAction_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.WithAction
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.WithAction
  nameWithType: CreatePermissionDtoBuilder.WithAction
- uid: MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.WithDescription(System.String)
  name: WithDescription(string?)
  href: api/MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_CreatePermissionDtoBuilder_WithDescription_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.WithDescription(System.String)
  name.vb: WithDescription(String)
  fullName: MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.WithDescription(string?)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.WithDescription(String)
  nameWithType: CreatePermissionDtoBuilder.WithDescription(string?)
  nameWithType.vb: CreatePermissionDtoBuilder.WithDescription(String)
- uid: MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.WithDescription*
  name: WithDescription
  href: api/MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_CreatePermissionDtoBuilder_WithDescription_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.WithDescription
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.WithDescription
  nameWithType: CreatePermissionDtoBuilder.WithDescription
- uid: MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.WithModule(System.String)
  name: WithModule(string)
  href: api/MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_CreatePermissionDtoBuilder_WithModule_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.WithModule(System.String)
  name.vb: WithModule(String)
  fullName: MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.WithModule(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.WithModule(String)
  nameWithType: CreatePermissionDtoBuilder.WithModule(string)
  nameWithType.vb: CreatePermissionDtoBuilder.WithModule(String)
- uid: MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.WithModule*
  name: WithModule
  href: api/MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_CreatePermissionDtoBuilder_WithModule_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.WithModule
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.WithModule
  nameWithType: CreatePermissionDtoBuilder.WithModule
- uid: MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.op_Implicit(MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder)~MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto
  name: implicit operator CreatePermissionDto(CreatePermissionDtoBuilder)
  href: api/MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_CreatePermissionDtoBuilder_op_Implicit_MyApp_Auth_Application_Tests_Builders_CreatePermissionDtoBuilder__MyApp_Auth_Application_Contracts_DTOs_CreatePermissionDto
  commentId: M:MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.op_Implicit(MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder)~MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto
  name.vb: CType(CreatePermissionDtoBuilder)
  fullName: MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.implicit operator MyApp.Auth.Application.Contracts.DTOs.CreatePermissionDto(MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.CType(MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder)
  nameWithType: CreatePermissionDtoBuilder.implicit operator CreatePermissionDto(CreatePermissionDtoBuilder)
  nameWithType.vb: CreatePermissionDtoBuilder.CType(CreatePermissionDtoBuilder)
- uid: MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.op_Implicit*
  name: implicit operator
  href: api/MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_CreatePermissionDtoBuilder_op_Implicit_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.implicit operator
  fullName.vb: MyApp.Auth.Application.Tests.Builders.CreatePermissionDtoBuilder.CType
  nameWithType: CreatePermissionDtoBuilder.implicit operator
  nameWithType.vb: CreatePermissionDtoBuilder.CType
- uid: MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder
  name: CreateRoleDtoBuilder
  href: api/MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder.html
  commentId: T:MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder
  fullName: MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder
  nameWithType: CreateRoleDtoBuilder
- uid: MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder.Build
  name: Build()
  href: api/MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_CreateRoleDtoBuilder_Build
  commentId: M:MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder.Build
  fullName: MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder.Build()
  nameWithType: CreateRoleDtoBuilder.Build()
- uid: MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder.Build*
  name: Build
  href: api/MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_CreateRoleDtoBuilder_Build_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder.Build
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder.Build
  nameWithType: CreateRoleDtoBuilder.Build
- uid: MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder.WithDescription(System.String)
  name: WithDescription(string)
  href: api/MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_CreateRoleDtoBuilder_WithDescription_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder.WithDescription(System.String)
  name.vb: WithDescription(String)
  fullName: MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder.WithDescription(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder.WithDescription(String)
  nameWithType: CreateRoleDtoBuilder.WithDescription(string)
  nameWithType.vb: CreateRoleDtoBuilder.WithDescription(String)
- uid: MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder.WithDescription*
  name: WithDescription
  href: api/MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_CreateRoleDtoBuilder_WithDescription_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder.WithDescription
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder.WithDescription
  nameWithType: CreateRoleDtoBuilder.WithDescription
- uid: MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder.WithName(System.String)
  name: WithName(string)
  href: api/MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_CreateRoleDtoBuilder_WithName_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder.WithName(System.String)
  name.vb: WithName(String)
  fullName: MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder.WithName(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder.WithName(String)
  nameWithType: CreateRoleDtoBuilder.WithName(string)
  nameWithType.vb: CreateRoleDtoBuilder.WithName(String)
- uid: MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder.WithName*
  name: WithName
  href: api/MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_CreateRoleDtoBuilder_WithName_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder.WithName
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder.WithName
  nameWithType: CreateRoleDtoBuilder.WithName
- uid: MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder.op_Implicit(MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder)~MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto
  name: implicit operator CreateRoleDto(CreateRoleDtoBuilder)
  href: api/MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_CreateRoleDtoBuilder_op_Implicit_MyApp_Auth_Application_Tests_Builders_CreateRoleDtoBuilder__MyApp_Auth_Application_Contracts_DTOs_CreateRoleDto
  commentId: M:MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder.op_Implicit(MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder)~MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto
  name.vb: CType(CreateRoleDtoBuilder)
  fullName: MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder.implicit operator MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto(MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder.CType(MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder)
  nameWithType: CreateRoleDtoBuilder.implicit operator CreateRoleDto(CreateRoleDtoBuilder)
  nameWithType.vb: CreateRoleDtoBuilder.CType(CreateRoleDtoBuilder)
- uid: MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder.op_Implicit*
  name: implicit operator
  href: api/MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_CreateRoleDtoBuilder_op_Implicit_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder.implicit operator
  fullName.vb: MyApp.Auth.Application.Tests.Builders.CreateRoleDtoBuilder.CType
  nameWithType: CreateRoleDtoBuilder.implicit operator
  nameWithType.vb: CreateRoleDtoBuilder.CType
- uid: MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder
  name: ExternalLoginDtoBuilder
  href: api/MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.html
  commentId: T:MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder
  fullName: MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder
  nameWithType: ExternalLoginDtoBuilder
- uid: MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.Build
  name: Build()
  href: api/MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_ExternalLoginDtoBuilder_Build
  commentId: M:MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.Build
  fullName: MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.Build()
  nameWithType: ExternalLoginDtoBuilder.Build()
- uid: MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.Build*
  name: Build
  href: api/MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_ExternalLoginDtoBuilder_Build_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.Build
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.Build
  nameWithType: ExternalLoginDtoBuilder.Build
- uid: MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.WithEmail(System.String)
  name: WithEmail(string)
  href: api/MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_ExternalLoginDtoBuilder_WithEmail_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.WithEmail(System.String)
  name.vb: WithEmail(String)
  fullName: MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.WithEmail(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.WithEmail(String)
  nameWithType: ExternalLoginDtoBuilder.WithEmail(string)
  nameWithType.vb: ExternalLoginDtoBuilder.WithEmail(String)
- uid: MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.WithEmail*
  name: WithEmail
  href: api/MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_ExternalLoginDtoBuilder_WithEmail_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.WithEmail
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.WithEmail
  nameWithType: ExternalLoginDtoBuilder.WithEmail
- uid: MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.WithExternalId(System.String)
  name: WithExternalId(string)
  href: api/MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_ExternalLoginDtoBuilder_WithExternalId_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.WithExternalId(System.String)
  name.vb: WithExternalId(String)
  fullName: MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.WithExternalId(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.WithExternalId(String)
  nameWithType: ExternalLoginDtoBuilder.WithExternalId(string)
  nameWithType.vb: ExternalLoginDtoBuilder.WithExternalId(String)
- uid: MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.WithExternalId*
  name: WithExternalId
  href: api/MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_ExternalLoginDtoBuilder_WithExternalId_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.WithExternalId
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.WithExternalId
  nameWithType: ExternalLoginDtoBuilder.WithExternalId
- uid: MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.WithFirstName(System.String)
  name: WithFirstName(string)
  href: api/MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_ExternalLoginDtoBuilder_WithFirstName_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.WithFirstName(System.String)
  name.vb: WithFirstName(String)
  fullName: MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.WithFirstName(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.WithFirstName(String)
  nameWithType: ExternalLoginDtoBuilder.WithFirstName(string)
  nameWithType.vb: ExternalLoginDtoBuilder.WithFirstName(String)
- uid: MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.WithFirstName*
  name: WithFirstName
  href: api/MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_ExternalLoginDtoBuilder_WithFirstName_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.WithFirstName
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.WithFirstName
  nameWithType: ExternalLoginDtoBuilder.WithFirstName
- uid: MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.WithLastName(System.String)
  name: WithLastName(string)
  href: api/MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_ExternalLoginDtoBuilder_WithLastName_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.WithLastName(System.String)
  name.vb: WithLastName(String)
  fullName: MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.WithLastName(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.WithLastName(String)
  nameWithType: ExternalLoginDtoBuilder.WithLastName(string)
  nameWithType.vb: ExternalLoginDtoBuilder.WithLastName(String)
- uid: MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.WithLastName*
  name: WithLastName
  href: api/MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_ExternalLoginDtoBuilder_WithLastName_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.WithLastName
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.WithLastName
  nameWithType: ExternalLoginDtoBuilder.WithLastName
- uid: MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.WithProvider(System.String)
  name: WithProvider(string)
  href: api/MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_ExternalLoginDtoBuilder_WithProvider_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.WithProvider(System.String)
  name.vb: WithProvider(String)
  fullName: MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.WithProvider(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.WithProvider(String)
  nameWithType: ExternalLoginDtoBuilder.WithProvider(string)
  nameWithType.vb: ExternalLoginDtoBuilder.WithProvider(String)
- uid: MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.WithProvider*
  name: WithProvider
  href: api/MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_ExternalLoginDtoBuilder_WithProvider_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.WithProvider
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.WithProvider
  nameWithType: ExternalLoginDtoBuilder.WithProvider
- uid: MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.op_Implicit(MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder)~MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto
  name: implicit operator ExternalLoginDto(ExternalLoginDtoBuilder)
  href: api/MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_ExternalLoginDtoBuilder_op_Implicit_MyApp_Auth_Application_Tests_Builders_ExternalLoginDtoBuilder__MyApp_Auth_Application_Contracts_DTOs_ExternalLoginDto
  commentId: M:MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.op_Implicit(MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder)~MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto
  name.vb: CType(ExternalLoginDtoBuilder)
  fullName: MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.implicit operator MyApp.Auth.Application.Contracts.DTOs.ExternalLoginDto(MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.CType(MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder)
  nameWithType: ExternalLoginDtoBuilder.implicit operator ExternalLoginDto(ExternalLoginDtoBuilder)
  nameWithType.vb: ExternalLoginDtoBuilder.CType(ExternalLoginDtoBuilder)
- uid: MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.op_Implicit*
  name: implicit operator
  href: api/MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_ExternalLoginDtoBuilder_op_Implicit_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.implicit operator
  fullName.vb: MyApp.Auth.Application.Tests.Builders.ExternalLoginDtoBuilder.CType
  nameWithType: ExternalLoginDtoBuilder.implicit operator
  nameWithType.vb: ExternalLoginDtoBuilder.CType
- uid: MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder
  name: LoginDtoBuilder
  href: api/MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder.html
  commentId: T:MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder
  fullName: MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder
  nameWithType: LoginDtoBuilder
- uid: MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder.Build
  name: Build()
  href: api/MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_LoginDtoBuilder_Build
  commentId: M:MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder.Build
  fullName: MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder.Build()
  nameWithType: LoginDtoBuilder.Build()
- uid: MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder.Build*
  name: Build
  href: api/MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_LoginDtoBuilder_Build_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder.Build
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder.Build
  nameWithType: LoginDtoBuilder.Build
- uid: MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder.WithEmail(System.String)
  name: WithEmail(string)
  href: api/MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_LoginDtoBuilder_WithEmail_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder.WithEmail(System.String)
  name.vb: WithEmail(String)
  fullName: MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder.WithEmail(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder.WithEmail(String)
  nameWithType: LoginDtoBuilder.WithEmail(string)
  nameWithType.vb: LoginDtoBuilder.WithEmail(String)
- uid: MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder.WithEmail*
  name: WithEmail
  href: api/MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_LoginDtoBuilder_WithEmail_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder.WithEmail
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder.WithEmail
  nameWithType: LoginDtoBuilder.WithEmail
- uid: MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder.WithPassword(System.String)
  name: WithPassword(string)
  href: api/MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_LoginDtoBuilder_WithPassword_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder.WithPassword(System.String)
  name.vb: WithPassword(String)
  fullName: MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder.WithPassword(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder.WithPassword(String)
  nameWithType: LoginDtoBuilder.WithPassword(string)
  nameWithType.vb: LoginDtoBuilder.WithPassword(String)
- uid: MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder.WithPassword*
  name: WithPassword
  href: api/MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_LoginDtoBuilder_WithPassword_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder.WithPassword
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder.WithPassword
  nameWithType: LoginDtoBuilder.WithPassword
- uid: MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder.op_Implicit(MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder)~MyApp.Auth.Application.Contracts.DTOs.LoginDto
  name: implicit operator LoginDto(LoginDtoBuilder)
  href: api/MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_LoginDtoBuilder_op_Implicit_MyApp_Auth_Application_Tests_Builders_LoginDtoBuilder__MyApp_Auth_Application_Contracts_DTOs_LoginDto
  commentId: M:MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder.op_Implicit(MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder)~MyApp.Auth.Application.Contracts.DTOs.LoginDto
  name.vb: CType(LoginDtoBuilder)
  fullName: MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder.implicit operator MyApp.Auth.Application.Contracts.DTOs.LoginDto(MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder.CType(MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder)
  nameWithType: LoginDtoBuilder.implicit operator LoginDto(LoginDtoBuilder)
  nameWithType.vb: LoginDtoBuilder.CType(LoginDtoBuilder)
- uid: MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder.op_Implicit*
  name: implicit operator
  href: api/MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_LoginDtoBuilder_op_Implicit_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder.implicit operator
  fullName.vb: MyApp.Auth.Application.Tests.Builders.LoginDtoBuilder.CType
  nameWithType: LoginDtoBuilder.implicit operator
  nameWithType.vb: LoginDtoBuilder.CType
- uid: MyApp.Auth.Application.Tests.Builders.PermissionBuilder
  name: PermissionBuilder
  href: api/MyApp.Auth.Application.Tests.Builders.PermissionBuilder.html
  commentId: T:MyApp.Auth.Application.Tests.Builders.PermissionBuilder
  fullName: MyApp.Auth.Application.Tests.Builders.PermissionBuilder
  nameWithType: PermissionBuilder
- uid: MyApp.Auth.Application.Tests.Builders.PermissionBuilder.Build
  name: Build()
  href: api/MyApp.Auth.Application.Tests.Builders.PermissionBuilder.html#MyApp_Auth_Application_Tests_Builders_PermissionBuilder_Build
  commentId: M:MyApp.Auth.Application.Tests.Builders.PermissionBuilder.Build
  fullName: MyApp.Auth.Application.Tests.Builders.PermissionBuilder.Build()
  nameWithType: PermissionBuilder.Build()
- uid: MyApp.Auth.Application.Tests.Builders.PermissionBuilder.Build*
  name: Build
  href: api/MyApp.Auth.Application.Tests.Builders.PermissionBuilder.html#MyApp_Auth_Application_Tests_Builders_PermissionBuilder_Build_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.PermissionBuilder.Build
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.PermissionBuilder.Build
  nameWithType: PermissionBuilder.Build
- uid: MyApp.Auth.Application.Tests.Builders.PermissionBuilder.WithAction(System.String)
  name: WithAction(string)
  href: api/MyApp.Auth.Application.Tests.Builders.PermissionBuilder.html#MyApp_Auth_Application_Tests_Builders_PermissionBuilder_WithAction_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.PermissionBuilder.WithAction(System.String)
  name.vb: WithAction(String)
  fullName: MyApp.Auth.Application.Tests.Builders.PermissionBuilder.WithAction(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.PermissionBuilder.WithAction(String)
  nameWithType: PermissionBuilder.WithAction(string)
  nameWithType.vb: PermissionBuilder.WithAction(String)
- uid: MyApp.Auth.Application.Tests.Builders.PermissionBuilder.WithAction*
  name: WithAction
  href: api/MyApp.Auth.Application.Tests.Builders.PermissionBuilder.html#MyApp_Auth_Application_Tests_Builders_PermissionBuilder_WithAction_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.PermissionBuilder.WithAction
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.PermissionBuilder.WithAction
  nameWithType: PermissionBuilder.WithAction
- uid: MyApp.Auth.Application.Tests.Builders.PermissionBuilder.WithDescription(System.String)
  name: WithDescription(string?)
  href: api/MyApp.Auth.Application.Tests.Builders.PermissionBuilder.html#MyApp_Auth_Application_Tests_Builders_PermissionBuilder_WithDescription_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.PermissionBuilder.WithDescription(System.String)
  name.vb: WithDescription(String)
  fullName: MyApp.Auth.Application.Tests.Builders.PermissionBuilder.WithDescription(string?)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.PermissionBuilder.WithDescription(String)
  nameWithType: PermissionBuilder.WithDescription(string?)
  nameWithType.vb: PermissionBuilder.WithDescription(String)
- uid: MyApp.Auth.Application.Tests.Builders.PermissionBuilder.WithDescription*
  name: WithDescription
  href: api/MyApp.Auth.Application.Tests.Builders.PermissionBuilder.html#MyApp_Auth_Application_Tests_Builders_PermissionBuilder_WithDescription_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.PermissionBuilder.WithDescription
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.PermissionBuilder.WithDescription
  nameWithType: PermissionBuilder.WithDescription
- uid: MyApp.Auth.Application.Tests.Builders.PermissionBuilder.WithId(System.Guid)
  name: WithId(Guid)
  href: api/MyApp.Auth.Application.Tests.Builders.PermissionBuilder.html#MyApp_Auth_Application_Tests_Builders_PermissionBuilder_WithId_System_Guid_
  commentId: M:MyApp.Auth.Application.Tests.Builders.PermissionBuilder.WithId(System.Guid)
  fullName: MyApp.Auth.Application.Tests.Builders.PermissionBuilder.WithId(System.Guid)
  nameWithType: PermissionBuilder.WithId(Guid)
- uid: MyApp.Auth.Application.Tests.Builders.PermissionBuilder.WithId*
  name: WithId
  href: api/MyApp.Auth.Application.Tests.Builders.PermissionBuilder.html#MyApp_Auth_Application_Tests_Builders_PermissionBuilder_WithId_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.PermissionBuilder.WithId
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.PermissionBuilder.WithId
  nameWithType: PermissionBuilder.WithId
- uid: MyApp.Auth.Application.Tests.Builders.PermissionBuilder.WithModule(System.String)
  name: WithModule(string)
  href: api/MyApp.Auth.Application.Tests.Builders.PermissionBuilder.html#MyApp_Auth_Application_Tests_Builders_PermissionBuilder_WithModule_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.PermissionBuilder.WithModule(System.String)
  name.vb: WithModule(String)
  fullName: MyApp.Auth.Application.Tests.Builders.PermissionBuilder.WithModule(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.PermissionBuilder.WithModule(String)
  nameWithType: PermissionBuilder.WithModule(string)
  nameWithType.vb: PermissionBuilder.WithModule(String)
- uid: MyApp.Auth.Application.Tests.Builders.PermissionBuilder.WithModule*
  name: WithModule
  href: api/MyApp.Auth.Application.Tests.Builders.PermissionBuilder.html#MyApp_Auth_Application_Tests_Builders_PermissionBuilder_WithModule_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.PermissionBuilder.WithModule
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.PermissionBuilder.WithModule
  nameWithType: PermissionBuilder.WithModule
- uid: MyApp.Auth.Application.Tests.Builders.PermissionBuilder.op_Implicit(MyApp.Auth.Application.Tests.Builders.PermissionBuilder)~Permission
  name: implicit operator Permission(PermissionBuilder)
  href: api/MyApp.Auth.Application.Tests.Builders.PermissionBuilder.html#MyApp_Auth_Application_Tests_Builders_PermissionBuilder_op_Implicit_MyApp_Auth_Application_Tests_Builders_PermissionBuilder__Permission
  commentId: M:MyApp.Auth.Application.Tests.Builders.PermissionBuilder.op_Implicit(MyApp.Auth.Application.Tests.Builders.PermissionBuilder)~Permission
  name.vb: CType(PermissionBuilder)
  fullName: MyApp.Auth.Application.Tests.Builders.PermissionBuilder.implicit operator Permission(MyApp.Auth.Application.Tests.Builders.PermissionBuilder)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.PermissionBuilder.CType(MyApp.Auth.Application.Tests.Builders.PermissionBuilder)
  nameWithType: PermissionBuilder.implicit operator Permission(PermissionBuilder)
  nameWithType.vb: PermissionBuilder.CType(PermissionBuilder)
- uid: MyApp.Auth.Application.Tests.Builders.PermissionBuilder.op_Implicit*
  name: implicit operator
  href: api/MyApp.Auth.Application.Tests.Builders.PermissionBuilder.html#MyApp_Auth_Application_Tests_Builders_PermissionBuilder_op_Implicit_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.PermissionBuilder.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: MyApp.Auth.Application.Tests.Builders.PermissionBuilder.implicit operator
  fullName.vb: MyApp.Auth.Application.Tests.Builders.PermissionBuilder.CType
  nameWithType: PermissionBuilder.implicit operator
  nameWithType.vb: PermissionBuilder.CType
- uid: MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder
  name: PermissionDtoBuilder
  href: api/MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.html
  commentId: T:MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder
  fullName: MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder
  nameWithType: PermissionDtoBuilder
- uid: MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.Build
  name: Build()
  href: api/MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_PermissionDtoBuilder_Build
  commentId: M:MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.Build
  fullName: MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.Build()
  nameWithType: PermissionDtoBuilder.Build()
- uid: MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.Build*
  name: Build
  href: api/MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_PermissionDtoBuilder_Build_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.Build
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.Build
  nameWithType: PermissionDtoBuilder.Build
- uid: MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.WithAction(System.String)
  name: WithAction(string)
  href: api/MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_PermissionDtoBuilder_WithAction_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.WithAction(System.String)
  name.vb: WithAction(String)
  fullName: MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.WithAction(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.WithAction(String)
  nameWithType: PermissionDtoBuilder.WithAction(string)
  nameWithType.vb: PermissionDtoBuilder.WithAction(String)
- uid: MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.WithAction*
  name: WithAction
  href: api/MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_PermissionDtoBuilder_WithAction_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.WithAction
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.WithAction
  nameWithType: PermissionDtoBuilder.WithAction
- uid: MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.WithDescription(System.String)
  name: WithDescription(string?)
  href: api/MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_PermissionDtoBuilder_WithDescription_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.WithDescription(System.String)
  name.vb: WithDescription(String)
  fullName: MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.WithDescription(string?)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.WithDescription(String)
  nameWithType: PermissionDtoBuilder.WithDescription(string?)
  nameWithType.vb: PermissionDtoBuilder.WithDescription(String)
- uid: MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.WithDescription*
  name: WithDescription
  href: api/MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_PermissionDtoBuilder_WithDescription_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.WithDescription
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.WithDescription
  nameWithType: PermissionDtoBuilder.WithDescription
- uid: MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.WithId(System.Guid)
  name: WithId(Guid)
  href: api/MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_PermissionDtoBuilder_WithId_System_Guid_
  commentId: M:MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.WithId(System.Guid)
  fullName: MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.WithId(System.Guid)
  nameWithType: PermissionDtoBuilder.WithId(Guid)
- uid: MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.WithId*
  name: WithId
  href: api/MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_PermissionDtoBuilder_WithId_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.WithId
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.WithId
  nameWithType: PermissionDtoBuilder.WithId
- uid: MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.WithModule(System.String)
  name: WithModule(string)
  href: api/MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_PermissionDtoBuilder_WithModule_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.WithModule(System.String)
  name.vb: WithModule(String)
  fullName: MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.WithModule(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.WithModule(String)
  nameWithType: PermissionDtoBuilder.WithModule(string)
  nameWithType.vb: PermissionDtoBuilder.WithModule(String)
- uid: MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.WithModule*
  name: WithModule
  href: api/MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_PermissionDtoBuilder_WithModule_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.WithModule
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.WithModule
  nameWithType: PermissionDtoBuilder.WithModule
- uid: MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.op_Implicit(MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder)~MyApp.Auth.Application.Contracts.DTOs.PermissionDto
  name: implicit operator PermissionDto(PermissionDtoBuilder)
  href: api/MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_PermissionDtoBuilder_op_Implicit_MyApp_Auth_Application_Tests_Builders_PermissionDtoBuilder__MyApp_Auth_Application_Contracts_DTOs_PermissionDto
  commentId: M:MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.op_Implicit(MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder)~MyApp.Auth.Application.Contracts.DTOs.PermissionDto
  name.vb: CType(PermissionDtoBuilder)
  fullName: MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.implicit operator MyApp.Auth.Application.Contracts.DTOs.PermissionDto(MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.CType(MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder)
  nameWithType: PermissionDtoBuilder.implicit operator PermissionDto(PermissionDtoBuilder)
  nameWithType.vb: PermissionDtoBuilder.CType(PermissionDtoBuilder)
- uid: MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.op_Implicit*
  name: implicit operator
  href: api/MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_PermissionDtoBuilder_op_Implicit_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.implicit operator
  fullName.vb: MyApp.Auth.Application.Tests.Builders.PermissionDtoBuilder.CType
  nameWithType: PermissionDtoBuilder.implicit operator
  nameWithType.vb: PermissionDtoBuilder.CType
- uid: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder
  name: RefreshTokenBuilder
  href: api/MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.html
  commentId: T:MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder
  fullName: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder
  nameWithType: RefreshTokenBuilder
- uid: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.Build
  name: Build()
  href: api/MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.html#MyApp_Auth_Application_Tests_Builders_RefreshTokenBuilder_Build
  commentId: M:MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.Build
  fullName: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.Build()
  nameWithType: RefreshTokenBuilder.Build()
- uid: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.Build*
  name: Build
  href: api/MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.html#MyApp_Auth_Application_Tests_Builders_RefreshTokenBuilder_Build_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.Build
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.Build
  nameWithType: RefreshTokenBuilder.Build
- uid: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.Expired
  name: Expired()
  href: api/MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.html#MyApp_Auth_Application_Tests_Builders_RefreshTokenBuilder_Expired
  commentId: M:MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.Expired
  fullName: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.Expired()
  nameWithType: RefreshTokenBuilder.Expired()
- uid: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.Expired*
  name: Expired
  href: api/MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.html#MyApp_Auth_Application_Tests_Builders_RefreshTokenBuilder_Expired_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.Expired
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.Expired
  nameWithType: RefreshTokenBuilder.Expired
- uid: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.Revoked
  name: Revoked()
  href: api/MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.html#MyApp_Auth_Application_Tests_Builders_RefreshTokenBuilder_Revoked
  commentId: M:MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.Revoked
  fullName: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.Revoked()
  nameWithType: RefreshTokenBuilder.Revoked()
- uid: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.Revoked*
  name: Revoked
  href: api/MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.html#MyApp_Auth_Application_Tests_Builders_RefreshTokenBuilder_Revoked_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.Revoked
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.Revoked
  nameWithType: RefreshTokenBuilder.Revoked
- uid: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithCreatedAt(System.DateTime)
  name: WithCreatedAt(DateTime)
  href: api/MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.html#MyApp_Auth_Application_Tests_Builders_RefreshTokenBuilder_WithCreatedAt_System_DateTime_
  commentId: M:MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithCreatedAt(System.DateTime)
  name.vb: WithCreatedAt(Date)
  fullName: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithCreatedAt(System.DateTime)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithCreatedAt(Date)
  nameWithType: RefreshTokenBuilder.WithCreatedAt(DateTime)
  nameWithType.vb: RefreshTokenBuilder.WithCreatedAt(Date)
- uid: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithCreatedAt*
  name: WithCreatedAt
  href: api/MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.html#MyApp_Auth_Application_Tests_Builders_RefreshTokenBuilder_WithCreatedAt_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithCreatedAt
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithCreatedAt
  nameWithType: RefreshTokenBuilder.WithCreatedAt
- uid: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithExpiresAt(System.DateTime)
  name: WithExpiresAt(DateTime)
  href: api/MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.html#MyApp_Auth_Application_Tests_Builders_RefreshTokenBuilder_WithExpiresAt_System_DateTime_
  commentId: M:MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithExpiresAt(System.DateTime)
  name.vb: WithExpiresAt(Date)
  fullName: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithExpiresAt(System.DateTime)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithExpiresAt(Date)
  nameWithType: RefreshTokenBuilder.WithExpiresAt(DateTime)
  nameWithType.vb: RefreshTokenBuilder.WithExpiresAt(Date)
- uid: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithExpiresAt*
  name: WithExpiresAt
  href: api/MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.html#MyApp_Auth_Application_Tests_Builders_RefreshTokenBuilder_WithExpiresAt_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithExpiresAt
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithExpiresAt
  nameWithType: RefreshTokenBuilder.WithExpiresAt
- uid: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithId(System.Guid)
  name: WithId(Guid)
  href: api/MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.html#MyApp_Auth_Application_Tests_Builders_RefreshTokenBuilder_WithId_System_Guid_
  commentId: M:MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithId(System.Guid)
  fullName: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithId(System.Guid)
  nameWithType: RefreshTokenBuilder.WithId(Guid)
- uid: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithId*
  name: WithId
  href: api/MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.html#MyApp_Auth_Application_Tests_Builders_RefreshTokenBuilder_WithId_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithId
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithId
  nameWithType: RefreshTokenBuilder.WithId
- uid: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithIsRevoked(System.Boolean)
  name: WithIsRevoked(bool)
  href: api/MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.html#MyApp_Auth_Application_Tests_Builders_RefreshTokenBuilder_WithIsRevoked_System_Boolean_
  commentId: M:MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithIsRevoked(System.Boolean)
  name.vb: WithIsRevoked(Boolean)
  fullName: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithIsRevoked(bool)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithIsRevoked(Boolean)
  nameWithType: RefreshTokenBuilder.WithIsRevoked(bool)
  nameWithType.vb: RefreshTokenBuilder.WithIsRevoked(Boolean)
- uid: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithIsRevoked*
  name: WithIsRevoked
  href: api/MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.html#MyApp_Auth_Application_Tests_Builders_RefreshTokenBuilder_WithIsRevoked_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithIsRevoked
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithIsRevoked
  nameWithType: RefreshTokenBuilder.WithIsRevoked
- uid: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithToken(System.String)
  name: WithToken(string)
  href: api/MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.html#MyApp_Auth_Application_Tests_Builders_RefreshTokenBuilder_WithToken_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithToken(System.String)
  name.vb: WithToken(String)
  fullName: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithToken(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithToken(String)
  nameWithType: RefreshTokenBuilder.WithToken(string)
  nameWithType.vb: RefreshTokenBuilder.WithToken(String)
- uid: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithToken*
  name: WithToken
  href: api/MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.html#MyApp_Auth_Application_Tests_Builders_RefreshTokenBuilder_WithToken_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithToken
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithToken
  nameWithType: RefreshTokenBuilder.WithToken
- uid: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithUserId(System.Guid)
  name: WithUserId(Guid)
  href: api/MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.html#MyApp_Auth_Application_Tests_Builders_RefreshTokenBuilder_WithUserId_System_Guid_
  commentId: M:MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithUserId(System.Guid)
  fullName: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithUserId(System.Guid)
  nameWithType: RefreshTokenBuilder.WithUserId(Guid)
- uid: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithUserId*
  name: WithUserId
  href: api/MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.html#MyApp_Auth_Application_Tests_Builders_RefreshTokenBuilder_WithUserId_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithUserId
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.WithUserId
  nameWithType: RefreshTokenBuilder.WithUserId
- uid: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.op_Implicit(MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder)~MyApp.Auth.Domain.Entities.RefreshToken
  name: implicit operator RefreshToken(RefreshTokenBuilder)
  href: api/MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.html#MyApp_Auth_Application_Tests_Builders_RefreshTokenBuilder_op_Implicit_MyApp_Auth_Application_Tests_Builders_RefreshTokenBuilder__MyApp_Auth_Domain_Entities_RefreshToken
  commentId: M:MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.op_Implicit(MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder)~MyApp.Auth.Domain.Entities.RefreshToken
  name.vb: CType(RefreshTokenBuilder)
  fullName: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.implicit operator MyApp.Auth.Domain.Entities.RefreshToken(MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.CType(MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder)
  nameWithType: RefreshTokenBuilder.implicit operator RefreshToken(RefreshTokenBuilder)
  nameWithType.vb: RefreshTokenBuilder.CType(RefreshTokenBuilder)
- uid: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.op_Implicit*
  name: implicit operator
  href: api/MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.html#MyApp_Auth_Application_Tests_Builders_RefreshTokenBuilder_op_Implicit_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.implicit operator
  fullName.vb: MyApp.Auth.Application.Tests.Builders.RefreshTokenBuilder.CType
  nameWithType: RefreshTokenBuilder.implicit operator
  nameWithType.vb: RefreshTokenBuilder.CType
- uid: MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder
  name: RegisterDtoBuilder
  href: api/MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.html
  commentId: T:MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder
  fullName: MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder
  nameWithType: RegisterDtoBuilder
- uid: MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.Build
  name: Build()
  href: api/MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_RegisterDtoBuilder_Build
  commentId: M:MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.Build
  fullName: MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.Build()
  nameWithType: RegisterDtoBuilder.Build()
- uid: MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.Build*
  name: Build
  href: api/MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_RegisterDtoBuilder_Build_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.Build
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.Build
  nameWithType: RegisterDtoBuilder.Build
- uid: MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.WithEmail(System.String)
  name: WithEmail(string)
  href: api/MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_RegisterDtoBuilder_WithEmail_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.WithEmail(System.String)
  name.vb: WithEmail(String)
  fullName: MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.WithEmail(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.WithEmail(String)
  nameWithType: RegisterDtoBuilder.WithEmail(string)
  nameWithType.vb: RegisterDtoBuilder.WithEmail(String)
- uid: MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.WithEmail*
  name: WithEmail
  href: api/MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_RegisterDtoBuilder_WithEmail_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.WithEmail
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.WithEmail
  nameWithType: RegisterDtoBuilder.WithEmail
- uid: MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.WithFirstName(System.String)
  name: WithFirstName(string)
  href: api/MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_RegisterDtoBuilder_WithFirstName_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.WithFirstName(System.String)
  name.vb: WithFirstName(String)
  fullName: MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.WithFirstName(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.WithFirstName(String)
  nameWithType: RegisterDtoBuilder.WithFirstName(string)
  nameWithType.vb: RegisterDtoBuilder.WithFirstName(String)
- uid: MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.WithFirstName*
  name: WithFirstName
  href: api/MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_RegisterDtoBuilder_WithFirstName_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.WithFirstName
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.WithFirstName
  nameWithType: RegisterDtoBuilder.WithFirstName
- uid: MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.WithLastName(System.String)
  name: WithLastName(string)
  href: api/MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_RegisterDtoBuilder_WithLastName_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.WithLastName(System.String)
  name.vb: WithLastName(String)
  fullName: MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.WithLastName(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.WithLastName(String)
  nameWithType: RegisterDtoBuilder.WithLastName(string)
  nameWithType.vb: RegisterDtoBuilder.WithLastName(String)
- uid: MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.WithLastName*
  name: WithLastName
  href: api/MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_RegisterDtoBuilder_WithLastName_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.WithLastName
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.WithLastName
  nameWithType: RegisterDtoBuilder.WithLastName
- uid: MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.WithPassword(System.String)
  name: WithPassword(string)
  href: api/MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_RegisterDtoBuilder_WithPassword_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.WithPassword(System.String)
  name.vb: WithPassword(String)
  fullName: MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.WithPassword(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.WithPassword(String)
  nameWithType: RegisterDtoBuilder.WithPassword(string)
  nameWithType.vb: RegisterDtoBuilder.WithPassword(String)
- uid: MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.WithPassword*
  name: WithPassword
  href: api/MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_RegisterDtoBuilder_WithPassword_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.WithPassword
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.WithPassword
  nameWithType: RegisterDtoBuilder.WithPassword
- uid: MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.WithPasswords(System.String,System.String)
  name: WithPasswords(string, string)
  href: api/MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_RegisterDtoBuilder_WithPasswords_System_String_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.WithPasswords(System.String,System.String)
  name.vb: WithPasswords(String, String)
  fullName: MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.WithPasswords(string, string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.WithPasswords(String, String)
  nameWithType: RegisterDtoBuilder.WithPasswords(string, string)
  nameWithType.vb: RegisterDtoBuilder.WithPasswords(String, String)
- uid: MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.WithPasswords*
  name: WithPasswords
  href: api/MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_RegisterDtoBuilder_WithPasswords_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.WithPasswords
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.WithPasswords
  nameWithType: RegisterDtoBuilder.WithPasswords
- uid: MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.op_Implicit(MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder)~MyApp.Auth.Application.Contracts.DTOs.RegisterDto
  name: implicit operator RegisterDto(RegisterDtoBuilder)
  href: api/MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_RegisterDtoBuilder_op_Implicit_MyApp_Auth_Application_Tests_Builders_RegisterDtoBuilder__MyApp_Auth_Application_Contracts_DTOs_RegisterDto
  commentId: M:MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.op_Implicit(MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder)~MyApp.Auth.Application.Contracts.DTOs.RegisterDto
  name.vb: CType(RegisterDtoBuilder)
  fullName: MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.implicit operator MyApp.Auth.Application.Contracts.DTOs.RegisterDto(MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.CType(MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder)
  nameWithType: RegisterDtoBuilder.implicit operator RegisterDto(RegisterDtoBuilder)
  nameWithType.vb: RegisterDtoBuilder.CType(RegisterDtoBuilder)
- uid: MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.op_Implicit*
  name: implicit operator
  href: api/MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_RegisterDtoBuilder_op_Implicit_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.implicit operator
  fullName.vb: MyApp.Auth.Application.Tests.Builders.RegisterDtoBuilder.CType
  nameWithType: RegisterDtoBuilder.implicit operator
  nameWithType.vb: RegisterDtoBuilder.CType
- uid: MyApp.Auth.Application.Tests.Builders.RoleBuilder
  name: RoleBuilder
  href: api/MyApp.Auth.Application.Tests.Builders.RoleBuilder.html
  commentId: T:MyApp.Auth.Application.Tests.Builders.RoleBuilder
  fullName: MyApp.Auth.Application.Tests.Builders.RoleBuilder
  nameWithType: RoleBuilder
- uid: MyApp.Auth.Application.Tests.Builders.RoleBuilder.Build
  name: Build()
  href: api/MyApp.Auth.Application.Tests.Builders.RoleBuilder.html#MyApp_Auth_Application_Tests_Builders_RoleBuilder_Build
  commentId: M:MyApp.Auth.Application.Tests.Builders.RoleBuilder.Build
  fullName: MyApp.Auth.Application.Tests.Builders.RoleBuilder.Build()
  nameWithType: RoleBuilder.Build()
- uid: MyApp.Auth.Application.Tests.Builders.RoleBuilder.Build*
  name: Build
  href: api/MyApp.Auth.Application.Tests.Builders.RoleBuilder.html#MyApp_Auth_Application_Tests_Builders_RoleBuilder_Build_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.RoleBuilder.Build
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.RoleBuilder.Build
  nameWithType: RoleBuilder.Build
- uid: MyApp.Auth.Application.Tests.Builders.RoleBuilder.WithCreatedAt(System.DateTime)
  name: WithCreatedAt(DateTime)
  href: api/MyApp.Auth.Application.Tests.Builders.RoleBuilder.html#MyApp_Auth_Application_Tests_Builders_RoleBuilder_WithCreatedAt_System_DateTime_
  commentId: M:MyApp.Auth.Application.Tests.Builders.RoleBuilder.WithCreatedAt(System.DateTime)
  name.vb: WithCreatedAt(Date)
  fullName: MyApp.Auth.Application.Tests.Builders.RoleBuilder.WithCreatedAt(System.DateTime)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.RoleBuilder.WithCreatedAt(Date)
  nameWithType: RoleBuilder.WithCreatedAt(DateTime)
  nameWithType.vb: RoleBuilder.WithCreatedAt(Date)
- uid: MyApp.Auth.Application.Tests.Builders.RoleBuilder.WithCreatedAt*
  name: WithCreatedAt
  href: api/MyApp.Auth.Application.Tests.Builders.RoleBuilder.html#MyApp_Auth_Application_Tests_Builders_RoleBuilder_WithCreatedAt_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.RoleBuilder.WithCreatedAt
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.RoleBuilder.WithCreatedAt
  nameWithType: RoleBuilder.WithCreatedAt
- uid: MyApp.Auth.Application.Tests.Builders.RoleBuilder.WithDescription(System.String)
  name: WithDescription(string)
  href: api/MyApp.Auth.Application.Tests.Builders.RoleBuilder.html#MyApp_Auth_Application_Tests_Builders_RoleBuilder_WithDescription_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.RoleBuilder.WithDescription(System.String)
  name.vb: WithDescription(String)
  fullName: MyApp.Auth.Application.Tests.Builders.RoleBuilder.WithDescription(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.RoleBuilder.WithDescription(String)
  nameWithType: RoleBuilder.WithDescription(string)
  nameWithType.vb: RoleBuilder.WithDescription(String)
- uid: MyApp.Auth.Application.Tests.Builders.RoleBuilder.WithDescription*
  name: WithDescription
  href: api/MyApp.Auth.Application.Tests.Builders.RoleBuilder.html#MyApp_Auth_Application_Tests_Builders_RoleBuilder_WithDescription_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.RoleBuilder.WithDescription
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.RoleBuilder.WithDescription
  nameWithType: RoleBuilder.WithDescription
- uid: MyApp.Auth.Application.Tests.Builders.RoleBuilder.WithId(System.Guid)
  name: WithId(Guid)
  href: api/MyApp.Auth.Application.Tests.Builders.RoleBuilder.html#MyApp_Auth_Application_Tests_Builders_RoleBuilder_WithId_System_Guid_
  commentId: M:MyApp.Auth.Application.Tests.Builders.RoleBuilder.WithId(System.Guid)
  fullName: MyApp.Auth.Application.Tests.Builders.RoleBuilder.WithId(System.Guid)
  nameWithType: RoleBuilder.WithId(Guid)
- uid: MyApp.Auth.Application.Tests.Builders.RoleBuilder.WithId*
  name: WithId
  href: api/MyApp.Auth.Application.Tests.Builders.RoleBuilder.html#MyApp_Auth_Application_Tests_Builders_RoleBuilder_WithId_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.RoleBuilder.WithId
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.RoleBuilder.WithId
  nameWithType: RoleBuilder.WithId
- uid: MyApp.Auth.Application.Tests.Builders.RoleBuilder.WithName(System.String)
  name: WithName(string)
  href: api/MyApp.Auth.Application.Tests.Builders.RoleBuilder.html#MyApp_Auth_Application_Tests_Builders_RoleBuilder_WithName_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.RoleBuilder.WithName(System.String)
  name.vb: WithName(String)
  fullName: MyApp.Auth.Application.Tests.Builders.RoleBuilder.WithName(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.RoleBuilder.WithName(String)
  nameWithType: RoleBuilder.WithName(string)
  nameWithType.vb: RoleBuilder.WithName(String)
- uid: MyApp.Auth.Application.Tests.Builders.RoleBuilder.WithName*
  name: WithName
  href: api/MyApp.Auth.Application.Tests.Builders.RoleBuilder.html#MyApp_Auth_Application_Tests_Builders_RoleBuilder_WithName_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.RoleBuilder.WithName
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.RoleBuilder.WithName
  nameWithType: RoleBuilder.WithName
- uid: MyApp.Auth.Application.Tests.Builders.RoleBuilder.WithUpdatedAt(System.DateTime)
  name: WithUpdatedAt(DateTime)
  href: api/MyApp.Auth.Application.Tests.Builders.RoleBuilder.html#MyApp_Auth_Application_Tests_Builders_RoleBuilder_WithUpdatedAt_System_DateTime_
  commentId: M:MyApp.Auth.Application.Tests.Builders.RoleBuilder.WithUpdatedAt(System.DateTime)
  name.vb: WithUpdatedAt(Date)
  fullName: MyApp.Auth.Application.Tests.Builders.RoleBuilder.WithUpdatedAt(System.DateTime)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.RoleBuilder.WithUpdatedAt(Date)
  nameWithType: RoleBuilder.WithUpdatedAt(DateTime)
  nameWithType.vb: RoleBuilder.WithUpdatedAt(Date)
- uid: MyApp.Auth.Application.Tests.Builders.RoleBuilder.WithUpdatedAt*
  name: WithUpdatedAt
  href: api/MyApp.Auth.Application.Tests.Builders.RoleBuilder.html#MyApp_Auth_Application_Tests_Builders_RoleBuilder_WithUpdatedAt_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.RoleBuilder.WithUpdatedAt
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.RoleBuilder.WithUpdatedAt
  nameWithType: RoleBuilder.WithUpdatedAt
- uid: MyApp.Auth.Application.Tests.Builders.RoleBuilder.op_Implicit(MyApp.Auth.Application.Tests.Builders.RoleBuilder)~MyApp.Auth.Domain.Entities.ApplicationRole
  name: implicit operator ApplicationRole(RoleBuilder)
  href: api/MyApp.Auth.Application.Tests.Builders.RoleBuilder.html#MyApp_Auth_Application_Tests_Builders_RoleBuilder_op_Implicit_MyApp_Auth_Application_Tests_Builders_RoleBuilder__MyApp_Auth_Domain_Entities_ApplicationRole
  commentId: M:MyApp.Auth.Application.Tests.Builders.RoleBuilder.op_Implicit(MyApp.Auth.Application.Tests.Builders.RoleBuilder)~MyApp.Auth.Domain.Entities.ApplicationRole
  name.vb: CType(RoleBuilder)
  fullName: MyApp.Auth.Application.Tests.Builders.RoleBuilder.implicit operator MyApp.Auth.Domain.Entities.ApplicationRole(MyApp.Auth.Application.Tests.Builders.RoleBuilder)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.RoleBuilder.CType(MyApp.Auth.Application.Tests.Builders.RoleBuilder)
  nameWithType: RoleBuilder.implicit operator ApplicationRole(RoleBuilder)
  nameWithType.vb: RoleBuilder.CType(RoleBuilder)
- uid: MyApp.Auth.Application.Tests.Builders.RoleBuilder.op_Implicit*
  name: implicit operator
  href: api/MyApp.Auth.Application.Tests.Builders.RoleBuilder.html#MyApp_Auth_Application_Tests_Builders_RoleBuilder_op_Implicit_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.RoleBuilder.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: MyApp.Auth.Application.Tests.Builders.RoleBuilder.implicit operator
  fullName.vb: MyApp.Auth.Application.Tests.Builders.RoleBuilder.CType
  nameWithType: RoleBuilder.implicit operator
  nameWithType.vb: RoleBuilder.CType
- uid: MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder
  name: RoleDtoBuilder
  href: api/MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.html
  commentId: T:MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder
  fullName: MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder
  nameWithType: RoleDtoBuilder
- uid: MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.Build
  name: Build()
  href: api/MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_RoleDtoBuilder_Build
  commentId: M:MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.Build
  fullName: MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.Build()
  nameWithType: RoleDtoBuilder.Build()
- uid: MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.Build*
  name: Build
  href: api/MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_RoleDtoBuilder_Build_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.Build
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.Build
  nameWithType: RoleDtoBuilder.Build
- uid: MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.WithDescription(System.String)
  name: WithDescription(string)
  href: api/MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_RoleDtoBuilder_WithDescription_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.WithDescription(System.String)
  name.vb: WithDescription(String)
  fullName: MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.WithDescription(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.WithDescription(String)
  nameWithType: RoleDtoBuilder.WithDescription(string)
  nameWithType.vb: RoleDtoBuilder.WithDescription(String)
- uid: MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.WithDescription*
  name: WithDescription
  href: api/MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_RoleDtoBuilder_WithDescription_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.WithDescription
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.WithDescription
  nameWithType: RoleDtoBuilder.WithDescription
- uid: MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.WithId(System.Guid)
  name: WithId(Guid)
  href: api/MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_RoleDtoBuilder_WithId_System_Guid_
  commentId: M:MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.WithId(System.Guid)
  fullName: MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.WithId(System.Guid)
  nameWithType: RoleDtoBuilder.WithId(Guid)
- uid: MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.WithId*
  name: WithId
  href: api/MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_RoleDtoBuilder_WithId_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.WithId
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.WithId
  nameWithType: RoleDtoBuilder.WithId
- uid: MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.WithName(System.String)
  name: WithName(string)
  href: api/MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_RoleDtoBuilder_WithName_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.WithName(System.String)
  name.vb: WithName(String)
  fullName: MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.WithName(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.WithName(String)
  nameWithType: RoleDtoBuilder.WithName(string)
  nameWithType.vb: RoleDtoBuilder.WithName(String)
- uid: MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.WithName*
  name: WithName
  href: api/MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_RoleDtoBuilder_WithName_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.WithName
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.WithName
  nameWithType: RoleDtoBuilder.WithName
- uid: MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.op_Implicit(MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder)~MyApp.Auth.Application.Contracts.DTOs.RoleDto
  name: implicit operator RoleDto(RoleDtoBuilder)
  href: api/MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_RoleDtoBuilder_op_Implicit_MyApp_Auth_Application_Tests_Builders_RoleDtoBuilder__MyApp_Auth_Application_Contracts_DTOs_RoleDto
  commentId: M:MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.op_Implicit(MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder)~MyApp.Auth.Application.Contracts.DTOs.RoleDto
  name.vb: CType(RoleDtoBuilder)
  fullName: MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.implicit operator MyApp.Auth.Application.Contracts.DTOs.RoleDto(MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.CType(MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder)
  nameWithType: RoleDtoBuilder.implicit operator RoleDto(RoleDtoBuilder)
  nameWithType.vb: RoleDtoBuilder.CType(RoleDtoBuilder)
- uid: MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.op_Implicit*
  name: implicit operator
  href: api/MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_RoleDtoBuilder_op_Implicit_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.implicit operator
  fullName.vb: MyApp.Auth.Application.Tests.Builders.RoleDtoBuilder.CType
  nameWithType: RoleDtoBuilder.implicit operator
  nameWithType.vb: RoleDtoBuilder.CType
- uid: MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder
  name: TokenResponseDtoBuilder
  href: api/MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.html
  commentId: T:MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder
  fullName: MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder
  nameWithType: TokenResponseDtoBuilder
- uid: MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.Build
  name: Build()
  href: api/MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_TokenResponseDtoBuilder_Build
  commentId: M:MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.Build
  fullName: MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.Build()
  nameWithType: TokenResponseDtoBuilder.Build()
- uid: MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.Build*
  name: Build
  href: api/MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_TokenResponseDtoBuilder_Build_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.Build
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.Build
  nameWithType: TokenResponseDtoBuilder.Build
- uid: MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.WithAccessToken(System.String)
  name: WithAccessToken(string)
  href: api/MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_TokenResponseDtoBuilder_WithAccessToken_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.WithAccessToken(System.String)
  name.vb: WithAccessToken(String)
  fullName: MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.WithAccessToken(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.WithAccessToken(String)
  nameWithType: TokenResponseDtoBuilder.WithAccessToken(string)
  nameWithType.vb: TokenResponseDtoBuilder.WithAccessToken(String)
- uid: MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.WithAccessToken*
  name: WithAccessToken
  href: api/MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_TokenResponseDtoBuilder_WithAccessToken_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.WithAccessToken
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.WithAccessToken
  nameWithType: TokenResponseDtoBuilder.WithAccessToken
- uid: MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.WithExpiresIn(System.Int32)
  name: WithExpiresIn(int)
  href: api/MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_TokenResponseDtoBuilder_WithExpiresIn_System_Int32_
  commentId: M:MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.WithExpiresIn(System.Int32)
  name.vb: WithExpiresIn(Integer)
  fullName: MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.WithExpiresIn(int)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.WithExpiresIn(Integer)
  nameWithType: TokenResponseDtoBuilder.WithExpiresIn(int)
  nameWithType.vb: TokenResponseDtoBuilder.WithExpiresIn(Integer)
- uid: MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.WithExpiresIn*
  name: WithExpiresIn
  href: api/MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_TokenResponseDtoBuilder_WithExpiresIn_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.WithExpiresIn
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.WithExpiresIn
  nameWithType: TokenResponseDtoBuilder.WithExpiresIn
- uid: MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.WithRefreshToken(System.String)
  name: WithRefreshToken(string)
  href: api/MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_TokenResponseDtoBuilder_WithRefreshToken_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.WithRefreshToken(System.String)
  name.vb: WithRefreshToken(String)
  fullName: MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.WithRefreshToken(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.WithRefreshToken(String)
  nameWithType: TokenResponseDtoBuilder.WithRefreshToken(string)
  nameWithType.vb: TokenResponseDtoBuilder.WithRefreshToken(String)
- uid: MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.WithRefreshToken*
  name: WithRefreshToken
  href: api/MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_TokenResponseDtoBuilder_WithRefreshToken_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.WithRefreshToken
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.WithRefreshToken
  nameWithType: TokenResponseDtoBuilder.WithRefreshToken
- uid: MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.WithTokenType(System.String)
  name: WithTokenType(string)
  href: api/MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_TokenResponseDtoBuilder_WithTokenType_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.WithTokenType(System.String)
  name.vb: WithTokenType(String)
  fullName: MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.WithTokenType(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.WithTokenType(String)
  nameWithType: TokenResponseDtoBuilder.WithTokenType(string)
  nameWithType.vb: TokenResponseDtoBuilder.WithTokenType(String)
- uid: MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.WithTokenType*
  name: WithTokenType
  href: api/MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_TokenResponseDtoBuilder_WithTokenType_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.WithTokenType
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.WithTokenType
  nameWithType: TokenResponseDtoBuilder.WithTokenType
- uid: MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.op_Implicit(MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder)~MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto
  name: implicit operator TokenResponseDto(TokenResponseDtoBuilder)
  href: api/MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_TokenResponseDtoBuilder_op_Implicit_MyApp_Auth_Application_Tests_Builders_TokenResponseDtoBuilder__MyApp_Auth_Application_Contracts_DTOs_TokenResponseDto
  commentId: M:MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.op_Implicit(MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder)~MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto
  name.vb: CType(TokenResponseDtoBuilder)
  fullName: MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.implicit operator MyApp.Auth.Application.Contracts.DTOs.TokenResponseDto(MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.CType(MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder)
  nameWithType: TokenResponseDtoBuilder.implicit operator TokenResponseDto(TokenResponseDtoBuilder)
  nameWithType.vb: TokenResponseDtoBuilder.CType(TokenResponseDtoBuilder)
- uid: MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.op_Implicit*
  name: implicit operator
  href: api/MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_TokenResponseDtoBuilder_op_Implicit_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.implicit operator
  fullName.vb: MyApp.Auth.Application.Tests.Builders.TokenResponseDtoBuilder.CType
  nameWithType: TokenResponseDtoBuilder.implicit operator
  nameWithType.vb: TokenResponseDtoBuilder.CType
- uid: MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder
  name: UpdateRoleDtoBuilder
  href: api/MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder.html
  commentId: T:MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder
  fullName: MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder
  nameWithType: UpdateRoleDtoBuilder
- uid: MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder.Build
  name: Build()
  href: api/MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_UpdateRoleDtoBuilder_Build
  commentId: M:MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder.Build
  fullName: MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder.Build()
  nameWithType: UpdateRoleDtoBuilder.Build()
- uid: MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder.Build*
  name: Build
  href: api/MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_UpdateRoleDtoBuilder_Build_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder.Build
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder.Build
  nameWithType: UpdateRoleDtoBuilder.Build
- uid: MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder.WithDescription(System.String)
  name: WithDescription(string)
  href: api/MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_UpdateRoleDtoBuilder_WithDescription_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder.WithDescription(System.String)
  name.vb: WithDescription(String)
  fullName: MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder.WithDescription(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder.WithDescription(String)
  nameWithType: UpdateRoleDtoBuilder.WithDescription(string)
  nameWithType.vb: UpdateRoleDtoBuilder.WithDescription(String)
- uid: MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder.WithDescription*
  name: WithDescription
  href: api/MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_UpdateRoleDtoBuilder_WithDescription_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder.WithDescription
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder.WithDescription
  nameWithType: UpdateRoleDtoBuilder.WithDescription
- uid: MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder.WithName(System.String)
  name: WithName(string)
  href: api/MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_UpdateRoleDtoBuilder_WithName_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder.WithName(System.String)
  name.vb: WithName(String)
  fullName: MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder.WithName(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder.WithName(String)
  nameWithType: UpdateRoleDtoBuilder.WithName(string)
  nameWithType.vb: UpdateRoleDtoBuilder.WithName(String)
- uid: MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder.WithName*
  name: WithName
  href: api/MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_UpdateRoleDtoBuilder_WithName_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder.WithName
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder.WithName
  nameWithType: UpdateRoleDtoBuilder.WithName
- uid: MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder.op_Implicit(MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder)~MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto
  name: implicit operator CreateRoleDto(UpdateRoleDtoBuilder)
  href: api/MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_UpdateRoleDtoBuilder_op_Implicit_MyApp_Auth_Application_Tests_Builders_UpdateRoleDtoBuilder__MyApp_Auth_Application_Contracts_DTOs_CreateRoleDto
  commentId: M:MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder.op_Implicit(MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder)~MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto
  name.vb: CType(UpdateRoleDtoBuilder)
  fullName: MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder.implicit operator MyApp.Auth.Application.Contracts.DTOs.CreateRoleDto(MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder.CType(MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder)
  nameWithType: UpdateRoleDtoBuilder.implicit operator CreateRoleDto(UpdateRoleDtoBuilder)
  nameWithType.vb: UpdateRoleDtoBuilder.CType(UpdateRoleDtoBuilder)
- uid: MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder.op_Implicit*
  name: implicit operator
  href: api/MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_UpdateRoleDtoBuilder_op_Implicit_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder.implicit operator
  fullName.vb: MyApp.Auth.Application.Tests.Builders.UpdateRoleDtoBuilder.CType
  nameWithType: UpdateRoleDtoBuilder.implicit operator
  nameWithType.vb: UpdateRoleDtoBuilder.CType
- uid: MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder
  name: UpdateUserDtoBuilder
  href: api/MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.html
  commentId: T:MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder
  fullName: MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder
  nameWithType: UpdateUserDtoBuilder
- uid: MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.Build
  name: Build()
  href: api/MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_UpdateUserDtoBuilder_Build
  commentId: M:MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.Build
  fullName: MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.Build()
  nameWithType: UpdateUserDtoBuilder.Build()
- uid: MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.Build*
  name: Build
  href: api/MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_UpdateUserDtoBuilder_Build_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.Build
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.Build
  nameWithType: UpdateUserDtoBuilder.Build
- uid: MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.WithEmail(System.String)
  name: WithEmail(string)
  href: api/MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_UpdateUserDtoBuilder_WithEmail_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.WithEmail(System.String)
  name.vb: WithEmail(String)
  fullName: MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.WithEmail(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.WithEmail(String)
  nameWithType: UpdateUserDtoBuilder.WithEmail(string)
  nameWithType.vb: UpdateUserDtoBuilder.WithEmail(String)
- uid: MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.WithEmail*
  name: WithEmail
  href: api/MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_UpdateUserDtoBuilder_WithEmail_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.WithEmail
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.WithEmail
  nameWithType: UpdateUserDtoBuilder.WithEmail
- uid: MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.WithFirstName(System.String)
  name: WithFirstName(string)
  href: api/MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_UpdateUserDtoBuilder_WithFirstName_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.WithFirstName(System.String)
  name.vb: WithFirstName(String)
  fullName: MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.WithFirstName(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.WithFirstName(String)
  nameWithType: UpdateUserDtoBuilder.WithFirstName(string)
  nameWithType.vb: UpdateUserDtoBuilder.WithFirstName(String)
- uid: MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.WithFirstName*
  name: WithFirstName
  href: api/MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_UpdateUserDtoBuilder_WithFirstName_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.WithFirstName
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.WithFirstName
  nameWithType: UpdateUserDtoBuilder.WithFirstName
- uid: MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.WithLastName(System.String)
  name: WithLastName(string)
  href: api/MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_UpdateUserDtoBuilder_WithLastName_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.WithLastName(System.String)
  name.vb: WithLastName(String)
  fullName: MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.WithLastName(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.WithLastName(String)
  nameWithType: UpdateUserDtoBuilder.WithLastName(string)
  nameWithType.vb: UpdateUserDtoBuilder.WithLastName(String)
- uid: MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.WithLastName*
  name: WithLastName
  href: api/MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_UpdateUserDtoBuilder_WithLastName_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.WithLastName
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.WithLastName
  nameWithType: UpdateUserDtoBuilder.WithLastName
- uid: MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.op_Implicit(MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder)~MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto
  name: implicit operator UpdateUserDto(UpdateUserDtoBuilder)
  href: api/MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_UpdateUserDtoBuilder_op_Implicit_MyApp_Auth_Application_Tests_Builders_UpdateUserDtoBuilder__MyApp_Auth_Application_Contracts_DTOs_UpdateUserDto
  commentId: M:MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.op_Implicit(MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder)~MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto
  name.vb: CType(UpdateUserDtoBuilder)
  fullName: MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.implicit operator MyApp.Auth.Application.Contracts.DTOs.UpdateUserDto(MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.CType(MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder)
  nameWithType: UpdateUserDtoBuilder.implicit operator UpdateUserDto(UpdateUserDtoBuilder)
  nameWithType.vb: UpdateUserDtoBuilder.CType(UpdateUserDtoBuilder)
- uid: MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.op_Implicit*
  name: implicit operator
  href: api/MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_UpdateUserDtoBuilder_op_Implicit_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.implicit operator
  fullName.vb: MyApp.Auth.Application.Tests.Builders.UpdateUserDtoBuilder.CType
  nameWithType: UpdateUserDtoBuilder.implicit operator
  nameWithType.vb: UpdateUserDtoBuilder.CType
- uid: MyApp.Auth.Application.Tests.Builders.UserBuilder
  name: UserBuilder
  href: api/MyApp.Auth.Application.Tests.Builders.UserBuilder.html
  commentId: T:MyApp.Auth.Application.Tests.Builders.UserBuilder
  fullName: MyApp.Auth.Application.Tests.Builders.UserBuilder
  nameWithType: UserBuilder
- uid: MyApp.Auth.Application.Tests.Builders.UserBuilder.Build
  name: Build()
  href: api/MyApp.Auth.Application.Tests.Builders.UserBuilder.html#MyApp_Auth_Application_Tests_Builders_UserBuilder_Build
  commentId: M:MyApp.Auth.Application.Tests.Builders.UserBuilder.Build
  fullName: MyApp.Auth.Application.Tests.Builders.UserBuilder.Build()
  nameWithType: UserBuilder.Build()
- uid: MyApp.Auth.Application.Tests.Builders.UserBuilder.Build*
  name: Build
  href: api/MyApp.Auth.Application.Tests.Builders.UserBuilder.html#MyApp_Auth_Application_Tests_Builders_UserBuilder_Build_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.UserBuilder.Build
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.UserBuilder.Build
  nameWithType: UserBuilder.Build
- uid: MyApp.Auth.Application.Tests.Builders.UserBuilder.WithCreatedAt(System.DateTime)
  name: WithCreatedAt(DateTime)
  href: api/MyApp.Auth.Application.Tests.Builders.UserBuilder.html#MyApp_Auth_Application_Tests_Builders_UserBuilder_WithCreatedAt_System_DateTime_
  commentId: M:MyApp.Auth.Application.Tests.Builders.UserBuilder.WithCreatedAt(System.DateTime)
  name.vb: WithCreatedAt(Date)
  fullName: MyApp.Auth.Application.Tests.Builders.UserBuilder.WithCreatedAt(System.DateTime)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.UserBuilder.WithCreatedAt(Date)
  nameWithType: UserBuilder.WithCreatedAt(DateTime)
  nameWithType.vb: UserBuilder.WithCreatedAt(Date)
- uid: MyApp.Auth.Application.Tests.Builders.UserBuilder.WithCreatedAt*
  name: WithCreatedAt
  href: api/MyApp.Auth.Application.Tests.Builders.UserBuilder.html#MyApp_Auth_Application_Tests_Builders_UserBuilder_WithCreatedAt_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.UserBuilder.WithCreatedAt
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.UserBuilder.WithCreatedAt
  nameWithType: UserBuilder.WithCreatedAt
- uid: MyApp.Auth.Application.Tests.Builders.UserBuilder.WithEmail(System.String)
  name: WithEmail(string)
  href: api/MyApp.Auth.Application.Tests.Builders.UserBuilder.html#MyApp_Auth_Application_Tests_Builders_UserBuilder_WithEmail_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.UserBuilder.WithEmail(System.String)
  name.vb: WithEmail(String)
  fullName: MyApp.Auth.Application.Tests.Builders.UserBuilder.WithEmail(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.UserBuilder.WithEmail(String)
  nameWithType: UserBuilder.WithEmail(string)
  nameWithType.vb: UserBuilder.WithEmail(String)
- uid: MyApp.Auth.Application.Tests.Builders.UserBuilder.WithEmail*
  name: WithEmail
  href: api/MyApp.Auth.Application.Tests.Builders.UserBuilder.html#MyApp_Auth_Application_Tests_Builders_UserBuilder_WithEmail_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.UserBuilder.WithEmail
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.UserBuilder.WithEmail
  nameWithType: UserBuilder.WithEmail
- uid: MyApp.Auth.Application.Tests.Builders.UserBuilder.WithEmailConfirmed(System.Boolean)
  name: WithEmailConfirmed(bool)
  href: api/MyApp.Auth.Application.Tests.Builders.UserBuilder.html#MyApp_Auth_Application_Tests_Builders_UserBuilder_WithEmailConfirmed_System_Boolean_
  commentId: M:MyApp.Auth.Application.Tests.Builders.UserBuilder.WithEmailConfirmed(System.Boolean)
  name.vb: WithEmailConfirmed(Boolean)
  fullName: MyApp.Auth.Application.Tests.Builders.UserBuilder.WithEmailConfirmed(bool)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.UserBuilder.WithEmailConfirmed(Boolean)
  nameWithType: UserBuilder.WithEmailConfirmed(bool)
  nameWithType.vb: UserBuilder.WithEmailConfirmed(Boolean)
- uid: MyApp.Auth.Application.Tests.Builders.UserBuilder.WithEmailConfirmed*
  name: WithEmailConfirmed
  href: api/MyApp.Auth.Application.Tests.Builders.UserBuilder.html#MyApp_Auth_Application_Tests_Builders_UserBuilder_WithEmailConfirmed_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.UserBuilder.WithEmailConfirmed
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.UserBuilder.WithEmailConfirmed
  nameWithType: UserBuilder.WithEmailConfirmed
- uid: MyApp.Auth.Application.Tests.Builders.UserBuilder.WithFirstName(System.String)
  name: WithFirstName(string)
  href: api/MyApp.Auth.Application.Tests.Builders.UserBuilder.html#MyApp_Auth_Application_Tests_Builders_UserBuilder_WithFirstName_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.UserBuilder.WithFirstName(System.String)
  name.vb: WithFirstName(String)
  fullName: MyApp.Auth.Application.Tests.Builders.UserBuilder.WithFirstName(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.UserBuilder.WithFirstName(String)
  nameWithType: UserBuilder.WithFirstName(string)
  nameWithType.vb: UserBuilder.WithFirstName(String)
- uid: MyApp.Auth.Application.Tests.Builders.UserBuilder.WithFirstName*
  name: WithFirstName
  href: api/MyApp.Auth.Application.Tests.Builders.UserBuilder.html#MyApp_Auth_Application_Tests_Builders_UserBuilder_WithFirstName_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.UserBuilder.WithFirstName
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.UserBuilder.WithFirstName
  nameWithType: UserBuilder.WithFirstName
- uid: MyApp.Auth.Application.Tests.Builders.UserBuilder.WithId(System.Guid)
  name: WithId(Guid)
  href: api/MyApp.Auth.Application.Tests.Builders.UserBuilder.html#MyApp_Auth_Application_Tests_Builders_UserBuilder_WithId_System_Guid_
  commentId: M:MyApp.Auth.Application.Tests.Builders.UserBuilder.WithId(System.Guid)
  fullName: MyApp.Auth.Application.Tests.Builders.UserBuilder.WithId(System.Guid)
  nameWithType: UserBuilder.WithId(Guid)
- uid: MyApp.Auth.Application.Tests.Builders.UserBuilder.WithId*
  name: WithId
  href: api/MyApp.Auth.Application.Tests.Builders.UserBuilder.html#MyApp_Auth_Application_Tests_Builders_UserBuilder_WithId_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.UserBuilder.WithId
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.UserBuilder.WithId
  nameWithType: UserBuilder.WithId
- uid: MyApp.Auth.Application.Tests.Builders.UserBuilder.WithLastName(System.String)
  name: WithLastName(string)
  href: api/MyApp.Auth.Application.Tests.Builders.UserBuilder.html#MyApp_Auth_Application_Tests_Builders_UserBuilder_WithLastName_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.UserBuilder.WithLastName(System.String)
  name.vb: WithLastName(String)
  fullName: MyApp.Auth.Application.Tests.Builders.UserBuilder.WithLastName(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.UserBuilder.WithLastName(String)
  nameWithType: UserBuilder.WithLastName(string)
  nameWithType.vb: UserBuilder.WithLastName(String)
- uid: MyApp.Auth.Application.Tests.Builders.UserBuilder.WithLastName*
  name: WithLastName
  href: api/MyApp.Auth.Application.Tests.Builders.UserBuilder.html#MyApp_Auth_Application_Tests_Builders_UserBuilder_WithLastName_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.UserBuilder.WithLastName
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.UserBuilder.WithLastName
  nameWithType: UserBuilder.WithLastName
- uid: MyApp.Auth.Application.Tests.Builders.UserBuilder.WithUserName(System.String)
  name: WithUserName(string)
  href: api/MyApp.Auth.Application.Tests.Builders.UserBuilder.html#MyApp_Auth_Application_Tests_Builders_UserBuilder_WithUserName_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.UserBuilder.WithUserName(System.String)
  name.vb: WithUserName(String)
  fullName: MyApp.Auth.Application.Tests.Builders.UserBuilder.WithUserName(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.UserBuilder.WithUserName(String)
  nameWithType: UserBuilder.WithUserName(string)
  nameWithType.vb: UserBuilder.WithUserName(String)
- uid: MyApp.Auth.Application.Tests.Builders.UserBuilder.WithUserName*
  name: WithUserName
  href: api/MyApp.Auth.Application.Tests.Builders.UserBuilder.html#MyApp_Auth_Application_Tests_Builders_UserBuilder_WithUserName_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.UserBuilder.WithUserName
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.UserBuilder.WithUserName
  nameWithType: UserBuilder.WithUserName
- uid: MyApp.Auth.Application.Tests.Builders.UserBuilder.op_Implicit(MyApp.Auth.Application.Tests.Builders.UserBuilder)~MyApp.Auth.Domain.Entities.ApplicationUser
  name: implicit operator ApplicationUser(UserBuilder)
  href: api/MyApp.Auth.Application.Tests.Builders.UserBuilder.html#MyApp_Auth_Application_Tests_Builders_UserBuilder_op_Implicit_MyApp_Auth_Application_Tests_Builders_UserBuilder__MyApp_Auth_Domain_Entities_ApplicationUser
  commentId: M:MyApp.Auth.Application.Tests.Builders.UserBuilder.op_Implicit(MyApp.Auth.Application.Tests.Builders.UserBuilder)~MyApp.Auth.Domain.Entities.ApplicationUser
  name.vb: CType(UserBuilder)
  fullName: MyApp.Auth.Application.Tests.Builders.UserBuilder.implicit operator MyApp.Auth.Domain.Entities.ApplicationUser(MyApp.Auth.Application.Tests.Builders.UserBuilder)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.UserBuilder.CType(MyApp.Auth.Application.Tests.Builders.UserBuilder)
  nameWithType: UserBuilder.implicit operator ApplicationUser(UserBuilder)
  nameWithType.vb: UserBuilder.CType(UserBuilder)
- uid: MyApp.Auth.Application.Tests.Builders.UserBuilder.op_Implicit*
  name: implicit operator
  href: api/MyApp.Auth.Application.Tests.Builders.UserBuilder.html#MyApp_Auth_Application_Tests_Builders_UserBuilder_op_Implicit_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.UserBuilder.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: MyApp.Auth.Application.Tests.Builders.UserBuilder.implicit operator
  fullName.vb: MyApp.Auth.Application.Tests.Builders.UserBuilder.CType
  nameWithType: UserBuilder.implicit operator
  nameWithType.vb: UserBuilder.CType
- uid: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder
  name: UserDtoBuilder
  href: api/MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.html
  commentId: T:MyApp.Auth.Application.Tests.Builders.UserDtoBuilder
  fullName: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder
  nameWithType: UserDtoBuilder
- uid: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.Build
  name: Build()
  href: api/MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_UserDtoBuilder_Build
  commentId: M:MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.Build
  fullName: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.Build()
  nameWithType: UserDtoBuilder.Build()
- uid: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.Build*
  name: Build
  href: api/MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_UserDtoBuilder_Build_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.Build
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.Build
  nameWithType: UserDtoBuilder.Build
- uid: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithEmail(System.String)
  name: WithEmail(string)
  href: api/MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_UserDtoBuilder_WithEmail_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithEmail(System.String)
  name.vb: WithEmail(String)
  fullName: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithEmail(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithEmail(String)
  nameWithType: UserDtoBuilder.WithEmail(string)
  nameWithType.vb: UserDtoBuilder.WithEmail(String)
- uid: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithEmail*
  name: WithEmail
  href: api/MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_UserDtoBuilder_WithEmail_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithEmail
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithEmail
  nameWithType: UserDtoBuilder.WithEmail
- uid: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithEmailConfirmed(System.Boolean)
  name: WithEmailConfirmed(bool)
  href: api/MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_UserDtoBuilder_WithEmailConfirmed_System_Boolean_
  commentId: M:MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithEmailConfirmed(System.Boolean)
  name.vb: WithEmailConfirmed(Boolean)
  fullName: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithEmailConfirmed(bool)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithEmailConfirmed(Boolean)
  nameWithType: UserDtoBuilder.WithEmailConfirmed(bool)
  nameWithType.vb: UserDtoBuilder.WithEmailConfirmed(Boolean)
- uid: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithEmailConfirmed*
  name: WithEmailConfirmed
  href: api/MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_UserDtoBuilder_WithEmailConfirmed_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithEmailConfirmed
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithEmailConfirmed
  nameWithType: UserDtoBuilder.WithEmailConfirmed
- uid: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithFirstName(System.String)
  name: WithFirstName(string)
  href: api/MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_UserDtoBuilder_WithFirstName_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithFirstName(System.String)
  name.vb: WithFirstName(String)
  fullName: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithFirstName(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithFirstName(String)
  nameWithType: UserDtoBuilder.WithFirstName(string)
  nameWithType.vb: UserDtoBuilder.WithFirstName(String)
- uid: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithFirstName*
  name: WithFirstName
  href: api/MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_UserDtoBuilder_WithFirstName_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithFirstName
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithFirstName
  nameWithType: UserDtoBuilder.WithFirstName
- uid: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithId(System.Guid)
  name: WithId(Guid)
  href: api/MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_UserDtoBuilder_WithId_System_Guid_
  commentId: M:MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithId(System.Guid)
  fullName: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithId(System.Guid)
  nameWithType: UserDtoBuilder.WithId(Guid)
- uid: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithId*
  name: WithId
  href: api/MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_UserDtoBuilder_WithId_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithId
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithId
  nameWithType: UserDtoBuilder.WithId
- uid: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithLastName(System.String)
  name: WithLastName(string)
  href: api/MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_UserDtoBuilder_WithLastName_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithLastName(System.String)
  name.vb: WithLastName(String)
  fullName: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithLastName(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithLastName(String)
  nameWithType: UserDtoBuilder.WithLastName(string)
  nameWithType.vb: UserDtoBuilder.WithLastName(String)
- uid: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithLastName*
  name: WithLastName
  href: api/MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_UserDtoBuilder_WithLastName_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithLastName
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithLastName
  nameWithType: UserDtoBuilder.WithLastName
- uid: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithUserName(System.String)
  name: WithUserName(string)
  href: api/MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_UserDtoBuilder_WithUserName_System_String_
  commentId: M:MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithUserName(System.String)
  name.vb: WithUserName(String)
  fullName: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithUserName(string)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithUserName(String)
  nameWithType: UserDtoBuilder.WithUserName(string)
  nameWithType.vb: UserDtoBuilder.WithUserName(String)
- uid: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithUserName*
  name: WithUserName
  href: api/MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_UserDtoBuilder_WithUserName_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithUserName
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.WithUserName
  nameWithType: UserDtoBuilder.WithUserName
- uid: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.op_Implicit(MyApp.Auth.Application.Tests.Builders.UserDtoBuilder)~MyApp.Auth.Application.Contracts.DTOs.UserDto
  name: implicit operator UserDto(UserDtoBuilder)
  href: api/MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_UserDtoBuilder_op_Implicit_MyApp_Auth_Application_Tests_Builders_UserDtoBuilder__MyApp_Auth_Application_Contracts_DTOs_UserDto
  commentId: M:MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.op_Implicit(MyApp.Auth.Application.Tests.Builders.UserDtoBuilder)~MyApp.Auth.Application.Contracts.DTOs.UserDto
  name.vb: CType(UserDtoBuilder)
  fullName: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.implicit operator MyApp.Auth.Application.Contracts.DTOs.UserDto(MyApp.Auth.Application.Tests.Builders.UserDtoBuilder)
  fullName.vb: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.CType(MyApp.Auth.Application.Tests.Builders.UserDtoBuilder)
  nameWithType: UserDtoBuilder.implicit operator UserDto(UserDtoBuilder)
  nameWithType.vb: UserDtoBuilder.CType(UserDtoBuilder)
- uid: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.op_Implicit*
  name: implicit operator
  href: api/MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.html#MyApp_Auth_Application_Tests_Builders_UserDtoBuilder_op_Implicit_
  commentId: Overload:MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.implicit operator
  fullName.vb: MyApp.Auth.Application.Tests.Builders.UserDtoBuilder.CType
  nameWithType: UserDtoBuilder.implicit operator
  nameWithType.vb: UserDtoBuilder.CType
- uid: MyApp.Auth.Application.Tests.Common
  name: MyApp.Auth.Application.Tests.Common
  href: api/MyApp.Auth.Application.Tests.Common.html
  commentId: N:MyApp.Auth.Application.Tests.Common
  fullName: MyApp.Auth.Application.Tests.Common
  nameWithType: MyApp.Auth.Application.Tests.Common
- uid: MyApp.Auth.Application.Tests.Common.BaseServiceTest
  name: BaseServiceTest
  href: api/MyApp.Auth.Application.Tests.Common.BaseServiceTest.html
  commentId: T:MyApp.Auth.Application.Tests.Common.BaseServiceTest
  fullName: MyApp.Auth.Application.Tests.Common.BaseServiceTest
  nameWithType: BaseServiceTest
- uid: MyApp.Auth.Application.Tests.Common.BaseServiceTest.#ctor
  name: BaseServiceTest()
  href: api/MyApp.Auth.Application.Tests.Common.BaseServiceTest.html#MyApp_Auth_Application_Tests_Common_BaseServiceTest__ctor
  commentId: M:MyApp.Auth.Application.Tests.Common.BaseServiceTest.#ctor
  name.vb: New()
  fullName: MyApp.Auth.Application.Tests.Common.BaseServiceTest.BaseServiceTest()
  fullName.vb: MyApp.Auth.Application.Tests.Common.BaseServiceTest.New()
  nameWithType: BaseServiceTest.BaseServiceTest()
  nameWithType.vb: BaseServiceTest.New()
- uid: MyApp.Auth.Application.Tests.Common.BaseServiceTest.#ctor*
  name: BaseServiceTest
  href: api/MyApp.Auth.Application.Tests.Common.BaseServiceTest.html#MyApp_Auth_Application_Tests_Common_BaseServiceTest__ctor_
  commentId: Overload:MyApp.Auth.Application.Tests.Common.BaseServiceTest.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Auth.Application.Tests.Common.BaseServiceTest.BaseServiceTest
  fullName.vb: MyApp.Auth.Application.Tests.Common.BaseServiceTest.New
  nameWithType: BaseServiceTest.BaseServiceTest
  nameWithType.vb: BaseServiceTest.New
- uid: MyApp.Auth.Application.Tests.Common.BaseServiceTest.CreateMockLogger*
  name: CreateMockLogger
  href: api/MyApp.Auth.Application.Tests.Common.BaseServiceTest.html#MyApp_Auth_Application_Tests_Common_BaseServiceTest_CreateMockLogger_
  commentId: Overload:MyApp.Auth.Application.Tests.Common.BaseServiceTest.CreateMockLogger
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Common.BaseServiceTest.CreateMockLogger
  nameWithType: BaseServiceTest.CreateMockLogger
- uid: MyApp.Auth.Application.Tests.Common.BaseServiceTest.CreateMockLogger``1
  name: CreateMockLogger<T>()
  href: api/MyApp.Auth.Application.Tests.Common.BaseServiceTest.html#MyApp_Auth_Application_Tests_Common_BaseServiceTest_CreateMockLogger__1
  commentId: M:MyApp.Auth.Application.Tests.Common.BaseServiceTest.CreateMockLogger``1
  name.vb: CreateMockLogger(Of T)()
  fullName: MyApp.Auth.Application.Tests.Common.BaseServiceTest.CreateMockLogger<T>()
  fullName.vb: MyApp.Auth.Application.Tests.Common.BaseServiceTest.CreateMockLogger(Of T)()
  nameWithType: BaseServiceTest.CreateMockLogger<T>()
  nameWithType.vb: BaseServiceTest.CreateMockLogger(Of T)()
- uid: MyApp.Auth.Application.Tests.Common.BaseServiceTest.Mapper
  name: Mapper
  href: api/MyApp.Auth.Application.Tests.Common.BaseServiceTest.html#MyApp_Auth_Application_Tests_Common_BaseServiceTest_Mapper
  commentId: F:MyApp.Auth.Application.Tests.Common.BaseServiceTest.Mapper
  fullName: MyApp.Auth.Application.Tests.Common.BaseServiceTest.Mapper
  nameWithType: BaseServiceTest.Mapper
- uid: MyApp.Auth.Application.Tests.Common.BaseServiceTest.MockMapper
  name: MockMapper
  href: api/MyApp.Auth.Application.Tests.Common.BaseServiceTest.html#MyApp_Auth_Application_Tests_Common_BaseServiceTest_MockMapper
  commentId: F:MyApp.Auth.Application.Tests.Common.BaseServiceTest.MockMapper
  fullName: MyApp.Auth.Application.Tests.Common.BaseServiceTest.MockMapper
  nameWithType: BaseServiceTest.MockMapper
- uid: MyApp.Auth.Application.Tests.Common.BaseServiceTest.VerifyLoggerCalled*
  name: VerifyLoggerCalled
  href: api/MyApp.Auth.Application.Tests.Common.BaseServiceTest.html#MyApp_Auth_Application_Tests_Common_BaseServiceTest_VerifyLoggerCalled_
  commentId: Overload:MyApp.Auth.Application.Tests.Common.BaseServiceTest.VerifyLoggerCalled
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Common.BaseServiceTest.VerifyLoggerCalled
  nameWithType: BaseServiceTest.VerifyLoggerCalled
- uid: MyApp.Auth.Application.Tests.Common.BaseServiceTest.VerifyLoggerCalled``1(Moq.Mock{Microsoft.Extensions.Logging.ILogger{``0}},Microsoft.Extensions.Logging.LogLevel,Moq.Times)
  name: VerifyLoggerCalled<T>(Mock<ILogger<T>>, LogLevel, Times)
  href: api/MyApp.Auth.Application.Tests.Common.BaseServiceTest.html#MyApp_Auth_Application_Tests_Common_BaseServiceTest_VerifyLoggerCalled__1_Moq_Mock_Microsoft_Extensions_Logging_ILogger___0___Microsoft_Extensions_Logging_LogLevel_Moq_Times_
  commentId: M:MyApp.Auth.Application.Tests.Common.BaseServiceTest.VerifyLoggerCalled``1(Moq.Mock{Microsoft.Extensions.Logging.ILogger{``0}},Microsoft.Extensions.Logging.LogLevel,Moq.Times)
  name.vb: VerifyLoggerCalled(Of T)(Mock(Of ILogger(Of T)), LogLevel, Times)
  fullName: MyApp.Auth.Application.Tests.Common.BaseServiceTest.VerifyLoggerCalled<T>(Moq.Mock<Microsoft.Extensions.Logging.ILogger<T>>, Microsoft.Extensions.Logging.LogLevel, Moq.Times)
  fullName.vb: MyApp.Auth.Application.Tests.Common.BaseServiceTest.VerifyLoggerCalled(Of T)(Moq.Mock(Of Microsoft.Extensions.Logging.ILogger(Of T)), Microsoft.Extensions.Logging.LogLevel, Moq.Times)
  nameWithType: BaseServiceTest.VerifyLoggerCalled<T>(Mock<ILogger<T>>, LogLevel, Times)
  nameWithType.vb: BaseServiceTest.VerifyLoggerCalled(Of T)(Mock(Of ILogger(Of T)), LogLevel, Times)
- uid: MyApp.Auth.Application.Tests.Services
  name: MyApp.Auth.Application.Tests.Services
  href: api/MyApp.Auth.Application.Tests.Services.html
  commentId: N:MyApp.Auth.Application.Tests.Services
  fullName: MyApp.Auth.Application.Tests.Services
  nameWithType: MyApp.Auth.Application.Tests.Services
- uid: MyApp.Auth.Application.Tests.Services.AuthServiceTests
  name: AuthServiceTests
  href: api/MyApp.Auth.Application.Tests.Services.AuthServiceTests.html
  commentId: T:MyApp.Auth.Application.Tests.Services.AuthServiceTests
  fullName: MyApp.Auth.Application.Tests.Services.AuthServiceTests
  nameWithType: AuthServiceTests
- uid: MyApp.Auth.Application.Tests.Services.AuthServiceTests.#ctor
  name: AuthServiceTests()
  href: api/MyApp.Auth.Application.Tests.Services.AuthServiceTests.html#MyApp_Auth_Application_Tests_Services_AuthServiceTests__ctor
  commentId: M:MyApp.Auth.Application.Tests.Services.AuthServiceTests.#ctor
  name.vb: New()
  fullName: MyApp.Auth.Application.Tests.Services.AuthServiceTests.AuthServiceTests()
  fullName.vb: MyApp.Auth.Application.Tests.Services.AuthServiceTests.New()
  nameWithType: AuthServiceTests.AuthServiceTests()
  nameWithType.vb: AuthServiceTests.New()
- uid: MyApp.Auth.Application.Tests.Services.AuthServiceTests.#ctor*
  name: AuthServiceTests
  href: api/MyApp.Auth.Application.Tests.Services.AuthServiceTests.html#MyApp_Auth_Application_Tests_Services_AuthServiceTests__ctor_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.AuthServiceTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Auth.Application.Tests.Services.AuthServiceTests.AuthServiceTests
  fullName.vb: MyApp.Auth.Application.Tests.Services.AuthServiceTests.New
  nameWithType: AuthServiceTests.AuthServiceTests
  nameWithType.vb: AuthServiceTests.New
- uid: MyApp.Auth.Application.Tests.Services.AuthServiceTests.ExternalLoginAsync_WithNewExternalUser_ShouldCreateUserAndReturnTokenResponse
  name: ExternalLoginAsync_WithNewExternalUser_ShouldCreateUserAndReturnTokenResponse()
  href: api/MyApp.Auth.Application.Tests.Services.AuthServiceTests.html#MyApp_Auth_Application_Tests_Services_AuthServiceTests_ExternalLoginAsync_WithNewExternalUser_ShouldCreateUserAndReturnTokenResponse
  commentId: M:MyApp.Auth.Application.Tests.Services.AuthServiceTests.ExternalLoginAsync_WithNewExternalUser_ShouldCreateUserAndReturnTokenResponse
  fullName: MyApp.Auth.Application.Tests.Services.AuthServiceTests.ExternalLoginAsync_WithNewExternalUser_ShouldCreateUserAndReturnTokenResponse()
  nameWithType: AuthServiceTests.ExternalLoginAsync_WithNewExternalUser_ShouldCreateUserAndReturnTokenResponse()
- uid: MyApp.Auth.Application.Tests.Services.AuthServiceTests.ExternalLoginAsync_WithNewExternalUser_ShouldCreateUserAndReturnTokenResponse*
  name: ExternalLoginAsync_WithNewExternalUser_ShouldCreateUserAndReturnTokenResponse
  href: api/MyApp.Auth.Application.Tests.Services.AuthServiceTests.html#MyApp_Auth_Application_Tests_Services_AuthServiceTests_ExternalLoginAsync_WithNewExternalUser_ShouldCreateUserAndReturnTokenResponse_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.AuthServiceTests.ExternalLoginAsync_WithNewExternalUser_ShouldCreateUserAndReturnTokenResponse
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.AuthServiceTests.ExternalLoginAsync_WithNewExternalUser_ShouldCreateUserAndReturnTokenResponse
  nameWithType: AuthServiceTests.ExternalLoginAsync_WithNewExternalUser_ShouldCreateUserAndReturnTokenResponse
- uid: MyApp.Auth.Application.Tests.Services.AuthServiceTests.ExternalLoginAsync_WithValidExternalUser_ShouldReturnTokenResponse
  name: ExternalLoginAsync_WithValidExternalUser_ShouldReturnTokenResponse()
  href: api/MyApp.Auth.Application.Tests.Services.AuthServiceTests.html#MyApp_Auth_Application_Tests_Services_AuthServiceTests_ExternalLoginAsync_WithValidExternalUser_ShouldReturnTokenResponse
  commentId: M:MyApp.Auth.Application.Tests.Services.AuthServiceTests.ExternalLoginAsync_WithValidExternalUser_ShouldReturnTokenResponse
  fullName: MyApp.Auth.Application.Tests.Services.AuthServiceTests.ExternalLoginAsync_WithValidExternalUser_ShouldReturnTokenResponse()
  nameWithType: AuthServiceTests.ExternalLoginAsync_WithValidExternalUser_ShouldReturnTokenResponse()
- uid: MyApp.Auth.Application.Tests.Services.AuthServiceTests.ExternalLoginAsync_WithValidExternalUser_ShouldReturnTokenResponse*
  name: ExternalLoginAsync_WithValidExternalUser_ShouldReturnTokenResponse
  href: api/MyApp.Auth.Application.Tests.Services.AuthServiceTests.html#MyApp_Auth_Application_Tests_Services_AuthServiceTests_ExternalLoginAsync_WithValidExternalUser_ShouldReturnTokenResponse_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.AuthServiceTests.ExternalLoginAsync_WithValidExternalUser_ShouldReturnTokenResponse
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.AuthServiceTests.ExternalLoginAsync_WithValidExternalUser_ShouldReturnTokenResponse
  nameWithType: AuthServiceTests.ExternalLoginAsync_WithValidExternalUser_ShouldReturnTokenResponse
- uid: MyApp.Auth.Application.Tests.Services.AuthServiceTests.LoginAsync_WithInvalidEmail_ShouldReturnNull
  name: LoginAsync_WithInvalidEmail_ShouldReturnNull()
  href: api/MyApp.Auth.Application.Tests.Services.AuthServiceTests.html#MyApp_Auth_Application_Tests_Services_AuthServiceTests_LoginAsync_WithInvalidEmail_ShouldReturnNull
  commentId: M:MyApp.Auth.Application.Tests.Services.AuthServiceTests.LoginAsync_WithInvalidEmail_ShouldReturnNull
  fullName: MyApp.Auth.Application.Tests.Services.AuthServiceTests.LoginAsync_WithInvalidEmail_ShouldReturnNull()
  nameWithType: AuthServiceTests.LoginAsync_WithInvalidEmail_ShouldReturnNull()
- uid: MyApp.Auth.Application.Tests.Services.AuthServiceTests.LoginAsync_WithInvalidEmail_ShouldReturnNull*
  name: LoginAsync_WithInvalidEmail_ShouldReturnNull
  href: api/MyApp.Auth.Application.Tests.Services.AuthServiceTests.html#MyApp_Auth_Application_Tests_Services_AuthServiceTests_LoginAsync_WithInvalidEmail_ShouldReturnNull_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.AuthServiceTests.LoginAsync_WithInvalidEmail_ShouldReturnNull
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.AuthServiceTests.LoginAsync_WithInvalidEmail_ShouldReturnNull
  nameWithType: AuthServiceTests.LoginAsync_WithInvalidEmail_ShouldReturnNull
- uid: MyApp.Auth.Application.Tests.Services.AuthServiceTests.LoginAsync_WithInvalidPassword_ShouldReturnNull
  name: LoginAsync_WithInvalidPassword_ShouldReturnNull()
  href: api/MyApp.Auth.Application.Tests.Services.AuthServiceTests.html#MyApp_Auth_Application_Tests_Services_AuthServiceTests_LoginAsync_WithInvalidPassword_ShouldReturnNull
  commentId: M:MyApp.Auth.Application.Tests.Services.AuthServiceTests.LoginAsync_WithInvalidPassword_ShouldReturnNull
  fullName: MyApp.Auth.Application.Tests.Services.AuthServiceTests.LoginAsync_WithInvalidPassword_ShouldReturnNull()
  nameWithType: AuthServiceTests.LoginAsync_WithInvalidPassword_ShouldReturnNull()
- uid: MyApp.Auth.Application.Tests.Services.AuthServiceTests.LoginAsync_WithInvalidPassword_ShouldReturnNull*
  name: LoginAsync_WithInvalidPassword_ShouldReturnNull
  href: api/MyApp.Auth.Application.Tests.Services.AuthServiceTests.html#MyApp_Auth_Application_Tests_Services_AuthServiceTests_LoginAsync_WithInvalidPassword_ShouldReturnNull_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.AuthServiceTests.LoginAsync_WithInvalidPassword_ShouldReturnNull
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.AuthServiceTests.LoginAsync_WithInvalidPassword_ShouldReturnNull
  nameWithType: AuthServiceTests.LoginAsync_WithInvalidPassword_ShouldReturnNull
- uid: MyApp.Auth.Application.Tests.Services.AuthServiceTests.LoginAsync_WithLockedOutUser_ShouldReturnNullAndLogWarning
  name: LoginAsync_WithLockedOutUser_ShouldReturnNullAndLogWarning()
  href: api/MyApp.Auth.Application.Tests.Services.AuthServiceTests.html#MyApp_Auth_Application_Tests_Services_AuthServiceTests_LoginAsync_WithLockedOutUser_ShouldReturnNullAndLogWarning
  commentId: M:MyApp.Auth.Application.Tests.Services.AuthServiceTests.LoginAsync_WithLockedOutUser_ShouldReturnNullAndLogWarning
  fullName: MyApp.Auth.Application.Tests.Services.AuthServiceTests.LoginAsync_WithLockedOutUser_ShouldReturnNullAndLogWarning()
  nameWithType: AuthServiceTests.LoginAsync_WithLockedOutUser_ShouldReturnNullAndLogWarning()
- uid: MyApp.Auth.Application.Tests.Services.AuthServiceTests.LoginAsync_WithLockedOutUser_ShouldReturnNullAndLogWarning*
  name: LoginAsync_WithLockedOutUser_ShouldReturnNullAndLogWarning
  href: api/MyApp.Auth.Application.Tests.Services.AuthServiceTests.html#MyApp_Auth_Application_Tests_Services_AuthServiceTests_LoginAsync_WithLockedOutUser_ShouldReturnNullAndLogWarning_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.AuthServiceTests.LoginAsync_WithLockedOutUser_ShouldReturnNullAndLogWarning
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.AuthServiceTests.LoginAsync_WithLockedOutUser_ShouldReturnNullAndLogWarning
  nameWithType: AuthServiceTests.LoginAsync_WithLockedOutUser_ShouldReturnNullAndLogWarning
- uid: MyApp.Auth.Application.Tests.Services.AuthServiceTests.LoginAsync_WithValidCredentials_ShouldReturnTokenResponse
  name: LoginAsync_WithValidCredentials_ShouldReturnTokenResponse()
  href: api/MyApp.Auth.Application.Tests.Services.AuthServiceTests.html#MyApp_Auth_Application_Tests_Services_AuthServiceTests_LoginAsync_WithValidCredentials_ShouldReturnTokenResponse
  commentId: M:MyApp.Auth.Application.Tests.Services.AuthServiceTests.LoginAsync_WithValidCredentials_ShouldReturnTokenResponse
  fullName: MyApp.Auth.Application.Tests.Services.AuthServiceTests.LoginAsync_WithValidCredentials_ShouldReturnTokenResponse()
  nameWithType: AuthServiceTests.LoginAsync_WithValidCredentials_ShouldReturnTokenResponse()
- uid: MyApp.Auth.Application.Tests.Services.AuthServiceTests.LoginAsync_WithValidCredentials_ShouldReturnTokenResponse*
  name: LoginAsync_WithValidCredentials_ShouldReturnTokenResponse
  href: api/MyApp.Auth.Application.Tests.Services.AuthServiceTests.html#MyApp_Auth_Application_Tests_Services_AuthServiceTests_LoginAsync_WithValidCredentials_ShouldReturnTokenResponse_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.AuthServiceTests.LoginAsync_WithValidCredentials_ShouldReturnTokenResponse
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.AuthServiceTests.LoginAsync_WithValidCredentials_ShouldReturnTokenResponse
  nameWithType: AuthServiceTests.LoginAsync_WithValidCredentials_ShouldReturnTokenResponse
- uid: MyApp.Auth.Application.Tests.Services.AuthServiceTests.LogoutAsync_WithRepositoryException_ShouldLogError
  name: LogoutAsync_WithRepositoryException_ShouldLogError()
  href: api/MyApp.Auth.Application.Tests.Services.AuthServiceTests.html#MyApp_Auth_Application_Tests_Services_AuthServiceTests_LogoutAsync_WithRepositoryException_ShouldLogError
  commentId: M:MyApp.Auth.Application.Tests.Services.AuthServiceTests.LogoutAsync_WithRepositoryException_ShouldLogError
  fullName: MyApp.Auth.Application.Tests.Services.AuthServiceTests.LogoutAsync_WithRepositoryException_ShouldLogError()
  nameWithType: AuthServiceTests.LogoutAsync_WithRepositoryException_ShouldLogError()
- uid: MyApp.Auth.Application.Tests.Services.AuthServiceTests.LogoutAsync_WithRepositoryException_ShouldLogError*
  name: LogoutAsync_WithRepositoryException_ShouldLogError
  href: api/MyApp.Auth.Application.Tests.Services.AuthServiceTests.html#MyApp_Auth_Application_Tests_Services_AuthServiceTests_LogoutAsync_WithRepositoryException_ShouldLogError_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.AuthServiceTests.LogoutAsync_WithRepositoryException_ShouldLogError
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.AuthServiceTests.LogoutAsync_WithRepositoryException_ShouldLogError
  nameWithType: AuthServiceTests.LogoutAsync_WithRepositoryException_ShouldLogError
- uid: MyApp.Auth.Application.Tests.Services.AuthServiceTests.LogoutAsync_WithValidRefreshToken_ShouldRevokeToken
  name: LogoutAsync_WithValidRefreshToken_ShouldRevokeToken()
  href: api/MyApp.Auth.Application.Tests.Services.AuthServiceTests.html#MyApp_Auth_Application_Tests_Services_AuthServiceTests_LogoutAsync_WithValidRefreshToken_ShouldRevokeToken
  commentId: M:MyApp.Auth.Application.Tests.Services.AuthServiceTests.LogoutAsync_WithValidRefreshToken_ShouldRevokeToken
  fullName: MyApp.Auth.Application.Tests.Services.AuthServiceTests.LogoutAsync_WithValidRefreshToken_ShouldRevokeToken()
  nameWithType: AuthServiceTests.LogoutAsync_WithValidRefreshToken_ShouldRevokeToken()
- uid: MyApp.Auth.Application.Tests.Services.AuthServiceTests.LogoutAsync_WithValidRefreshToken_ShouldRevokeToken*
  name: LogoutAsync_WithValidRefreshToken_ShouldRevokeToken
  href: api/MyApp.Auth.Application.Tests.Services.AuthServiceTests.html#MyApp_Auth_Application_Tests_Services_AuthServiceTests_LogoutAsync_WithValidRefreshToken_ShouldRevokeToken_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.AuthServiceTests.LogoutAsync_WithValidRefreshToken_ShouldRevokeToken
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.AuthServiceTests.LogoutAsync_WithValidRefreshToken_ShouldRevokeToken
  nameWithType: AuthServiceTests.LogoutAsync_WithValidRefreshToken_ShouldRevokeToken
- uid: MyApp.Auth.Application.Tests.Services.AuthServiceTests.RefreshTokenAsync_WithExpiredToken_ShouldReturnNull
  name: RefreshTokenAsync_WithExpiredToken_ShouldReturnNull()
  href: api/MyApp.Auth.Application.Tests.Services.AuthServiceTests.html#MyApp_Auth_Application_Tests_Services_AuthServiceTests_RefreshTokenAsync_WithExpiredToken_ShouldReturnNull
  commentId: M:MyApp.Auth.Application.Tests.Services.AuthServiceTests.RefreshTokenAsync_WithExpiredToken_ShouldReturnNull
  fullName: MyApp.Auth.Application.Tests.Services.AuthServiceTests.RefreshTokenAsync_WithExpiredToken_ShouldReturnNull()
  nameWithType: AuthServiceTests.RefreshTokenAsync_WithExpiredToken_ShouldReturnNull()
- uid: MyApp.Auth.Application.Tests.Services.AuthServiceTests.RefreshTokenAsync_WithExpiredToken_ShouldReturnNull*
  name: RefreshTokenAsync_WithExpiredToken_ShouldReturnNull
  href: api/MyApp.Auth.Application.Tests.Services.AuthServiceTests.html#MyApp_Auth_Application_Tests_Services_AuthServiceTests_RefreshTokenAsync_WithExpiredToken_ShouldReturnNull_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.AuthServiceTests.RefreshTokenAsync_WithExpiredToken_ShouldReturnNull
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.AuthServiceTests.RefreshTokenAsync_WithExpiredToken_ShouldReturnNull
  nameWithType: AuthServiceTests.RefreshTokenAsync_WithExpiredToken_ShouldReturnNull
- uid: MyApp.Auth.Application.Tests.Services.AuthServiceTests.RefreshTokenAsync_WithInvalidToken_ShouldReturnNull
  name: RefreshTokenAsync_WithInvalidToken_ShouldReturnNull()
  href: api/MyApp.Auth.Application.Tests.Services.AuthServiceTests.html#MyApp_Auth_Application_Tests_Services_AuthServiceTests_RefreshTokenAsync_WithInvalidToken_ShouldReturnNull
  commentId: M:MyApp.Auth.Application.Tests.Services.AuthServiceTests.RefreshTokenAsync_WithInvalidToken_ShouldReturnNull
  fullName: MyApp.Auth.Application.Tests.Services.AuthServiceTests.RefreshTokenAsync_WithInvalidToken_ShouldReturnNull()
  nameWithType: AuthServiceTests.RefreshTokenAsync_WithInvalidToken_ShouldReturnNull()
- uid: MyApp.Auth.Application.Tests.Services.AuthServiceTests.RefreshTokenAsync_WithInvalidToken_ShouldReturnNull*
  name: RefreshTokenAsync_WithInvalidToken_ShouldReturnNull
  href: api/MyApp.Auth.Application.Tests.Services.AuthServiceTests.html#MyApp_Auth_Application_Tests_Services_AuthServiceTests_RefreshTokenAsync_WithInvalidToken_ShouldReturnNull_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.AuthServiceTests.RefreshTokenAsync_WithInvalidToken_ShouldReturnNull
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.AuthServiceTests.RefreshTokenAsync_WithInvalidToken_ShouldReturnNull
  nameWithType: AuthServiceTests.RefreshTokenAsync_WithInvalidToken_ShouldReturnNull
- uid: MyApp.Auth.Application.Tests.Services.AuthServiceTests.RefreshTokenAsync_WithValidToken_ShouldReturnNewTokenResponse
  name: RefreshTokenAsync_WithValidToken_ShouldReturnNewTokenResponse()
  href: api/MyApp.Auth.Application.Tests.Services.AuthServiceTests.html#MyApp_Auth_Application_Tests_Services_AuthServiceTests_RefreshTokenAsync_WithValidToken_ShouldReturnNewTokenResponse
  commentId: M:MyApp.Auth.Application.Tests.Services.AuthServiceTests.RefreshTokenAsync_WithValidToken_ShouldReturnNewTokenResponse
  fullName: MyApp.Auth.Application.Tests.Services.AuthServiceTests.RefreshTokenAsync_WithValidToken_ShouldReturnNewTokenResponse()
  nameWithType: AuthServiceTests.RefreshTokenAsync_WithValidToken_ShouldReturnNewTokenResponse()
- uid: MyApp.Auth.Application.Tests.Services.AuthServiceTests.RefreshTokenAsync_WithValidToken_ShouldReturnNewTokenResponse*
  name: RefreshTokenAsync_WithValidToken_ShouldReturnNewTokenResponse
  href: api/MyApp.Auth.Application.Tests.Services.AuthServiceTests.html#MyApp_Auth_Application_Tests_Services_AuthServiceTests_RefreshTokenAsync_WithValidToken_ShouldReturnNewTokenResponse_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.AuthServiceTests.RefreshTokenAsync_WithValidToken_ShouldReturnNewTokenResponse
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.AuthServiceTests.RefreshTokenAsync_WithValidToken_ShouldReturnNewTokenResponse
  nameWithType: AuthServiceTests.RefreshTokenAsync_WithValidToken_ShouldReturnNewTokenResponse
- uid: MyApp.Auth.Application.Tests.Services.AuthServiceTests.RegisterAsync_WithExistingEmail_ShouldReturnNull
  name: RegisterAsync_WithExistingEmail_ShouldReturnNull()
  href: api/MyApp.Auth.Application.Tests.Services.AuthServiceTests.html#MyApp_Auth_Application_Tests_Services_AuthServiceTests_RegisterAsync_WithExistingEmail_ShouldReturnNull
  commentId: M:MyApp.Auth.Application.Tests.Services.AuthServiceTests.RegisterAsync_WithExistingEmail_ShouldReturnNull
  fullName: MyApp.Auth.Application.Tests.Services.AuthServiceTests.RegisterAsync_WithExistingEmail_ShouldReturnNull()
  nameWithType: AuthServiceTests.RegisterAsync_WithExistingEmail_ShouldReturnNull()
- uid: MyApp.Auth.Application.Tests.Services.AuthServiceTests.RegisterAsync_WithExistingEmail_ShouldReturnNull*
  name: RegisterAsync_WithExistingEmail_ShouldReturnNull
  href: api/MyApp.Auth.Application.Tests.Services.AuthServiceTests.html#MyApp_Auth_Application_Tests_Services_AuthServiceTests_RegisterAsync_WithExistingEmail_ShouldReturnNull_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.AuthServiceTests.RegisterAsync_WithExistingEmail_ShouldReturnNull
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.AuthServiceTests.RegisterAsync_WithExistingEmail_ShouldReturnNull
  nameWithType: AuthServiceTests.RegisterAsync_WithExistingEmail_ShouldReturnNull
- uid: MyApp.Auth.Application.Tests.Services.AuthServiceTests.RegisterAsync_WithValidData_ShouldReturnTokenResponse
  name: RegisterAsync_WithValidData_ShouldReturnTokenResponse()
  href: api/MyApp.Auth.Application.Tests.Services.AuthServiceTests.html#MyApp_Auth_Application_Tests_Services_AuthServiceTests_RegisterAsync_WithValidData_ShouldReturnTokenResponse
  commentId: M:MyApp.Auth.Application.Tests.Services.AuthServiceTests.RegisterAsync_WithValidData_ShouldReturnTokenResponse
  fullName: MyApp.Auth.Application.Tests.Services.AuthServiceTests.RegisterAsync_WithValidData_ShouldReturnTokenResponse()
  nameWithType: AuthServiceTests.RegisterAsync_WithValidData_ShouldReturnTokenResponse()
- uid: MyApp.Auth.Application.Tests.Services.AuthServiceTests.RegisterAsync_WithValidData_ShouldReturnTokenResponse*
  name: RegisterAsync_WithValidData_ShouldReturnTokenResponse
  href: api/MyApp.Auth.Application.Tests.Services.AuthServiceTests.html#MyApp_Auth_Application_Tests_Services_AuthServiceTests_RegisterAsync_WithValidData_ShouldReturnTokenResponse_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.AuthServiceTests.RegisterAsync_WithValidData_ShouldReturnTokenResponse
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.AuthServiceTests.RegisterAsync_WithValidData_ShouldReturnTokenResponse
  nameWithType: AuthServiceTests.RegisterAsync_WithValidData_ShouldReturnTokenResponse
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests
  name: PermissionServiceTests
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html
  commentId: T:MyApp.Auth.Application.Tests.Services.PermissionServiceTests
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests
  nameWithType: PermissionServiceTests
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.#ctor
  name: PermissionServiceTests()
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests__ctor
  commentId: M:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.#ctor
  name.vb: New()
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.PermissionServiceTests()
  fullName.vb: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.New()
  nameWithType: PermissionServiceTests.PermissionServiceTests()
  nameWithType.vb: PermissionServiceTests.New()
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.#ctor*
  name: PermissionServiceTests
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests__ctor_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.PermissionServiceTests
  fullName.vb: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.New
  nameWithType: PermissionServiceTests.PermissionServiceTests
  nameWithType.vb: PermissionServiceTests.New
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.CreatePermissionAsync_WithDuplicateModuleAndAction_ShouldReturnNullAndLogWarning
  name: CreatePermissionAsync_WithDuplicateModuleAndAction_ShouldReturnNullAndLogWarning()
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_CreatePermissionAsync_WithDuplicateModuleAndAction_ShouldReturnNullAndLogWarning
  commentId: M:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.CreatePermissionAsync_WithDuplicateModuleAndAction_ShouldReturnNullAndLogWarning
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.CreatePermissionAsync_WithDuplicateModuleAndAction_ShouldReturnNullAndLogWarning()
  nameWithType: PermissionServiceTests.CreatePermissionAsync_WithDuplicateModuleAndAction_ShouldReturnNullAndLogWarning()
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.CreatePermissionAsync_WithDuplicateModuleAndAction_ShouldReturnNullAndLogWarning*
  name: CreatePermissionAsync_WithDuplicateModuleAndAction_ShouldReturnNullAndLogWarning
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_CreatePermissionAsync_WithDuplicateModuleAndAction_ShouldReturnNullAndLogWarning_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.CreatePermissionAsync_WithDuplicateModuleAndAction_ShouldReturnNullAndLogWarning
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.CreatePermissionAsync_WithDuplicateModuleAndAction_ShouldReturnNullAndLogWarning
  nameWithType: PermissionServiceTests.CreatePermissionAsync_WithDuplicateModuleAndAction_ShouldReturnNullAndLogWarning
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.CreatePermissionAsync_WithRepositoryException_ShouldReturnNullAndLogError
  name: CreatePermissionAsync_WithRepositoryException_ShouldReturnNullAndLogError()
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_CreatePermissionAsync_WithRepositoryException_ShouldReturnNullAndLogError
  commentId: M:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.CreatePermissionAsync_WithRepositoryException_ShouldReturnNullAndLogError
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.CreatePermissionAsync_WithRepositoryException_ShouldReturnNullAndLogError()
  nameWithType: PermissionServiceTests.CreatePermissionAsync_WithRepositoryException_ShouldReturnNullAndLogError()
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.CreatePermissionAsync_WithRepositoryException_ShouldReturnNullAndLogError*
  name: CreatePermissionAsync_WithRepositoryException_ShouldReturnNullAndLogError
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_CreatePermissionAsync_WithRepositoryException_ShouldReturnNullAndLogError_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.CreatePermissionAsync_WithRepositoryException_ShouldReturnNullAndLogError
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.CreatePermissionAsync_WithRepositoryException_ShouldReturnNullAndLogError
  nameWithType: PermissionServiceTests.CreatePermissionAsync_WithRepositoryException_ShouldReturnNullAndLogError
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.CreatePermissionAsync_WithValidDto_ShouldCreateAndReturnMappedPermission
  name: CreatePermissionAsync_WithValidDto_ShouldCreateAndReturnMappedPermission()
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_CreatePermissionAsync_WithValidDto_ShouldCreateAndReturnMappedPermission
  commentId: M:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.CreatePermissionAsync_WithValidDto_ShouldCreateAndReturnMappedPermission
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.CreatePermissionAsync_WithValidDto_ShouldCreateAndReturnMappedPermission()
  nameWithType: PermissionServiceTests.CreatePermissionAsync_WithValidDto_ShouldCreateAndReturnMappedPermission()
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.CreatePermissionAsync_WithValidDto_ShouldCreateAndReturnMappedPermission*
  name: CreatePermissionAsync_WithValidDto_ShouldCreateAndReturnMappedPermission
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_CreatePermissionAsync_WithValidDto_ShouldCreateAndReturnMappedPermission_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.CreatePermissionAsync_WithValidDto_ShouldCreateAndReturnMappedPermission
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.CreatePermissionAsync_WithValidDto_ShouldCreateAndReturnMappedPermission
  nameWithType: PermissionServiceTests.CreatePermissionAsync_WithValidDto_ShouldCreateAndReturnMappedPermission
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.DeletePermissionAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
  name: DeletePermissionAsync_WithInvalidId_ShouldReturnFalseAndLogWarning()
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_DeletePermissionAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
  commentId: M:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.DeletePermissionAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.DeletePermissionAsync_WithInvalidId_ShouldReturnFalseAndLogWarning()
  nameWithType: PermissionServiceTests.DeletePermissionAsync_WithInvalidId_ShouldReturnFalseAndLogWarning()
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.DeletePermissionAsync_WithInvalidId_ShouldReturnFalseAndLogWarning*
  name: DeletePermissionAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_DeletePermissionAsync_WithInvalidId_ShouldReturnFalseAndLogWarning_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.DeletePermissionAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.DeletePermissionAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
  nameWithType: PermissionServiceTests.DeletePermissionAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.DeletePermissionAsync_WithRepositoryException_ShouldReturnFalseAndLogError
  name: DeletePermissionAsync_WithRepositoryException_ShouldReturnFalseAndLogError()
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_DeletePermissionAsync_WithRepositoryException_ShouldReturnFalseAndLogError
  commentId: M:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.DeletePermissionAsync_WithRepositoryException_ShouldReturnFalseAndLogError
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.DeletePermissionAsync_WithRepositoryException_ShouldReturnFalseAndLogError()
  nameWithType: PermissionServiceTests.DeletePermissionAsync_WithRepositoryException_ShouldReturnFalseAndLogError()
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.DeletePermissionAsync_WithRepositoryException_ShouldReturnFalseAndLogError*
  name: DeletePermissionAsync_WithRepositoryException_ShouldReturnFalseAndLogError
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_DeletePermissionAsync_WithRepositoryException_ShouldReturnFalseAndLogError_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.DeletePermissionAsync_WithRepositoryException_ShouldReturnFalseAndLogError
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.DeletePermissionAsync_WithRepositoryException_ShouldReturnFalseAndLogError
  nameWithType: PermissionServiceTests.DeletePermissionAsync_WithRepositoryException_ShouldReturnFalseAndLogError
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.DeletePermissionAsync_WithValidId_ShouldDeleteAndReturnTrue
  name: DeletePermissionAsync_WithValidId_ShouldDeleteAndReturnTrue()
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_DeletePermissionAsync_WithValidId_ShouldDeleteAndReturnTrue
  commentId: M:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.DeletePermissionAsync_WithValidId_ShouldDeleteAndReturnTrue
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.DeletePermissionAsync_WithValidId_ShouldDeleteAndReturnTrue()
  nameWithType: PermissionServiceTests.DeletePermissionAsync_WithValidId_ShouldDeleteAndReturnTrue()
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.DeletePermissionAsync_WithValidId_ShouldDeleteAndReturnTrue*
  name: DeletePermissionAsync_WithValidId_ShouldDeleteAndReturnTrue
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_DeletePermissionAsync_WithValidId_ShouldDeleteAndReturnTrue_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.DeletePermissionAsync_WithValidId_ShouldDeleteAndReturnTrue
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.DeletePermissionAsync_WithValidId_ShouldDeleteAndReturnTrue
  nameWithType: PermissionServiceTests.DeletePermissionAsync_WithValidId_ShouldDeleteAndReturnTrue
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.GetAllPermissionsAsync_ShouldReturnMappedPermissions
  name: GetAllPermissionsAsync_ShouldReturnMappedPermissions()
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_GetAllPermissionsAsync_ShouldReturnMappedPermissions
  commentId: M:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.GetAllPermissionsAsync_ShouldReturnMappedPermissions
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.GetAllPermissionsAsync_ShouldReturnMappedPermissions()
  nameWithType: PermissionServiceTests.GetAllPermissionsAsync_ShouldReturnMappedPermissions()
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.GetAllPermissionsAsync_ShouldReturnMappedPermissions*
  name: GetAllPermissionsAsync_ShouldReturnMappedPermissions
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_GetAllPermissionsAsync_ShouldReturnMappedPermissions_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.GetAllPermissionsAsync_ShouldReturnMappedPermissions
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.GetAllPermissionsAsync_ShouldReturnMappedPermissions
  nameWithType: PermissionServiceTests.GetAllPermissionsAsync_ShouldReturnMappedPermissions
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.GetPermissionByIdAsync_WithInvalidId_ShouldReturnNull
  name: GetPermissionByIdAsync_WithInvalidId_ShouldReturnNull()
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_GetPermissionByIdAsync_WithInvalidId_ShouldReturnNull
  commentId: M:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.GetPermissionByIdAsync_WithInvalidId_ShouldReturnNull
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.GetPermissionByIdAsync_WithInvalidId_ShouldReturnNull()
  nameWithType: PermissionServiceTests.GetPermissionByIdAsync_WithInvalidId_ShouldReturnNull()
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.GetPermissionByIdAsync_WithInvalidId_ShouldReturnNull*
  name: GetPermissionByIdAsync_WithInvalidId_ShouldReturnNull
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_GetPermissionByIdAsync_WithInvalidId_ShouldReturnNull_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.GetPermissionByIdAsync_WithInvalidId_ShouldReturnNull
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.GetPermissionByIdAsync_WithInvalidId_ShouldReturnNull
  nameWithType: PermissionServiceTests.GetPermissionByIdAsync_WithInvalidId_ShouldReturnNull
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.GetPermissionByIdAsync_WithValidId_ShouldReturnMappedPermission
  name: GetPermissionByIdAsync_WithValidId_ShouldReturnMappedPermission()
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_GetPermissionByIdAsync_WithValidId_ShouldReturnMappedPermission
  commentId: M:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.GetPermissionByIdAsync_WithValidId_ShouldReturnMappedPermission
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.GetPermissionByIdAsync_WithValidId_ShouldReturnMappedPermission()
  nameWithType: PermissionServiceTests.GetPermissionByIdAsync_WithValidId_ShouldReturnMappedPermission()
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.GetPermissionByIdAsync_WithValidId_ShouldReturnMappedPermission*
  name: GetPermissionByIdAsync_WithValidId_ShouldReturnMappedPermission
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_GetPermissionByIdAsync_WithValidId_ShouldReturnMappedPermission_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.GetPermissionByIdAsync_WithValidId_ShouldReturnMappedPermission
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.GetPermissionByIdAsync_WithValidId_ShouldReturnMappedPermission
  nameWithType: PermissionServiceTests.GetPermissionByIdAsync_WithValidId_ShouldReturnMappedPermission
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.GetPermissionByModuleActionAsync_WithInvalidModuleAndAction_ShouldReturnNull
  name: GetPermissionByModuleActionAsync_WithInvalidModuleAndAction_ShouldReturnNull()
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_GetPermissionByModuleActionAsync_WithInvalidModuleAndAction_ShouldReturnNull
  commentId: M:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.GetPermissionByModuleActionAsync_WithInvalidModuleAndAction_ShouldReturnNull
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.GetPermissionByModuleActionAsync_WithInvalidModuleAndAction_ShouldReturnNull()
  nameWithType: PermissionServiceTests.GetPermissionByModuleActionAsync_WithInvalidModuleAndAction_ShouldReturnNull()
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.GetPermissionByModuleActionAsync_WithInvalidModuleAndAction_ShouldReturnNull*
  name: GetPermissionByModuleActionAsync_WithInvalidModuleAndAction_ShouldReturnNull
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_GetPermissionByModuleActionAsync_WithInvalidModuleAndAction_ShouldReturnNull_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.GetPermissionByModuleActionAsync_WithInvalidModuleAndAction_ShouldReturnNull
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.GetPermissionByModuleActionAsync_WithInvalidModuleAndAction_ShouldReturnNull
  nameWithType: PermissionServiceTests.GetPermissionByModuleActionAsync_WithInvalidModuleAndAction_ShouldReturnNull
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.GetPermissionByModuleActionAsync_WithRepositoryException_ShouldReturnNullAndLogError
  name: GetPermissionByModuleActionAsync_WithRepositoryException_ShouldReturnNullAndLogError()
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_GetPermissionByModuleActionAsync_WithRepositoryException_ShouldReturnNullAndLogError
  commentId: M:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.GetPermissionByModuleActionAsync_WithRepositoryException_ShouldReturnNullAndLogError
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.GetPermissionByModuleActionAsync_WithRepositoryException_ShouldReturnNullAndLogError()
  nameWithType: PermissionServiceTests.GetPermissionByModuleActionAsync_WithRepositoryException_ShouldReturnNullAndLogError()
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.GetPermissionByModuleActionAsync_WithRepositoryException_ShouldReturnNullAndLogError*
  name: GetPermissionByModuleActionAsync_WithRepositoryException_ShouldReturnNullAndLogError
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_GetPermissionByModuleActionAsync_WithRepositoryException_ShouldReturnNullAndLogError_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.GetPermissionByModuleActionAsync_WithRepositoryException_ShouldReturnNullAndLogError
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.GetPermissionByModuleActionAsync_WithRepositoryException_ShouldReturnNullAndLogError
  nameWithType: PermissionServiceTests.GetPermissionByModuleActionAsync_WithRepositoryException_ShouldReturnNullAndLogError
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.GetPermissionByModuleActionAsync_WithValidModuleAndAction_ShouldReturnMappedPermission
  name: GetPermissionByModuleActionAsync_WithValidModuleAndAction_ShouldReturnMappedPermission()
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_GetPermissionByModuleActionAsync_WithValidModuleAndAction_ShouldReturnMappedPermission
  commentId: M:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.GetPermissionByModuleActionAsync_WithValidModuleAndAction_ShouldReturnMappedPermission
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.GetPermissionByModuleActionAsync_WithValidModuleAndAction_ShouldReturnMappedPermission()
  nameWithType: PermissionServiceTests.GetPermissionByModuleActionAsync_WithValidModuleAndAction_ShouldReturnMappedPermission()
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.GetPermissionByModuleActionAsync_WithValidModuleAndAction_ShouldReturnMappedPermission*
  name: GetPermissionByModuleActionAsync_WithValidModuleAndAction_ShouldReturnMappedPermission
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_GetPermissionByModuleActionAsync_WithValidModuleAndAction_ShouldReturnMappedPermission_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.GetPermissionByModuleActionAsync_WithValidModuleAndAction_ShouldReturnMappedPermission
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.GetPermissionByModuleActionAsync_WithValidModuleAndAction_ShouldReturnMappedPermission
  nameWithType: PermissionServiceTests.GetPermissionByModuleActionAsync_WithValidModuleAndAction_ShouldReturnMappedPermission
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithEmptyUsername_ShouldReturnFalse
  name: HasPermissionAsync_WithEmptyUsername_ShouldReturnFalse()
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_HasPermissionAsync_WithEmptyUsername_ShouldReturnFalse
  commentId: M:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithEmptyUsername_ShouldReturnFalse
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithEmptyUsername_ShouldReturnFalse()
  nameWithType: PermissionServiceTests.HasPermissionAsync_WithEmptyUsername_ShouldReturnFalse()
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithEmptyUsername_ShouldReturnFalse*
  name: HasPermissionAsync_WithEmptyUsername_ShouldReturnFalse
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_HasPermissionAsync_WithEmptyUsername_ShouldReturnFalse_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithEmptyUsername_ShouldReturnFalse
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithEmptyUsername_ShouldReturnFalse
  nameWithType: PermissionServiceTests.HasPermissionAsync_WithEmptyUsername_ShouldReturnFalse
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithInvalidUserIdModuleAndAction_ShouldReturnFalse
  name: HasPermissionAsync_WithInvalidUserIdModuleAndAction_ShouldReturnFalse()
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_HasPermissionAsync_WithInvalidUserIdModuleAndAction_ShouldReturnFalse
  commentId: M:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithInvalidUserIdModuleAndAction_ShouldReturnFalse
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithInvalidUserIdModuleAndAction_ShouldReturnFalse()
  nameWithType: PermissionServiceTests.HasPermissionAsync_WithInvalidUserIdModuleAndAction_ShouldReturnFalse()
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithInvalidUserIdModuleAndAction_ShouldReturnFalse*
  name: HasPermissionAsync_WithInvalidUserIdModuleAndAction_ShouldReturnFalse
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_HasPermissionAsync_WithInvalidUserIdModuleAndAction_ShouldReturnFalse_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithInvalidUserIdModuleAndAction_ShouldReturnFalse
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithInvalidUserIdModuleAndAction_ShouldReturnFalse
  nameWithType: PermissionServiceTests.HasPermissionAsync_WithInvalidUserIdModuleAndAction_ShouldReturnFalse
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithNullUsername_ShouldReturnFalse
  name: HasPermissionAsync_WithNullUsername_ShouldReturnFalse()
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_HasPermissionAsync_WithNullUsername_ShouldReturnFalse
  commentId: M:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithNullUsername_ShouldReturnFalse
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithNullUsername_ShouldReturnFalse()
  nameWithType: PermissionServiceTests.HasPermissionAsync_WithNullUsername_ShouldReturnFalse()
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithNullUsername_ShouldReturnFalse*
  name: HasPermissionAsync_WithNullUsername_ShouldReturnFalse
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_HasPermissionAsync_WithNullUsername_ShouldReturnFalse_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithNullUsername_ShouldReturnFalse
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithNullUsername_ShouldReturnFalse
  nameWithType: PermissionServiceTests.HasPermissionAsync_WithNullUsername_ShouldReturnFalse
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithRepositoryException_ShouldReturnFalseAndLogError
  name: HasPermissionAsync_WithRepositoryException_ShouldReturnFalseAndLogError()
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_HasPermissionAsync_WithRepositoryException_ShouldReturnFalseAndLogError
  commentId: M:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithRepositoryException_ShouldReturnFalseAndLogError
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithRepositoryException_ShouldReturnFalseAndLogError()
  nameWithType: PermissionServiceTests.HasPermissionAsync_WithRepositoryException_ShouldReturnFalseAndLogError()
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithRepositoryException_ShouldReturnFalseAndLogError*
  name: HasPermissionAsync_WithRepositoryException_ShouldReturnFalseAndLogError
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_HasPermissionAsync_WithRepositoryException_ShouldReturnFalseAndLogError_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithRepositoryException_ShouldReturnFalseAndLogError
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithRepositoryException_ShouldReturnFalseAndLogError
  nameWithType: PermissionServiceTests.HasPermissionAsync_WithRepositoryException_ShouldReturnFalseAndLogError
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithUsernameButNoUserPermissions_ShouldCheckRolePermissions
  name: HasPermissionAsync_WithUsernameButNoUserPermissions_ShouldCheckRolePermissions()
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_HasPermissionAsync_WithUsernameButNoUserPermissions_ShouldCheckRolePermissions
  commentId: M:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithUsernameButNoUserPermissions_ShouldCheckRolePermissions
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithUsernameButNoUserPermissions_ShouldCheckRolePermissions()
  nameWithType: PermissionServiceTests.HasPermissionAsync_WithUsernameButNoUserPermissions_ShouldCheckRolePermissions()
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithUsernameButNoUserPermissions_ShouldCheckRolePermissions*
  name: HasPermissionAsync_WithUsernameButNoUserPermissions_ShouldCheckRolePermissions
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_HasPermissionAsync_WithUsernameButNoUserPermissions_ShouldCheckRolePermissions_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithUsernameButNoUserPermissions_ShouldCheckRolePermissions
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithUsernameButNoUserPermissions_ShouldCheckRolePermissions
  nameWithType: PermissionServiceTests.HasPermissionAsync_WithUsernameButNoUserPermissions_ShouldCheckRolePermissions
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithValidUserIdModuleAndAction_ShouldReturnTrue
  name: HasPermissionAsync_WithValidUserIdModuleAndAction_ShouldReturnTrue()
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_HasPermissionAsync_WithValidUserIdModuleAndAction_ShouldReturnTrue
  commentId: M:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithValidUserIdModuleAndAction_ShouldReturnTrue
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithValidUserIdModuleAndAction_ShouldReturnTrue()
  nameWithType: PermissionServiceTests.HasPermissionAsync_WithValidUserIdModuleAndAction_ShouldReturnTrue()
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithValidUserIdModuleAndAction_ShouldReturnTrue*
  name: HasPermissionAsync_WithValidUserIdModuleAndAction_ShouldReturnTrue
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_HasPermissionAsync_WithValidUserIdModuleAndAction_ShouldReturnTrue_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithValidUserIdModuleAndAction_ShouldReturnTrue
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithValidUserIdModuleAndAction_ShouldReturnTrue
  nameWithType: PermissionServiceTests.HasPermissionAsync_WithValidUserIdModuleAndAction_ShouldReturnTrue
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithValidUsernameModuleAndAction_ShouldReturnTrue
  name: HasPermissionAsync_WithValidUsernameModuleAndAction_ShouldReturnTrue()
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_HasPermissionAsync_WithValidUsernameModuleAndAction_ShouldReturnTrue
  commentId: M:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithValidUsernameModuleAndAction_ShouldReturnTrue
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithValidUsernameModuleAndAction_ShouldReturnTrue()
  nameWithType: PermissionServiceTests.HasPermissionAsync_WithValidUsernameModuleAndAction_ShouldReturnTrue()
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithValidUsernameModuleAndAction_ShouldReturnTrue*
  name: HasPermissionAsync_WithValidUsernameModuleAndAction_ShouldReturnTrue
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_HasPermissionAsync_WithValidUsernameModuleAndAction_ShouldReturnTrue_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithValidUsernameModuleAndAction_ShouldReturnTrue
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.HasPermissionAsync_WithValidUsernameModuleAndAction_ShouldReturnTrue
  nameWithType: PermissionServiceTests.HasPermissionAsync_WithValidUsernameModuleAndAction_ShouldReturnTrue
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.UpdatePermissionAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
  name: UpdatePermissionAsync_WithInvalidId_ShouldReturnFalseAndLogWarning()
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_UpdatePermissionAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
  commentId: M:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.UpdatePermissionAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.UpdatePermissionAsync_WithInvalidId_ShouldReturnFalseAndLogWarning()
  nameWithType: PermissionServiceTests.UpdatePermissionAsync_WithInvalidId_ShouldReturnFalseAndLogWarning()
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.UpdatePermissionAsync_WithInvalidId_ShouldReturnFalseAndLogWarning*
  name: UpdatePermissionAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_UpdatePermissionAsync_WithInvalidId_ShouldReturnFalseAndLogWarning_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.UpdatePermissionAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.UpdatePermissionAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
  nameWithType: PermissionServiceTests.UpdatePermissionAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.UpdatePermissionAsync_WithRepositoryException_ShouldReturnFalseAndLogError
  name: UpdatePermissionAsync_WithRepositoryException_ShouldReturnFalseAndLogError()
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_UpdatePermissionAsync_WithRepositoryException_ShouldReturnFalseAndLogError
  commentId: M:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.UpdatePermissionAsync_WithRepositoryException_ShouldReturnFalseAndLogError
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.UpdatePermissionAsync_WithRepositoryException_ShouldReturnFalseAndLogError()
  nameWithType: PermissionServiceTests.UpdatePermissionAsync_WithRepositoryException_ShouldReturnFalseAndLogError()
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.UpdatePermissionAsync_WithRepositoryException_ShouldReturnFalseAndLogError*
  name: UpdatePermissionAsync_WithRepositoryException_ShouldReturnFalseAndLogError
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_UpdatePermissionAsync_WithRepositoryException_ShouldReturnFalseAndLogError_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.UpdatePermissionAsync_WithRepositoryException_ShouldReturnFalseAndLogError
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.UpdatePermissionAsync_WithRepositoryException_ShouldReturnFalseAndLogError
  nameWithType: PermissionServiceTests.UpdatePermissionAsync_WithRepositoryException_ShouldReturnFalseAndLogError
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.UpdatePermissionAsync_WithValidIdAndDto_ShouldUpdateAndReturnTrue
  name: UpdatePermissionAsync_WithValidIdAndDto_ShouldUpdateAndReturnTrue()
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_UpdatePermissionAsync_WithValidIdAndDto_ShouldUpdateAndReturnTrue
  commentId: M:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.UpdatePermissionAsync_WithValidIdAndDto_ShouldUpdateAndReturnTrue
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.UpdatePermissionAsync_WithValidIdAndDto_ShouldUpdateAndReturnTrue()
  nameWithType: PermissionServiceTests.UpdatePermissionAsync_WithValidIdAndDto_ShouldUpdateAndReturnTrue()
- uid: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.UpdatePermissionAsync_WithValidIdAndDto_ShouldUpdateAndReturnTrue*
  name: UpdatePermissionAsync_WithValidIdAndDto_ShouldUpdateAndReturnTrue
  href: api/MyApp.Auth.Application.Tests.Services.PermissionServiceTests.html#MyApp_Auth_Application_Tests_Services_PermissionServiceTests_UpdatePermissionAsync_WithValidIdAndDto_ShouldUpdateAndReturnTrue_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.PermissionServiceTests.UpdatePermissionAsync_WithValidIdAndDto_ShouldUpdateAndReturnTrue
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.PermissionServiceTests.UpdatePermissionAsync_WithValidIdAndDto_ShouldUpdateAndReturnTrue
  nameWithType: PermissionServiceTests.UpdatePermissionAsync_WithValidIdAndDto_ShouldUpdateAndReturnTrue
- uid: MyApp.Auth.Application.Tests.Services.RoleServiceTests
  name: RoleServiceTests
  href: api/MyApp.Auth.Application.Tests.Services.RoleServiceTests.html
  commentId: T:MyApp.Auth.Application.Tests.Services.RoleServiceTests
  fullName: MyApp.Auth.Application.Tests.Services.RoleServiceTests
  nameWithType: RoleServiceTests
- uid: MyApp.Auth.Application.Tests.Services.RoleServiceTests.#ctor
  name: RoleServiceTests()
  href: api/MyApp.Auth.Application.Tests.Services.RoleServiceTests.html#MyApp_Auth_Application_Tests_Services_RoleServiceTests__ctor
  commentId: M:MyApp.Auth.Application.Tests.Services.RoleServiceTests.#ctor
  name.vb: New()
  fullName: MyApp.Auth.Application.Tests.Services.RoleServiceTests.RoleServiceTests()
  fullName.vb: MyApp.Auth.Application.Tests.Services.RoleServiceTests.New()
  nameWithType: RoleServiceTests.RoleServiceTests()
  nameWithType.vb: RoleServiceTests.New()
- uid: MyApp.Auth.Application.Tests.Services.RoleServiceTests.#ctor*
  name: RoleServiceTests
  href: api/MyApp.Auth.Application.Tests.Services.RoleServiceTests.html#MyApp_Auth_Application_Tests_Services_RoleServiceTests__ctor_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.RoleServiceTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Auth.Application.Tests.Services.RoleServiceTests.RoleServiceTests
  fullName.vb: MyApp.Auth.Application.Tests.Services.RoleServiceTests.New
  nameWithType: RoleServiceTests.RoleServiceTests
  nameWithType.vb: RoleServiceTests.New
- uid: MyApp.Auth.Application.Tests.Services.RoleServiceTests.AddPermissionToRole_WithValidIds_ShouldAddPermissionAndReturnTrue
  name: AddPermissionToRole_WithValidIds_ShouldAddPermissionAndReturnTrue()
  href: api/MyApp.Auth.Application.Tests.Services.RoleServiceTests.html#MyApp_Auth_Application_Tests_Services_RoleServiceTests_AddPermissionToRole_WithValidIds_ShouldAddPermissionAndReturnTrue
  commentId: M:MyApp.Auth.Application.Tests.Services.RoleServiceTests.AddPermissionToRole_WithValidIds_ShouldAddPermissionAndReturnTrue
  fullName: MyApp.Auth.Application.Tests.Services.RoleServiceTests.AddPermissionToRole_WithValidIds_ShouldAddPermissionAndReturnTrue()
  nameWithType: RoleServiceTests.AddPermissionToRole_WithValidIds_ShouldAddPermissionAndReturnTrue()
- uid: MyApp.Auth.Application.Tests.Services.RoleServiceTests.AddPermissionToRole_WithValidIds_ShouldAddPermissionAndReturnTrue*
  name: AddPermissionToRole_WithValidIds_ShouldAddPermissionAndReturnTrue
  href: api/MyApp.Auth.Application.Tests.Services.RoleServiceTests.html#MyApp_Auth_Application_Tests_Services_RoleServiceTests_AddPermissionToRole_WithValidIds_ShouldAddPermissionAndReturnTrue_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.RoleServiceTests.AddPermissionToRole_WithValidIds_ShouldAddPermissionAndReturnTrue
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.RoleServiceTests.AddPermissionToRole_WithValidIds_ShouldAddPermissionAndReturnTrue
  nameWithType: RoleServiceTests.AddPermissionToRole_WithValidIds_ShouldAddPermissionAndReturnTrue
- uid: MyApp.Auth.Application.Tests.Services.RoleServiceTests.CreateRoleAsync_WithDuplicateName_ShouldReturnNullAndLogWarning
  name: CreateRoleAsync_WithDuplicateName_ShouldReturnNullAndLogWarning()
  href: api/MyApp.Auth.Application.Tests.Services.RoleServiceTests.html#MyApp_Auth_Application_Tests_Services_RoleServiceTests_CreateRoleAsync_WithDuplicateName_ShouldReturnNullAndLogWarning
  commentId: M:MyApp.Auth.Application.Tests.Services.RoleServiceTests.CreateRoleAsync_WithDuplicateName_ShouldReturnNullAndLogWarning
  fullName: MyApp.Auth.Application.Tests.Services.RoleServiceTests.CreateRoleAsync_WithDuplicateName_ShouldReturnNullAndLogWarning()
  nameWithType: RoleServiceTests.CreateRoleAsync_WithDuplicateName_ShouldReturnNullAndLogWarning()
- uid: MyApp.Auth.Application.Tests.Services.RoleServiceTests.CreateRoleAsync_WithDuplicateName_ShouldReturnNullAndLogWarning*
  name: CreateRoleAsync_WithDuplicateName_ShouldReturnNullAndLogWarning
  href: api/MyApp.Auth.Application.Tests.Services.RoleServiceTests.html#MyApp_Auth_Application_Tests_Services_RoleServiceTests_CreateRoleAsync_WithDuplicateName_ShouldReturnNullAndLogWarning_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.RoleServiceTests.CreateRoleAsync_WithDuplicateName_ShouldReturnNullAndLogWarning
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.RoleServiceTests.CreateRoleAsync_WithDuplicateName_ShouldReturnNullAndLogWarning
  nameWithType: RoleServiceTests.CreateRoleAsync_WithDuplicateName_ShouldReturnNullAndLogWarning
- uid: MyApp.Auth.Application.Tests.Services.RoleServiceTests.CreateRoleAsync_WithValidDto_ShouldCreateAndReturnMappedRole
  name: CreateRoleAsync_WithValidDto_ShouldCreateAndReturnMappedRole()
  href: api/MyApp.Auth.Application.Tests.Services.RoleServiceTests.html#MyApp_Auth_Application_Tests_Services_RoleServiceTests_CreateRoleAsync_WithValidDto_ShouldCreateAndReturnMappedRole
  commentId: M:MyApp.Auth.Application.Tests.Services.RoleServiceTests.CreateRoleAsync_WithValidDto_ShouldCreateAndReturnMappedRole
  fullName: MyApp.Auth.Application.Tests.Services.RoleServiceTests.CreateRoleAsync_WithValidDto_ShouldCreateAndReturnMappedRole()
  nameWithType: RoleServiceTests.CreateRoleAsync_WithValidDto_ShouldCreateAndReturnMappedRole()
- uid: MyApp.Auth.Application.Tests.Services.RoleServiceTests.CreateRoleAsync_WithValidDto_ShouldCreateAndReturnMappedRole*
  name: CreateRoleAsync_WithValidDto_ShouldCreateAndReturnMappedRole
  href: api/MyApp.Auth.Application.Tests.Services.RoleServiceTests.html#MyApp_Auth_Application_Tests_Services_RoleServiceTests_CreateRoleAsync_WithValidDto_ShouldCreateAndReturnMappedRole_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.RoleServiceTests.CreateRoleAsync_WithValidDto_ShouldCreateAndReturnMappedRole
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.RoleServiceTests.CreateRoleAsync_WithValidDto_ShouldCreateAndReturnMappedRole
  nameWithType: RoleServiceTests.CreateRoleAsync_WithValidDto_ShouldCreateAndReturnMappedRole
- uid: MyApp.Auth.Application.Tests.Services.RoleServiceTests.DeleteRoleAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
  name: DeleteRoleAsync_WithInvalidId_ShouldReturnFalseAndLogWarning()
  href: api/MyApp.Auth.Application.Tests.Services.RoleServiceTests.html#MyApp_Auth_Application_Tests_Services_RoleServiceTests_DeleteRoleAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
  commentId: M:MyApp.Auth.Application.Tests.Services.RoleServiceTests.DeleteRoleAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
  fullName: MyApp.Auth.Application.Tests.Services.RoleServiceTests.DeleteRoleAsync_WithInvalidId_ShouldReturnFalseAndLogWarning()
  nameWithType: RoleServiceTests.DeleteRoleAsync_WithInvalidId_ShouldReturnFalseAndLogWarning()
- uid: MyApp.Auth.Application.Tests.Services.RoleServiceTests.DeleteRoleAsync_WithInvalidId_ShouldReturnFalseAndLogWarning*
  name: DeleteRoleAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
  href: api/MyApp.Auth.Application.Tests.Services.RoleServiceTests.html#MyApp_Auth_Application_Tests_Services_RoleServiceTests_DeleteRoleAsync_WithInvalidId_ShouldReturnFalseAndLogWarning_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.RoleServiceTests.DeleteRoleAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.RoleServiceTests.DeleteRoleAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
  nameWithType: RoleServiceTests.DeleteRoleAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
- uid: MyApp.Auth.Application.Tests.Services.RoleServiceTests.DeleteRoleAsync_WithValidId_ShouldDeleteAndReturnTrue
  name: DeleteRoleAsync_WithValidId_ShouldDeleteAndReturnTrue()
  href: api/MyApp.Auth.Application.Tests.Services.RoleServiceTests.html#MyApp_Auth_Application_Tests_Services_RoleServiceTests_DeleteRoleAsync_WithValidId_ShouldDeleteAndReturnTrue
  commentId: M:MyApp.Auth.Application.Tests.Services.RoleServiceTests.DeleteRoleAsync_WithValidId_ShouldDeleteAndReturnTrue
  fullName: MyApp.Auth.Application.Tests.Services.RoleServiceTests.DeleteRoleAsync_WithValidId_ShouldDeleteAndReturnTrue()
  nameWithType: RoleServiceTests.DeleteRoleAsync_WithValidId_ShouldDeleteAndReturnTrue()
- uid: MyApp.Auth.Application.Tests.Services.RoleServiceTests.DeleteRoleAsync_WithValidId_ShouldDeleteAndReturnTrue*
  name: DeleteRoleAsync_WithValidId_ShouldDeleteAndReturnTrue
  href: api/MyApp.Auth.Application.Tests.Services.RoleServiceTests.html#MyApp_Auth_Application_Tests_Services_RoleServiceTests_DeleteRoleAsync_WithValidId_ShouldDeleteAndReturnTrue_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.RoleServiceTests.DeleteRoleAsync_WithValidId_ShouldDeleteAndReturnTrue
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.RoleServiceTests.DeleteRoleAsync_WithValidId_ShouldDeleteAndReturnTrue
  nameWithType: RoleServiceTests.DeleteRoleAsync_WithValidId_ShouldDeleteAndReturnTrue
- uid: MyApp.Auth.Application.Tests.Services.RoleServiceTests.GetAllRolesAsync_ShouldReturnMappedRoles
  name: GetAllRolesAsync_ShouldReturnMappedRoles()
  href: api/MyApp.Auth.Application.Tests.Services.RoleServiceTests.html#MyApp_Auth_Application_Tests_Services_RoleServiceTests_GetAllRolesAsync_ShouldReturnMappedRoles
  commentId: M:MyApp.Auth.Application.Tests.Services.RoleServiceTests.GetAllRolesAsync_ShouldReturnMappedRoles
  fullName: MyApp.Auth.Application.Tests.Services.RoleServiceTests.GetAllRolesAsync_ShouldReturnMappedRoles()
  nameWithType: RoleServiceTests.GetAllRolesAsync_ShouldReturnMappedRoles()
- uid: MyApp.Auth.Application.Tests.Services.RoleServiceTests.GetAllRolesAsync_ShouldReturnMappedRoles*
  name: GetAllRolesAsync_ShouldReturnMappedRoles
  href: api/MyApp.Auth.Application.Tests.Services.RoleServiceTests.html#MyApp_Auth_Application_Tests_Services_RoleServiceTests_GetAllRolesAsync_ShouldReturnMappedRoles_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.RoleServiceTests.GetAllRolesAsync_ShouldReturnMappedRoles
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.RoleServiceTests.GetAllRolesAsync_ShouldReturnMappedRoles
  nameWithType: RoleServiceTests.GetAllRolesAsync_ShouldReturnMappedRoles
- uid: MyApp.Auth.Application.Tests.Services.RoleServiceTests.GetAllRolesAsync_WithRepositoryException_ShouldReturnEmptyListAndLogError
  name: GetAllRolesAsync_WithRepositoryException_ShouldReturnEmptyListAndLogError()
  href: api/MyApp.Auth.Application.Tests.Services.RoleServiceTests.html#MyApp_Auth_Application_Tests_Services_RoleServiceTests_GetAllRolesAsync_WithRepositoryException_ShouldReturnEmptyListAndLogError
  commentId: M:MyApp.Auth.Application.Tests.Services.RoleServiceTests.GetAllRolesAsync_WithRepositoryException_ShouldReturnEmptyListAndLogError
  fullName: MyApp.Auth.Application.Tests.Services.RoleServiceTests.GetAllRolesAsync_WithRepositoryException_ShouldReturnEmptyListAndLogError()
  nameWithType: RoleServiceTests.GetAllRolesAsync_WithRepositoryException_ShouldReturnEmptyListAndLogError()
- uid: MyApp.Auth.Application.Tests.Services.RoleServiceTests.GetAllRolesAsync_WithRepositoryException_ShouldReturnEmptyListAndLogError*
  name: GetAllRolesAsync_WithRepositoryException_ShouldReturnEmptyListAndLogError
  href: api/MyApp.Auth.Application.Tests.Services.RoleServiceTests.html#MyApp_Auth_Application_Tests_Services_RoleServiceTests_GetAllRolesAsync_WithRepositoryException_ShouldReturnEmptyListAndLogError_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.RoleServiceTests.GetAllRolesAsync_WithRepositoryException_ShouldReturnEmptyListAndLogError
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.RoleServiceTests.GetAllRolesAsync_WithRepositoryException_ShouldReturnEmptyListAndLogError
  nameWithType: RoleServiceTests.GetAllRolesAsync_WithRepositoryException_ShouldReturnEmptyListAndLogError
- uid: MyApp.Auth.Application.Tests.Services.RoleServiceTests.GetPermissionsForRoleAsync_WithRepositoryException_ShouldReturnEmptyListAndLogError
  name: GetPermissionsForRoleAsync_WithRepositoryException_ShouldReturnEmptyListAndLogError()
  href: api/MyApp.Auth.Application.Tests.Services.RoleServiceTests.html#MyApp_Auth_Application_Tests_Services_RoleServiceTests_GetPermissionsForRoleAsync_WithRepositoryException_ShouldReturnEmptyListAndLogError
  commentId: M:MyApp.Auth.Application.Tests.Services.RoleServiceTests.GetPermissionsForRoleAsync_WithRepositoryException_ShouldReturnEmptyListAndLogError
  fullName: MyApp.Auth.Application.Tests.Services.RoleServiceTests.GetPermissionsForRoleAsync_WithRepositoryException_ShouldReturnEmptyListAndLogError()
  nameWithType: RoleServiceTests.GetPermissionsForRoleAsync_WithRepositoryException_ShouldReturnEmptyListAndLogError()
- uid: MyApp.Auth.Application.Tests.Services.RoleServiceTests.GetPermissionsForRoleAsync_WithRepositoryException_ShouldReturnEmptyListAndLogError*
  name: GetPermissionsForRoleAsync_WithRepositoryException_ShouldReturnEmptyListAndLogError
  href: api/MyApp.Auth.Application.Tests.Services.RoleServiceTests.html#MyApp_Auth_Application_Tests_Services_RoleServiceTests_GetPermissionsForRoleAsync_WithRepositoryException_ShouldReturnEmptyListAndLogError_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.RoleServiceTests.GetPermissionsForRoleAsync_WithRepositoryException_ShouldReturnEmptyListAndLogError
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.RoleServiceTests.GetPermissionsForRoleAsync_WithRepositoryException_ShouldReturnEmptyListAndLogError
  nameWithType: RoleServiceTests.GetPermissionsForRoleAsync_WithRepositoryException_ShouldReturnEmptyListAndLogError
- uid: MyApp.Auth.Application.Tests.Services.RoleServiceTests.GetPermissionsForRoleAsync_WithValidRoleId_ShouldReturnMappedPermissions
  name: GetPermissionsForRoleAsync_WithValidRoleId_ShouldReturnMappedPermissions()
  href: api/MyApp.Auth.Application.Tests.Services.RoleServiceTests.html#MyApp_Auth_Application_Tests_Services_RoleServiceTests_GetPermissionsForRoleAsync_WithValidRoleId_ShouldReturnMappedPermissions
  commentId: M:MyApp.Auth.Application.Tests.Services.RoleServiceTests.GetPermissionsForRoleAsync_WithValidRoleId_ShouldReturnMappedPermissions
  fullName: MyApp.Auth.Application.Tests.Services.RoleServiceTests.GetPermissionsForRoleAsync_WithValidRoleId_ShouldReturnMappedPermissions()
  nameWithType: RoleServiceTests.GetPermissionsForRoleAsync_WithValidRoleId_ShouldReturnMappedPermissions()
- uid: MyApp.Auth.Application.Tests.Services.RoleServiceTests.GetPermissionsForRoleAsync_WithValidRoleId_ShouldReturnMappedPermissions*
  name: GetPermissionsForRoleAsync_WithValidRoleId_ShouldReturnMappedPermissions
  href: api/MyApp.Auth.Application.Tests.Services.RoleServiceTests.html#MyApp_Auth_Application_Tests_Services_RoleServiceTests_GetPermissionsForRoleAsync_WithValidRoleId_ShouldReturnMappedPermissions_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.RoleServiceTests.GetPermissionsForRoleAsync_WithValidRoleId_ShouldReturnMappedPermissions
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.RoleServiceTests.GetPermissionsForRoleAsync_WithValidRoleId_ShouldReturnMappedPermissions
  nameWithType: RoleServiceTests.GetPermissionsForRoleAsync_WithValidRoleId_ShouldReturnMappedPermissions
- uid: MyApp.Auth.Application.Tests.Services.RoleServiceTests.GetRoleByIdAsync_WithInvalidId_ShouldReturnNull
  name: GetRoleByIdAsync_WithInvalidId_ShouldReturnNull()
  href: api/MyApp.Auth.Application.Tests.Services.RoleServiceTests.html#MyApp_Auth_Application_Tests_Services_RoleServiceTests_GetRoleByIdAsync_WithInvalidId_ShouldReturnNull
  commentId: M:MyApp.Auth.Application.Tests.Services.RoleServiceTests.GetRoleByIdAsync_WithInvalidId_ShouldReturnNull
  fullName: MyApp.Auth.Application.Tests.Services.RoleServiceTests.GetRoleByIdAsync_WithInvalidId_ShouldReturnNull()
  nameWithType: RoleServiceTests.GetRoleByIdAsync_WithInvalidId_ShouldReturnNull()
- uid: MyApp.Auth.Application.Tests.Services.RoleServiceTests.GetRoleByIdAsync_WithInvalidId_ShouldReturnNull*
  name: GetRoleByIdAsync_WithInvalidId_ShouldReturnNull
  href: api/MyApp.Auth.Application.Tests.Services.RoleServiceTests.html#MyApp_Auth_Application_Tests_Services_RoleServiceTests_GetRoleByIdAsync_WithInvalidId_ShouldReturnNull_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.RoleServiceTests.GetRoleByIdAsync_WithInvalidId_ShouldReturnNull
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.RoleServiceTests.GetRoleByIdAsync_WithInvalidId_ShouldReturnNull
  nameWithType: RoleServiceTests.GetRoleByIdAsync_WithInvalidId_ShouldReturnNull
- uid: MyApp.Auth.Application.Tests.Services.RoleServiceTests.GetRoleByIdAsync_WithValidId_ShouldReturnMappedRole
  name: GetRoleByIdAsync_WithValidId_ShouldReturnMappedRole()
  href: api/MyApp.Auth.Application.Tests.Services.RoleServiceTests.html#MyApp_Auth_Application_Tests_Services_RoleServiceTests_GetRoleByIdAsync_WithValidId_ShouldReturnMappedRole
  commentId: M:MyApp.Auth.Application.Tests.Services.RoleServiceTests.GetRoleByIdAsync_WithValidId_ShouldReturnMappedRole
  fullName: MyApp.Auth.Application.Tests.Services.RoleServiceTests.GetRoleByIdAsync_WithValidId_ShouldReturnMappedRole()
  nameWithType: RoleServiceTests.GetRoleByIdAsync_WithValidId_ShouldReturnMappedRole()
- uid: MyApp.Auth.Application.Tests.Services.RoleServiceTests.GetRoleByIdAsync_WithValidId_ShouldReturnMappedRole*
  name: GetRoleByIdAsync_WithValidId_ShouldReturnMappedRole
  href: api/MyApp.Auth.Application.Tests.Services.RoleServiceTests.html#MyApp_Auth_Application_Tests_Services_RoleServiceTests_GetRoleByIdAsync_WithValidId_ShouldReturnMappedRole_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.RoleServiceTests.GetRoleByIdAsync_WithValidId_ShouldReturnMappedRole
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.RoleServiceTests.GetRoleByIdAsync_WithValidId_ShouldReturnMappedRole
  nameWithType: RoleServiceTests.GetRoleByIdAsync_WithValidId_ShouldReturnMappedRole
- uid: MyApp.Auth.Application.Tests.Services.RoleServiceTests.HasPermissionAsync_WithInvalidRoleOrPermission_ShouldReturnFalse
  name: HasPermissionAsync_WithInvalidRoleOrPermission_ShouldReturnFalse()
  href: api/MyApp.Auth.Application.Tests.Services.RoleServiceTests.html#MyApp_Auth_Application_Tests_Services_RoleServiceTests_HasPermissionAsync_WithInvalidRoleOrPermission_ShouldReturnFalse
  commentId: M:MyApp.Auth.Application.Tests.Services.RoleServiceTests.HasPermissionAsync_WithInvalidRoleOrPermission_ShouldReturnFalse
  fullName: MyApp.Auth.Application.Tests.Services.RoleServiceTests.HasPermissionAsync_WithInvalidRoleOrPermission_ShouldReturnFalse()
  nameWithType: RoleServiceTests.HasPermissionAsync_WithInvalidRoleOrPermission_ShouldReturnFalse()
- uid: MyApp.Auth.Application.Tests.Services.RoleServiceTests.HasPermissionAsync_WithInvalidRoleOrPermission_ShouldReturnFalse*
  name: HasPermissionAsync_WithInvalidRoleOrPermission_ShouldReturnFalse
  href: api/MyApp.Auth.Application.Tests.Services.RoleServiceTests.html#MyApp_Auth_Application_Tests_Services_RoleServiceTests_HasPermissionAsync_WithInvalidRoleOrPermission_ShouldReturnFalse_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.RoleServiceTests.HasPermissionAsync_WithInvalidRoleOrPermission_ShouldReturnFalse
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.RoleServiceTests.HasPermissionAsync_WithInvalidRoleOrPermission_ShouldReturnFalse
  nameWithType: RoleServiceTests.HasPermissionAsync_WithInvalidRoleOrPermission_ShouldReturnFalse
- uid: MyApp.Auth.Application.Tests.Services.RoleServiceTests.HasPermissionAsync_WithValidRoleAndPermission_ShouldReturnTrue
  name: HasPermissionAsync_WithValidRoleAndPermission_ShouldReturnTrue()
  href: api/MyApp.Auth.Application.Tests.Services.RoleServiceTests.html#MyApp_Auth_Application_Tests_Services_RoleServiceTests_HasPermissionAsync_WithValidRoleAndPermission_ShouldReturnTrue
  commentId: M:MyApp.Auth.Application.Tests.Services.RoleServiceTests.HasPermissionAsync_WithValidRoleAndPermission_ShouldReturnTrue
  fullName: MyApp.Auth.Application.Tests.Services.RoleServiceTests.HasPermissionAsync_WithValidRoleAndPermission_ShouldReturnTrue()
  nameWithType: RoleServiceTests.HasPermissionAsync_WithValidRoleAndPermission_ShouldReturnTrue()
- uid: MyApp.Auth.Application.Tests.Services.RoleServiceTests.HasPermissionAsync_WithValidRoleAndPermission_ShouldReturnTrue*
  name: HasPermissionAsync_WithValidRoleAndPermission_ShouldReturnTrue
  href: api/MyApp.Auth.Application.Tests.Services.RoleServiceTests.html#MyApp_Auth_Application_Tests_Services_RoleServiceTests_HasPermissionAsync_WithValidRoleAndPermission_ShouldReturnTrue_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.RoleServiceTests.HasPermissionAsync_WithValidRoleAndPermission_ShouldReturnTrue
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.RoleServiceTests.HasPermissionAsync_WithValidRoleAndPermission_ShouldReturnTrue
  nameWithType: RoleServiceTests.HasPermissionAsync_WithValidRoleAndPermission_ShouldReturnTrue
- uid: MyApp.Auth.Application.Tests.Services.RoleServiceTests.RemovePermissionFromRoleAsync_WithValidIds_ShouldRemovePermissionAndReturnTrue
  name: RemovePermissionFromRoleAsync_WithValidIds_ShouldRemovePermissionAndReturnTrue()
  href: api/MyApp.Auth.Application.Tests.Services.RoleServiceTests.html#MyApp_Auth_Application_Tests_Services_RoleServiceTests_RemovePermissionFromRoleAsync_WithValidIds_ShouldRemovePermissionAndReturnTrue
  commentId: M:MyApp.Auth.Application.Tests.Services.RoleServiceTests.RemovePermissionFromRoleAsync_WithValidIds_ShouldRemovePermissionAndReturnTrue
  fullName: MyApp.Auth.Application.Tests.Services.RoleServiceTests.RemovePermissionFromRoleAsync_WithValidIds_ShouldRemovePermissionAndReturnTrue()
  nameWithType: RoleServiceTests.RemovePermissionFromRoleAsync_WithValidIds_ShouldRemovePermissionAndReturnTrue()
- uid: MyApp.Auth.Application.Tests.Services.RoleServiceTests.RemovePermissionFromRoleAsync_WithValidIds_ShouldRemovePermissionAndReturnTrue*
  name: RemovePermissionFromRoleAsync_WithValidIds_ShouldRemovePermissionAndReturnTrue
  href: api/MyApp.Auth.Application.Tests.Services.RoleServiceTests.html#MyApp_Auth_Application_Tests_Services_RoleServiceTests_RemovePermissionFromRoleAsync_WithValidIds_ShouldRemovePermissionAndReturnTrue_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.RoleServiceTests.RemovePermissionFromRoleAsync_WithValidIds_ShouldRemovePermissionAndReturnTrue
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.RoleServiceTests.RemovePermissionFromRoleAsync_WithValidIds_ShouldRemovePermissionAndReturnTrue
  nameWithType: RoleServiceTests.RemovePermissionFromRoleAsync_WithValidIds_ShouldRemovePermissionAndReturnTrue
- uid: MyApp.Auth.Application.Tests.Services.RoleServiceTests.UpdateRoleAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
  name: UpdateRoleAsync_WithInvalidId_ShouldReturnFalseAndLogWarning()
  href: api/MyApp.Auth.Application.Tests.Services.RoleServiceTests.html#MyApp_Auth_Application_Tests_Services_RoleServiceTests_UpdateRoleAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
  commentId: M:MyApp.Auth.Application.Tests.Services.RoleServiceTests.UpdateRoleAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
  fullName: MyApp.Auth.Application.Tests.Services.RoleServiceTests.UpdateRoleAsync_WithInvalidId_ShouldReturnFalseAndLogWarning()
  nameWithType: RoleServiceTests.UpdateRoleAsync_WithInvalidId_ShouldReturnFalseAndLogWarning()
- uid: MyApp.Auth.Application.Tests.Services.RoleServiceTests.UpdateRoleAsync_WithInvalidId_ShouldReturnFalseAndLogWarning*
  name: UpdateRoleAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
  href: api/MyApp.Auth.Application.Tests.Services.RoleServiceTests.html#MyApp_Auth_Application_Tests_Services_RoleServiceTests_UpdateRoleAsync_WithInvalidId_ShouldReturnFalseAndLogWarning_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.RoleServiceTests.UpdateRoleAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.RoleServiceTests.UpdateRoleAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
  nameWithType: RoleServiceTests.UpdateRoleAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
- uid: MyApp.Auth.Application.Tests.Services.RoleServiceTests.UpdateRoleAsync_WithValidIdAndDto_ShouldUpdateAndReturnTrue
  name: UpdateRoleAsync_WithValidIdAndDto_ShouldUpdateAndReturnTrue()
  href: api/MyApp.Auth.Application.Tests.Services.RoleServiceTests.html#MyApp_Auth_Application_Tests_Services_RoleServiceTests_UpdateRoleAsync_WithValidIdAndDto_ShouldUpdateAndReturnTrue
  commentId: M:MyApp.Auth.Application.Tests.Services.RoleServiceTests.UpdateRoleAsync_WithValidIdAndDto_ShouldUpdateAndReturnTrue
  fullName: MyApp.Auth.Application.Tests.Services.RoleServiceTests.UpdateRoleAsync_WithValidIdAndDto_ShouldUpdateAndReturnTrue()
  nameWithType: RoleServiceTests.UpdateRoleAsync_WithValidIdAndDto_ShouldUpdateAndReturnTrue()
- uid: MyApp.Auth.Application.Tests.Services.RoleServiceTests.UpdateRoleAsync_WithValidIdAndDto_ShouldUpdateAndReturnTrue*
  name: UpdateRoleAsync_WithValidIdAndDto_ShouldUpdateAndReturnTrue
  href: api/MyApp.Auth.Application.Tests.Services.RoleServiceTests.html#MyApp_Auth_Application_Tests_Services_RoleServiceTests_UpdateRoleAsync_WithValidIdAndDto_ShouldUpdateAndReturnTrue_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.RoleServiceTests.UpdateRoleAsync_WithValidIdAndDto_ShouldUpdateAndReturnTrue
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.RoleServiceTests.UpdateRoleAsync_WithValidIdAndDto_ShouldUpdateAndReturnTrue
  nameWithType: RoleServiceTests.UpdateRoleAsync_WithValidIdAndDto_ShouldUpdateAndReturnTrue
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests
  name: UserServiceTests
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html
  commentId: T:MyApp.Auth.Application.Tests.Services.UserServiceTests
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests
  nameWithType: UserServiceTests
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.#ctor
  name: UserServiceTests()
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests__ctor
  commentId: M:MyApp.Auth.Application.Tests.Services.UserServiceTests.#ctor
  name.vb: New()
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.UserServiceTests()
  fullName.vb: MyApp.Auth.Application.Tests.Services.UserServiceTests.New()
  nameWithType: UserServiceTests.UserServiceTests()
  nameWithType.vb: UserServiceTests.New()
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.#ctor*
  name: UserServiceTests
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests__ctor_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.UserServiceTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.UserServiceTests
  fullName.vb: MyApp.Auth.Application.Tests.Services.UserServiceTests.New
  nameWithType: UserServiceTests.UserServiceTests
  nameWithType.vb: UserServiceTests.New
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.AssignRoleAsync_WithInvalidRole_ShouldReturnFalseAndLogWarning
  name: AssignRoleAsync_WithInvalidRole_ShouldReturnFalseAndLogWarning()
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_AssignRoleAsync_WithInvalidRole_ShouldReturnFalseAndLogWarning
  commentId: M:MyApp.Auth.Application.Tests.Services.UserServiceTests.AssignRoleAsync_WithInvalidRole_ShouldReturnFalseAndLogWarning
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.AssignRoleAsync_WithInvalidRole_ShouldReturnFalseAndLogWarning()
  nameWithType: UserServiceTests.AssignRoleAsync_WithInvalidRole_ShouldReturnFalseAndLogWarning()
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.AssignRoleAsync_WithInvalidRole_ShouldReturnFalseAndLogWarning*
  name: AssignRoleAsync_WithInvalidRole_ShouldReturnFalseAndLogWarning
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_AssignRoleAsync_WithInvalidRole_ShouldReturnFalseAndLogWarning_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.UserServiceTests.AssignRoleAsync_WithInvalidRole_ShouldReturnFalseAndLogWarning
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.AssignRoleAsync_WithInvalidRole_ShouldReturnFalseAndLogWarning
  nameWithType: UserServiceTests.AssignRoleAsync_WithInvalidRole_ShouldReturnFalseAndLogWarning
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.AssignRoleAsync_WithValidUserAndRole_ShouldReturnTrue
  name: AssignRoleAsync_WithValidUserAndRole_ShouldReturnTrue()
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_AssignRoleAsync_WithValidUserAndRole_ShouldReturnTrue
  commentId: M:MyApp.Auth.Application.Tests.Services.UserServiceTests.AssignRoleAsync_WithValidUserAndRole_ShouldReturnTrue
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.AssignRoleAsync_WithValidUserAndRole_ShouldReturnTrue()
  nameWithType: UserServiceTests.AssignRoleAsync_WithValidUserAndRole_ShouldReturnTrue()
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.AssignRoleAsync_WithValidUserAndRole_ShouldReturnTrue*
  name: AssignRoleAsync_WithValidUserAndRole_ShouldReturnTrue
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_AssignRoleAsync_WithValidUserAndRole_ShouldReturnTrue_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.UserServiceTests.AssignRoleAsync_WithValidUserAndRole_ShouldReturnTrue
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.AssignRoleAsync_WithValidUserAndRole_ShouldReturnTrue
  nameWithType: UserServiceTests.AssignRoleAsync_WithValidUserAndRole_ShouldReturnTrue
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.ChangePasswordAsync_WithInvalidCurrentPassword_ShouldReturnFalseAndLogWarning
  name: ChangePasswordAsync_WithInvalidCurrentPassword_ShouldReturnFalseAndLogWarning()
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_ChangePasswordAsync_WithInvalidCurrentPassword_ShouldReturnFalseAndLogWarning
  commentId: M:MyApp.Auth.Application.Tests.Services.UserServiceTests.ChangePasswordAsync_WithInvalidCurrentPassword_ShouldReturnFalseAndLogWarning
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.ChangePasswordAsync_WithInvalidCurrentPassword_ShouldReturnFalseAndLogWarning()
  nameWithType: UserServiceTests.ChangePasswordAsync_WithInvalidCurrentPassword_ShouldReturnFalseAndLogWarning()
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.ChangePasswordAsync_WithInvalidCurrentPassword_ShouldReturnFalseAndLogWarning*
  name: ChangePasswordAsync_WithInvalidCurrentPassword_ShouldReturnFalseAndLogWarning
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_ChangePasswordAsync_WithInvalidCurrentPassword_ShouldReturnFalseAndLogWarning_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.UserServiceTests.ChangePasswordAsync_WithInvalidCurrentPassword_ShouldReturnFalseAndLogWarning
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.ChangePasswordAsync_WithInvalidCurrentPassword_ShouldReturnFalseAndLogWarning
  nameWithType: UserServiceTests.ChangePasswordAsync_WithInvalidCurrentPassword_ShouldReturnFalseAndLogWarning
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.ChangePasswordAsync_WithValidCredentials_ShouldReturnTrue
  name: ChangePasswordAsync_WithValidCredentials_ShouldReturnTrue()
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_ChangePasswordAsync_WithValidCredentials_ShouldReturnTrue
  commentId: M:MyApp.Auth.Application.Tests.Services.UserServiceTests.ChangePasswordAsync_WithValidCredentials_ShouldReturnTrue
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.ChangePasswordAsync_WithValidCredentials_ShouldReturnTrue()
  nameWithType: UserServiceTests.ChangePasswordAsync_WithValidCredentials_ShouldReturnTrue()
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.ChangePasswordAsync_WithValidCredentials_ShouldReturnTrue*
  name: ChangePasswordAsync_WithValidCredentials_ShouldReturnTrue
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_ChangePasswordAsync_WithValidCredentials_ShouldReturnTrue_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.UserServiceTests.ChangePasswordAsync_WithValidCredentials_ShouldReturnTrue
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.ChangePasswordAsync_WithValidCredentials_ShouldReturnTrue
  nameWithType: UserServiceTests.ChangePasswordAsync_WithValidCredentials_ShouldReturnTrue
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.DeleteUserAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
  name: DeleteUserAsync_WithInvalidId_ShouldReturnFalseAndLogWarning()
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_DeleteUserAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
  commentId: M:MyApp.Auth.Application.Tests.Services.UserServiceTests.DeleteUserAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.DeleteUserAsync_WithInvalidId_ShouldReturnFalseAndLogWarning()
  nameWithType: UserServiceTests.DeleteUserAsync_WithInvalidId_ShouldReturnFalseAndLogWarning()
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.DeleteUserAsync_WithInvalidId_ShouldReturnFalseAndLogWarning*
  name: DeleteUserAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_DeleteUserAsync_WithInvalidId_ShouldReturnFalseAndLogWarning_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.UserServiceTests.DeleteUserAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.DeleteUserAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
  nameWithType: UserServiceTests.DeleteUserAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.DeleteUserAsync_WithValidId_ShouldDeleteAndReturnTrue
  name: DeleteUserAsync_WithValidId_ShouldDeleteAndReturnTrue()
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_DeleteUserAsync_WithValidId_ShouldDeleteAndReturnTrue
  commentId: M:MyApp.Auth.Application.Tests.Services.UserServiceTests.DeleteUserAsync_WithValidId_ShouldDeleteAndReturnTrue
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.DeleteUserAsync_WithValidId_ShouldDeleteAndReturnTrue()
  nameWithType: UserServiceTests.DeleteUserAsync_WithValidId_ShouldDeleteAndReturnTrue()
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.DeleteUserAsync_WithValidId_ShouldDeleteAndReturnTrue*
  name: DeleteUserAsync_WithValidId_ShouldDeleteAndReturnTrue
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_DeleteUserAsync_WithValidId_ShouldDeleteAndReturnTrue_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.UserServiceTests.DeleteUserAsync_WithValidId_ShouldDeleteAndReturnTrue
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.DeleteUserAsync_WithValidId_ShouldDeleteAndReturnTrue
  nameWithType: UserServiceTests.DeleteUserAsync_WithValidId_ShouldDeleteAndReturnTrue
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetAllUsersAsync_ShouldReturnMappedUsers
  name: GetAllUsersAsync_ShouldReturnMappedUsers()
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_GetAllUsersAsync_ShouldReturnMappedUsers
  commentId: M:MyApp.Auth.Application.Tests.Services.UserServiceTests.GetAllUsersAsync_ShouldReturnMappedUsers
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetAllUsersAsync_ShouldReturnMappedUsers()
  nameWithType: UserServiceTests.GetAllUsersAsync_ShouldReturnMappedUsers()
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetAllUsersAsync_ShouldReturnMappedUsers*
  name: GetAllUsersAsync_ShouldReturnMappedUsers
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_GetAllUsersAsync_ShouldReturnMappedUsers_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.UserServiceTests.GetAllUsersAsync_ShouldReturnMappedUsers
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetAllUsersAsync_ShouldReturnMappedUsers
  nameWithType: UserServiceTests.GetAllUsersAsync_ShouldReturnMappedUsers
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetAllUsersAsync_WithRepositoryException_ShouldReturnEmptyListAndLogError
  name: GetAllUsersAsync_WithRepositoryException_ShouldReturnEmptyListAndLogError()
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_GetAllUsersAsync_WithRepositoryException_ShouldReturnEmptyListAndLogError
  commentId: M:MyApp.Auth.Application.Tests.Services.UserServiceTests.GetAllUsersAsync_WithRepositoryException_ShouldReturnEmptyListAndLogError
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetAllUsersAsync_WithRepositoryException_ShouldReturnEmptyListAndLogError()
  nameWithType: UserServiceTests.GetAllUsersAsync_WithRepositoryException_ShouldReturnEmptyListAndLogError()
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetAllUsersAsync_WithRepositoryException_ShouldReturnEmptyListAndLogError*
  name: GetAllUsersAsync_WithRepositoryException_ShouldReturnEmptyListAndLogError
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_GetAllUsersAsync_WithRepositoryException_ShouldReturnEmptyListAndLogError_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.UserServiceTests.GetAllUsersAsync_WithRepositoryException_ShouldReturnEmptyListAndLogError
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetAllUsersAsync_WithRepositoryException_ShouldReturnEmptyListAndLogError
  nameWithType: UserServiceTests.GetAllUsersAsync_WithRepositoryException_ShouldReturnEmptyListAndLogError
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetCurrentUserAsync_WithInvalidClaimsPrincipal_ShouldReturnNull
  name: GetCurrentUserAsync_WithInvalidClaimsPrincipal_ShouldReturnNull()
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_GetCurrentUserAsync_WithInvalidClaimsPrincipal_ShouldReturnNull
  commentId: M:MyApp.Auth.Application.Tests.Services.UserServiceTests.GetCurrentUserAsync_WithInvalidClaimsPrincipal_ShouldReturnNull
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetCurrentUserAsync_WithInvalidClaimsPrincipal_ShouldReturnNull()
  nameWithType: UserServiceTests.GetCurrentUserAsync_WithInvalidClaimsPrincipal_ShouldReturnNull()
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetCurrentUserAsync_WithInvalidClaimsPrincipal_ShouldReturnNull*
  name: GetCurrentUserAsync_WithInvalidClaimsPrincipal_ShouldReturnNull
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_GetCurrentUserAsync_WithInvalidClaimsPrincipal_ShouldReturnNull_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.UserServiceTests.GetCurrentUserAsync_WithInvalidClaimsPrincipal_ShouldReturnNull
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetCurrentUserAsync_WithInvalidClaimsPrincipal_ShouldReturnNull
  nameWithType: UserServiceTests.GetCurrentUserAsync_WithInvalidClaimsPrincipal_ShouldReturnNull
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetCurrentUserAsync_WithValidClaimsPrincipal_ShouldReturnMappedUser
  name: GetCurrentUserAsync_WithValidClaimsPrincipal_ShouldReturnMappedUser()
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_GetCurrentUserAsync_WithValidClaimsPrincipal_ShouldReturnMappedUser
  commentId: M:MyApp.Auth.Application.Tests.Services.UserServiceTests.GetCurrentUserAsync_WithValidClaimsPrincipal_ShouldReturnMappedUser
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetCurrentUserAsync_WithValidClaimsPrincipal_ShouldReturnMappedUser()
  nameWithType: UserServiceTests.GetCurrentUserAsync_WithValidClaimsPrincipal_ShouldReturnMappedUser()
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetCurrentUserAsync_WithValidClaimsPrincipal_ShouldReturnMappedUser*
  name: GetCurrentUserAsync_WithValidClaimsPrincipal_ShouldReturnMappedUser
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_GetCurrentUserAsync_WithValidClaimsPrincipal_ShouldReturnMappedUser_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.UserServiceTests.GetCurrentUserAsync_WithValidClaimsPrincipal_ShouldReturnMappedUser
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetCurrentUserAsync_WithValidClaimsPrincipal_ShouldReturnMappedUser
  nameWithType: UserServiceTests.GetCurrentUserAsync_WithValidClaimsPrincipal_ShouldReturnMappedUser
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserByEmailAsync_WithInvalidEmail_ShouldReturnNull
  name: GetUserByEmailAsync_WithInvalidEmail_ShouldReturnNull()
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_GetUserByEmailAsync_WithInvalidEmail_ShouldReturnNull
  commentId: M:MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserByEmailAsync_WithInvalidEmail_ShouldReturnNull
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserByEmailAsync_WithInvalidEmail_ShouldReturnNull()
  nameWithType: UserServiceTests.GetUserByEmailAsync_WithInvalidEmail_ShouldReturnNull()
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserByEmailAsync_WithInvalidEmail_ShouldReturnNull*
  name: GetUserByEmailAsync_WithInvalidEmail_ShouldReturnNull
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_GetUserByEmailAsync_WithInvalidEmail_ShouldReturnNull_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserByEmailAsync_WithInvalidEmail_ShouldReturnNull
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserByEmailAsync_WithInvalidEmail_ShouldReturnNull
  nameWithType: UserServiceTests.GetUserByEmailAsync_WithInvalidEmail_ShouldReturnNull
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserByEmailAsync_WithValidEmail_ShouldReturnMappedUser
  name: GetUserByEmailAsync_WithValidEmail_ShouldReturnMappedUser()
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_GetUserByEmailAsync_WithValidEmail_ShouldReturnMappedUser
  commentId: M:MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserByEmailAsync_WithValidEmail_ShouldReturnMappedUser
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserByEmailAsync_WithValidEmail_ShouldReturnMappedUser()
  nameWithType: UserServiceTests.GetUserByEmailAsync_WithValidEmail_ShouldReturnMappedUser()
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserByEmailAsync_WithValidEmail_ShouldReturnMappedUser*
  name: GetUserByEmailAsync_WithValidEmail_ShouldReturnMappedUser
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_GetUserByEmailAsync_WithValidEmail_ShouldReturnMappedUser_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserByEmailAsync_WithValidEmail_ShouldReturnMappedUser
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserByEmailAsync_WithValidEmail_ShouldReturnMappedUser
  nameWithType: UserServiceTests.GetUserByEmailAsync_WithValidEmail_ShouldReturnMappedUser
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserByIdAsync_WithInvalidId_ShouldReturnNull
  name: GetUserByIdAsync_WithInvalidId_ShouldReturnNull()
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_GetUserByIdAsync_WithInvalidId_ShouldReturnNull
  commentId: M:MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserByIdAsync_WithInvalidId_ShouldReturnNull
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserByIdAsync_WithInvalidId_ShouldReturnNull()
  nameWithType: UserServiceTests.GetUserByIdAsync_WithInvalidId_ShouldReturnNull()
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserByIdAsync_WithInvalidId_ShouldReturnNull*
  name: GetUserByIdAsync_WithInvalidId_ShouldReturnNull
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_GetUserByIdAsync_WithInvalidId_ShouldReturnNull_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserByIdAsync_WithInvalidId_ShouldReturnNull
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserByIdAsync_WithInvalidId_ShouldReturnNull
  nameWithType: UserServiceTests.GetUserByIdAsync_WithInvalidId_ShouldReturnNull
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserByIdAsync_WithRepositoryException_ShouldReturnNullAndLogError
  name: GetUserByIdAsync_WithRepositoryException_ShouldReturnNullAndLogError()
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_GetUserByIdAsync_WithRepositoryException_ShouldReturnNullAndLogError
  commentId: M:MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserByIdAsync_WithRepositoryException_ShouldReturnNullAndLogError
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserByIdAsync_WithRepositoryException_ShouldReturnNullAndLogError()
  nameWithType: UserServiceTests.GetUserByIdAsync_WithRepositoryException_ShouldReturnNullAndLogError()
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserByIdAsync_WithRepositoryException_ShouldReturnNullAndLogError*
  name: GetUserByIdAsync_WithRepositoryException_ShouldReturnNullAndLogError
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_GetUserByIdAsync_WithRepositoryException_ShouldReturnNullAndLogError_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserByIdAsync_WithRepositoryException_ShouldReturnNullAndLogError
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserByIdAsync_WithRepositoryException_ShouldReturnNullAndLogError
  nameWithType: UserServiceTests.GetUserByIdAsync_WithRepositoryException_ShouldReturnNullAndLogError
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserByIdAsync_WithValidId_ShouldReturnMappedUser
  name: GetUserByIdAsync_WithValidId_ShouldReturnMappedUser()
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_GetUserByIdAsync_WithValidId_ShouldReturnMappedUser
  commentId: M:MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserByIdAsync_WithValidId_ShouldReturnMappedUser
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserByIdAsync_WithValidId_ShouldReturnMappedUser()
  nameWithType: UserServiceTests.GetUserByIdAsync_WithValidId_ShouldReturnMappedUser()
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserByIdAsync_WithValidId_ShouldReturnMappedUser*
  name: GetUserByIdAsync_WithValidId_ShouldReturnMappedUser
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_GetUserByIdAsync_WithValidId_ShouldReturnMappedUser_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserByIdAsync_WithValidId_ShouldReturnMappedUser
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserByIdAsync_WithValidId_ShouldReturnMappedUser
  nameWithType: UserServiceTests.GetUserByIdAsync_WithValidId_ShouldReturnMappedUser
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserRolesAsync_WithInvalidUserId_ShouldReturnEmptyListAndLogWarning
  name: GetUserRolesAsync_WithInvalidUserId_ShouldReturnEmptyListAndLogWarning()
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_GetUserRolesAsync_WithInvalidUserId_ShouldReturnEmptyListAndLogWarning
  commentId: M:MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserRolesAsync_WithInvalidUserId_ShouldReturnEmptyListAndLogWarning
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserRolesAsync_WithInvalidUserId_ShouldReturnEmptyListAndLogWarning()
  nameWithType: UserServiceTests.GetUserRolesAsync_WithInvalidUserId_ShouldReturnEmptyListAndLogWarning()
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserRolesAsync_WithInvalidUserId_ShouldReturnEmptyListAndLogWarning*
  name: GetUserRolesAsync_WithInvalidUserId_ShouldReturnEmptyListAndLogWarning
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_GetUserRolesAsync_WithInvalidUserId_ShouldReturnEmptyListAndLogWarning_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserRolesAsync_WithInvalidUserId_ShouldReturnEmptyListAndLogWarning
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserRolesAsync_WithInvalidUserId_ShouldReturnEmptyListAndLogWarning
  nameWithType: UserServiceTests.GetUserRolesAsync_WithInvalidUserId_ShouldReturnEmptyListAndLogWarning
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserRolesAsync_WithValidUserId_ShouldReturnUserRoles
  name: GetUserRolesAsync_WithValidUserId_ShouldReturnUserRoles()
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_GetUserRolesAsync_WithValidUserId_ShouldReturnUserRoles
  commentId: M:MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserRolesAsync_WithValidUserId_ShouldReturnUserRoles
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserRolesAsync_WithValidUserId_ShouldReturnUserRoles()
  nameWithType: UserServiceTests.GetUserRolesAsync_WithValidUserId_ShouldReturnUserRoles()
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserRolesAsync_WithValidUserId_ShouldReturnUserRoles*
  name: GetUserRolesAsync_WithValidUserId_ShouldReturnUserRoles
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_GetUserRolesAsync_WithValidUserId_ShouldReturnUserRoles_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserRolesAsync_WithValidUserId_ShouldReturnUserRoles
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.GetUserRolesAsync_WithValidUserId_ShouldReturnUserRoles
  nameWithType: UserServiceTests.GetUserRolesAsync_WithValidUserId_ShouldReturnUserRoles
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.RemoveRoleAsync_WithValidUserAndRole_ShouldReturnTrue
  name: RemoveRoleAsync_WithValidUserAndRole_ShouldReturnTrue()
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_RemoveRoleAsync_WithValidUserAndRole_ShouldReturnTrue
  commentId: M:MyApp.Auth.Application.Tests.Services.UserServiceTests.RemoveRoleAsync_WithValidUserAndRole_ShouldReturnTrue
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.RemoveRoleAsync_WithValidUserAndRole_ShouldReturnTrue()
  nameWithType: UserServiceTests.RemoveRoleAsync_WithValidUserAndRole_ShouldReturnTrue()
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.RemoveRoleAsync_WithValidUserAndRole_ShouldReturnTrue*
  name: RemoveRoleAsync_WithValidUserAndRole_ShouldReturnTrue
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_RemoveRoleAsync_WithValidUserAndRole_ShouldReturnTrue_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.UserServiceTests.RemoveRoleAsync_WithValidUserAndRole_ShouldReturnTrue
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.RemoveRoleAsync_WithValidUserAndRole_ShouldReturnTrue
  nameWithType: UserServiceTests.RemoveRoleAsync_WithValidUserAndRole_ShouldReturnTrue
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.UpdateUserAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
  name: UpdateUserAsync_WithInvalidId_ShouldReturnFalseAndLogWarning()
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_UpdateUserAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
  commentId: M:MyApp.Auth.Application.Tests.Services.UserServiceTests.UpdateUserAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.UpdateUserAsync_WithInvalidId_ShouldReturnFalseAndLogWarning()
  nameWithType: UserServiceTests.UpdateUserAsync_WithInvalidId_ShouldReturnFalseAndLogWarning()
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.UpdateUserAsync_WithInvalidId_ShouldReturnFalseAndLogWarning*
  name: UpdateUserAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_UpdateUserAsync_WithInvalidId_ShouldReturnFalseAndLogWarning_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.UserServiceTests.UpdateUserAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.UpdateUserAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
  nameWithType: UserServiceTests.UpdateUserAsync_WithInvalidId_ShouldReturnFalseAndLogWarning
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.UpdateUserAsync_WithValidIdAndDto_ShouldUpdateAndReturnTrue
  name: UpdateUserAsync_WithValidIdAndDto_ShouldUpdateAndReturnTrue()
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_UpdateUserAsync_WithValidIdAndDto_ShouldUpdateAndReturnTrue
  commentId: M:MyApp.Auth.Application.Tests.Services.UserServiceTests.UpdateUserAsync_WithValidIdAndDto_ShouldUpdateAndReturnTrue
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.UpdateUserAsync_WithValidIdAndDto_ShouldUpdateAndReturnTrue()
  nameWithType: UserServiceTests.UpdateUserAsync_WithValidIdAndDto_ShouldUpdateAndReturnTrue()
- uid: MyApp.Auth.Application.Tests.Services.UserServiceTests.UpdateUserAsync_WithValidIdAndDto_ShouldUpdateAndReturnTrue*
  name: UpdateUserAsync_WithValidIdAndDto_ShouldUpdateAndReturnTrue
  href: api/MyApp.Auth.Application.Tests.Services.UserServiceTests.html#MyApp_Auth_Application_Tests_Services_UserServiceTests_UpdateUserAsync_WithValidIdAndDto_ShouldUpdateAndReturnTrue_
  commentId: Overload:MyApp.Auth.Application.Tests.Services.UserServiceTests.UpdateUserAsync_WithValidIdAndDto_ShouldUpdateAndReturnTrue
  isSpec: "True"
  fullName: MyApp.Auth.Application.Tests.Services.UserServiceTests.UpdateUserAsync_WithValidIdAndDto_ShouldUpdateAndReturnTrue
  nameWithType: UserServiceTests.UpdateUserAsync_WithValidIdAndDto_ShouldUpdateAndReturnTrue
- uid: MyApp.Auth.Domain.Entities
  name: MyApp.Auth.Domain.Entities
  href: api/MyApp.Auth.Domain.Entities.html
  commentId: N:MyApp.Auth.Domain.Entities
  fullName: MyApp.Auth.Domain.Entities
  nameWithType: MyApp.Auth.Domain.Entities
- uid: MyApp.Auth.Domain.Entities.ApplicationRole
  name: ApplicationRole
  href: api/MyApp.Auth.Domain.Entities.ApplicationRole.html
  commentId: T:MyApp.Auth.Domain.Entities.ApplicationRole
  fullName: MyApp.Auth.Domain.Entities.ApplicationRole
  nameWithType: ApplicationRole
- uid: MyApp.Auth.Domain.Entities.ApplicationRole.#ctor
  name: ApplicationRole()
  href: api/MyApp.Auth.Domain.Entities.ApplicationRole.html#MyApp_Auth_Domain_Entities_ApplicationRole__ctor
  commentId: M:MyApp.Auth.Domain.Entities.ApplicationRole.#ctor
  name.vb: New()
  fullName: MyApp.Auth.Domain.Entities.ApplicationRole.ApplicationRole()
  fullName.vb: MyApp.Auth.Domain.Entities.ApplicationRole.New()
  nameWithType: ApplicationRole.ApplicationRole()
  nameWithType.vb: ApplicationRole.New()
- uid: MyApp.Auth.Domain.Entities.ApplicationRole.#ctor(System.String)
  name: ApplicationRole(string)
  href: api/MyApp.Auth.Domain.Entities.ApplicationRole.html#MyApp_Auth_Domain_Entities_ApplicationRole__ctor_System_String_
  commentId: M:MyApp.Auth.Domain.Entities.ApplicationRole.#ctor(System.String)
  name.vb: New(String)
  fullName: MyApp.Auth.Domain.Entities.ApplicationRole.ApplicationRole(string)
  fullName.vb: MyApp.Auth.Domain.Entities.ApplicationRole.New(String)
  nameWithType: ApplicationRole.ApplicationRole(string)
  nameWithType.vb: ApplicationRole.New(String)
- uid: MyApp.Auth.Domain.Entities.ApplicationRole.#ctor*
  name: ApplicationRole
  href: api/MyApp.Auth.Domain.Entities.ApplicationRole.html#MyApp_Auth_Domain_Entities_ApplicationRole__ctor_
  commentId: Overload:MyApp.Auth.Domain.Entities.ApplicationRole.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Auth.Domain.Entities.ApplicationRole.ApplicationRole
  fullName.vb: MyApp.Auth.Domain.Entities.ApplicationRole.New
  nameWithType: ApplicationRole.ApplicationRole
  nameWithType.vb: ApplicationRole.New
- uid: MyApp.Auth.Domain.Entities.ApplicationRole.CreatedAt
  name: CreatedAt
  href: api/MyApp.Auth.Domain.Entities.ApplicationRole.html#MyApp_Auth_Domain_Entities_ApplicationRole_CreatedAt
  commentId: P:MyApp.Auth.Domain.Entities.ApplicationRole.CreatedAt
  fullName: MyApp.Auth.Domain.Entities.ApplicationRole.CreatedAt
  nameWithType: ApplicationRole.CreatedAt
- uid: MyApp.Auth.Domain.Entities.ApplicationRole.CreatedAt*
  name: CreatedAt
  href: api/MyApp.Auth.Domain.Entities.ApplicationRole.html#MyApp_Auth_Domain_Entities_ApplicationRole_CreatedAt_
  commentId: Overload:MyApp.Auth.Domain.Entities.ApplicationRole.CreatedAt
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Entities.ApplicationRole.CreatedAt
  nameWithType: ApplicationRole.CreatedAt
- uid: MyApp.Auth.Domain.Entities.ApplicationRole.CreatedBy
  name: CreatedBy
  href: api/MyApp.Auth.Domain.Entities.ApplicationRole.html#MyApp_Auth_Domain_Entities_ApplicationRole_CreatedBy
  commentId: P:MyApp.Auth.Domain.Entities.ApplicationRole.CreatedBy
  fullName: MyApp.Auth.Domain.Entities.ApplicationRole.CreatedBy
  nameWithType: ApplicationRole.CreatedBy
- uid: MyApp.Auth.Domain.Entities.ApplicationRole.CreatedBy*
  name: CreatedBy
  href: api/MyApp.Auth.Domain.Entities.ApplicationRole.html#MyApp_Auth_Domain_Entities_ApplicationRole_CreatedBy_
  commentId: Overload:MyApp.Auth.Domain.Entities.ApplicationRole.CreatedBy
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Entities.ApplicationRole.CreatedBy
  nameWithType: ApplicationRole.CreatedBy
- uid: MyApp.Auth.Domain.Entities.ApplicationRole.Description
  name: Description
  href: api/MyApp.Auth.Domain.Entities.ApplicationRole.html#MyApp_Auth_Domain_Entities_ApplicationRole_Description
  commentId: P:MyApp.Auth.Domain.Entities.ApplicationRole.Description
  fullName: MyApp.Auth.Domain.Entities.ApplicationRole.Description
  nameWithType: ApplicationRole.Description
- uid: MyApp.Auth.Domain.Entities.ApplicationRole.Description*
  name: Description
  href: api/MyApp.Auth.Domain.Entities.ApplicationRole.html#MyApp_Auth_Domain_Entities_ApplicationRole_Description_
  commentId: Overload:MyApp.Auth.Domain.Entities.ApplicationRole.Description
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Entities.ApplicationRole.Description
  nameWithType: ApplicationRole.Description
- uid: MyApp.Auth.Domain.Entities.ApplicationRole.IsActive
  name: IsActive
  href: api/MyApp.Auth.Domain.Entities.ApplicationRole.html#MyApp_Auth_Domain_Entities_ApplicationRole_IsActive
  commentId: P:MyApp.Auth.Domain.Entities.ApplicationRole.IsActive
  fullName: MyApp.Auth.Domain.Entities.ApplicationRole.IsActive
  nameWithType: ApplicationRole.IsActive
- uid: MyApp.Auth.Domain.Entities.ApplicationRole.IsActive*
  name: IsActive
  href: api/MyApp.Auth.Domain.Entities.ApplicationRole.html#MyApp_Auth_Domain_Entities_ApplicationRole_IsActive_
  commentId: Overload:MyApp.Auth.Domain.Entities.ApplicationRole.IsActive
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Entities.ApplicationRole.IsActive
  nameWithType: ApplicationRole.IsActive
- uid: MyApp.Auth.Domain.Entities.ApplicationRole.RoleClaims
  name: RoleClaims
  href: api/MyApp.Auth.Domain.Entities.ApplicationRole.html#MyApp_Auth_Domain_Entities_ApplicationRole_RoleClaims
  commentId: P:MyApp.Auth.Domain.Entities.ApplicationRole.RoleClaims
  fullName: MyApp.Auth.Domain.Entities.ApplicationRole.RoleClaims
  nameWithType: ApplicationRole.RoleClaims
- uid: MyApp.Auth.Domain.Entities.ApplicationRole.RoleClaims*
  name: RoleClaims
  href: api/MyApp.Auth.Domain.Entities.ApplicationRole.html#MyApp_Auth_Domain_Entities_ApplicationRole_RoleClaims_
  commentId: Overload:MyApp.Auth.Domain.Entities.ApplicationRole.RoleClaims
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Entities.ApplicationRole.RoleClaims
  nameWithType: ApplicationRole.RoleClaims
- uid: MyApp.Auth.Domain.Entities.ApplicationRole.RolePermissions
  name: RolePermissions
  href: api/MyApp.Auth.Domain.Entities.ApplicationRole.html#MyApp_Auth_Domain_Entities_ApplicationRole_RolePermissions
  commentId: P:MyApp.Auth.Domain.Entities.ApplicationRole.RolePermissions
  fullName: MyApp.Auth.Domain.Entities.ApplicationRole.RolePermissions
  nameWithType: ApplicationRole.RolePermissions
- uid: MyApp.Auth.Domain.Entities.ApplicationRole.RolePermissions*
  name: RolePermissions
  href: api/MyApp.Auth.Domain.Entities.ApplicationRole.html#MyApp_Auth_Domain_Entities_ApplicationRole_RolePermissions_
  commentId: Overload:MyApp.Auth.Domain.Entities.ApplicationRole.RolePermissions
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Entities.ApplicationRole.RolePermissions
  nameWithType: ApplicationRole.RolePermissions
- uid: MyApp.Auth.Domain.Entities.ApplicationRole.UpdatedAt
  name: UpdatedAt
  href: api/MyApp.Auth.Domain.Entities.ApplicationRole.html#MyApp_Auth_Domain_Entities_ApplicationRole_UpdatedAt
  commentId: P:MyApp.Auth.Domain.Entities.ApplicationRole.UpdatedAt
  fullName: MyApp.Auth.Domain.Entities.ApplicationRole.UpdatedAt
  nameWithType: ApplicationRole.UpdatedAt
- uid: MyApp.Auth.Domain.Entities.ApplicationRole.UpdatedAt*
  name: UpdatedAt
  href: api/MyApp.Auth.Domain.Entities.ApplicationRole.html#MyApp_Auth_Domain_Entities_ApplicationRole_UpdatedAt_
  commentId: Overload:MyApp.Auth.Domain.Entities.ApplicationRole.UpdatedAt
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Entities.ApplicationRole.UpdatedAt
  nameWithType: ApplicationRole.UpdatedAt
- uid: MyApp.Auth.Domain.Entities.ApplicationRole.UpdatedBy
  name: UpdatedBy
  href: api/MyApp.Auth.Domain.Entities.ApplicationRole.html#MyApp_Auth_Domain_Entities_ApplicationRole_UpdatedBy
  commentId: P:MyApp.Auth.Domain.Entities.ApplicationRole.UpdatedBy
  fullName: MyApp.Auth.Domain.Entities.ApplicationRole.UpdatedBy
  nameWithType: ApplicationRole.UpdatedBy
- uid: MyApp.Auth.Domain.Entities.ApplicationRole.UpdatedBy*
  name: UpdatedBy
  href: api/MyApp.Auth.Domain.Entities.ApplicationRole.html#MyApp_Auth_Domain_Entities_ApplicationRole_UpdatedBy_
  commentId: Overload:MyApp.Auth.Domain.Entities.ApplicationRole.UpdatedBy
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Entities.ApplicationRole.UpdatedBy
  nameWithType: ApplicationRole.UpdatedBy
- uid: MyApp.Auth.Domain.Entities.ApplicationRole.UserRoles
  name: UserRoles
  href: api/MyApp.Auth.Domain.Entities.ApplicationRole.html#MyApp_Auth_Domain_Entities_ApplicationRole_UserRoles
  commentId: P:MyApp.Auth.Domain.Entities.ApplicationRole.UserRoles
  fullName: MyApp.Auth.Domain.Entities.ApplicationRole.UserRoles
  nameWithType: ApplicationRole.UserRoles
- uid: MyApp.Auth.Domain.Entities.ApplicationRole.UserRoles*
  name: UserRoles
  href: api/MyApp.Auth.Domain.Entities.ApplicationRole.html#MyApp_Auth_Domain_Entities_ApplicationRole_UserRoles_
  commentId: Overload:MyApp.Auth.Domain.Entities.ApplicationRole.UserRoles
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Entities.ApplicationRole.UserRoles
  nameWithType: ApplicationRole.UserRoles
- uid: MyApp.Auth.Domain.Entities.ApplicationUser
  name: ApplicationUser
  href: api/MyApp.Auth.Domain.Entities.ApplicationUser.html
  commentId: T:MyApp.Auth.Domain.Entities.ApplicationUser
  fullName: MyApp.Auth.Domain.Entities.ApplicationUser
  nameWithType: ApplicationUser
- uid: MyApp.Auth.Domain.Entities.ApplicationUser.CreatedAt
  name: CreatedAt
  href: api/MyApp.Auth.Domain.Entities.ApplicationUser.html#MyApp_Auth_Domain_Entities_ApplicationUser_CreatedAt
  commentId: P:MyApp.Auth.Domain.Entities.ApplicationUser.CreatedAt
  fullName: MyApp.Auth.Domain.Entities.ApplicationUser.CreatedAt
  nameWithType: ApplicationUser.CreatedAt
- uid: MyApp.Auth.Domain.Entities.ApplicationUser.CreatedAt*
  name: CreatedAt
  href: api/MyApp.Auth.Domain.Entities.ApplicationUser.html#MyApp_Auth_Domain_Entities_ApplicationUser_CreatedAt_
  commentId: Overload:MyApp.Auth.Domain.Entities.ApplicationUser.CreatedAt
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Entities.ApplicationUser.CreatedAt
  nameWithType: ApplicationUser.CreatedAt
- uid: MyApp.Auth.Domain.Entities.ApplicationUser.CreatedBy
  name: CreatedBy
  href: api/MyApp.Auth.Domain.Entities.ApplicationUser.html#MyApp_Auth_Domain_Entities_ApplicationUser_CreatedBy
  commentId: P:MyApp.Auth.Domain.Entities.ApplicationUser.CreatedBy
  fullName: MyApp.Auth.Domain.Entities.ApplicationUser.CreatedBy
  nameWithType: ApplicationUser.CreatedBy
- uid: MyApp.Auth.Domain.Entities.ApplicationUser.CreatedBy*
  name: CreatedBy
  href: api/MyApp.Auth.Domain.Entities.ApplicationUser.html#MyApp_Auth_Domain_Entities_ApplicationUser_CreatedBy_
  commentId: Overload:MyApp.Auth.Domain.Entities.ApplicationUser.CreatedBy
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Entities.ApplicationUser.CreatedBy
  nameWithType: ApplicationUser.CreatedBy
- uid: MyApp.Auth.Domain.Entities.ApplicationUser.ExternalId
  name: ExternalId
  href: api/MyApp.Auth.Domain.Entities.ApplicationUser.html#MyApp_Auth_Domain_Entities_ApplicationUser_ExternalId
  commentId: P:MyApp.Auth.Domain.Entities.ApplicationUser.ExternalId
  fullName: MyApp.Auth.Domain.Entities.ApplicationUser.ExternalId
  nameWithType: ApplicationUser.ExternalId
- uid: MyApp.Auth.Domain.Entities.ApplicationUser.ExternalId*
  name: ExternalId
  href: api/MyApp.Auth.Domain.Entities.ApplicationUser.html#MyApp_Auth_Domain_Entities_ApplicationUser_ExternalId_
  commentId: Overload:MyApp.Auth.Domain.Entities.ApplicationUser.ExternalId
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Entities.ApplicationUser.ExternalId
  nameWithType: ApplicationUser.ExternalId
- uid: MyApp.Auth.Domain.Entities.ApplicationUser.ExternalProvider
  name: ExternalProvider
  href: api/MyApp.Auth.Domain.Entities.ApplicationUser.html#MyApp_Auth_Domain_Entities_ApplicationUser_ExternalProvider
  commentId: P:MyApp.Auth.Domain.Entities.ApplicationUser.ExternalProvider
  fullName: MyApp.Auth.Domain.Entities.ApplicationUser.ExternalProvider
  nameWithType: ApplicationUser.ExternalProvider
- uid: MyApp.Auth.Domain.Entities.ApplicationUser.ExternalProvider*
  name: ExternalProvider
  href: api/MyApp.Auth.Domain.Entities.ApplicationUser.html#MyApp_Auth_Domain_Entities_ApplicationUser_ExternalProvider_
  commentId: Overload:MyApp.Auth.Domain.Entities.ApplicationUser.ExternalProvider
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Entities.ApplicationUser.ExternalProvider
  nameWithType: ApplicationUser.ExternalProvider
- uid: MyApp.Auth.Domain.Entities.ApplicationUser.FirstName
  name: FirstName
  href: api/MyApp.Auth.Domain.Entities.ApplicationUser.html#MyApp_Auth_Domain_Entities_ApplicationUser_FirstName
  commentId: P:MyApp.Auth.Domain.Entities.ApplicationUser.FirstName
  fullName: MyApp.Auth.Domain.Entities.ApplicationUser.FirstName
  nameWithType: ApplicationUser.FirstName
- uid: MyApp.Auth.Domain.Entities.ApplicationUser.FirstName*
  name: FirstName
  href: api/MyApp.Auth.Domain.Entities.ApplicationUser.html#MyApp_Auth_Domain_Entities_ApplicationUser_FirstName_
  commentId: Overload:MyApp.Auth.Domain.Entities.ApplicationUser.FirstName
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Entities.ApplicationUser.FirstName
  nameWithType: ApplicationUser.FirstName
- uid: MyApp.Auth.Domain.Entities.ApplicationUser.IsActive
  name: IsActive
  href: api/MyApp.Auth.Domain.Entities.ApplicationUser.html#MyApp_Auth_Domain_Entities_ApplicationUser_IsActive
  commentId: P:MyApp.Auth.Domain.Entities.ApplicationUser.IsActive
  fullName: MyApp.Auth.Domain.Entities.ApplicationUser.IsActive
  nameWithType: ApplicationUser.IsActive
- uid: MyApp.Auth.Domain.Entities.ApplicationUser.IsActive*
  name: IsActive
  href: api/MyApp.Auth.Domain.Entities.ApplicationUser.html#MyApp_Auth_Domain_Entities_ApplicationUser_IsActive_
  commentId: Overload:MyApp.Auth.Domain.Entities.ApplicationUser.IsActive
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Entities.ApplicationUser.IsActive
  nameWithType: ApplicationUser.IsActive
- uid: MyApp.Auth.Domain.Entities.ApplicationUser.IsExternalLogin
  name: IsExternalLogin
  href: api/MyApp.Auth.Domain.Entities.ApplicationUser.html#MyApp_Auth_Domain_Entities_ApplicationUser_IsExternalLogin
  commentId: P:MyApp.Auth.Domain.Entities.ApplicationUser.IsExternalLogin
  fullName: MyApp.Auth.Domain.Entities.ApplicationUser.IsExternalLogin
  nameWithType: ApplicationUser.IsExternalLogin
- uid: MyApp.Auth.Domain.Entities.ApplicationUser.IsExternalLogin*
  name: IsExternalLogin
  href: api/MyApp.Auth.Domain.Entities.ApplicationUser.html#MyApp_Auth_Domain_Entities_ApplicationUser_IsExternalLogin_
  commentId: Overload:MyApp.Auth.Domain.Entities.ApplicationUser.IsExternalLogin
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Entities.ApplicationUser.IsExternalLogin
  nameWithType: ApplicationUser.IsExternalLogin
- uid: MyApp.Auth.Domain.Entities.ApplicationUser.LastName
  name: LastName
  href: api/MyApp.Auth.Domain.Entities.ApplicationUser.html#MyApp_Auth_Domain_Entities_ApplicationUser_LastName
  commentId: P:MyApp.Auth.Domain.Entities.ApplicationUser.LastName
  fullName: MyApp.Auth.Domain.Entities.ApplicationUser.LastName
  nameWithType: ApplicationUser.LastName
- uid: MyApp.Auth.Domain.Entities.ApplicationUser.LastName*
  name: LastName
  href: api/MyApp.Auth.Domain.Entities.ApplicationUser.html#MyApp_Auth_Domain_Entities_ApplicationUser_LastName_
  commentId: Overload:MyApp.Auth.Domain.Entities.ApplicationUser.LastName
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Entities.ApplicationUser.LastName
  nameWithType: ApplicationUser.LastName
- uid: MyApp.Auth.Domain.Entities.ApplicationUser.RefreshTokens
  name: RefreshTokens
  href: api/MyApp.Auth.Domain.Entities.ApplicationUser.html#MyApp_Auth_Domain_Entities_ApplicationUser_RefreshTokens
  commentId: P:MyApp.Auth.Domain.Entities.ApplicationUser.RefreshTokens
  fullName: MyApp.Auth.Domain.Entities.ApplicationUser.RefreshTokens
  nameWithType: ApplicationUser.RefreshTokens
- uid: MyApp.Auth.Domain.Entities.ApplicationUser.RefreshTokens*
  name: RefreshTokens
  href: api/MyApp.Auth.Domain.Entities.ApplicationUser.html#MyApp_Auth_Domain_Entities_ApplicationUser_RefreshTokens_
  commentId: Overload:MyApp.Auth.Domain.Entities.ApplicationUser.RefreshTokens
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Entities.ApplicationUser.RefreshTokens
  nameWithType: ApplicationUser.RefreshTokens
- uid: MyApp.Auth.Domain.Entities.ApplicationUser.UpdatedAt
  name: UpdatedAt
  href: api/MyApp.Auth.Domain.Entities.ApplicationUser.html#MyApp_Auth_Domain_Entities_ApplicationUser_UpdatedAt
  commentId: P:MyApp.Auth.Domain.Entities.ApplicationUser.UpdatedAt
  fullName: MyApp.Auth.Domain.Entities.ApplicationUser.UpdatedAt
  nameWithType: ApplicationUser.UpdatedAt
- uid: MyApp.Auth.Domain.Entities.ApplicationUser.UpdatedAt*
  name: UpdatedAt
  href: api/MyApp.Auth.Domain.Entities.ApplicationUser.html#MyApp_Auth_Domain_Entities_ApplicationUser_UpdatedAt_
  commentId: Overload:MyApp.Auth.Domain.Entities.ApplicationUser.UpdatedAt
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Entities.ApplicationUser.UpdatedAt
  nameWithType: ApplicationUser.UpdatedAt
- uid: MyApp.Auth.Domain.Entities.ApplicationUser.UpdatedBy
  name: UpdatedBy
  href: api/MyApp.Auth.Domain.Entities.ApplicationUser.html#MyApp_Auth_Domain_Entities_ApplicationUser_UpdatedBy
  commentId: P:MyApp.Auth.Domain.Entities.ApplicationUser.UpdatedBy
  fullName: MyApp.Auth.Domain.Entities.ApplicationUser.UpdatedBy
  nameWithType: ApplicationUser.UpdatedBy
- uid: MyApp.Auth.Domain.Entities.ApplicationUser.UpdatedBy*
  name: UpdatedBy
  href: api/MyApp.Auth.Domain.Entities.ApplicationUser.html#MyApp_Auth_Domain_Entities_ApplicationUser_UpdatedBy_
  commentId: Overload:MyApp.Auth.Domain.Entities.ApplicationUser.UpdatedBy
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Entities.ApplicationUser.UpdatedBy
  nameWithType: ApplicationUser.UpdatedBy
- uid: MyApp.Auth.Domain.Entities.ApplicationUser.UserClaims
  name: UserClaims
  href: api/MyApp.Auth.Domain.Entities.ApplicationUser.html#MyApp_Auth_Domain_Entities_ApplicationUser_UserClaims
  commentId: P:MyApp.Auth.Domain.Entities.ApplicationUser.UserClaims
  fullName: MyApp.Auth.Domain.Entities.ApplicationUser.UserClaims
  nameWithType: ApplicationUser.UserClaims
- uid: MyApp.Auth.Domain.Entities.ApplicationUser.UserClaims*
  name: UserClaims
  href: api/MyApp.Auth.Domain.Entities.ApplicationUser.html#MyApp_Auth_Domain_Entities_ApplicationUser_UserClaims_
  commentId: Overload:MyApp.Auth.Domain.Entities.ApplicationUser.UserClaims
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Entities.ApplicationUser.UserClaims
  nameWithType: ApplicationUser.UserClaims
- uid: MyApp.Auth.Domain.Entities.ApplicationUser.UserLogins
  name: UserLogins
  href: api/MyApp.Auth.Domain.Entities.ApplicationUser.html#MyApp_Auth_Domain_Entities_ApplicationUser_UserLogins
  commentId: P:MyApp.Auth.Domain.Entities.ApplicationUser.UserLogins
  fullName: MyApp.Auth.Domain.Entities.ApplicationUser.UserLogins
  nameWithType: ApplicationUser.UserLogins
- uid: MyApp.Auth.Domain.Entities.ApplicationUser.UserLogins*
  name: UserLogins
  href: api/MyApp.Auth.Domain.Entities.ApplicationUser.html#MyApp_Auth_Domain_Entities_ApplicationUser_UserLogins_
  commentId: Overload:MyApp.Auth.Domain.Entities.ApplicationUser.UserLogins
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Entities.ApplicationUser.UserLogins
  nameWithType: ApplicationUser.UserLogins
- uid: MyApp.Auth.Domain.Entities.ApplicationUser.UserRoles
  name: UserRoles
  href: api/MyApp.Auth.Domain.Entities.ApplicationUser.html#MyApp_Auth_Domain_Entities_ApplicationUser_UserRoles
  commentId: P:MyApp.Auth.Domain.Entities.ApplicationUser.UserRoles
  fullName: MyApp.Auth.Domain.Entities.ApplicationUser.UserRoles
  nameWithType: ApplicationUser.UserRoles
- uid: MyApp.Auth.Domain.Entities.ApplicationUser.UserRoles*
  name: UserRoles
  href: api/MyApp.Auth.Domain.Entities.ApplicationUser.html#MyApp_Auth_Domain_Entities_ApplicationUser_UserRoles_
  commentId: Overload:MyApp.Auth.Domain.Entities.ApplicationUser.UserRoles
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Entities.ApplicationUser.UserRoles
  nameWithType: ApplicationUser.UserRoles
- uid: MyApp.Auth.Domain.Entities.ApplicationUserRole
  name: ApplicationUserRole
  href: api/MyApp.Auth.Domain.Entities.ApplicationUserRole.html
  commentId: T:MyApp.Auth.Domain.Entities.ApplicationUserRole
  fullName: MyApp.Auth.Domain.Entities.ApplicationUserRole
  nameWithType: ApplicationUserRole
- uid: MyApp.Auth.Domain.Entities.ApplicationUserRole.Role
  name: Role
  href: api/MyApp.Auth.Domain.Entities.ApplicationUserRole.html#MyApp_Auth_Domain_Entities_ApplicationUserRole_Role
  commentId: P:MyApp.Auth.Domain.Entities.ApplicationUserRole.Role
  fullName: MyApp.Auth.Domain.Entities.ApplicationUserRole.Role
  nameWithType: ApplicationUserRole.Role
- uid: MyApp.Auth.Domain.Entities.ApplicationUserRole.Role*
  name: Role
  href: api/MyApp.Auth.Domain.Entities.ApplicationUserRole.html#MyApp_Auth_Domain_Entities_ApplicationUserRole_Role_
  commentId: Overload:MyApp.Auth.Domain.Entities.ApplicationUserRole.Role
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Entities.ApplicationUserRole.Role
  nameWithType: ApplicationUserRole.Role
- uid: MyApp.Auth.Domain.Entities.ApplicationUserRole.User
  name: User
  href: api/MyApp.Auth.Domain.Entities.ApplicationUserRole.html#MyApp_Auth_Domain_Entities_ApplicationUserRole_User
  commentId: P:MyApp.Auth.Domain.Entities.ApplicationUserRole.User
  fullName: MyApp.Auth.Domain.Entities.ApplicationUserRole.User
  nameWithType: ApplicationUserRole.User
- uid: MyApp.Auth.Domain.Entities.ApplicationUserRole.User*
  name: User
  href: api/MyApp.Auth.Domain.Entities.ApplicationUserRole.html#MyApp_Auth_Domain_Entities_ApplicationUserRole_User_
  commentId: Overload:MyApp.Auth.Domain.Entities.ApplicationUserRole.User
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Entities.ApplicationUserRole.User
  nameWithType: ApplicationUserRole.User
- uid: MyApp.Auth.Domain.Entities.RefreshToken
  name: RefreshToken
  href: api/MyApp.Auth.Domain.Entities.RefreshToken.html
  commentId: T:MyApp.Auth.Domain.Entities.RefreshToken
  fullName: MyApp.Auth.Domain.Entities.RefreshToken
  nameWithType: RefreshToken
- uid: MyApp.Auth.Domain.Entities.RefreshToken.CreatedAt
  name: CreatedAt
  href: api/MyApp.Auth.Domain.Entities.RefreshToken.html#MyApp_Auth_Domain_Entities_RefreshToken_CreatedAt
  commentId: P:MyApp.Auth.Domain.Entities.RefreshToken.CreatedAt
  fullName: MyApp.Auth.Domain.Entities.RefreshToken.CreatedAt
  nameWithType: RefreshToken.CreatedAt
- uid: MyApp.Auth.Domain.Entities.RefreshToken.CreatedAt*
  name: CreatedAt
  href: api/MyApp.Auth.Domain.Entities.RefreshToken.html#MyApp_Auth_Domain_Entities_RefreshToken_CreatedAt_
  commentId: Overload:MyApp.Auth.Domain.Entities.RefreshToken.CreatedAt
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Entities.RefreshToken.CreatedAt
  nameWithType: RefreshToken.CreatedAt
- uid: MyApp.Auth.Domain.Entities.RefreshToken.ExpiresAt
  name: ExpiresAt
  href: api/MyApp.Auth.Domain.Entities.RefreshToken.html#MyApp_Auth_Domain_Entities_RefreshToken_ExpiresAt
  commentId: P:MyApp.Auth.Domain.Entities.RefreshToken.ExpiresAt
  fullName: MyApp.Auth.Domain.Entities.RefreshToken.ExpiresAt
  nameWithType: RefreshToken.ExpiresAt
- uid: MyApp.Auth.Domain.Entities.RefreshToken.ExpiresAt*
  name: ExpiresAt
  href: api/MyApp.Auth.Domain.Entities.RefreshToken.html#MyApp_Auth_Domain_Entities_RefreshToken_ExpiresAt_
  commentId: Overload:MyApp.Auth.Domain.Entities.RefreshToken.ExpiresAt
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Entities.RefreshToken.ExpiresAt
  nameWithType: RefreshToken.ExpiresAt
- uid: MyApp.Auth.Domain.Entities.RefreshToken.Id
  name: Id
  href: api/MyApp.Auth.Domain.Entities.RefreshToken.html#MyApp_Auth_Domain_Entities_RefreshToken_Id
  commentId: P:MyApp.Auth.Domain.Entities.RefreshToken.Id
  fullName: MyApp.Auth.Domain.Entities.RefreshToken.Id
  nameWithType: RefreshToken.Id
- uid: MyApp.Auth.Domain.Entities.RefreshToken.Id*
  name: Id
  href: api/MyApp.Auth.Domain.Entities.RefreshToken.html#MyApp_Auth_Domain_Entities_RefreshToken_Id_
  commentId: Overload:MyApp.Auth.Domain.Entities.RefreshToken.Id
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Entities.RefreshToken.Id
  nameWithType: RefreshToken.Id
- uid: MyApp.Auth.Domain.Entities.RefreshToken.IsRevoked
  name: IsRevoked
  href: api/MyApp.Auth.Domain.Entities.RefreshToken.html#MyApp_Auth_Domain_Entities_RefreshToken_IsRevoked
  commentId: P:MyApp.Auth.Domain.Entities.RefreshToken.IsRevoked
  fullName: MyApp.Auth.Domain.Entities.RefreshToken.IsRevoked
  nameWithType: RefreshToken.IsRevoked
- uid: MyApp.Auth.Domain.Entities.RefreshToken.IsRevoked*
  name: IsRevoked
  href: api/MyApp.Auth.Domain.Entities.RefreshToken.html#MyApp_Auth_Domain_Entities_RefreshToken_IsRevoked_
  commentId: Overload:MyApp.Auth.Domain.Entities.RefreshToken.IsRevoked
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Entities.RefreshToken.IsRevoked
  nameWithType: RefreshToken.IsRevoked
- uid: MyApp.Auth.Domain.Entities.RefreshToken.Token
  name: Token
  href: api/MyApp.Auth.Domain.Entities.RefreshToken.html#MyApp_Auth_Domain_Entities_RefreshToken_Token
  commentId: P:MyApp.Auth.Domain.Entities.RefreshToken.Token
  fullName: MyApp.Auth.Domain.Entities.RefreshToken.Token
  nameWithType: RefreshToken.Token
- uid: MyApp.Auth.Domain.Entities.RefreshToken.Token*
  name: Token
  href: api/MyApp.Auth.Domain.Entities.RefreshToken.html#MyApp_Auth_Domain_Entities_RefreshToken_Token_
  commentId: Overload:MyApp.Auth.Domain.Entities.RefreshToken.Token
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Entities.RefreshToken.Token
  nameWithType: RefreshToken.Token
- uid: MyApp.Auth.Domain.Entities.RefreshToken.User
  name: User
  href: api/MyApp.Auth.Domain.Entities.RefreshToken.html#MyApp_Auth_Domain_Entities_RefreshToken_User
  commentId: P:MyApp.Auth.Domain.Entities.RefreshToken.User
  fullName: MyApp.Auth.Domain.Entities.RefreshToken.User
  nameWithType: RefreshToken.User
- uid: MyApp.Auth.Domain.Entities.RefreshToken.User*
  name: User
  href: api/MyApp.Auth.Domain.Entities.RefreshToken.html#MyApp_Auth_Domain_Entities_RefreshToken_User_
  commentId: Overload:MyApp.Auth.Domain.Entities.RefreshToken.User
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Entities.RefreshToken.User
  nameWithType: RefreshToken.User
- uid: MyApp.Auth.Domain.Entities.RefreshToken.UserId
  name: UserId
  href: api/MyApp.Auth.Domain.Entities.RefreshToken.html#MyApp_Auth_Domain_Entities_RefreshToken_UserId
  commentId: P:MyApp.Auth.Domain.Entities.RefreshToken.UserId
  fullName: MyApp.Auth.Domain.Entities.RefreshToken.UserId
  nameWithType: RefreshToken.UserId
- uid: MyApp.Auth.Domain.Entities.RefreshToken.UserId*
  name: UserId
  href: api/MyApp.Auth.Domain.Entities.RefreshToken.html#MyApp_Auth_Domain_Entities_RefreshToken_UserId_
  commentId: Overload:MyApp.Auth.Domain.Entities.RefreshToken.UserId
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Entities.RefreshToken.UserId
  nameWithType: RefreshToken.UserId
- uid: MyApp.Auth.Domain.Repositories
  name: MyApp.Auth.Domain.Repositories
  href: api/MyApp.Auth.Domain.Repositories.html
  commentId: N:MyApp.Auth.Domain.Repositories
  fullName: MyApp.Auth.Domain.Repositories
  nameWithType: MyApp.Auth.Domain.Repositories
- uid: MyApp.Auth.Domain.Repositories.IPermissionRepository
  name: IPermissionRepository
  href: api/MyApp.Auth.Domain.Repositories.IPermissionRepository.html
  commentId: T:MyApp.Auth.Domain.Repositories.IPermissionRepository
  fullName: MyApp.Auth.Domain.Repositories.IPermissionRepository
  nameWithType: IPermissionRepository
- uid: MyApp.Auth.Domain.Repositories.IPermissionRepository.GetAllPermissionsByUserId(System.Guid)
  name: GetAllPermissionsByUserId(Guid)
  href: api/MyApp.Auth.Domain.Repositories.IPermissionRepository.html#MyApp_Auth_Domain_Repositories_IPermissionRepository_GetAllPermissionsByUserId_System_Guid_
  commentId: M:MyApp.Auth.Domain.Repositories.IPermissionRepository.GetAllPermissionsByUserId(System.Guid)
  fullName: MyApp.Auth.Domain.Repositories.IPermissionRepository.GetAllPermissionsByUserId(System.Guid)
  nameWithType: IPermissionRepository.GetAllPermissionsByUserId(Guid)
- uid: MyApp.Auth.Domain.Repositories.IPermissionRepository.GetAllPermissionsByUserId*
  name: GetAllPermissionsByUserId
  href: api/MyApp.Auth.Domain.Repositories.IPermissionRepository.html#MyApp_Auth_Domain_Repositories_IPermissionRepository_GetAllPermissionsByUserId_
  commentId: Overload:MyApp.Auth.Domain.Repositories.IPermissionRepository.GetAllPermissionsByUserId
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Repositories.IPermissionRepository.GetAllPermissionsByUserId
  nameWithType: IPermissionRepository.GetAllPermissionsByUserId
- uid: MyApp.Auth.Domain.Repositories.IPermissionRepository.GetByRoleName(System.String,System.String,System.String)
  name: GetByRoleName(string, string, string)
  href: api/MyApp.Auth.Domain.Repositories.IPermissionRepository.html#MyApp_Auth_Domain_Repositories_IPermissionRepository_GetByRoleName_System_String_System_String_System_String_
  commentId: M:MyApp.Auth.Domain.Repositories.IPermissionRepository.GetByRoleName(System.String,System.String,System.String)
  name.vb: GetByRoleName(String, String, String)
  fullName: MyApp.Auth.Domain.Repositories.IPermissionRepository.GetByRoleName(string, string, string)
  fullName.vb: MyApp.Auth.Domain.Repositories.IPermissionRepository.GetByRoleName(String, String, String)
  nameWithType: IPermissionRepository.GetByRoleName(string, string, string)
  nameWithType.vb: IPermissionRepository.GetByRoleName(String, String, String)
- uid: MyApp.Auth.Domain.Repositories.IPermissionRepository.GetByRoleName*
  name: GetByRoleName
  href: api/MyApp.Auth.Domain.Repositories.IPermissionRepository.html#MyApp_Auth_Domain_Repositories_IPermissionRepository_GetByRoleName_
  commentId: Overload:MyApp.Auth.Domain.Repositories.IPermissionRepository.GetByRoleName
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Repositories.IPermissionRepository.GetByRoleName
  nameWithType: IPermissionRepository.GetByRoleName
- uid: MyApp.Auth.Domain.Repositories.IPermissionRepository.GetByUserName(System.String,System.String,System.String)
  name: GetByUserName(string, string, string)
  href: api/MyApp.Auth.Domain.Repositories.IPermissionRepository.html#MyApp_Auth_Domain_Repositories_IPermissionRepository_GetByUserName_System_String_System_String_System_String_
  commentId: M:MyApp.Auth.Domain.Repositories.IPermissionRepository.GetByUserName(System.String,System.String,System.String)
  name.vb: GetByUserName(String, String, String)
  fullName: MyApp.Auth.Domain.Repositories.IPermissionRepository.GetByUserName(string, string, string)
  fullName.vb: MyApp.Auth.Domain.Repositories.IPermissionRepository.GetByUserName(String, String, String)
  nameWithType: IPermissionRepository.GetByUserName(string, string, string)
  nameWithType.vb: IPermissionRepository.GetByUserName(String, String, String)
- uid: MyApp.Auth.Domain.Repositories.IPermissionRepository.GetByUserName*
  name: GetByUserName
  href: api/MyApp.Auth.Domain.Repositories.IPermissionRepository.html#MyApp_Auth_Domain_Repositories_IPermissionRepository_GetByUserName_
  commentId: Overload:MyApp.Auth.Domain.Repositories.IPermissionRepository.GetByUserName
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Repositories.IPermissionRepository.GetByUserName
  nameWithType: IPermissionRepository.GetByUserName
- uid: MyApp.Auth.Domain.Repositories.IRefreshTokenRepository
  name: IRefreshTokenRepository
  href: api/MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.html
  commentId: T:MyApp.Auth.Domain.Repositories.IRefreshTokenRepository
  fullName: MyApp.Auth.Domain.Repositories.IRefreshTokenRepository
  nameWithType: IRefreshTokenRepository
- uid: MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.CreateAsync(MyApp.Auth.Domain.Entities.RefreshToken)
  name: CreateAsync(RefreshToken)
  href: api/MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.html#MyApp_Auth_Domain_Repositories_IRefreshTokenRepository_CreateAsync_MyApp_Auth_Domain_Entities_RefreshToken_
  commentId: M:MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.CreateAsync(MyApp.Auth.Domain.Entities.RefreshToken)
  fullName: MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.CreateAsync(MyApp.Auth.Domain.Entities.RefreshToken)
  nameWithType: IRefreshTokenRepository.CreateAsync(RefreshToken)
- uid: MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.CreateAsync*
  name: CreateAsync
  href: api/MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.html#MyApp_Auth_Domain_Repositories_IRefreshTokenRepository_CreateAsync_
  commentId: Overload:MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.CreateAsync
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.CreateAsync
  nameWithType: IRefreshTokenRepository.CreateAsync
- uid: MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.GetByTokenAsync(System.String)
  name: GetByTokenAsync(string)
  href: api/MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.html#MyApp_Auth_Domain_Repositories_IRefreshTokenRepository_GetByTokenAsync_System_String_
  commentId: M:MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.GetByTokenAsync(System.String)
  name.vb: GetByTokenAsync(String)
  fullName: MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.GetByTokenAsync(string)
  fullName.vb: MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.GetByTokenAsync(String)
  nameWithType: IRefreshTokenRepository.GetByTokenAsync(string)
  nameWithType.vb: IRefreshTokenRepository.GetByTokenAsync(String)
- uid: MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.GetByTokenAsync*
  name: GetByTokenAsync
  href: api/MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.html#MyApp_Auth_Domain_Repositories_IRefreshTokenRepository_GetByTokenAsync_
  commentId: Overload:MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.GetByTokenAsync
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.GetByTokenAsync
  nameWithType: IRefreshTokenRepository.GetByTokenAsync
- uid: MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.GetByUserIdAsync(System.Guid)
  name: GetByUserIdAsync(Guid)
  href: api/MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.html#MyApp_Auth_Domain_Repositories_IRefreshTokenRepository_GetByUserIdAsync_System_Guid_
  commentId: M:MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.GetByUserIdAsync(System.Guid)
  fullName: MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.GetByUserIdAsync(System.Guid)
  nameWithType: IRefreshTokenRepository.GetByUserIdAsync(Guid)
- uid: MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.GetByUserIdAsync*
  name: GetByUserIdAsync
  href: api/MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.html#MyApp_Auth_Domain_Repositories_IRefreshTokenRepository_GetByUserIdAsync_
  commentId: Overload:MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.GetByUserIdAsync
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.GetByUserIdAsync
  nameWithType: IRefreshTokenRepository.GetByUserIdAsync
- uid: MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.GetValidRefreshTokenAsync(System.Guid,System.String)
  name: GetValidRefreshTokenAsync(Guid, string)
  href: api/MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.html#MyApp_Auth_Domain_Repositories_IRefreshTokenRepository_GetValidRefreshTokenAsync_System_Guid_System_String_
  commentId: M:MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.GetValidRefreshTokenAsync(System.Guid,System.String)
  name.vb: GetValidRefreshTokenAsync(Guid, String)
  fullName: MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.GetValidRefreshTokenAsync(System.Guid, string)
  fullName.vb: MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.GetValidRefreshTokenAsync(System.Guid, String)
  nameWithType: IRefreshTokenRepository.GetValidRefreshTokenAsync(Guid, string)
  nameWithType.vb: IRefreshTokenRepository.GetValidRefreshTokenAsync(Guid, String)
- uid: MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.GetValidRefreshTokenAsync*
  name: GetValidRefreshTokenAsync
  href: api/MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.html#MyApp_Auth_Domain_Repositories_IRefreshTokenRepository_GetValidRefreshTokenAsync_
  commentId: Overload:MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.GetValidRefreshTokenAsync
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.GetValidRefreshTokenAsync
  nameWithType: IRefreshTokenRepository.GetValidRefreshTokenAsync
- uid: MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.RevokeAsync(System.Guid)
  name: RevokeAsync(Guid)
  href: api/MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.html#MyApp_Auth_Domain_Repositories_IRefreshTokenRepository_RevokeAsync_System_Guid_
  commentId: M:MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.RevokeAsync(System.Guid)
  fullName: MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.RevokeAsync(System.Guid)
  nameWithType: IRefreshTokenRepository.RevokeAsync(Guid)
- uid: MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.RevokeAsync*
  name: RevokeAsync
  href: api/MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.html#MyApp_Auth_Domain_Repositories_IRefreshTokenRepository_RevokeAsync_
  commentId: Overload:MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.RevokeAsync
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.RevokeAsync
  nameWithType: IRefreshTokenRepository.RevokeAsync
- uid: MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.RevokeUserTokensAsync(System.Guid)
  name: RevokeUserTokensAsync(Guid)
  href: api/MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.html#MyApp_Auth_Domain_Repositories_IRefreshTokenRepository_RevokeUserTokensAsync_System_Guid_
  commentId: M:MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.RevokeUserTokensAsync(System.Guid)
  fullName: MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.RevokeUserTokensAsync(System.Guid)
  nameWithType: IRefreshTokenRepository.RevokeUserTokensAsync(Guid)
- uid: MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.RevokeUserTokensAsync*
  name: RevokeUserTokensAsync
  href: api/MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.html#MyApp_Auth_Domain_Repositories_IRefreshTokenRepository_RevokeUserTokensAsync_
  commentId: Overload:MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.RevokeUserTokensAsync
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Repositories.IRefreshTokenRepository.RevokeUserTokensAsync
  nameWithType: IRefreshTokenRepository.RevokeUserTokensAsync
- uid: MyApp.Auth.Domain.Repositories.IRoleRepository
  name: IRoleRepository
  href: api/MyApp.Auth.Domain.Repositories.IRoleRepository.html
  commentId: T:MyApp.Auth.Domain.Repositories.IRoleRepository
  fullName: MyApp.Auth.Domain.Repositories.IRoleRepository
  nameWithType: IRoleRepository
- uid: MyApp.Auth.Domain.Repositories.IRoleRepository.GetByNameAsync(System.String)
  name: GetByNameAsync(string)
  href: api/MyApp.Auth.Domain.Repositories.IRoleRepository.html#MyApp_Auth_Domain_Repositories_IRoleRepository_GetByNameAsync_System_String_
  commentId: M:MyApp.Auth.Domain.Repositories.IRoleRepository.GetByNameAsync(System.String)
  name.vb: GetByNameAsync(String)
  fullName: MyApp.Auth.Domain.Repositories.IRoleRepository.GetByNameAsync(string)
  fullName.vb: MyApp.Auth.Domain.Repositories.IRoleRepository.GetByNameAsync(String)
  nameWithType: IRoleRepository.GetByNameAsync(string)
  nameWithType.vb: IRoleRepository.GetByNameAsync(String)
- uid: MyApp.Auth.Domain.Repositories.IRoleRepository.GetByNameAsync*
  name: GetByNameAsync
  href: api/MyApp.Auth.Domain.Repositories.IRoleRepository.html#MyApp_Auth_Domain_Repositories_IRoleRepository_GetByNameAsync_
  commentId: Overload:MyApp.Auth.Domain.Repositories.IRoleRepository.GetByNameAsync
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Repositories.IRoleRepository.GetByNameAsync
  nameWithType: IRoleRepository.GetByNameAsync
- uid: MyApp.Auth.Domain.Repositories.IRoleRepository.GetPermissionsForRoleAsync(System.Guid)
  name: GetPermissionsForRoleAsync(Guid)
  href: api/MyApp.Auth.Domain.Repositories.IRoleRepository.html#MyApp_Auth_Domain_Repositories_IRoleRepository_GetPermissionsForRoleAsync_System_Guid_
  commentId: M:MyApp.Auth.Domain.Repositories.IRoleRepository.GetPermissionsForRoleAsync(System.Guid)
  fullName: MyApp.Auth.Domain.Repositories.IRoleRepository.GetPermissionsForRoleAsync(System.Guid)
  nameWithType: IRoleRepository.GetPermissionsForRoleAsync(Guid)
- uid: MyApp.Auth.Domain.Repositories.IRoleRepository.GetPermissionsForRoleAsync*
  name: GetPermissionsForRoleAsync
  href: api/MyApp.Auth.Domain.Repositories.IRoleRepository.html#MyApp_Auth_Domain_Repositories_IRoleRepository_GetPermissionsForRoleAsync_
  commentId: Overload:MyApp.Auth.Domain.Repositories.IRoleRepository.GetPermissionsForRoleAsync
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Repositories.IRoleRepository.GetPermissionsForRoleAsync
  nameWithType: IRoleRepository.GetPermissionsForRoleAsync
- uid: MyApp.Auth.Domain.Repositories.IRoleRepository.GetRolesByUserIdAsync(System.Guid)
  name: GetRolesByUserIdAsync(Guid)
  href: api/MyApp.Auth.Domain.Repositories.IRoleRepository.html#MyApp_Auth_Domain_Repositories_IRoleRepository_GetRolesByUserIdAsync_System_Guid_
  commentId: M:MyApp.Auth.Domain.Repositories.IRoleRepository.GetRolesByUserIdAsync(System.Guid)
  fullName: MyApp.Auth.Domain.Repositories.IRoleRepository.GetRolesByUserIdAsync(System.Guid)
  nameWithType: IRoleRepository.GetRolesByUserIdAsync(Guid)
- uid: MyApp.Auth.Domain.Repositories.IRoleRepository.GetRolesByUserIdAsync*
  name: GetRolesByUserIdAsync
  href: api/MyApp.Auth.Domain.Repositories.IRoleRepository.html#MyApp_Auth_Domain_Repositories_IRoleRepository_GetRolesByUserIdAsync_
  commentId: Overload:MyApp.Auth.Domain.Repositories.IRoleRepository.GetRolesByUserIdAsync
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Repositories.IRoleRepository.GetRolesByUserIdAsync
  nameWithType: IRoleRepository.GetRolesByUserIdAsync
- uid: MyApp.Auth.Domain.Repositories.IRoleRepository.NameExistsAsync(System.String)
  name: NameExistsAsync(string)
  href: api/MyApp.Auth.Domain.Repositories.IRoleRepository.html#MyApp_Auth_Domain_Repositories_IRoleRepository_NameExistsAsync_System_String_
  commentId: M:MyApp.Auth.Domain.Repositories.IRoleRepository.NameExistsAsync(System.String)
  name.vb: NameExistsAsync(String)
  fullName: MyApp.Auth.Domain.Repositories.IRoleRepository.NameExistsAsync(string)
  fullName.vb: MyApp.Auth.Domain.Repositories.IRoleRepository.NameExistsAsync(String)
  nameWithType: IRoleRepository.NameExistsAsync(string)
  nameWithType.vb: IRoleRepository.NameExistsAsync(String)
- uid: MyApp.Auth.Domain.Repositories.IRoleRepository.NameExistsAsync*
  name: NameExistsAsync
  href: api/MyApp.Auth.Domain.Repositories.IRoleRepository.html#MyApp_Auth_Domain_Repositories_IRoleRepository_NameExistsAsync_
  commentId: Overload:MyApp.Auth.Domain.Repositories.IRoleRepository.NameExistsAsync
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Repositories.IRoleRepository.NameExistsAsync
  nameWithType: IRoleRepository.NameExistsAsync
- uid: MyApp.Auth.Domain.Repositories.IUserRepository
  name: IUserRepository
  href: api/MyApp.Auth.Domain.Repositories.IUserRepository.html
  commentId: T:MyApp.Auth.Domain.Repositories.IUserRepository
  fullName: MyApp.Auth.Domain.Repositories.IUserRepository
  nameWithType: IUserRepository
- uid: MyApp.Auth.Domain.Repositories.IUserRepository.EmailExistsAsync(System.String)
  name: EmailExistsAsync(string)
  href: api/MyApp.Auth.Domain.Repositories.IUserRepository.html#MyApp_Auth_Domain_Repositories_IUserRepository_EmailExistsAsync_System_String_
  commentId: M:MyApp.Auth.Domain.Repositories.IUserRepository.EmailExistsAsync(System.String)
  name.vb: EmailExistsAsync(String)
  fullName: MyApp.Auth.Domain.Repositories.IUserRepository.EmailExistsAsync(string)
  fullName.vb: MyApp.Auth.Domain.Repositories.IUserRepository.EmailExistsAsync(String)
  nameWithType: IUserRepository.EmailExistsAsync(string)
  nameWithType.vb: IUserRepository.EmailExistsAsync(String)
- uid: MyApp.Auth.Domain.Repositories.IUserRepository.EmailExistsAsync*
  name: EmailExistsAsync
  href: api/MyApp.Auth.Domain.Repositories.IUserRepository.html#MyApp_Auth_Domain_Repositories_IUserRepository_EmailExistsAsync_
  commentId: Overload:MyApp.Auth.Domain.Repositories.IUserRepository.EmailExistsAsync
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Repositories.IUserRepository.EmailExistsAsync
  nameWithType: IUserRepository.EmailExistsAsync
- uid: MyApp.Auth.Domain.Repositories.IUserRepository.GetByEmailAsync(System.String)
  name: GetByEmailAsync(string)
  href: api/MyApp.Auth.Domain.Repositories.IUserRepository.html#MyApp_Auth_Domain_Repositories_IUserRepository_GetByEmailAsync_System_String_
  commentId: M:MyApp.Auth.Domain.Repositories.IUserRepository.GetByEmailAsync(System.String)
  name.vb: GetByEmailAsync(String)
  fullName: MyApp.Auth.Domain.Repositories.IUserRepository.GetByEmailAsync(string)
  fullName.vb: MyApp.Auth.Domain.Repositories.IUserRepository.GetByEmailAsync(String)
  nameWithType: IUserRepository.GetByEmailAsync(string)
  nameWithType.vb: IUserRepository.GetByEmailAsync(String)
- uid: MyApp.Auth.Domain.Repositories.IUserRepository.GetByEmailAsync*
  name: GetByEmailAsync
  href: api/MyApp.Auth.Domain.Repositories.IUserRepository.html#MyApp_Auth_Domain_Repositories_IUserRepository_GetByEmailAsync_
  commentId: Overload:MyApp.Auth.Domain.Repositories.IUserRepository.GetByEmailAsync
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Repositories.IUserRepository.GetByEmailAsync
  nameWithType: IUserRepository.GetByEmailAsync
- uid: MyApp.Auth.Domain.Repositories.IUserRepository.GetByExternalIdAsync(System.String,System.String)
  name: GetByExternalIdAsync(string, string)
  href: api/MyApp.Auth.Domain.Repositories.IUserRepository.html#MyApp_Auth_Domain_Repositories_IUserRepository_GetByExternalIdAsync_System_String_System_String_
  commentId: M:MyApp.Auth.Domain.Repositories.IUserRepository.GetByExternalIdAsync(System.String,System.String)
  name.vb: GetByExternalIdAsync(String, String)
  fullName: MyApp.Auth.Domain.Repositories.IUserRepository.GetByExternalIdAsync(string, string)
  fullName.vb: MyApp.Auth.Domain.Repositories.IUserRepository.GetByExternalIdAsync(String, String)
  nameWithType: IUserRepository.GetByExternalIdAsync(string, string)
  nameWithType.vb: IUserRepository.GetByExternalIdAsync(String, String)
- uid: MyApp.Auth.Domain.Repositories.IUserRepository.GetByExternalIdAsync*
  name: GetByExternalIdAsync
  href: api/MyApp.Auth.Domain.Repositories.IUserRepository.html#MyApp_Auth_Domain_Repositories_IUserRepository_GetByExternalIdAsync_
  commentId: Overload:MyApp.Auth.Domain.Repositories.IUserRepository.GetByExternalIdAsync
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Repositories.IUserRepository.GetByExternalIdAsync
  nameWithType: IUserRepository.GetByExternalIdAsync
- uid: MyApp.Auth.Domain.Repositories.IUserRepository.GetByRoleAsync(System.String)
  name: GetByRoleAsync(string)
  href: api/MyApp.Auth.Domain.Repositories.IUserRepository.html#MyApp_Auth_Domain_Repositories_IUserRepository_GetByRoleAsync_System_String_
  commentId: M:MyApp.Auth.Domain.Repositories.IUserRepository.GetByRoleAsync(System.String)
  name.vb: GetByRoleAsync(String)
  fullName: MyApp.Auth.Domain.Repositories.IUserRepository.GetByRoleAsync(string)
  fullName.vb: MyApp.Auth.Domain.Repositories.IUserRepository.GetByRoleAsync(String)
  nameWithType: IUserRepository.GetByRoleAsync(string)
  nameWithType.vb: IUserRepository.GetByRoleAsync(String)
- uid: MyApp.Auth.Domain.Repositories.IUserRepository.GetByRoleAsync*
  name: GetByRoleAsync
  href: api/MyApp.Auth.Domain.Repositories.IUserRepository.html#MyApp_Auth_Domain_Repositories_IUserRepository_GetByRoleAsync_
  commentId: Overload:MyApp.Auth.Domain.Repositories.IUserRepository.GetByRoleAsync
  isSpec: "True"
  fullName: MyApp.Auth.Domain.Repositories.IUserRepository.GetByRoleAsync
  nameWithType: IUserRepository.GetByRoleAsync
- uid: MyApp.Auth.Infrastructure.Data
  name: MyApp.Auth.Infrastructure.Data
  href: api/MyApp.Auth.Infrastructure.Data.html
  commentId: N:MyApp.Auth.Infrastructure.Data
  fullName: MyApp.Auth.Infrastructure.Data
  nameWithType: MyApp.Auth.Infrastructure.Data
- uid: MyApp.Auth.Infrastructure.Data.AuthDbContext
  name: AuthDbContext
  href: api/MyApp.Auth.Infrastructure.Data.AuthDbContext.html
  commentId: T:MyApp.Auth.Infrastructure.Data.AuthDbContext
  fullName: MyApp.Auth.Infrastructure.Data.AuthDbContext
  nameWithType: AuthDbContext
- uid: MyApp.Auth.Infrastructure.Data.AuthDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{MyApp.Auth.Infrastructure.Data.AuthDbContext})
  name: AuthDbContext(DbContextOptions<AuthDbContext>)
  href: api/MyApp.Auth.Infrastructure.Data.AuthDbContext.html#MyApp_Auth_Infrastructure_Data_AuthDbContext__ctor_Microsoft_EntityFrameworkCore_DbContextOptions_MyApp_Auth_Infrastructure_Data_AuthDbContext__
  commentId: M:MyApp.Auth.Infrastructure.Data.AuthDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{MyApp.Auth.Infrastructure.Data.AuthDbContext})
  name.vb: New(DbContextOptions(Of AuthDbContext))
  fullName: MyApp.Auth.Infrastructure.Data.AuthDbContext.AuthDbContext(Microsoft.EntityFrameworkCore.DbContextOptions<MyApp.Auth.Infrastructure.Data.AuthDbContext>)
  fullName.vb: MyApp.Auth.Infrastructure.Data.AuthDbContext.New(Microsoft.EntityFrameworkCore.DbContextOptions(Of MyApp.Auth.Infrastructure.Data.AuthDbContext))
  nameWithType: AuthDbContext.AuthDbContext(DbContextOptions<AuthDbContext>)
  nameWithType.vb: AuthDbContext.New(DbContextOptions(Of AuthDbContext))
- uid: MyApp.Auth.Infrastructure.Data.AuthDbContext.#ctor*
  name: AuthDbContext
  href: api/MyApp.Auth.Infrastructure.Data.AuthDbContext.html#MyApp_Auth_Infrastructure_Data_AuthDbContext__ctor_
  commentId: Overload:MyApp.Auth.Infrastructure.Data.AuthDbContext.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Auth.Infrastructure.Data.AuthDbContext.AuthDbContext
  fullName.vb: MyApp.Auth.Infrastructure.Data.AuthDbContext.New
  nameWithType: AuthDbContext.AuthDbContext
  nameWithType.vb: AuthDbContext.New
- uid: MyApp.Auth.Infrastructure.Data.AuthDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: OnModelCreating(ModelBuilder)
  href: api/MyApp.Auth.Infrastructure.Data.AuthDbContext.html#MyApp_Auth_Infrastructure_Data_AuthDbContext_OnModelCreating_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:MyApp.Auth.Infrastructure.Data.AuthDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: MyApp.Auth.Infrastructure.Data.AuthDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: AuthDbContext.OnModelCreating(ModelBuilder)
- uid: MyApp.Auth.Infrastructure.Data.AuthDbContext.OnModelCreating*
  name: OnModelCreating
  href: api/MyApp.Auth.Infrastructure.Data.AuthDbContext.html#MyApp_Auth_Infrastructure_Data_AuthDbContext_OnModelCreating_
  commentId: Overload:MyApp.Auth.Infrastructure.Data.AuthDbContext.OnModelCreating
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Data.AuthDbContext.OnModelCreating
  nameWithType: AuthDbContext.OnModelCreating
- uid: MyApp.Auth.Infrastructure.Data.AuthDbContext.Permissions
  name: Permissions
  href: api/MyApp.Auth.Infrastructure.Data.AuthDbContext.html#MyApp_Auth_Infrastructure_Data_AuthDbContext_Permissions
  commentId: P:MyApp.Auth.Infrastructure.Data.AuthDbContext.Permissions
  fullName: MyApp.Auth.Infrastructure.Data.AuthDbContext.Permissions
  nameWithType: AuthDbContext.Permissions
- uid: MyApp.Auth.Infrastructure.Data.AuthDbContext.Permissions*
  name: Permissions
  href: api/MyApp.Auth.Infrastructure.Data.AuthDbContext.html#MyApp_Auth_Infrastructure_Data_AuthDbContext_Permissions_
  commentId: Overload:MyApp.Auth.Infrastructure.Data.AuthDbContext.Permissions
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Data.AuthDbContext.Permissions
  nameWithType: AuthDbContext.Permissions
- uid: MyApp.Auth.Infrastructure.Data.AuthDbContext.RefreshTokens
  name: RefreshTokens
  href: api/MyApp.Auth.Infrastructure.Data.AuthDbContext.html#MyApp_Auth_Infrastructure_Data_AuthDbContext_RefreshTokens
  commentId: P:MyApp.Auth.Infrastructure.Data.AuthDbContext.RefreshTokens
  fullName: MyApp.Auth.Infrastructure.Data.AuthDbContext.RefreshTokens
  nameWithType: AuthDbContext.RefreshTokens
- uid: MyApp.Auth.Infrastructure.Data.AuthDbContext.RefreshTokens*
  name: RefreshTokens
  href: api/MyApp.Auth.Infrastructure.Data.AuthDbContext.html#MyApp_Auth_Infrastructure_Data_AuthDbContext_RefreshTokens_
  commentId: Overload:MyApp.Auth.Infrastructure.Data.AuthDbContext.RefreshTokens
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Data.AuthDbContext.RefreshTokens
  nameWithType: AuthDbContext.RefreshTokens
- uid: MyApp.Auth.Infrastructure.Data.AuthDbContext.RolePermissions
  name: RolePermissions
  href: api/MyApp.Auth.Infrastructure.Data.AuthDbContext.html#MyApp_Auth_Infrastructure_Data_AuthDbContext_RolePermissions
  commentId: P:MyApp.Auth.Infrastructure.Data.AuthDbContext.RolePermissions
  fullName: MyApp.Auth.Infrastructure.Data.AuthDbContext.RolePermissions
  nameWithType: AuthDbContext.RolePermissions
- uid: MyApp.Auth.Infrastructure.Data.AuthDbContext.RolePermissions*
  name: RolePermissions
  href: api/MyApp.Auth.Infrastructure.Data.AuthDbContext.html#MyApp_Auth_Infrastructure_Data_AuthDbContext_RolePermissions_
  commentId: Overload:MyApp.Auth.Infrastructure.Data.AuthDbContext.RolePermissions
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Data.AuthDbContext.RolePermissions
  nameWithType: AuthDbContext.RolePermissions
- uid: MyApp.Auth.Infrastructure.Data.AuthDbContext.Roles
  name: Roles
  href: api/MyApp.Auth.Infrastructure.Data.AuthDbContext.html#MyApp_Auth_Infrastructure_Data_AuthDbContext_Roles
  commentId: P:MyApp.Auth.Infrastructure.Data.AuthDbContext.Roles
  fullName: MyApp.Auth.Infrastructure.Data.AuthDbContext.Roles
  nameWithType: AuthDbContext.Roles
- uid: MyApp.Auth.Infrastructure.Data.AuthDbContext.Roles*
  name: Roles
  href: api/MyApp.Auth.Infrastructure.Data.AuthDbContext.html#MyApp_Auth_Infrastructure_Data_AuthDbContext_Roles_
  commentId: Overload:MyApp.Auth.Infrastructure.Data.AuthDbContext.Roles
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Data.AuthDbContext.Roles
  nameWithType: AuthDbContext.Roles
- uid: MyApp.Auth.Infrastructure.Data.AuthDbContext.SaveChangesAsync(System.Threading.CancellationToken)
  name: SaveChangesAsync(CancellationToken)
  href: api/MyApp.Auth.Infrastructure.Data.AuthDbContext.html#MyApp_Auth_Infrastructure_Data_AuthDbContext_SaveChangesAsync_System_Threading_CancellationToken_
  commentId: M:MyApp.Auth.Infrastructure.Data.AuthDbContext.SaveChangesAsync(System.Threading.CancellationToken)
  fullName: MyApp.Auth.Infrastructure.Data.AuthDbContext.SaveChangesAsync(System.Threading.CancellationToken)
  nameWithType: AuthDbContext.SaveChangesAsync(CancellationToken)
- uid: MyApp.Auth.Infrastructure.Data.AuthDbContext.SaveChangesAsync*
  name: SaveChangesAsync
  href: api/MyApp.Auth.Infrastructure.Data.AuthDbContext.html#MyApp_Auth_Infrastructure_Data_AuthDbContext_SaveChangesAsync_
  commentId: Overload:MyApp.Auth.Infrastructure.Data.AuthDbContext.SaveChangesAsync
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Data.AuthDbContext.SaveChangesAsync
  nameWithType: AuthDbContext.SaveChangesAsync
- uid: MyApp.Auth.Infrastructure.Data.AuthDbContext.UserPermissions
  name: UserPermissions
  href: api/MyApp.Auth.Infrastructure.Data.AuthDbContext.html#MyApp_Auth_Infrastructure_Data_AuthDbContext_UserPermissions
  commentId: P:MyApp.Auth.Infrastructure.Data.AuthDbContext.UserPermissions
  fullName: MyApp.Auth.Infrastructure.Data.AuthDbContext.UserPermissions
  nameWithType: AuthDbContext.UserPermissions
- uid: MyApp.Auth.Infrastructure.Data.AuthDbContext.UserPermissions*
  name: UserPermissions
  href: api/MyApp.Auth.Infrastructure.Data.AuthDbContext.html#MyApp_Auth_Infrastructure_Data_AuthDbContext_UserPermissions_
  commentId: Overload:MyApp.Auth.Infrastructure.Data.AuthDbContext.UserPermissions
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Data.AuthDbContext.UserPermissions
  nameWithType: AuthDbContext.UserPermissions
- uid: MyApp.Auth.Infrastructure.Data.AuthDbContext.UserRoles
  name: UserRoles
  href: api/MyApp.Auth.Infrastructure.Data.AuthDbContext.html#MyApp_Auth_Infrastructure_Data_AuthDbContext_UserRoles
  commentId: P:MyApp.Auth.Infrastructure.Data.AuthDbContext.UserRoles
  fullName: MyApp.Auth.Infrastructure.Data.AuthDbContext.UserRoles
  nameWithType: AuthDbContext.UserRoles
- uid: MyApp.Auth.Infrastructure.Data.AuthDbContext.UserRoles*
  name: UserRoles
  href: api/MyApp.Auth.Infrastructure.Data.AuthDbContext.html#MyApp_Auth_Infrastructure_Data_AuthDbContext_UserRoles_
  commentId: Overload:MyApp.Auth.Infrastructure.Data.AuthDbContext.UserRoles
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Data.AuthDbContext.UserRoles
  nameWithType: AuthDbContext.UserRoles
- uid: MyApp.Auth.Infrastructure.Data.AuthDbContext.Users
  name: Users
  href: api/MyApp.Auth.Infrastructure.Data.AuthDbContext.html#MyApp_Auth_Infrastructure_Data_AuthDbContext_Users
  commentId: P:MyApp.Auth.Infrastructure.Data.AuthDbContext.Users
  fullName: MyApp.Auth.Infrastructure.Data.AuthDbContext.Users
  nameWithType: AuthDbContext.Users
- uid: MyApp.Auth.Infrastructure.Data.AuthDbContext.Users*
  name: Users
  href: api/MyApp.Auth.Infrastructure.Data.AuthDbContext.html#MyApp_Auth_Infrastructure_Data_AuthDbContext_Users_
  commentId: Overload:MyApp.Auth.Infrastructure.Data.AuthDbContext.Users
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Data.AuthDbContext.Users
  nameWithType: AuthDbContext.Users
- uid: MyApp.Auth.Infrastructure.Data.AuthDbContextFactory
  name: AuthDbContextFactory
  href: api/MyApp.Auth.Infrastructure.Data.AuthDbContextFactory.html
  commentId: T:MyApp.Auth.Infrastructure.Data.AuthDbContextFactory
  fullName: MyApp.Auth.Infrastructure.Data.AuthDbContextFactory
  nameWithType: AuthDbContextFactory
- uid: MyApp.Auth.Infrastructure.Data.AuthDbContextFactory.CreateDbContext(System.String[])
  name: CreateDbContext(string[])
  href: api/MyApp.Auth.Infrastructure.Data.AuthDbContextFactory.html#MyApp_Auth_Infrastructure_Data_AuthDbContextFactory_CreateDbContext_System_String___
  commentId: M:MyApp.Auth.Infrastructure.Data.AuthDbContextFactory.CreateDbContext(System.String[])
  name.vb: CreateDbContext(String())
  fullName: MyApp.Auth.Infrastructure.Data.AuthDbContextFactory.CreateDbContext(string[])
  fullName.vb: MyApp.Auth.Infrastructure.Data.AuthDbContextFactory.CreateDbContext(String())
  nameWithType: AuthDbContextFactory.CreateDbContext(string[])
  nameWithType.vb: AuthDbContextFactory.CreateDbContext(String())
- uid: MyApp.Auth.Infrastructure.Data.AuthDbContextFactory.CreateDbContext*
  name: CreateDbContext
  href: api/MyApp.Auth.Infrastructure.Data.AuthDbContextFactory.html#MyApp_Auth_Infrastructure_Data_AuthDbContextFactory_CreateDbContext_
  commentId: Overload:MyApp.Auth.Infrastructure.Data.AuthDbContextFactory.CreateDbContext
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Data.AuthDbContextFactory.CreateDbContext
  nameWithType: AuthDbContextFactory.CreateDbContext
- uid: MyApp.Auth.Infrastructure.Data.Repositories
  name: MyApp.Auth.Infrastructure.Data.Repositories
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.html
  commentId: N:MyApp.Auth.Infrastructure.Data.Repositories
  fullName: MyApp.Auth.Infrastructure.Data.Repositories
  nameWithType: MyApp.Auth.Infrastructure.Data.Repositories
- uid: MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository
  name: PermissionRepository
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository.html
  commentId: T:MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository
  nameWithType: PermissionRepository
- uid: MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository.#ctor(MyApp.Auth.Infrastructure.Data.AuthDbContext)
  name: PermissionRepository(AuthDbContext)
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_PermissionRepository__ctor_MyApp_Auth_Infrastructure_Data_AuthDbContext_
  commentId: M:MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository.#ctor(MyApp.Auth.Infrastructure.Data.AuthDbContext)
  name.vb: New(AuthDbContext)
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository.PermissionRepository(MyApp.Auth.Infrastructure.Data.AuthDbContext)
  fullName.vb: MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository.New(MyApp.Auth.Infrastructure.Data.AuthDbContext)
  nameWithType: PermissionRepository.PermissionRepository(AuthDbContext)
  nameWithType.vb: PermissionRepository.New(AuthDbContext)
- uid: MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository.#ctor*
  name: PermissionRepository
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_PermissionRepository__ctor_
  commentId: Overload:MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository.PermissionRepository
  fullName.vb: MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository.New
  nameWithType: PermissionRepository.PermissionRepository
  nameWithType.vb: PermissionRepository.New
- uid: MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository.GetAllPermissionsByUserId(System.Guid)
  name: GetAllPermissionsByUserId(Guid)
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_PermissionRepository_GetAllPermissionsByUserId_System_Guid_
  commentId: M:MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository.GetAllPermissionsByUserId(System.Guid)
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository.GetAllPermissionsByUserId(System.Guid)
  nameWithType: PermissionRepository.GetAllPermissionsByUserId(Guid)
- uid: MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository.GetAllPermissionsByUserId*
  name: GetAllPermissionsByUserId
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_PermissionRepository_GetAllPermissionsByUserId_
  commentId: Overload:MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository.GetAllPermissionsByUserId
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository.GetAllPermissionsByUserId
  nameWithType: PermissionRepository.GetAllPermissionsByUserId
- uid: MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository.GetByRoleName(System.String,System.String,System.String)
  name: GetByRoleName(string, string, string)
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_PermissionRepository_GetByRoleName_System_String_System_String_System_String_
  commentId: M:MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository.GetByRoleName(System.String,System.String,System.String)
  name.vb: GetByRoleName(String, String, String)
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository.GetByRoleName(string, string, string)
  fullName.vb: MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository.GetByRoleName(String, String, String)
  nameWithType: PermissionRepository.GetByRoleName(string, string, string)
  nameWithType.vb: PermissionRepository.GetByRoleName(String, String, String)
- uid: MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository.GetByRoleName*
  name: GetByRoleName
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_PermissionRepository_GetByRoleName_
  commentId: Overload:MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository.GetByRoleName
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository.GetByRoleName
  nameWithType: PermissionRepository.GetByRoleName
- uid: MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository.GetByUserName(System.String,System.String,System.String)
  name: GetByUserName(string, string, string)
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_PermissionRepository_GetByUserName_System_String_System_String_System_String_
  commentId: M:MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository.GetByUserName(System.String,System.String,System.String)
  name.vb: GetByUserName(String, String, String)
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository.GetByUserName(string, string, string)
  fullName.vb: MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository.GetByUserName(String, String, String)
  nameWithType: PermissionRepository.GetByUserName(string, string, string)
  nameWithType.vb: PermissionRepository.GetByUserName(String, String, String)
- uid: MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository.GetByUserName*
  name: GetByUserName
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_PermissionRepository_GetByUserName_
  commentId: Overload:MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository.GetByUserName
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.PermissionRepository.GetByUserName
  nameWithType: PermissionRepository.GetByUserName
- uid: MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository
  name: RefreshTokenRepository
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.html
  commentId: T:MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository
  nameWithType: RefreshTokenRepository
- uid: MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.#ctor(MyApp.Auth.Infrastructure.Data.AuthDbContext)
  name: RefreshTokenRepository(AuthDbContext)
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_RefreshTokenRepository__ctor_MyApp_Auth_Infrastructure_Data_AuthDbContext_
  commentId: M:MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.#ctor(MyApp.Auth.Infrastructure.Data.AuthDbContext)
  name.vb: New(AuthDbContext)
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.RefreshTokenRepository(MyApp.Auth.Infrastructure.Data.AuthDbContext)
  fullName.vb: MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.New(MyApp.Auth.Infrastructure.Data.AuthDbContext)
  nameWithType: RefreshTokenRepository.RefreshTokenRepository(AuthDbContext)
  nameWithType.vb: RefreshTokenRepository.New(AuthDbContext)
- uid: MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.#ctor*
  name: RefreshTokenRepository
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_RefreshTokenRepository__ctor_
  commentId: Overload:MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.RefreshTokenRepository
  fullName.vb: MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.New
  nameWithType: RefreshTokenRepository.RefreshTokenRepository
  nameWithType.vb: RefreshTokenRepository.New
- uid: MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.CreateAsync(MyApp.Auth.Domain.Entities.RefreshToken)
  name: CreateAsync(RefreshToken)
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_RefreshTokenRepository_CreateAsync_MyApp_Auth_Domain_Entities_RefreshToken_
  commentId: M:MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.CreateAsync(MyApp.Auth.Domain.Entities.RefreshToken)
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.CreateAsync(MyApp.Auth.Domain.Entities.RefreshToken)
  nameWithType: RefreshTokenRepository.CreateAsync(RefreshToken)
- uid: MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.CreateAsync*
  name: CreateAsync
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_RefreshTokenRepository_CreateAsync_
  commentId: Overload:MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.CreateAsync
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.CreateAsync
  nameWithType: RefreshTokenRepository.CreateAsync
- uid: MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.GetByTokenAsync(System.String)
  name: GetByTokenAsync(string)
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_RefreshTokenRepository_GetByTokenAsync_System_String_
  commentId: M:MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.GetByTokenAsync(System.String)
  name.vb: GetByTokenAsync(String)
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.GetByTokenAsync(string)
  fullName.vb: MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.GetByTokenAsync(String)
  nameWithType: RefreshTokenRepository.GetByTokenAsync(string)
  nameWithType.vb: RefreshTokenRepository.GetByTokenAsync(String)
- uid: MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.GetByTokenAsync*
  name: GetByTokenAsync
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_RefreshTokenRepository_GetByTokenAsync_
  commentId: Overload:MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.GetByTokenAsync
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.GetByTokenAsync
  nameWithType: RefreshTokenRepository.GetByTokenAsync
- uid: MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.GetByUserIdAsync(System.Guid)
  name: GetByUserIdAsync(Guid)
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_RefreshTokenRepository_GetByUserIdAsync_System_Guid_
  commentId: M:MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.GetByUserIdAsync(System.Guid)
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.GetByUserIdAsync(System.Guid)
  nameWithType: RefreshTokenRepository.GetByUserIdAsync(Guid)
- uid: MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.GetByUserIdAsync*
  name: GetByUserIdAsync
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_RefreshTokenRepository_GetByUserIdAsync_
  commentId: Overload:MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.GetByUserIdAsync
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.GetByUserIdAsync
  nameWithType: RefreshTokenRepository.GetByUserIdAsync
- uid: MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.GetValidRefreshTokenAsync(System.Guid,System.String)
  name: GetValidRefreshTokenAsync(Guid, string)
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_RefreshTokenRepository_GetValidRefreshTokenAsync_System_Guid_System_String_
  commentId: M:MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.GetValidRefreshTokenAsync(System.Guid,System.String)
  name.vb: GetValidRefreshTokenAsync(Guid, String)
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.GetValidRefreshTokenAsync(System.Guid, string)
  fullName.vb: MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.GetValidRefreshTokenAsync(System.Guid, String)
  nameWithType: RefreshTokenRepository.GetValidRefreshTokenAsync(Guid, string)
  nameWithType.vb: RefreshTokenRepository.GetValidRefreshTokenAsync(Guid, String)
- uid: MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.GetValidRefreshTokenAsync*
  name: GetValidRefreshTokenAsync
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_RefreshTokenRepository_GetValidRefreshTokenAsync_
  commentId: Overload:MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.GetValidRefreshTokenAsync
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.GetValidRefreshTokenAsync
  nameWithType: RefreshTokenRepository.GetValidRefreshTokenAsync
- uid: MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.RevokeAsync(System.Guid)
  name: RevokeAsync(Guid)
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_RefreshTokenRepository_RevokeAsync_System_Guid_
  commentId: M:MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.RevokeAsync(System.Guid)
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.RevokeAsync(System.Guid)
  nameWithType: RefreshTokenRepository.RevokeAsync(Guid)
- uid: MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.RevokeAsync*
  name: RevokeAsync
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_RefreshTokenRepository_RevokeAsync_
  commentId: Overload:MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.RevokeAsync
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.RevokeAsync
  nameWithType: RefreshTokenRepository.RevokeAsync
- uid: MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.RevokeUserTokensAsync(System.Guid)
  name: RevokeUserTokensAsync(Guid)
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_RefreshTokenRepository_RevokeUserTokensAsync_System_Guid_
  commentId: M:MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.RevokeUserTokensAsync(System.Guid)
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.RevokeUserTokensAsync(System.Guid)
  nameWithType: RefreshTokenRepository.RevokeUserTokensAsync(Guid)
- uid: MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.RevokeUserTokensAsync*
  name: RevokeUserTokensAsync
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_RefreshTokenRepository_RevokeUserTokensAsync_
  commentId: Overload:MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.RevokeUserTokensAsync
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.RefreshTokenRepository.RevokeUserTokensAsync
  nameWithType: RefreshTokenRepository.RevokeUserTokensAsync
- uid: MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository
  name: RoleRepository
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.html
  commentId: T:MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository
  nameWithType: RoleRepository
- uid: MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.#ctor(MyApp.Auth.Infrastructure.Data.AuthDbContext)
  name: RoleRepository(AuthDbContext)
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_RoleRepository__ctor_MyApp_Auth_Infrastructure_Data_AuthDbContext_
  commentId: M:MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.#ctor(MyApp.Auth.Infrastructure.Data.AuthDbContext)
  name.vb: New(AuthDbContext)
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.RoleRepository(MyApp.Auth.Infrastructure.Data.AuthDbContext)
  fullName.vb: MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.New(MyApp.Auth.Infrastructure.Data.AuthDbContext)
  nameWithType: RoleRepository.RoleRepository(AuthDbContext)
  nameWithType.vb: RoleRepository.New(AuthDbContext)
- uid: MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.#ctor*
  name: RoleRepository
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_RoleRepository__ctor_
  commentId: Overload:MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.RoleRepository
  fullName.vb: MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.New
  nameWithType: RoleRepository.RoleRepository
  nameWithType.vb: RoleRepository.New
- uid: MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.GetByNameAsync(System.String)
  name: GetByNameAsync(string)
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_RoleRepository_GetByNameAsync_System_String_
  commentId: M:MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.GetByNameAsync(System.String)
  name.vb: GetByNameAsync(String)
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.GetByNameAsync(string)
  fullName.vb: MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.GetByNameAsync(String)
  nameWithType: RoleRepository.GetByNameAsync(string)
  nameWithType.vb: RoleRepository.GetByNameAsync(String)
- uid: MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.GetByNameAsync*
  name: GetByNameAsync
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_RoleRepository_GetByNameAsync_
  commentId: Overload:MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.GetByNameAsync
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.GetByNameAsync
  nameWithType: RoleRepository.GetByNameAsync
- uid: MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.GetPermissionsForRoleAsync(System.Guid)
  name: GetPermissionsForRoleAsync(Guid)
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_RoleRepository_GetPermissionsForRoleAsync_System_Guid_
  commentId: M:MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.GetPermissionsForRoleAsync(System.Guid)
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.GetPermissionsForRoleAsync(System.Guid)
  nameWithType: RoleRepository.GetPermissionsForRoleAsync(Guid)
- uid: MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.GetPermissionsForRoleAsync*
  name: GetPermissionsForRoleAsync
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_RoleRepository_GetPermissionsForRoleAsync_
  commentId: Overload:MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.GetPermissionsForRoleAsync
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.GetPermissionsForRoleAsync
  nameWithType: RoleRepository.GetPermissionsForRoleAsync
- uid: MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.GetRolesByUserIdAsync(System.Guid)
  name: GetRolesByUserIdAsync(Guid)
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_RoleRepository_GetRolesByUserIdAsync_System_Guid_
  commentId: M:MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.GetRolesByUserIdAsync(System.Guid)
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.GetRolesByUserIdAsync(System.Guid)
  nameWithType: RoleRepository.GetRolesByUserIdAsync(Guid)
- uid: MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.GetRolesByUserIdAsync*
  name: GetRolesByUserIdAsync
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_RoleRepository_GetRolesByUserIdAsync_
  commentId: Overload:MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.GetRolesByUserIdAsync
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.GetRolesByUserIdAsync
  nameWithType: RoleRepository.GetRolesByUserIdAsync
- uid: MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.NameExistsAsync(System.String)
  name: NameExistsAsync(string)
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_RoleRepository_NameExistsAsync_System_String_
  commentId: M:MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.NameExistsAsync(System.String)
  name.vb: NameExistsAsync(String)
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.NameExistsAsync(string)
  fullName.vb: MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.NameExistsAsync(String)
  nameWithType: RoleRepository.NameExistsAsync(string)
  nameWithType.vb: RoleRepository.NameExistsAsync(String)
- uid: MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.NameExistsAsync*
  name: NameExistsAsync
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_RoleRepository_NameExistsAsync_
  commentId: Overload:MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.NameExistsAsync
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.RoleRepository.NameExistsAsync
  nameWithType: RoleRepository.NameExistsAsync
- uid: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository
  name: UserRepository
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.html
  commentId: T:MyApp.Auth.Infrastructure.Data.Repositories.UserRepository
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository
  nameWithType: UserRepository
- uid: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.#ctor(MyApp.Auth.Infrastructure.Data.AuthDbContext)
  name: UserRepository(AuthDbContext)
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_UserRepository__ctor_MyApp_Auth_Infrastructure_Data_AuthDbContext_
  commentId: M:MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.#ctor(MyApp.Auth.Infrastructure.Data.AuthDbContext)
  name.vb: New(AuthDbContext)
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.UserRepository(MyApp.Auth.Infrastructure.Data.AuthDbContext)
  fullName.vb: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.New(MyApp.Auth.Infrastructure.Data.AuthDbContext)
  nameWithType: UserRepository.UserRepository(AuthDbContext)
  nameWithType.vb: UserRepository.New(AuthDbContext)
- uid: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.#ctor*
  name: UserRepository
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_UserRepository__ctor_
  commentId: Overload:MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.UserRepository
  fullName.vb: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.New
  nameWithType: UserRepository.UserRepository
  nameWithType.vb: UserRepository.New
- uid: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.EmailExistsAsync(System.String)
  name: EmailExistsAsync(string)
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_UserRepository_EmailExistsAsync_System_String_
  commentId: M:MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.EmailExistsAsync(System.String)
  name.vb: EmailExistsAsync(String)
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.EmailExistsAsync(string)
  fullName.vb: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.EmailExistsAsync(String)
  nameWithType: UserRepository.EmailExistsAsync(string)
  nameWithType.vb: UserRepository.EmailExistsAsync(String)
- uid: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.EmailExistsAsync*
  name: EmailExistsAsync
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_UserRepository_EmailExistsAsync_
  commentId: Overload:MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.EmailExistsAsync
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.EmailExistsAsync
  nameWithType: UserRepository.EmailExistsAsync
- uid: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByEmailAsync(System.String)
  name: GetByEmailAsync(string)
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_UserRepository_GetByEmailAsync_System_String_
  commentId: M:MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByEmailAsync(System.String)
  name.vb: GetByEmailAsync(String)
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByEmailAsync(string)
  fullName.vb: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByEmailAsync(String)
  nameWithType: UserRepository.GetByEmailAsync(string)
  nameWithType.vb: UserRepository.GetByEmailAsync(String)
- uid: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByEmailAsync*
  name: GetByEmailAsync
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_UserRepository_GetByEmailAsync_
  commentId: Overload:MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByEmailAsync
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByEmailAsync
  nameWithType: UserRepository.GetByEmailAsync
- uid: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByExternalIdAsync(System.String,System.String)
  name: GetByExternalIdAsync(string, string)
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_UserRepository_GetByExternalIdAsync_System_String_System_String_
  commentId: M:MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByExternalIdAsync(System.String,System.String)
  name.vb: GetByExternalIdAsync(String, String)
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByExternalIdAsync(string, string)
  fullName.vb: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByExternalIdAsync(String, String)
  nameWithType: UserRepository.GetByExternalIdAsync(string, string)
  nameWithType.vb: UserRepository.GetByExternalIdAsync(String, String)
- uid: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByExternalIdAsync*
  name: GetByExternalIdAsync
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_UserRepository_GetByExternalIdAsync_
  commentId: Overload:MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByExternalIdAsync
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByExternalIdAsync
  nameWithType: UserRepository.GetByExternalIdAsync
- uid: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByRoleAsync(System.String)
  name: GetByRoleAsync(string)
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_UserRepository_GetByRoleAsync_System_String_
  commentId: M:MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByRoleAsync(System.String)
  name.vb: GetByRoleAsync(String)
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByRoleAsync(string)
  fullName.vb: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByRoleAsync(String)
  nameWithType: UserRepository.GetByRoleAsync(string)
  nameWithType.vb: UserRepository.GetByRoleAsync(String)
- uid: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByRoleAsync*
  name: GetByRoleAsync
  href: api/MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.html#MyApp_Auth_Infrastructure_Data_Repositories_UserRepository_GetByRoleAsync_
  commentId: Overload:MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByRoleAsync
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Data.Repositories.UserRepository.GetByRoleAsync
  nameWithType: UserRepository.GetByRoleAsync
- uid: MyApp.Auth.Infrastructure.Data.Seeders
  name: MyApp.Auth.Infrastructure.Data.Seeders
  href: api/MyApp.Auth.Infrastructure.Data.Seeders.html
  commentId: N:MyApp.Auth.Infrastructure.Data.Seeders
  fullName: MyApp.Auth.Infrastructure.Data.Seeders
  nameWithType: MyApp.Auth.Infrastructure.Data.Seeders
- uid: MyApp.Auth.Infrastructure.Data.Seeders.PermissionSeeder
  name: PermissionSeeder
  href: api/MyApp.Auth.Infrastructure.Data.Seeders.PermissionSeeder.html
  commentId: T:MyApp.Auth.Infrastructure.Data.Seeders.PermissionSeeder
  fullName: MyApp.Auth.Infrastructure.Data.Seeders.PermissionSeeder
  nameWithType: PermissionSeeder
- uid: MyApp.Auth.Infrastructure.Data.Seeders.PermissionSeeder.SeedPermissionsAsync(MyApp.Auth.Infrastructure.Data.AuthDbContext)
  name: SeedPermissionsAsync(AuthDbContext)
  href: api/MyApp.Auth.Infrastructure.Data.Seeders.PermissionSeeder.html#MyApp_Auth_Infrastructure_Data_Seeders_PermissionSeeder_SeedPermissionsAsync_MyApp_Auth_Infrastructure_Data_AuthDbContext_
  commentId: M:MyApp.Auth.Infrastructure.Data.Seeders.PermissionSeeder.SeedPermissionsAsync(MyApp.Auth.Infrastructure.Data.AuthDbContext)
  fullName: MyApp.Auth.Infrastructure.Data.Seeders.PermissionSeeder.SeedPermissionsAsync(MyApp.Auth.Infrastructure.Data.AuthDbContext)
  nameWithType: PermissionSeeder.SeedPermissionsAsync(AuthDbContext)
- uid: MyApp.Auth.Infrastructure.Data.Seeders.PermissionSeeder.SeedPermissionsAsync*
  name: SeedPermissionsAsync
  href: api/MyApp.Auth.Infrastructure.Data.Seeders.PermissionSeeder.html#MyApp_Auth_Infrastructure_Data_Seeders_PermissionSeeder_SeedPermissionsAsync_
  commentId: Overload:MyApp.Auth.Infrastructure.Data.Seeders.PermissionSeeder.SeedPermissionsAsync
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Data.Seeders.PermissionSeeder.SeedPermissionsAsync
  nameWithType: PermissionSeeder.SeedPermissionsAsync
- uid: MyApp.Auth.Infrastructure.Migrations
  name: MyApp.Auth.Infrastructure.Migrations
  href: api/MyApp.Auth.Infrastructure.Migrations.html
  commentId: N:MyApp.Auth.Infrastructure.Migrations
  fullName: MyApp.Auth.Infrastructure.Migrations
  nameWithType: MyApp.Auth.Infrastructure.Migrations
- uid: MyApp.Auth.Infrastructure.Migrations.AddPermissionDescription
  name: AddPermissionDescription
  href: api/MyApp.Auth.Infrastructure.Migrations.AddPermissionDescription.html
  commentId: T:MyApp.Auth.Infrastructure.Migrations.AddPermissionDescription
  fullName: MyApp.Auth.Infrastructure.Migrations.AddPermissionDescription
  nameWithType: AddPermissionDescription
- uid: MyApp.Auth.Infrastructure.Migrations.AddPermissionDescription.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/MyApp.Auth.Infrastructure.Migrations.AddPermissionDescription.html#MyApp_Auth_Infrastructure_Migrations_AddPermissionDescription_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:MyApp.Auth.Infrastructure.Migrations.AddPermissionDescription.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: MyApp.Auth.Infrastructure.Migrations.AddPermissionDescription.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: AddPermissionDescription.BuildTargetModel(ModelBuilder)
- uid: MyApp.Auth.Infrastructure.Migrations.AddPermissionDescription.BuildTargetModel*
  name: BuildTargetModel
  href: api/MyApp.Auth.Infrastructure.Migrations.AddPermissionDescription.html#MyApp_Auth_Infrastructure_Migrations_AddPermissionDescription_BuildTargetModel_
  commentId: Overload:MyApp.Auth.Infrastructure.Migrations.AddPermissionDescription.BuildTargetModel
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Migrations.AddPermissionDescription.BuildTargetModel
  nameWithType: AddPermissionDescription.BuildTargetModel
- uid: MyApp.Auth.Infrastructure.Migrations.AddPermissionDescription.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/MyApp.Auth.Infrastructure.Migrations.AddPermissionDescription.html#MyApp_Auth_Infrastructure_Migrations_AddPermissionDescription_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MyApp.Auth.Infrastructure.Migrations.AddPermissionDescription.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MyApp.Auth.Infrastructure.Migrations.AddPermissionDescription.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: AddPermissionDescription.Down(MigrationBuilder)
- uid: MyApp.Auth.Infrastructure.Migrations.AddPermissionDescription.Down*
  name: Down
  href: api/MyApp.Auth.Infrastructure.Migrations.AddPermissionDescription.html#MyApp_Auth_Infrastructure_Migrations_AddPermissionDescription_Down_
  commentId: Overload:MyApp.Auth.Infrastructure.Migrations.AddPermissionDescription.Down
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Migrations.AddPermissionDescription.Down
  nameWithType: AddPermissionDescription.Down
- uid: MyApp.Auth.Infrastructure.Migrations.AddPermissionDescription.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/MyApp.Auth.Infrastructure.Migrations.AddPermissionDescription.html#MyApp_Auth_Infrastructure_Migrations_AddPermissionDescription_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MyApp.Auth.Infrastructure.Migrations.AddPermissionDescription.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MyApp.Auth.Infrastructure.Migrations.AddPermissionDescription.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: AddPermissionDescription.Up(MigrationBuilder)
- uid: MyApp.Auth.Infrastructure.Migrations.AddPermissionDescription.Up*
  name: Up
  href: api/MyApp.Auth.Infrastructure.Migrations.AddPermissionDescription.html#MyApp_Auth_Infrastructure_Migrations_AddPermissionDescription_Up_
  commentId: Overload:MyApp.Auth.Infrastructure.Migrations.AddPermissionDescription.Up
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Migrations.AddPermissionDescription.Up
  nameWithType: AddPermissionDescription.Up
- uid: MyApp.Auth.Infrastructure.Migrations.EmptyMigration
  name: EmptyMigration
  href: api/MyApp.Auth.Infrastructure.Migrations.EmptyMigration.html
  commentId: T:MyApp.Auth.Infrastructure.Migrations.EmptyMigration
  fullName: MyApp.Auth.Infrastructure.Migrations.EmptyMigration
  nameWithType: EmptyMigration
- uid: MyApp.Auth.Infrastructure.Migrations.EmptyMigration.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/MyApp.Auth.Infrastructure.Migrations.EmptyMigration.html#MyApp_Auth_Infrastructure_Migrations_EmptyMigration_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:MyApp.Auth.Infrastructure.Migrations.EmptyMigration.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: MyApp.Auth.Infrastructure.Migrations.EmptyMigration.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: EmptyMigration.BuildTargetModel(ModelBuilder)
- uid: MyApp.Auth.Infrastructure.Migrations.EmptyMigration.BuildTargetModel*
  name: BuildTargetModel
  href: api/MyApp.Auth.Infrastructure.Migrations.EmptyMigration.html#MyApp_Auth_Infrastructure_Migrations_EmptyMigration_BuildTargetModel_
  commentId: Overload:MyApp.Auth.Infrastructure.Migrations.EmptyMigration.BuildTargetModel
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Migrations.EmptyMigration.BuildTargetModel
  nameWithType: EmptyMigration.BuildTargetModel
- uid: MyApp.Auth.Infrastructure.Migrations.EmptyMigration.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/MyApp.Auth.Infrastructure.Migrations.EmptyMigration.html#MyApp_Auth_Infrastructure_Migrations_EmptyMigration_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MyApp.Auth.Infrastructure.Migrations.EmptyMigration.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MyApp.Auth.Infrastructure.Migrations.EmptyMigration.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: EmptyMigration.Down(MigrationBuilder)
- uid: MyApp.Auth.Infrastructure.Migrations.EmptyMigration.Down*
  name: Down
  href: api/MyApp.Auth.Infrastructure.Migrations.EmptyMigration.html#MyApp_Auth_Infrastructure_Migrations_EmptyMigration_Down_
  commentId: Overload:MyApp.Auth.Infrastructure.Migrations.EmptyMigration.Down
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Migrations.EmptyMigration.Down
  nameWithType: EmptyMigration.Down
- uid: MyApp.Auth.Infrastructure.Migrations.EmptyMigration.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/MyApp.Auth.Infrastructure.Migrations.EmptyMigration.html#MyApp_Auth_Infrastructure_Migrations_EmptyMigration_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MyApp.Auth.Infrastructure.Migrations.EmptyMigration.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MyApp.Auth.Infrastructure.Migrations.EmptyMigration.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: EmptyMigration.Up(MigrationBuilder)
- uid: MyApp.Auth.Infrastructure.Migrations.EmptyMigration.Up*
  name: Up
  href: api/MyApp.Auth.Infrastructure.Migrations.EmptyMigration.html#MyApp_Auth_Infrastructure_Migrations_EmptyMigration_Up_
  commentId: Overload:MyApp.Auth.Infrastructure.Migrations.EmptyMigration.Up
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Migrations.EmptyMigration.Up
  nameWithType: EmptyMigration.Up
- uid: MyApp.Auth.Infrastructure.Migrations.InitialAuth
  name: InitialAuth
  href: api/MyApp.Auth.Infrastructure.Migrations.InitialAuth.html
  commentId: T:MyApp.Auth.Infrastructure.Migrations.InitialAuth
  fullName: MyApp.Auth.Infrastructure.Migrations.InitialAuth
  nameWithType: InitialAuth
- uid: MyApp.Auth.Infrastructure.Migrations.InitialAuth.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/MyApp.Auth.Infrastructure.Migrations.InitialAuth.html#MyApp_Auth_Infrastructure_Migrations_InitialAuth_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:MyApp.Auth.Infrastructure.Migrations.InitialAuth.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: MyApp.Auth.Infrastructure.Migrations.InitialAuth.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: InitialAuth.BuildTargetModel(ModelBuilder)
- uid: MyApp.Auth.Infrastructure.Migrations.InitialAuth.BuildTargetModel*
  name: BuildTargetModel
  href: api/MyApp.Auth.Infrastructure.Migrations.InitialAuth.html#MyApp_Auth_Infrastructure_Migrations_InitialAuth_BuildTargetModel_
  commentId: Overload:MyApp.Auth.Infrastructure.Migrations.InitialAuth.BuildTargetModel
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Migrations.InitialAuth.BuildTargetModel
  nameWithType: InitialAuth.BuildTargetModel
- uid: MyApp.Auth.Infrastructure.Migrations.InitialAuth.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/MyApp.Auth.Infrastructure.Migrations.InitialAuth.html#MyApp_Auth_Infrastructure_Migrations_InitialAuth_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MyApp.Auth.Infrastructure.Migrations.InitialAuth.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MyApp.Auth.Infrastructure.Migrations.InitialAuth.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: InitialAuth.Down(MigrationBuilder)
- uid: MyApp.Auth.Infrastructure.Migrations.InitialAuth.Down*
  name: Down
  href: api/MyApp.Auth.Infrastructure.Migrations.InitialAuth.html#MyApp_Auth_Infrastructure_Migrations_InitialAuth_Down_
  commentId: Overload:MyApp.Auth.Infrastructure.Migrations.InitialAuth.Down
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Migrations.InitialAuth.Down
  nameWithType: InitialAuth.Down
- uid: MyApp.Auth.Infrastructure.Migrations.InitialAuth.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/MyApp.Auth.Infrastructure.Migrations.InitialAuth.html#MyApp_Auth_Infrastructure_Migrations_InitialAuth_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MyApp.Auth.Infrastructure.Migrations.InitialAuth.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MyApp.Auth.Infrastructure.Migrations.InitialAuth.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: InitialAuth.Up(MigrationBuilder)
- uid: MyApp.Auth.Infrastructure.Migrations.InitialAuth.Up*
  name: Up
  href: api/MyApp.Auth.Infrastructure.Migrations.InitialAuth.html#MyApp_Auth_Infrastructure_Migrations_InitialAuth_Up_
  commentId: Overload:MyApp.Auth.Infrastructure.Migrations.InitialAuth.Up
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Migrations.InitialAuth.Up
  nameWithType: InitialAuth.Up
- uid: MyApp.Auth.Infrastructure.Migrations.NewAuditColumns
  name: NewAuditColumns
  href: api/MyApp.Auth.Infrastructure.Migrations.NewAuditColumns.html
  commentId: T:MyApp.Auth.Infrastructure.Migrations.NewAuditColumns
  fullName: MyApp.Auth.Infrastructure.Migrations.NewAuditColumns
  nameWithType: NewAuditColumns
- uid: MyApp.Auth.Infrastructure.Migrations.NewAuditColumns.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/MyApp.Auth.Infrastructure.Migrations.NewAuditColumns.html#MyApp_Auth_Infrastructure_Migrations_NewAuditColumns_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:MyApp.Auth.Infrastructure.Migrations.NewAuditColumns.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: MyApp.Auth.Infrastructure.Migrations.NewAuditColumns.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: NewAuditColumns.BuildTargetModel(ModelBuilder)
- uid: MyApp.Auth.Infrastructure.Migrations.NewAuditColumns.BuildTargetModel*
  name: BuildTargetModel
  href: api/MyApp.Auth.Infrastructure.Migrations.NewAuditColumns.html#MyApp_Auth_Infrastructure_Migrations_NewAuditColumns_BuildTargetModel_
  commentId: Overload:MyApp.Auth.Infrastructure.Migrations.NewAuditColumns.BuildTargetModel
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Migrations.NewAuditColumns.BuildTargetModel
  nameWithType: NewAuditColumns.BuildTargetModel
- uid: MyApp.Auth.Infrastructure.Migrations.NewAuditColumns.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/MyApp.Auth.Infrastructure.Migrations.NewAuditColumns.html#MyApp_Auth_Infrastructure_Migrations_NewAuditColumns_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MyApp.Auth.Infrastructure.Migrations.NewAuditColumns.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MyApp.Auth.Infrastructure.Migrations.NewAuditColumns.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: NewAuditColumns.Down(MigrationBuilder)
- uid: MyApp.Auth.Infrastructure.Migrations.NewAuditColumns.Down*
  name: Down
  href: api/MyApp.Auth.Infrastructure.Migrations.NewAuditColumns.html#MyApp_Auth_Infrastructure_Migrations_NewAuditColumns_Down_
  commentId: Overload:MyApp.Auth.Infrastructure.Migrations.NewAuditColumns.Down
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Migrations.NewAuditColumns.Down
  nameWithType: NewAuditColumns.Down
- uid: MyApp.Auth.Infrastructure.Migrations.NewAuditColumns.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/MyApp.Auth.Infrastructure.Migrations.NewAuditColumns.html#MyApp_Auth_Infrastructure_Migrations_NewAuditColumns_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MyApp.Auth.Infrastructure.Migrations.NewAuditColumns.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MyApp.Auth.Infrastructure.Migrations.NewAuditColumns.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: NewAuditColumns.Up(MigrationBuilder)
- uid: MyApp.Auth.Infrastructure.Migrations.NewAuditColumns.Up*
  name: Up
  href: api/MyApp.Auth.Infrastructure.Migrations.NewAuditColumns.html#MyApp_Auth_Infrastructure_Migrations_NewAuditColumns_Up_
  commentId: Overload:MyApp.Auth.Infrastructure.Migrations.NewAuditColumns.Up
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Migrations.NewAuditColumns.Up
  nameWithType: NewAuditColumns.Up
- uid: MyApp.Auth.Infrastructure.Migrations.Permissions
  name: Permissions
  href: api/MyApp.Auth.Infrastructure.Migrations.Permissions.html
  commentId: T:MyApp.Auth.Infrastructure.Migrations.Permissions
  fullName: MyApp.Auth.Infrastructure.Migrations.Permissions
  nameWithType: Permissions
- uid: MyApp.Auth.Infrastructure.Migrations.Permissions.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/MyApp.Auth.Infrastructure.Migrations.Permissions.html#MyApp_Auth_Infrastructure_Migrations_Permissions_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:MyApp.Auth.Infrastructure.Migrations.Permissions.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: MyApp.Auth.Infrastructure.Migrations.Permissions.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: Permissions.BuildTargetModel(ModelBuilder)
- uid: MyApp.Auth.Infrastructure.Migrations.Permissions.BuildTargetModel*
  name: BuildTargetModel
  href: api/MyApp.Auth.Infrastructure.Migrations.Permissions.html#MyApp_Auth_Infrastructure_Migrations_Permissions_BuildTargetModel_
  commentId: Overload:MyApp.Auth.Infrastructure.Migrations.Permissions.BuildTargetModel
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Migrations.Permissions.BuildTargetModel
  nameWithType: Permissions.BuildTargetModel
- uid: MyApp.Auth.Infrastructure.Migrations.Permissions.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/MyApp.Auth.Infrastructure.Migrations.Permissions.html#MyApp_Auth_Infrastructure_Migrations_Permissions_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MyApp.Auth.Infrastructure.Migrations.Permissions.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MyApp.Auth.Infrastructure.Migrations.Permissions.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: Permissions.Down(MigrationBuilder)
- uid: MyApp.Auth.Infrastructure.Migrations.Permissions.Down*
  name: Down
  href: api/MyApp.Auth.Infrastructure.Migrations.Permissions.html#MyApp_Auth_Infrastructure_Migrations_Permissions_Down_
  commentId: Overload:MyApp.Auth.Infrastructure.Migrations.Permissions.Down
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Migrations.Permissions.Down
  nameWithType: Permissions.Down
- uid: MyApp.Auth.Infrastructure.Migrations.Permissions.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/MyApp.Auth.Infrastructure.Migrations.Permissions.html#MyApp_Auth_Infrastructure_Migrations_Permissions_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MyApp.Auth.Infrastructure.Migrations.Permissions.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MyApp.Auth.Infrastructure.Migrations.Permissions.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: Permissions.Up(MigrationBuilder)
- uid: MyApp.Auth.Infrastructure.Migrations.Permissions.Up*
  name: Up
  href: api/MyApp.Auth.Infrastructure.Migrations.Permissions.html#MyApp_Auth_Infrastructure_Migrations_Permissions_Up_
  commentId: Overload:MyApp.Auth.Infrastructure.Migrations.Permissions.Up
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Migrations.Permissions.Up
  nameWithType: Permissions.Up
- uid: MyApp.Auth.Infrastructure.Migrations.UserRoles
  name: UserRoles
  href: api/MyApp.Auth.Infrastructure.Migrations.UserRoles.html
  commentId: T:MyApp.Auth.Infrastructure.Migrations.UserRoles
  fullName: MyApp.Auth.Infrastructure.Migrations.UserRoles
  nameWithType: UserRoles
- uid: MyApp.Auth.Infrastructure.Migrations.UserRoles.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/MyApp.Auth.Infrastructure.Migrations.UserRoles.html#MyApp_Auth_Infrastructure_Migrations_UserRoles_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:MyApp.Auth.Infrastructure.Migrations.UserRoles.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: MyApp.Auth.Infrastructure.Migrations.UserRoles.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: UserRoles.BuildTargetModel(ModelBuilder)
- uid: MyApp.Auth.Infrastructure.Migrations.UserRoles.BuildTargetModel*
  name: BuildTargetModel
  href: api/MyApp.Auth.Infrastructure.Migrations.UserRoles.html#MyApp_Auth_Infrastructure_Migrations_UserRoles_BuildTargetModel_
  commentId: Overload:MyApp.Auth.Infrastructure.Migrations.UserRoles.BuildTargetModel
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Migrations.UserRoles.BuildTargetModel
  nameWithType: UserRoles.BuildTargetModel
- uid: MyApp.Auth.Infrastructure.Migrations.UserRoles.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/MyApp.Auth.Infrastructure.Migrations.UserRoles.html#MyApp_Auth_Infrastructure_Migrations_UserRoles_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MyApp.Auth.Infrastructure.Migrations.UserRoles.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MyApp.Auth.Infrastructure.Migrations.UserRoles.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: UserRoles.Down(MigrationBuilder)
- uid: MyApp.Auth.Infrastructure.Migrations.UserRoles.Down*
  name: Down
  href: api/MyApp.Auth.Infrastructure.Migrations.UserRoles.html#MyApp_Auth_Infrastructure_Migrations_UserRoles_Down_
  commentId: Overload:MyApp.Auth.Infrastructure.Migrations.UserRoles.Down
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Migrations.UserRoles.Down
  nameWithType: UserRoles.Down
- uid: MyApp.Auth.Infrastructure.Migrations.UserRoles.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/MyApp.Auth.Infrastructure.Migrations.UserRoles.html#MyApp_Auth_Infrastructure_Migrations_UserRoles_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MyApp.Auth.Infrastructure.Migrations.UserRoles.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MyApp.Auth.Infrastructure.Migrations.UserRoles.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: UserRoles.Up(MigrationBuilder)
- uid: MyApp.Auth.Infrastructure.Migrations.UserRoles.Up*
  name: Up
  href: api/MyApp.Auth.Infrastructure.Migrations.UserRoles.html#MyApp_Auth_Infrastructure_Migrations_UserRoles_Up_
  commentId: Overload:MyApp.Auth.Infrastructure.Migrations.UserRoles.Up
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Migrations.UserRoles.Up
  nameWithType: UserRoles.Up
- uid: MyApp.Auth.Infrastructure.Services
  name: MyApp.Auth.Infrastructure.Services
  href: api/MyApp.Auth.Infrastructure.Services.html
  commentId: N:MyApp.Auth.Infrastructure.Services
  fullName: MyApp.Auth.Infrastructure.Services
  nameWithType: MyApp.Auth.Infrastructure.Services
- uid: MyApp.Auth.Infrastructure.Services.IJwtTokenProvider
  name: IJwtTokenProvider
  href: api/MyApp.Auth.Infrastructure.Services.IJwtTokenProvider.html
  commentId: T:MyApp.Auth.Infrastructure.Services.IJwtTokenProvider
  fullName: MyApp.Auth.Infrastructure.Services.IJwtTokenProvider
  nameWithType: IJwtTokenProvider
- uid: MyApp.Auth.Infrastructure.Services.IJwtTokenProvider.GenerateAccessTokenAsync(MyApp.Auth.Domain.Entities.ApplicationUser,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.Security.Claims.Claim})
  name: GenerateAccessTokenAsync(ApplicationUser, IList<string>?, IList<Claim>?)
  href: api/MyApp.Auth.Infrastructure.Services.IJwtTokenProvider.html#MyApp_Auth_Infrastructure_Services_IJwtTokenProvider_GenerateAccessTokenAsync_MyApp_Auth_Domain_Entities_ApplicationUser_System_Collections_Generic_IList_System_String__System_Collections_Generic_IList_System_Security_Claims_Claim__
  commentId: M:MyApp.Auth.Infrastructure.Services.IJwtTokenProvider.GenerateAccessTokenAsync(MyApp.Auth.Domain.Entities.ApplicationUser,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.Security.Claims.Claim})
  name.vb: GenerateAccessTokenAsync(ApplicationUser, IList(Of String), IList(Of Claim))
  fullName: MyApp.Auth.Infrastructure.Services.IJwtTokenProvider.GenerateAccessTokenAsync(MyApp.Auth.Domain.Entities.ApplicationUser, System.Collections.Generic.IList<string>?, System.Collections.Generic.IList<System.Security.Claims.Claim>?)
  fullName.vb: MyApp.Auth.Infrastructure.Services.IJwtTokenProvider.GenerateAccessTokenAsync(MyApp.Auth.Domain.Entities.ApplicationUser, System.Collections.Generic.IList(Of String), System.Collections.Generic.IList(Of System.Security.Claims.Claim))
  nameWithType: IJwtTokenProvider.GenerateAccessTokenAsync(ApplicationUser, IList<string>?, IList<Claim>?)
  nameWithType.vb: IJwtTokenProvider.GenerateAccessTokenAsync(ApplicationUser, IList(Of String), IList(Of Claim))
- uid: MyApp.Auth.Infrastructure.Services.IJwtTokenProvider.GenerateAccessTokenAsync*
  name: GenerateAccessTokenAsync
  href: api/MyApp.Auth.Infrastructure.Services.IJwtTokenProvider.html#MyApp_Auth_Infrastructure_Services_IJwtTokenProvider_GenerateAccessTokenAsync_
  commentId: Overload:MyApp.Auth.Infrastructure.Services.IJwtTokenProvider.GenerateAccessTokenAsync
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Services.IJwtTokenProvider.GenerateAccessTokenAsync
  nameWithType: IJwtTokenProvider.GenerateAccessTokenAsync
- uid: MyApp.Auth.Infrastructure.Services.IJwtTokenProvider.GenerateRefreshToken
  name: GenerateRefreshToken()
  href: api/MyApp.Auth.Infrastructure.Services.IJwtTokenProvider.html#MyApp_Auth_Infrastructure_Services_IJwtTokenProvider_GenerateRefreshToken
  commentId: M:MyApp.Auth.Infrastructure.Services.IJwtTokenProvider.GenerateRefreshToken
  fullName: MyApp.Auth.Infrastructure.Services.IJwtTokenProvider.GenerateRefreshToken()
  nameWithType: IJwtTokenProvider.GenerateRefreshToken()
- uid: MyApp.Auth.Infrastructure.Services.IJwtTokenProvider.GenerateRefreshToken*
  name: GenerateRefreshToken
  href: api/MyApp.Auth.Infrastructure.Services.IJwtTokenProvider.html#MyApp_Auth_Infrastructure_Services_IJwtTokenProvider_GenerateRefreshToken_
  commentId: Overload:MyApp.Auth.Infrastructure.Services.IJwtTokenProvider.GenerateRefreshToken
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Services.IJwtTokenProvider.GenerateRefreshToken
  nameWithType: IJwtTokenProvider.GenerateRefreshToken
- uid: MyApp.Auth.Infrastructure.Services.IJwtTokenProvider.GetPrincipalFromExpiredToken(System.String)
  name: GetPrincipalFromExpiredToken(string)
  href: api/MyApp.Auth.Infrastructure.Services.IJwtTokenProvider.html#MyApp_Auth_Infrastructure_Services_IJwtTokenProvider_GetPrincipalFromExpiredToken_System_String_
  commentId: M:MyApp.Auth.Infrastructure.Services.IJwtTokenProvider.GetPrincipalFromExpiredToken(System.String)
  name.vb: GetPrincipalFromExpiredToken(String)
  fullName: MyApp.Auth.Infrastructure.Services.IJwtTokenProvider.GetPrincipalFromExpiredToken(string)
  fullName.vb: MyApp.Auth.Infrastructure.Services.IJwtTokenProvider.GetPrincipalFromExpiredToken(String)
  nameWithType: IJwtTokenProvider.GetPrincipalFromExpiredToken(string)
  nameWithType.vb: IJwtTokenProvider.GetPrincipalFromExpiredToken(String)
- uid: MyApp.Auth.Infrastructure.Services.IJwtTokenProvider.GetPrincipalFromExpiredToken*
  name: GetPrincipalFromExpiredToken
  href: api/MyApp.Auth.Infrastructure.Services.IJwtTokenProvider.html#MyApp_Auth_Infrastructure_Services_IJwtTokenProvider_GetPrincipalFromExpiredToken_
  commentId: Overload:MyApp.Auth.Infrastructure.Services.IJwtTokenProvider.GetPrincipalFromExpiredToken
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Services.IJwtTokenProvider.GetPrincipalFromExpiredToken
  nameWithType: IJwtTokenProvider.GetPrincipalFromExpiredToken
- uid: MyApp.Auth.Infrastructure.Services.JwtTokenProvider
  name: JwtTokenProvider
  href: api/MyApp.Auth.Infrastructure.Services.JwtTokenProvider.html
  commentId: T:MyApp.Auth.Infrastructure.Services.JwtTokenProvider
  fullName: MyApp.Auth.Infrastructure.Services.JwtTokenProvider
  nameWithType: JwtTokenProvider
- uid: MyApp.Auth.Infrastructure.Services.JwtTokenProvider.#ctor(Microsoft.Extensions.Configuration.IConfiguration)
  name: JwtTokenProvider(IConfiguration)
  href: api/MyApp.Auth.Infrastructure.Services.JwtTokenProvider.html#MyApp_Auth_Infrastructure_Services_JwtTokenProvider__ctor_Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:MyApp.Auth.Infrastructure.Services.JwtTokenProvider.#ctor(Microsoft.Extensions.Configuration.IConfiguration)
  name.vb: New(IConfiguration)
  fullName: MyApp.Auth.Infrastructure.Services.JwtTokenProvider.JwtTokenProvider(Microsoft.Extensions.Configuration.IConfiguration)
  fullName.vb: MyApp.Auth.Infrastructure.Services.JwtTokenProvider.New(Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: JwtTokenProvider.JwtTokenProvider(IConfiguration)
  nameWithType.vb: JwtTokenProvider.New(IConfiguration)
- uid: MyApp.Auth.Infrastructure.Services.JwtTokenProvider.#ctor*
  name: JwtTokenProvider
  href: api/MyApp.Auth.Infrastructure.Services.JwtTokenProvider.html#MyApp_Auth_Infrastructure_Services_JwtTokenProvider__ctor_
  commentId: Overload:MyApp.Auth.Infrastructure.Services.JwtTokenProvider.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Auth.Infrastructure.Services.JwtTokenProvider.JwtTokenProvider
  fullName.vb: MyApp.Auth.Infrastructure.Services.JwtTokenProvider.New
  nameWithType: JwtTokenProvider.JwtTokenProvider
  nameWithType.vb: JwtTokenProvider.New
- uid: MyApp.Auth.Infrastructure.Services.JwtTokenProvider.GenerateAccessTokenAsync(MyApp.Auth.Domain.Entities.ApplicationUser,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.Security.Claims.Claim})
  name: GenerateAccessTokenAsync(ApplicationUser, IList<string>?, IList<Claim>?)
  href: api/MyApp.Auth.Infrastructure.Services.JwtTokenProvider.html#MyApp_Auth_Infrastructure_Services_JwtTokenProvider_GenerateAccessTokenAsync_MyApp_Auth_Domain_Entities_ApplicationUser_System_Collections_Generic_IList_System_String__System_Collections_Generic_IList_System_Security_Claims_Claim__
  commentId: M:MyApp.Auth.Infrastructure.Services.JwtTokenProvider.GenerateAccessTokenAsync(MyApp.Auth.Domain.Entities.ApplicationUser,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.Security.Claims.Claim})
  name.vb: GenerateAccessTokenAsync(ApplicationUser, IList(Of String), IList(Of Claim))
  fullName: MyApp.Auth.Infrastructure.Services.JwtTokenProvider.GenerateAccessTokenAsync(MyApp.Auth.Domain.Entities.ApplicationUser, System.Collections.Generic.IList<string>?, System.Collections.Generic.IList<System.Security.Claims.Claim>?)
  fullName.vb: MyApp.Auth.Infrastructure.Services.JwtTokenProvider.GenerateAccessTokenAsync(MyApp.Auth.Domain.Entities.ApplicationUser, System.Collections.Generic.IList(Of String), System.Collections.Generic.IList(Of System.Security.Claims.Claim))
  nameWithType: JwtTokenProvider.GenerateAccessTokenAsync(ApplicationUser, IList<string>?, IList<Claim>?)
  nameWithType.vb: JwtTokenProvider.GenerateAccessTokenAsync(ApplicationUser, IList(Of String), IList(Of Claim))
- uid: MyApp.Auth.Infrastructure.Services.JwtTokenProvider.GenerateAccessTokenAsync*
  name: GenerateAccessTokenAsync
  href: api/MyApp.Auth.Infrastructure.Services.JwtTokenProvider.html#MyApp_Auth_Infrastructure_Services_JwtTokenProvider_GenerateAccessTokenAsync_
  commentId: Overload:MyApp.Auth.Infrastructure.Services.JwtTokenProvider.GenerateAccessTokenAsync
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Services.JwtTokenProvider.GenerateAccessTokenAsync
  nameWithType: JwtTokenProvider.GenerateAccessTokenAsync
- uid: MyApp.Auth.Infrastructure.Services.JwtTokenProvider.GenerateRefreshToken
  name: GenerateRefreshToken()
  href: api/MyApp.Auth.Infrastructure.Services.JwtTokenProvider.html#MyApp_Auth_Infrastructure_Services_JwtTokenProvider_GenerateRefreshToken
  commentId: M:MyApp.Auth.Infrastructure.Services.JwtTokenProvider.GenerateRefreshToken
  fullName: MyApp.Auth.Infrastructure.Services.JwtTokenProvider.GenerateRefreshToken()
  nameWithType: JwtTokenProvider.GenerateRefreshToken()
- uid: MyApp.Auth.Infrastructure.Services.JwtTokenProvider.GenerateRefreshToken*
  name: GenerateRefreshToken
  href: api/MyApp.Auth.Infrastructure.Services.JwtTokenProvider.html#MyApp_Auth_Infrastructure_Services_JwtTokenProvider_GenerateRefreshToken_
  commentId: Overload:MyApp.Auth.Infrastructure.Services.JwtTokenProvider.GenerateRefreshToken
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Services.JwtTokenProvider.GenerateRefreshToken
  nameWithType: JwtTokenProvider.GenerateRefreshToken
- uid: MyApp.Auth.Infrastructure.Services.JwtTokenProvider.GetPrincipalFromExpiredToken(System.String)
  name: GetPrincipalFromExpiredToken(string)
  href: api/MyApp.Auth.Infrastructure.Services.JwtTokenProvider.html#MyApp_Auth_Infrastructure_Services_JwtTokenProvider_GetPrincipalFromExpiredToken_System_String_
  commentId: M:MyApp.Auth.Infrastructure.Services.JwtTokenProvider.GetPrincipalFromExpiredToken(System.String)
  name.vb: GetPrincipalFromExpiredToken(String)
  fullName: MyApp.Auth.Infrastructure.Services.JwtTokenProvider.GetPrincipalFromExpiredToken(string)
  fullName.vb: MyApp.Auth.Infrastructure.Services.JwtTokenProvider.GetPrincipalFromExpiredToken(String)
  nameWithType: JwtTokenProvider.GetPrincipalFromExpiredToken(string)
  nameWithType.vb: JwtTokenProvider.GetPrincipalFromExpiredToken(String)
- uid: MyApp.Auth.Infrastructure.Services.JwtTokenProvider.GetPrincipalFromExpiredToken*
  name: GetPrincipalFromExpiredToken
  href: api/MyApp.Auth.Infrastructure.Services.JwtTokenProvider.html#MyApp_Auth_Infrastructure_Services_JwtTokenProvider_GetPrincipalFromExpiredToken_
  commentId: Overload:MyApp.Auth.Infrastructure.Services.JwtTokenProvider.GetPrincipalFromExpiredToken
  isSpec: "True"
  fullName: MyApp.Auth.Infrastructure.Services.JwtTokenProvider.GetPrincipalFromExpiredToken
  nameWithType: JwtTokenProvider.GetPrincipalFromExpiredToken
- uid: MyApp.Auth.Tests.Helpers
  name: MyApp.Auth.Tests.Helpers
  href: api/MyApp.Auth.Tests.Helpers.html
  commentId: N:MyApp.Auth.Tests.Helpers
  fullName: MyApp.Auth.Tests.Helpers
  nameWithType: MyApp.Auth.Tests.Helpers
- uid: MyApp.Auth.Tests.Helpers.TestDbContextFactory
  name: TestDbContextFactory
  href: api/MyApp.Auth.Tests.Helpers.TestDbContextFactory.html
  commentId: T:MyApp.Auth.Tests.Helpers.TestDbContextFactory
  fullName: MyApp.Auth.Tests.Helpers.TestDbContextFactory
  nameWithType: TestDbContextFactory
- uid: MyApp.Auth.Tests.Helpers.TestDbContextFactory.CreateInMemoryContext
  name: CreateInMemoryContext()
  href: api/MyApp.Auth.Tests.Helpers.TestDbContextFactory.html#MyApp_Auth_Tests_Helpers_TestDbContextFactory_CreateInMemoryContext
  commentId: M:MyApp.Auth.Tests.Helpers.TestDbContextFactory.CreateInMemoryContext
  fullName: MyApp.Auth.Tests.Helpers.TestDbContextFactory.CreateInMemoryContext()
  nameWithType: TestDbContextFactory.CreateInMemoryContext()
- uid: MyApp.Auth.Tests.Helpers.TestDbContextFactory.CreateInMemoryContext*
  name: CreateInMemoryContext
  href: api/MyApp.Auth.Tests.Helpers.TestDbContextFactory.html#MyApp_Auth_Tests_Helpers_TestDbContextFactory_CreateInMemoryContext_
  commentId: Overload:MyApp.Auth.Tests.Helpers.TestDbContextFactory.CreateInMemoryContext
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Helpers.TestDbContextFactory.CreateInMemoryContext
  nameWithType: TestDbContextFactory.CreateInMemoryContext
- uid: MyApp.Auth.Tests.Helpers.TestDbContextFactory.SeedTestData(MyApp.Auth.Infrastructure.Data.AuthDbContext)
  name: SeedTestData(AuthDbContext)
  href: api/MyApp.Auth.Tests.Helpers.TestDbContextFactory.html#MyApp_Auth_Tests_Helpers_TestDbContextFactory_SeedTestData_MyApp_Auth_Infrastructure_Data_AuthDbContext_
  commentId: M:MyApp.Auth.Tests.Helpers.TestDbContextFactory.SeedTestData(MyApp.Auth.Infrastructure.Data.AuthDbContext)
  fullName: MyApp.Auth.Tests.Helpers.TestDbContextFactory.SeedTestData(MyApp.Auth.Infrastructure.Data.AuthDbContext)
  nameWithType: TestDbContextFactory.SeedTestData(AuthDbContext)
- uid: MyApp.Auth.Tests.Helpers.TestDbContextFactory.SeedTestData*
  name: SeedTestData
  href: api/MyApp.Auth.Tests.Helpers.TestDbContextFactory.html#MyApp_Auth_Tests_Helpers_TestDbContextFactory_SeedTestData_
  commentId: Overload:MyApp.Auth.Tests.Helpers.TestDbContextFactory.SeedTestData
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Helpers.TestDbContextFactory.SeedTestData
  nameWithType: TestDbContextFactory.SeedTestData
- uid: MyApp.Auth.Tests.Repositories
  name: MyApp.Auth.Tests.Repositories
  href: api/MyApp.Auth.Tests.Repositories.html
  commentId: N:MyApp.Auth.Tests.Repositories
  fullName: MyApp.Auth.Tests.Repositories
  nameWithType: MyApp.Auth.Tests.Repositories
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests
  name: PermissionRepositoryTests
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html
  commentId: T:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests
  nameWithType: PermissionRepositoryTests
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.#ctor
  name: PermissionRepositoryTests()
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests__ctor
  commentId: M:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.#ctor
  name.vb: New()
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.PermissionRepositoryTests()
  fullName.vb: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.New()
  nameWithType: PermissionRepositoryTests.PermissionRepositoryTests()
  nameWithType.vb: PermissionRepositoryTests.New()
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.#ctor*
  name: PermissionRepositoryTests
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests__ctor_
  commentId: Overload:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.PermissionRepositoryTests
  fullName.vb: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.New
  nameWithType: PermissionRepositoryTests.PermissionRepositoryTests
  nameWithType.vb: PermissionRepositoryTests.New
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.AddAsync_WithNewPermission_CreatesPermission
  name: AddAsync_WithNewPermission_CreatesPermission()
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests_AddAsync_WithNewPermission_CreatesPermission
  commentId: M:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.AddAsync_WithNewPermission_CreatesPermission
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.AddAsync_WithNewPermission_CreatesPermission()
  nameWithType: PermissionRepositoryTests.AddAsync_WithNewPermission_CreatesPermission()
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.AddAsync_WithNewPermission_CreatesPermission*
  name: AddAsync_WithNewPermission_CreatesPermission
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests_AddAsync_WithNewPermission_CreatesPermission_
  commentId: Overload:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.AddAsync_WithNewPermission_CreatesPermission
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.AddAsync_WithNewPermission_CreatesPermission
  nameWithType: PermissionRepositoryTests.AddAsync_WithNewPermission_CreatesPermission
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.DeleteAsync_WithValidPermissionId_DeletesPermission
  name: DeleteAsync_WithValidPermissionId_DeletesPermission()
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests_DeleteAsync_WithValidPermissionId_DeletesPermission
  commentId: M:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.DeleteAsync_WithValidPermissionId_DeletesPermission
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.DeleteAsync_WithValidPermissionId_DeletesPermission()
  nameWithType: PermissionRepositoryTests.DeleteAsync_WithValidPermissionId_DeletesPermission()
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.DeleteAsync_WithValidPermissionId_DeletesPermission*
  name: DeleteAsync_WithValidPermissionId_DeletesPermission
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests_DeleteAsync_WithValidPermissionId_DeletesPermission_
  commentId: Overload:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.DeleteAsync_WithValidPermissionId_DeletesPermission
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.DeleteAsync_WithValidPermissionId_DeletesPermission
  nameWithType: PermissionRepositoryTests.DeleteAsync_WithValidPermissionId_DeletesPermission
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetAllAsync_ReturnsAllPermissions
  name: GetAllAsync_ReturnsAllPermissions()
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests_GetAllAsync_ReturnsAllPermissions
  commentId: M:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetAllAsync_ReturnsAllPermissions
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetAllAsync_ReturnsAllPermissions()
  nameWithType: PermissionRepositoryTests.GetAllAsync_ReturnsAllPermissions()
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetAllAsync_ReturnsAllPermissions*
  name: GetAllAsync_ReturnsAllPermissions
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests_GetAllAsync_ReturnsAllPermissions_
  commentId: Overload:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetAllAsync_ReturnsAllPermissions
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetAllAsync_ReturnsAllPermissions
  nameWithType: PermissionRepositoryTests.GetAllAsync_ReturnsAllPermissions
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByIdAsync_WithValidPermissionId_ReturnsPermission
  name: GetByIdAsync_WithValidPermissionId_ReturnsPermission()
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests_GetByIdAsync_WithValidPermissionId_ReturnsPermission
  commentId: M:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByIdAsync_WithValidPermissionId_ReturnsPermission
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByIdAsync_WithValidPermissionId_ReturnsPermission()
  nameWithType: PermissionRepositoryTests.GetByIdAsync_WithValidPermissionId_ReturnsPermission()
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByIdAsync_WithValidPermissionId_ReturnsPermission*
  name: GetByIdAsync_WithValidPermissionId_ReturnsPermission
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests_GetByIdAsync_WithValidPermissionId_ReturnsPermission_
  commentId: Overload:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByIdAsync_WithValidPermissionId_ReturnsPermission
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByIdAsync_WithValidPermissionId_ReturnsPermission
  nameWithType: PermissionRepositoryTests.GetByIdAsync_WithValidPermissionId_ReturnsPermission
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByRoleName_WithEmptyStringParameters_ReturnsEmptyList
  name: GetByRoleName_WithEmptyStringParameters_ReturnsEmptyList()
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests_GetByRoleName_WithEmptyStringParameters_ReturnsEmptyList
  commentId: M:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByRoleName_WithEmptyStringParameters_ReturnsEmptyList
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByRoleName_WithEmptyStringParameters_ReturnsEmptyList()
  nameWithType: PermissionRepositoryTests.GetByRoleName_WithEmptyStringParameters_ReturnsEmptyList()
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByRoleName_WithEmptyStringParameters_ReturnsEmptyList*
  name: GetByRoleName_WithEmptyStringParameters_ReturnsEmptyList
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests_GetByRoleName_WithEmptyStringParameters_ReturnsEmptyList_
  commentId: Overload:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByRoleName_WithEmptyStringParameters_ReturnsEmptyList
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByRoleName_WithEmptyStringParameters_ReturnsEmptyList
  nameWithType: PermissionRepositoryTests.GetByRoleName_WithEmptyStringParameters_ReturnsEmptyList
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByRoleName_WithMismatchedModuleOrAction_ReturnsEmptyList
  name: GetByRoleName_WithMismatchedModuleOrAction_ReturnsEmptyList()
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests_GetByRoleName_WithMismatchedModuleOrAction_ReturnsEmptyList
  commentId: M:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByRoleName_WithMismatchedModuleOrAction_ReturnsEmptyList
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByRoleName_WithMismatchedModuleOrAction_ReturnsEmptyList()
  nameWithType: PermissionRepositoryTests.GetByRoleName_WithMismatchedModuleOrAction_ReturnsEmptyList()
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByRoleName_WithMismatchedModuleOrAction_ReturnsEmptyList*
  name: GetByRoleName_WithMismatchedModuleOrAction_ReturnsEmptyList
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests_GetByRoleName_WithMismatchedModuleOrAction_ReturnsEmptyList_
  commentId: Overload:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByRoleName_WithMismatchedModuleOrAction_ReturnsEmptyList
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByRoleName_WithMismatchedModuleOrAction_ReturnsEmptyList
  nameWithType: PermissionRepositoryTests.GetByRoleName_WithMismatchedModuleOrAction_ReturnsEmptyList
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByRoleName_WithMultiplePermissionsForRole_ReturnsCorrectPermissions
  name: GetByRoleName_WithMultiplePermissionsForRole_ReturnsCorrectPermissions()
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests_GetByRoleName_WithMultiplePermissionsForRole_ReturnsCorrectPermissions
  commentId: M:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByRoleName_WithMultiplePermissionsForRole_ReturnsCorrectPermissions
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByRoleName_WithMultiplePermissionsForRole_ReturnsCorrectPermissions()
  nameWithType: PermissionRepositoryTests.GetByRoleName_WithMultiplePermissionsForRole_ReturnsCorrectPermissions()
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByRoleName_WithMultiplePermissionsForRole_ReturnsCorrectPermissions*
  name: GetByRoleName_WithMultiplePermissionsForRole_ReturnsCorrectPermissions
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests_GetByRoleName_WithMultiplePermissionsForRole_ReturnsCorrectPermissions_
  commentId: Overload:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByRoleName_WithMultiplePermissionsForRole_ReturnsCorrectPermissions
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByRoleName_WithMultiplePermissionsForRole_ReturnsCorrectPermissions
  nameWithType: PermissionRepositoryTests.GetByRoleName_WithMultiplePermissionsForRole_ReturnsCorrectPermissions
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByRoleName_WithNonExistentRole_ReturnsEmptyList
  name: GetByRoleName_WithNonExistentRole_ReturnsEmptyList()
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests_GetByRoleName_WithNonExistentRole_ReturnsEmptyList
  commentId: M:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByRoleName_WithNonExistentRole_ReturnsEmptyList
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByRoleName_WithNonExistentRole_ReturnsEmptyList()
  nameWithType: PermissionRepositoryTests.GetByRoleName_WithNonExistentRole_ReturnsEmptyList()
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByRoleName_WithNonExistentRole_ReturnsEmptyList*
  name: GetByRoleName_WithNonExistentRole_ReturnsEmptyList
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests_GetByRoleName_WithNonExistentRole_ReturnsEmptyList_
  commentId: Overload:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByRoleName_WithNonExistentRole_ReturnsEmptyList
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByRoleName_WithNonExistentRole_ReturnsEmptyList
  nameWithType: PermissionRepositoryTests.GetByRoleName_WithNonExistentRole_ReturnsEmptyList
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByRoleName_WithNullParameters_ReturnsEmptyList
  name: GetByRoleName_WithNullParameters_ReturnsEmptyList()
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests_GetByRoleName_WithNullParameters_ReturnsEmptyList
  commentId: M:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByRoleName_WithNullParameters_ReturnsEmptyList
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByRoleName_WithNullParameters_ReturnsEmptyList()
  nameWithType: PermissionRepositoryTests.GetByRoleName_WithNullParameters_ReturnsEmptyList()
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByRoleName_WithNullParameters_ReturnsEmptyList*
  name: GetByRoleName_WithNullParameters_ReturnsEmptyList
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests_GetByRoleName_WithNullParameters_ReturnsEmptyList_
  commentId: Overload:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByRoleName_WithNullParameters_ReturnsEmptyList
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByRoleName_WithNullParameters_ReturnsEmptyList
  nameWithType: PermissionRepositoryTests.GetByRoleName_WithNullParameters_ReturnsEmptyList
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByRoleName_WithValidRoleAndPermission_ReturnsPermissions
  name: GetByRoleName_WithValidRoleAndPermission_ReturnsPermissions()
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests_GetByRoleName_WithValidRoleAndPermission_ReturnsPermissions
  commentId: M:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByRoleName_WithValidRoleAndPermission_ReturnsPermissions
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByRoleName_WithValidRoleAndPermission_ReturnsPermissions()
  nameWithType: PermissionRepositoryTests.GetByRoleName_WithValidRoleAndPermission_ReturnsPermissions()
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByRoleName_WithValidRoleAndPermission_ReturnsPermissions*
  name: GetByRoleName_WithValidRoleAndPermission_ReturnsPermissions
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests_GetByRoleName_WithValidRoleAndPermission_ReturnsPermissions_
  commentId: Overload:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByRoleName_WithValidRoleAndPermission_ReturnsPermissions
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByRoleName_WithValidRoleAndPermission_ReturnsPermissions
  nameWithType: PermissionRepositoryTests.GetByRoleName_WithValidRoleAndPermission_ReturnsPermissions
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithDifferentCasings_ReturnsEmptyList
  name: GetByUserName_WithDifferentCasings_ReturnsEmptyList()
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests_GetByUserName_WithDifferentCasings_ReturnsEmptyList
  commentId: M:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithDifferentCasings_ReturnsEmptyList
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithDifferentCasings_ReturnsEmptyList()
  nameWithType: PermissionRepositoryTests.GetByUserName_WithDifferentCasings_ReturnsEmptyList()
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithDifferentCasings_ReturnsEmptyList*
  name: GetByUserName_WithDifferentCasings_ReturnsEmptyList
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests_GetByUserName_WithDifferentCasings_ReturnsEmptyList_
  commentId: Overload:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithDifferentCasings_ReturnsEmptyList
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithDifferentCasings_ReturnsEmptyList
  nameWithType: PermissionRepositoryTests.GetByUserName_WithDifferentCasings_ReturnsEmptyList
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithEmptyStringParameters_ReturnsEmptyList
  name: GetByUserName_WithEmptyStringParameters_ReturnsEmptyList()
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests_GetByUserName_WithEmptyStringParameters_ReturnsEmptyList
  commentId: M:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithEmptyStringParameters_ReturnsEmptyList
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithEmptyStringParameters_ReturnsEmptyList()
  nameWithType: PermissionRepositoryTests.GetByUserName_WithEmptyStringParameters_ReturnsEmptyList()
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithEmptyStringParameters_ReturnsEmptyList*
  name: GetByUserName_WithEmptyStringParameters_ReturnsEmptyList
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests_GetByUserName_WithEmptyStringParameters_ReturnsEmptyList_
  commentId: Overload:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithEmptyStringParameters_ReturnsEmptyList
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithEmptyStringParameters_ReturnsEmptyList
  nameWithType: PermissionRepositoryTests.GetByUserName_WithEmptyStringParameters_ReturnsEmptyList
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithMismatchedModuleOrAction_ReturnsEmptyList
  name: GetByUserName_WithMismatchedModuleOrAction_ReturnsEmptyList()
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests_GetByUserName_WithMismatchedModuleOrAction_ReturnsEmptyList
  commentId: M:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithMismatchedModuleOrAction_ReturnsEmptyList
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithMismatchedModuleOrAction_ReturnsEmptyList()
  nameWithType: PermissionRepositoryTests.GetByUserName_WithMismatchedModuleOrAction_ReturnsEmptyList()
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithMismatchedModuleOrAction_ReturnsEmptyList*
  name: GetByUserName_WithMismatchedModuleOrAction_ReturnsEmptyList
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests_GetByUserName_WithMismatchedModuleOrAction_ReturnsEmptyList_
  commentId: Overload:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithMismatchedModuleOrAction_ReturnsEmptyList
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithMismatchedModuleOrAction_ReturnsEmptyList
  nameWithType: PermissionRepositoryTests.GetByUserName_WithMismatchedModuleOrAction_ReturnsEmptyList
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithMultiplePermissionsForUser_ReturnsCorrectPermission
  name: GetByUserName_WithMultiplePermissionsForUser_ReturnsCorrectPermission()
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests_GetByUserName_WithMultiplePermissionsForUser_ReturnsCorrectPermission
  commentId: M:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithMultiplePermissionsForUser_ReturnsCorrectPermission
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithMultiplePermissionsForUser_ReturnsCorrectPermission()
  nameWithType: PermissionRepositoryTests.GetByUserName_WithMultiplePermissionsForUser_ReturnsCorrectPermission()
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithMultiplePermissionsForUser_ReturnsCorrectPermission*
  name: GetByUserName_WithMultiplePermissionsForUser_ReturnsCorrectPermission
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests_GetByUserName_WithMultiplePermissionsForUser_ReturnsCorrectPermission_
  commentId: Overload:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithMultiplePermissionsForUser_ReturnsCorrectPermission
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithMultiplePermissionsForUser_ReturnsCorrectPermission
  nameWithType: PermissionRepositoryTests.GetByUserName_WithMultiplePermissionsForUser_ReturnsCorrectPermission
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithNonExistentUser_ReturnsEmptyList
  name: GetByUserName_WithNonExistentUser_ReturnsEmptyList()
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests_GetByUserName_WithNonExistentUser_ReturnsEmptyList
  commentId: M:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithNonExistentUser_ReturnsEmptyList
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithNonExistentUser_ReturnsEmptyList()
  nameWithType: PermissionRepositoryTests.GetByUserName_WithNonExistentUser_ReturnsEmptyList()
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithNonExistentUser_ReturnsEmptyList*
  name: GetByUserName_WithNonExistentUser_ReturnsEmptyList
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests_GetByUserName_WithNonExistentUser_ReturnsEmptyList_
  commentId: Overload:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithNonExistentUser_ReturnsEmptyList
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithNonExistentUser_ReturnsEmptyList
  nameWithType: PermissionRepositoryTests.GetByUserName_WithNonExistentUser_ReturnsEmptyList
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithNullParameters_ReturnsEmptyList
  name: GetByUserName_WithNullParameters_ReturnsEmptyList()
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests_GetByUserName_WithNullParameters_ReturnsEmptyList
  commentId: M:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithNullParameters_ReturnsEmptyList
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithNullParameters_ReturnsEmptyList()
  nameWithType: PermissionRepositoryTests.GetByUserName_WithNullParameters_ReturnsEmptyList()
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithNullParameters_ReturnsEmptyList*
  name: GetByUserName_WithNullParameters_ReturnsEmptyList
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests_GetByUserName_WithNullParameters_ReturnsEmptyList_
  commentId: Overload:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithNullParameters_ReturnsEmptyList
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithNullParameters_ReturnsEmptyList
  nameWithType: PermissionRepositoryTests.GetByUserName_WithNullParameters_ReturnsEmptyList
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithValidUserAndPermission_ReturnsPermissions
  name: GetByUserName_WithValidUserAndPermission_ReturnsPermissions()
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests_GetByUserName_WithValidUserAndPermission_ReturnsPermissions
  commentId: M:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithValidUserAndPermission_ReturnsPermissions
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithValidUserAndPermission_ReturnsPermissions()
  nameWithType: PermissionRepositoryTests.GetByUserName_WithValidUserAndPermission_ReturnsPermissions()
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithValidUserAndPermission_ReturnsPermissions*
  name: GetByUserName_WithValidUserAndPermission_ReturnsPermissions
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests_GetByUserName_WithValidUserAndPermission_ReturnsPermissions_
  commentId: Overload:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithValidUserAndPermission_ReturnsPermissions
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.GetByUserName_WithValidUserAndPermission_ReturnsPermissions
  nameWithType: PermissionRepositoryTests.GetByUserName_WithValidUserAndPermission_ReturnsPermissions
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.UpdateAsync_WithExistingPermission_UpdatesPermission
  name: UpdateAsync_WithExistingPermission_UpdatesPermission()
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests_UpdateAsync_WithExistingPermission_UpdatesPermission
  commentId: M:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.UpdateAsync_WithExistingPermission_UpdatesPermission
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.UpdateAsync_WithExistingPermission_UpdatesPermission()
  nameWithType: PermissionRepositoryTests.UpdateAsync_WithExistingPermission_UpdatesPermission()
- uid: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.UpdateAsync_WithExistingPermission_UpdatesPermission*
  name: UpdateAsync_WithExistingPermission_UpdatesPermission
  href: api/MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.html#MyApp_Auth_Tests_Repositories_PermissionRepositoryTests_UpdateAsync_WithExistingPermission_UpdatesPermission_
  commentId: Overload:MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.UpdateAsync_WithExistingPermission_UpdatesPermission
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.PermissionRepositoryTests.UpdateAsync_WithExistingPermission_UpdatesPermission
  nameWithType: PermissionRepositoryTests.UpdateAsync_WithExistingPermission_UpdatesPermission
- uid: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests
  name: RefreshTokenRepositoryTests
  href: api/MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.html
  commentId: T:MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests
  fullName: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests
  nameWithType: RefreshTokenRepositoryTests
- uid: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.#ctor
  name: RefreshTokenRepositoryTests()
  href: api/MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.html#MyApp_Auth_Tests_Repositories_RefreshTokenRepositoryTests__ctor
  commentId: M:MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.#ctor
  name.vb: New()
  fullName: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RefreshTokenRepositoryTests()
  fullName.vb: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.New()
  nameWithType: RefreshTokenRepositoryTests.RefreshTokenRepositoryTests()
  nameWithType.vb: RefreshTokenRepositoryTests.New()
- uid: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.#ctor*
  name: RefreshTokenRepositoryTests
  href: api/MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.html#MyApp_Auth_Tests_Repositories_RefreshTokenRepositoryTests__ctor_
  commentId: Overload:MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RefreshTokenRepositoryTests
  fullName.vb: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.New
  nameWithType: RefreshTokenRepositoryTests.RefreshTokenRepositoryTests
  nameWithType.vb: RefreshTokenRepositoryTests.New
- uid: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.CreateAsync_WithValidRefreshToken_CreatesAndReturnsToken
  name: CreateAsync_WithValidRefreshToken_CreatesAndReturnsToken()
  href: api/MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.html#MyApp_Auth_Tests_Repositories_RefreshTokenRepositoryTests_CreateAsync_WithValidRefreshToken_CreatesAndReturnsToken
  commentId: M:MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.CreateAsync_WithValidRefreshToken_CreatesAndReturnsToken
  fullName: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.CreateAsync_WithValidRefreshToken_CreatesAndReturnsToken()
  nameWithType: RefreshTokenRepositoryTests.CreateAsync_WithValidRefreshToken_CreatesAndReturnsToken()
- uid: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.CreateAsync_WithValidRefreshToken_CreatesAndReturnsToken*
  name: CreateAsync_WithValidRefreshToken_CreatesAndReturnsToken
  href: api/MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.html#MyApp_Auth_Tests_Repositories_RefreshTokenRepositoryTests_CreateAsync_WithValidRefreshToken_CreatesAndReturnsToken_
  commentId: Overload:MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.CreateAsync_WithValidRefreshToken_CreatesAndReturnsToken
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.CreateAsync_WithValidRefreshToken_CreatesAndReturnsToken
  nameWithType: RefreshTokenRepositoryTests.CreateAsync_WithValidRefreshToken_CreatesAndReturnsToken
- uid: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetByTokenAsync_WithEmptyToken_ReturnsNull
  name: GetByTokenAsync_WithEmptyToken_ReturnsNull()
  href: api/MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.html#MyApp_Auth_Tests_Repositories_RefreshTokenRepositoryTests_GetByTokenAsync_WithEmptyToken_ReturnsNull
  commentId: M:MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetByTokenAsync_WithEmptyToken_ReturnsNull
  fullName: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetByTokenAsync_WithEmptyToken_ReturnsNull()
  nameWithType: RefreshTokenRepositoryTests.GetByTokenAsync_WithEmptyToken_ReturnsNull()
- uid: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetByTokenAsync_WithEmptyToken_ReturnsNull*
  name: GetByTokenAsync_WithEmptyToken_ReturnsNull
  href: api/MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.html#MyApp_Auth_Tests_Repositories_RefreshTokenRepositoryTests_GetByTokenAsync_WithEmptyToken_ReturnsNull_
  commentId: Overload:MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetByTokenAsync_WithEmptyToken_ReturnsNull
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetByTokenAsync_WithEmptyToken_ReturnsNull
  nameWithType: RefreshTokenRepositoryTests.GetByTokenAsync_WithEmptyToken_ReturnsNull
- uid: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetByTokenAsync_WithNonExistentToken_ReturnsNull
  name: GetByTokenAsync_WithNonExistentToken_ReturnsNull()
  href: api/MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.html#MyApp_Auth_Tests_Repositories_RefreshTokenRepositoryTests_GetByTokenAsync_WithNonExistentToken_ReturnsNull
  commentId: M:MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetByTokenAsync_WithNonExistentToken_ReturnsNull
  fullName: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetByTokenAsync_WithNonExistentToken_ReturnsNull()
  nameWithType: RefreshTokenRepositoryTests.GetByTokenAsync_WithNonExistentToken_ReturnsNull()
- uid: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetByTokenAsync_WithNonExistentToken_ReturnsNull*
  name: GetByTokenAsync_WithNonExistentToken_ReturnsNull
  href: api/MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.html#MyApp_Auth_Tests_Repositories_RefreshTokenRepositoryTests_GetByTokenAsync_WithNonExistentToken_ReturnsNull_
  commentId: Overload:MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetByTokenAsync_WithNonExistentToken_ReturnsNull
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetByTokenAsync_WithNonExistentToken_ReturnsNull
  nameWithType: RefreshTokenRepositoryTests.GetByTokenAsync_WithNonExistentToken_ReturnsNull
- uid: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetByTokenAsync_WithValidToken_ReturnsRefreshToken
  name: GetByTokenAsync_WithValidToken_ReturnsRefreshToken()
  href: api/MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.html#MyApp_Auth_Tests_Repositories_RefreshTokenRepositoryTests_GetByTokenAsync_WithValidToken_ReturnsRefreshToken
  commentId: M:MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetByTokenAsync_WithValidToken_ReturnsRefreshToken
  fullName: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetByTokenAsync_WithValidToken_ReturnsRefreshToken()
  nameWithType: RefreshTokenRepositoryTests.GetByTokenAsync_WithValidToken_ReturnsRefreshToken()
- uid: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetByTokenAsync_WithValidToken_ReturnsRefreshToken*
  name: GetByTokenAsync_WithValidToken_ReturnsRefreshToken
  href: api/MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.html#MyApp_Auth_Tests_Repositories_RefreshTokenRepositoryTests_GetByTokenAsync_WithValidToken_ReturnsRefreshToken_
  commentId: Overload:MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetByTokenAsync_WithValidToken_ReturnsRefreshToken
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetByTokenAsync_WithValidToken_ReturnsRefreshToken
  nameWithType: RefreshTokenRepositoryTests.GetByTokenAsync_WithValidToken_ReturnsRefreshToken
- uid: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetByUserIdAsync_ReturnsBothRevokedAndActiveTokens
  name: GetByUserIdAsync_ReturnsBothRevokedAndActiveTokens()
  href: api/MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.html#MyApp_Auth_Tests_Repositories_RefreshTokenRepositoryTests_GetByUserIdAsync_ReturnsBothRevokedAndActiveTokens
  commentId: M:MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetByUserIdAsync_ReturnsBothRevokedAndActiveTokens
  fullName: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetByUserIdAsync_ReturnsBothRevokedAndActiveTokens()
  nameWithType: RefreshTokenRepositoryTests.GetByUserIdAsync_ReturnsBothRevokedAndActiveTokens()
- uid: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetByUserIdAsync_ReturnsBothRevokedAndActiveTokens*
  name: GetByUserIdAsync_ReturnsBothRevokedAndActiveTokens
  href: api/MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.html#MyApp_Auth_Tests_Repositories_RefreshTokenRepositoryTests_GetByUserIdAsync_ReturnsBothRevokedAndActiveTokens_
  commentId: Overload:MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetByUserIdAsync_ReturnsBothRevokedAndActiveTokens
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetByUserIdAsync_ReturnsBothRevokedAndActiveTokens
  nameWithType: RefreshTokenRepositoryTests.GetByUserIdAsync_ReturnsBothRevokedAndActiveTokens
- uid: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetByUserIdAsync_WithNoTokens_ReturnsEmptyList
  name: GetByUserIdAsync_WithNoTokens_ReturnsEmptyList()
  href: api/MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.html#MyApp_Auth_Tests_Repositories_RefreshTokenRepositoryTests_GetByUserIdAsync_WithNoTokens_ReturnsEmptyList
  commentId: M:MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetByUserIdAsync_WithNoTokens_ReturnsEmptyList
  fullName: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetByUserIdAsync_WithNoTokens_ReturnsEmptyList()
  nameWithType: RefreshTokenRepositoryTests.GetByUserIdAsync_WithNoTokens_ReturnsEmptyList()
- uid: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetByUserIdAsync_WithNoTokens_ReturnsEmptyList*
  name: GetByUserIdAsync_WithNoTokens_ReturnsEmptyList
  href: api/MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.html#MyApp_Auth_Tests_Repositories_RefreshTokenRepositoryTests_GetByUserIdAsync_WithNoTokens_ReturnsEmptyList_
  commentId: Overload:MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetByUserIdAsync_WithNoTokens_ReturnsEmptyList
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetByUserIdAsync_WithNoTokens_ReturnsEmptyList
  nameWithType: RefreshTokenRepositoryTests.GetByUserIdAsync_WithNoTokens_ReturnsEmptyList
- uid: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetByUserIdAsync_WithValidUserId_ReturnsAllUserTokens
  name: GetByUserIdAsync_WithValidUserId_ReturnsAllUserTokens()
  href: api/MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.html#MyApp_Auth_Tests_Repositories_RefreshTokenRepositoryTests_GetByUserIdAsync_WithValidUserId_ReturnsAllUserTokens
  commentId: M:MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetByUserIdAsync_WithValidUserId_ReturnsAllUserTokens
  fullName: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetByUserIdAsync_WithValidUserId_ReturnsAllUserTokens()
  nameWithType: RefreshTokenRepositoryTests.GetByUserIdAsync_WithValidUserId_ReturnsAllUserTokens()
- uid: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetByUserIdAsync_WithValidUserId_ReturnsAllUserTokens*
  name: GetByUserIdAsync_WithValidUserId_ReturnsAllUserTokens
  href: api/MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.html#MyApp_Auth_Tests_Repositories_RefreshTokenRepositoryTests_GetByUserIdAsync_WithValidUserId_ReturnsAllUserTokens_
  commentId: Overload:MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetByUserIdAsync_WithValidUserId_ReturnsAllUserTokens
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetByUserIdAsync_WithValidUserId_ReturnsAllUserTokens
  nameWithType: RefreshTokenRepositoryTests.GetByUserIdAsync_WithValidUserId_ReturnsAllUserTokens
- uid: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetValidRefreshTokenAsync_WithExpiredToken_ReturnsNull
  name: GetValidRefreshTokenAsync_WithExpiredToken_ReturnsNull()
  href: api/MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.html#MyApp_Auth_Tests_Repositories_RefreshTokenRepositoryTests_GetValidRefreshTokenAsync_WithExpiredToken_ReturnsNull
  commentId: M:MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetValidRefreshTokenAsync_WithExpiredToken_ReturnsNull
  fullName: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetValidRefreshTokenAsync_WithExpiredToken_ReturnsNull()
  nameWithType: RefreshTokenRepositoryTests.GetValidRefreshTokenAsync_WithExpiredToken_ReturnsNull()
- uid: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetValidRefreshTokenAsync_WithExpiredToken_ReturnsNull*
  name: GetValidRefreshTokenAsync_WithExpiredToken_ReturnsNull
  href: api/MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.html#MyApp_Auth_Tests_Repositories_RefreshTokenRepositoryTests_GetValidRefreshTokenAsync_WithExpiredToken_ReturnsNull_
  commentId: Overload:MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetValidRefreshTokenAsync_WithExpiredToken_ReturnsNull
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetValidRefreshTokenAsync_WithExpiredToken_ReturnsNull
  nameWithType: RefreshTokenRepositoryTests.GetValidRefreshTokenAsync_WithExpiredToken_ReturnsNull
- uid: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetValidRefreshTokenAsync_WithRevokedToken_ReturnsNull
  name: GetValidRefreshTokenAsync_WithRevokedToken_ReturnsNull()
  href: api/MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.html#MyApp_Auth_Tests_Repositories_RefreshTokenRepositoryTests_GetValidRefreshTokenAsync_WithRevokedToken_ReturnsNull
  commentId: M:MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetValidRefreshTokenAsync_WithRevokedToken_ReturnsNull
  fullName: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetValidRefreshTokenAsync_WithRevokedToken_ReturnsNull()
  nameWithType: RefreshTokenRepositoryTests.GetValidRefreshTokenAsync_WithRevokedToken_ReturnsNull()
- uid: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetValidRefreshTokenAsync_WithRevokedToken_ReturnsNull*
  name: GetValidRefreshTokenAsync_WithRevokedToken_ReturnsNull
  href: api/MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.html#MyApp_Auth_Tests_Repositories_RefreshTokenRepositoryTests_GetValidRefreshTokenAsync_WithRevokedToken_ReturnsNull_
  commentId: Overload:MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetValidRefreshTokenAsync_WithRevokedToken_ReturnsNull
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetValidRefreshTokenAsync_WithRevokedToken_ReturnsNull
  nameWithType: RefreshTokenRepositoryTests.GetValidRefreshTokenAsync_WithRevokedToken_ReturnsNull
- uid: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetValidRefreshTokenAsync_WithValidNonRevokedToken_ReturnsToken
  name: GetValidRefreshTokenAsync_WithValidNonRevokedToken_ReturnsToken()
  href: api/MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.html#MyApp_Auth_Tests_Repositories_RefreshTokenRepositoryTests_GetValidRefreshTokenAsync_WithValidNonRevokedToken_ReturnsToken
  commentId: M:MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetValidRefreshTokenAsync_WithValidNonRevokedToken_ReturnsToken
  fullName: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetValidRefreshTokenAsync_WithValidNonRevokedToken_ReturnsToken()
  nameWithType: RefreshTokenRepositoryTests.GetValidRefreshTokenAsync_WithValidNonRevokedToken_ReturnsToken()
- uid: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetValidRefreshTokenAsync_WithValidNonRevokedToken_ReturnsToken*
  name: GetValidRefreshTokenAsync_WithValidNonRevokedToken_ReturnsToken
  href: api/MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.html#MyApp_Auth_Tests_Repositories_RefreshTokenRepositoryTests_GetValidRefreshTokenAsync_WithValidNonRevokedToken_ReturnsToken_
  commentId: Overload:MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetValidRefreshTokenAsync_WithValidNonRevokedToken_ReturnsToken
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetValidRefreshTokenAsync_WithValidNonRevokedToken_ReturnsToken
  nameWithType: RefreshTokenRepositoryTests.GetValidRefreshTokenAsync_WithValidNonRevokedToken_ReturnsToken
- uid: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetValidRefreshTokenAsync_WithWrongUserId_ReturnsNull
  name: GetValidRefreshTokenAsync_WithWrongUserId_ReturnsNull()
  href: api/MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.html#MyApp_Auth_Tests_Repositories_RefreshTokenRepositoryTests_GetValidRefreshTokenAsync_WithWrongUserId_ReturnsNull
  commentId: M:MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetValidRefreshTokenAsync_WithWrongUserId_ReturnsNull
  fullName: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetValidRefreshTokenAsync_WithWrongUserId_ReturnsNull()
  nameWithType: RefreshTokenRepositoryTests.GetValidRefreshTokenAsync_WithWrongUserId_ReturnsNull()
- uid: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetValidRefreshTokenAsync_WithWrongUserId_ReturnsNull*
  name: GetValidRefreshTokenAsync_WithWrongUserId_ReturnsNull
  href: api/MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.html#MyApp_Auth_Tests_Repositories_RefreshTokenRepositoryTests_GetValidRefreshTokenAsync_WithWrongUserId_ReturnsNull_
  commentId: Overload:MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetValidRefreshTokenAsync_WithWrongUserId_ReturnsNull
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.GetValidRefreshTokenAsync_WithWrongUserId_ReturnsNull
  nameWithType: RefreshTokenRepositoryTests.GetValidRefreshTokenAsync_WithWrongUserId_ReturnsNull
- uid: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RevokeAsync_OnlyRevokesSpecificToken
  name: RevokeAsync_OnlyRevokesSpecificToken()
  href: api/MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.html#MyApp_Auth_Tests_Repositories_RefreshTokenRepositoryTests_RevokeAsync_OnlyRevokesSpecificToken
  commentId: M:MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RevokeAsync_OnlyRevokesSpecificToken
  fullName: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RevokeAsync_OnlyRevokesSpecificToken()
  nameWithType: RefreshTokenRepositoryTests.RevokeAsync_OnlyRevokesSpecificToken()
- uid: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RevokeAsync_OnlyRevokesSpecificToken*
  name: RevokeAsync_OnlyRevokesSpecificToken
  href: api/MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.html#MyApp_Auth_Tests_Repositories_RefreshTokenRepositoryTests_RevokeAsync_OnlyRevokesSpecificToken_
  commentId: Overload:MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RevokeAsync_OnlyRevokesSpecificToken
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RevokeAsync_OnlyRevokesSpecificToken
  nameWithType: RefreshTokenRepositoryTests.RevokeAsync_OnlyRevokesSpecificToken
- uid: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RevokeAsync_WithNonExistentTokenId_DoesNotThrow
  name: RevokeAsync_WithNonExistentTokenId_DoesNotThrow()
  href: api/MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.html#MyApp_Auth_Tests_Repositories_RefreshTokenRepositoryTests_RevokeAsync_WithNonExistentTokenId_DoesNotThrow
  commentId: M:MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RevokeAsync_WithNonExistentTokenId_DoesNotThrow
  fullName: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RevokeAsync_WithNonExistentTokenId_DoesNotThrow()
  nameWithType: RefreshTokenRepositoryTests.RevokeAsync_WithNonExistentTokenId_DoesNotThrow()
- uid: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RevokeAsync_WithNonExistentTokenId_DoesNotThrow*
  name: RevokeAsync_WithNonExistentTokenId_DoesNotThrow
  href: api/MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.html#MyApp_Auth_Tests_Repositories_RefreshTokenRepositoryTests_RevokeAsync_WithNonExistentTokenId_DoesNotThrow_
  commentId: Overload:MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RevokeAsync_WithNonExistentTokenId_DoesNotThrow
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RevokeAsync_WithNonExistentTokenId_DoesNotThrow
  nameWithType: RefreshTokenRepositoryTests.RevokeAsync_WithNonExistentTokenId_DoesNotThrow
- uid: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RevokeAsync_WithValidTokenId_RevokesSingleToken
  name: RevokeAsync_WithValidTokenId_RevokesSingleToken()
  href: api/MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.html#MyApp_Auth_Tests_Repositories_RefreshTokenRepositoryTests_RevokeAsync_WithValidTokenId_RevokesSingleToken
  commentId: M:MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RevokeAsync_WithValidTokenId_RevokesSingleToken
  fullName: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RevokeAsync_WithValidTokenId_RevokesSingleToken()
  nameWithType: RefreshTokenRepositoryTests.RevokeAsync_WithValidTokenId_RevokesSingleToken()
- uid: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RevokeAsync_WithValidTokenId_RevokesSingleToken*
  name: RevokeAsync_WithValidTokenId_RevokesSingleToken
  href: api/MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.html#MyApp_Auth_Tests_Repositories_RefreshTokenRepositoryTests_RevokeAsync_WithValidTokenId_RevokesSingleToken_
  commentId: Overload:MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RevokeAsync_WithValidTokenId_RevokesSingleToken
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RevokeAsync_WithValidTokenId_RevokesSingleToken
  nameWithType: RefreshTokenRepositoryTests.RevokeAsync_WithValidTokenId_RevokesSingleToken
- uid: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RevokeUserTokensAsync_DoesNotAffectOtherUsersTokens
  name: RevokeUserTokensAsync_DoesNotAffectOtherUsersTokens()
  href: api/MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.html#MyApp_Auth_Tests_Repositories_RefreshTokenRepositoryTests_RevokeUserTokensAsync_DoesNotAffectOtherUsersTokens
  commentId: M:MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RevokeUserTokensAsync_DoesNotAffectOtherUsersTokens
  fullName: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RevokeUserTokensAsync_DoesNotAffectOtherUsersTokens()
  nameWithType: RefreshTokenRepositoryTests.RevokeUserTokensAsync_DoesNotAffectOtherUsersTokens()
- uid: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RevokeUserTokensAsync_DoesNotAffectOtherUsersTokens*
  name: RevokeUserTokensAsync_DoesNotAffectOtherUsersTokens
  href: api/MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.html#MyApp_Auth_Tests_Repositories_RefreshTokenRepositoryTests_RevokeUserTokensAsync_DoesNotAffectOtherUsersTokens_
  commentId: Overload:MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RevokeUserTokensAsync_DoesNotAffectOtherUsersTokens
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RevokeUserTokensAsync_DoesNotAffectOtherUsersTokens
  nameWithType: RefreshTokenRepositoryTests.RevokeUserTokensAsync_DoesNotAffectOtherUsersTokens
- uid: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RevokeUserTokensAsync_WithAlreadyRevokedTokens_KeepsThemRevoked
  name: RevokeUserTokensAsync_WithAlreadyRevokedTokens_KeepsThemRevoked()
  href: api/MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.html#MyApp_Auth_Tests_Repositories_RefreshTokenRepositoryTests_RevokeUserTokensAsync_WithAlreadyRevokedTokens_KeepsThemRevoked
  commentId: M:MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RevokeUserTokensAsync_WithAlreadyRevokedTokens_KeepsThemRevoked
  fullName: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RevokeUserTokensAsync_WithAlreadyRevokedTokens_KeepsThemRevoked()
  nameWithType: RefreshTokenRepositoryTests.RevokeUserTokensAsync_WithAlreadyRevokedTokens_KeepsThemRevoked()
- uid: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RevokeUserTokensAsync_WithAlreadyRevokedTokens_KeepsThemRevoked*
  name: RevokeUserTokensAsync_WithAlreadyRevokedTokens_KeepsThemRevoked
  href: api/MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.html#MyApp_Auth_Tests_Repositories_RefreshTokenRepositoryTests_RevokeUserTokensAsync_WithAlreadyRevokedTokens_KeepsThemRevoked_
  commentId: Overload:MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RevokeUserTokensAsync_WithAlreadyRevokedTokens_KeepsThemRevoked
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RevokeUserTokensAsync_WithAlreadyRevokedTokens_KeepsThemRevoked
  nameWithType: RefreshTokenRepositoryTests.RevokeUserTokensAsync_WithAlreadyRevokedTokens_KeepsThemRevoked
- uid: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RevokeUserTokensAsync_WithValidUserId_RevokesAllUserTokens
  name: RevokeUserTokensAsync_WithValidUserId_RevokesAllUserTokens()
  href: api/MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.html#MyApp_Auth_Tests_Repositories_RefreshTokenRepositoryTests_RevokeUserTokensAsync_WithValidUserId_RevokesAllUserTokens
  commentId: M:MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RevokeUserTokensAsync_WithValidUserId_RevokesAllUserTokens
  fullName: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RevokeUserTokensAsync_WithValidUserId_RevokesAllUserTokens()
  nameWithType: RefreshTokenRepositoryTests.RevokeUserTokensAsync_WithValidUserId_RevokesAllUserTokens()
- uid: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RevokeUserTokensAsync_WithValidUserId_RevokesAllUserTokens*
  name: RevokeUserTokensAsync_WithValidUserId_RevokesAllUserTokens
  href: api/MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.html#MyApp_Auth_Tests_Repositories_RefreshTokenRepositoryTests_RevokeUserTokensAsync_WithValidUserId_RevokesAllUserTokens_
  commentId: Overload:MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RevokeUserTokensAsync_WithValidUserId_RevokesAllUserTokens
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.RefreshTokenRepositoryTests.RevokeUserTokensAsync_WithValidUserId_RevokesAllUserTokens
  nameWithType: RefreshTokenRepositoryTests.RevokeUserTokensAsync_WithValidUserId_RevokesAllUserTokens
- uid: MyApp.Auth.Tests.Repositories.RoleRepositoryTests
  name: RoleRepositoryTests
  href: api/MyApp.Auth.Tests.Repositories.RoleRepositoryTests.html
  commentId: T:MyApp.Auth.Tests.Repositories.RoleRepositoryTests
  fullName: MyApp.Auth.Tests.Repositories.RoleRepositoryTests
  nameWithType: RoleRepositoryTests
- uid: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.#ctor
  name: RoleRepositoryTests()
  href: api/MyApp.Auth.Tests.Repositories.RoleRepositoryTests.html#MyApp_Auth_Tests_Repositories_RoleRepositoryTests__ctor
  commentId: M:MyApp.Auth.Tests.Repositories.RoleRepositoryTests.#ctor
  name.vb: New()
  fullName: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.RoleRepositoryTests()
  fullName.vb: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.New()
  nameWithType: RoleRepositoryTests.RoleRepositoryTests()
  nameWithType.vb: RoleRepositoryTests.New()
- uid: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.#ctor*
  name: RoleRepositoryTests
  href: api/MyApp.Auth.Tests.Repositories.RoleRepositoryTests.html#MyApp_Auth_Tests_Repositories_RoleRepositoryTests__ctor_
  commentId: Overload:MyApp.Auth.Tests.Repositories.RoleRepositoryTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.RoleRepositoryTests
  fullName.vb: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.New
  nameWithType: RoleRepositoryTests.RoleRepositoryTests
  nameWithType.vb: RoleRepositoryTests.New
- uid: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.AddAsync_WithValidRole_CreatesRole
  name: AddAsync_WithValidRole_CreatesRole()
  href: api/MyApp.Auth.Tests.Repositories.RoleRepositoryTests.html#MyApp_Auth_Tests_Repositories_RoleRepositoryTests_AddAsync_WithValidRole_CreatesRole
  commentId: M:MyApp.Auth.Tests.Repositories.RoleRepositoryTests.AddAsync_WithValidRole_CreatesRole
  fullName: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.AddAsync_WithValidRole_CreatesRole()
  nameWithType: RoleRepositoryTests.AddAsync_WithValidRole_CreatesRole()
- uid: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.AddAsync_WithValidRole_CreatesRole*
  name: AddAsync_WithValidRole_CreatesRole
  href: api/MyApp.Auth.Tests.Repositories.RoleRepositoryTests.html#MyApp_Auth_Tests_Repositories_RoleRepositoryTests_AddAsync_WithValidRole_CreatesRole_
  commentId: Overload:MyApp.Auth.Tests.Repositories.RoleRepositoryTests.AddAsync_WithValidRole_CreatesRole
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.AddAsync_WithValidRole_CreatesRole
  nameWithType: RoleRepositoryTests.AddAsync_WithValidRole_CreatesRole
- uid: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.DeleteAsync_WithValidRoleId_DeletesRole
  name: DeleteAsync_WithValidRoleId_DeletesRole()
  href: api/MyApp.Auth.Tests.Repositories.RoleRepositoryTests.html#MyApp_Auth_Tests_Repositories_RoleRepositoryTests_DeleteAsync_WithValidRoleId_DeletesRole
  commentId: M:MyApp.Auth.Tests.Repositories.RoleRepositoryTests.DeleteAsync_WithValidRoleId_DeletesRole
  fullName: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.DeleteAsync_WithValidRoleId_DeletesRole()
  nameWithType: RoleRepositoryTests.DeleteAsync_WithValidRoleId_DeletesRole()
- uid: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.DeleteAsync_WithValidRoleId_DeletesRole*
  name: DeleteAsync_WithValidRoleId_DeletesRole
  href: api/MyApp.Auth.Tests.Repositories.RoleRepositoryTests.html#MyApp_Auth_Tests_Repositories_RoleRepositoryTests_DeleteAsync_WithValidRoleId_DeletesRole_
  commentId: Overload:MyApp.Auth.Tests.Repositories.RoleRepositoryTests.DeleteAsync_WithValidRoleId_DeletesRole
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.DeleteAsync_WithValidRoleId_DeletesRole
  nameWithType: RoleRepositoryTests.DeleteAsync_WithValidRoleId_DeletesRole
- uid: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetAllAsync_ReturnsAllRoles
  name: GetAllAsync_ReturnsAllRoles()
  href: api/MyApp.Auth.Tests.Repositories.RoleRepositoryTests.html#MyApp_Auth_Tests_Repositories_RoleRepositoryTests_GetAllAsync_ReturnsAllRoles
  commentId: M:MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetAllAsync_ReturnsAllRoles
  fullName: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetAllAsync_ReturnsAllRoles()
  nameWithType: RoleRepositoryTests.GetAllAsync_ReturnsAllRoles()
- uid: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetAllAsync_ReturnsAllRoles*
  name: GetAllAsync_ReturnsAllRoles
  href: api/MyApp.Auth.Tests.Repositories.RoleRepositoryTests.html#MyApp_Auth_Tests_Repositories_RoleRepositoryTests_GetAllAsync_ReturnsAllRoles_
  commentId: Overload:MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetAllAsync_ReturnsAllRoles
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetAllAsync_ReturnsAllRoles
  nameWithType: RoleRepositoryTests.GetAllAsync_ReturnsAllRoles
- uid: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetByNameAsync_IncludesRoleClaims
  name: GetByNameAsync_IncludesRoleClaims()
  href: api/MyApp.Auth.Tests.Repositories.RoleRepositoryTests.html#MyApp_Auth_Tests_Repositories_RoleRepositoryTests_GetByNameAsync_IncludesRoleClaims
  commentId: M:MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetByNameAsync_IncludesRoleClaims
  fullName: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetByNameAsync_IncludesRoleClaims()
  nameWithType: RoleRepositoryTests.GetByNameAsync_IncludesRoleClaims()
- uid: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetByNameAsync_IncludesRoleClaims*
  name: GetByNameAsync_IncludesRoleClaims
  href: api/MyApp.Auth.Tests.Repositories.RoleRepositoryTests.html#MyApp_Auth_Tests_Repositories_RoleRepositoryTests_GetByNameAsync_IncludesRoleClaims_
  commentId: Overload:MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetByNameAsync_IncludesRoleClaims
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetByNameAsync_IncludesRoleClaims
  nameWithType: RoleRepositoryTests.GetByNameAsync_IncludesRoleClaims
- uid: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetByNameAsync_IsCaseSensitive
  name: GetByNameAsync_IsCaseSensitive()
  href: api/MyApp.Auth.Tests.Repositories.RoleRepositoryTests.html#MyApp_Auth_Tests_Repositories_RoleRepositoryTests_GetByNameAsync_IsCaseSensitive
  commentId: M:MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetByNameAsync_IsCaseSensitive
  fullName: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetByNameAsync_IsCaseSensitive()
  nameWithType: RoleRepositoryTests.GetByNameAsync_IsCaseSensitive()
- uid: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetByNameAsync_IsCaseSensitive*
  name: GetByNameAsync_IsCaseSensitive
  href: api/MyApp.Auth.Tests.Repositories.RoleRepositoryTests.html#MyApp_Auth_Tests_Repositories_RoleRepositoryTests_GetByNameAsync_IsCaseSensitive_
  commentId: Overload:MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetByNameAsync_IsCaseSensitive
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetByNameAsync_IsCaseSensitive
  nameWithType: RoleRepositoryTests.GetByNameAsync_IsCaseSensitive
- uid: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetByNameAsync_WithNonExistentRole_ReturnsNull
  name: GetByNameAsync_WithNonExistentRole_ReturnsNull()
  href: api/MyApp.Auth.Tests.Repositories.RoleRepositoryTests.html#MyApp_Auth_Tests_Repositories_RoleRepositoryTests_GetByNameAsync_WithNonExistentRole_ReturnsNull
  commentId: M:MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetByNameAsync_WithNonExistentRole_ReturnsNull
  fullName: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetByNameAsync_WithNonExistentRole_ReturnsNull()
  nameWithType: RoleRepositoryTests.GetByNameAsync_WithNonExistentRole_ReturnsNull()
- uid: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetByNameAsync_WithNonExistentRole_ReturnsNull*
  name: GetByNameAsync_WithNonExistentRole_ReturnsNull
  href: api/MyApp.Auth.Tests.Repositories.RoleRepositoryTests.html#MyApp_Auth_Tests_Repositories_RoleRepositoryTests_GetByNameAsync_WithNonExistentRole_ReturnsNull_
  commentId: Overload:MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetByNameAsync_WithNonExistentRole_ReturnsNull
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetByNameAsync_WithNonExistentRole_ReturnsNull
  nameWithType: RoleRepositoryTests.GetByNameAsync_WithNonExistentRole_ReturnsNull
- uid: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetByNameAsync_WithValidRoleName_ReturnsRole
  name: GetByNameAsync_WithValidRoleName_ReturnsRole()
  href: api/MyApp.Auth.Tests.Repositories.RoleRepositoryTests.html#MyApp_Auth_Tests_Repositories_RoleRepositoryTests_GetByNameAsync_WithValidRoleName_ReturnsRole
  commentId: M:MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetByNameAsync_WithValidRoleName_ReturnsRole
  fullName: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetByNameAsync_WithValidRoleName_ReturnsRole()
  nameWithType: RoleRepositoryTests.GetByNameAsync_WithValidRoleName_ReturnsRole()
- uid: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetByNameAsync_WithValidRoleName_ReturnsRole*
  name: GetByNameAsync_WithValidRoleName_ReturnsRole
  href: api/MyApp.Auth.Tests.Repositories.RoleRepositoryTests.html#MyApp_Auth_Tests_Repositories_RoleRepositoryTests_GetByNameAsync_WithValidRoleName_ReturnsRole_
  commentId: Overload:MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetByNameAsync_WithValidRoleName_ReturnsRole
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetByNameAsync_WithValidRoleName_ReturnsRole
  nameWithType: RoleRepositoryTests.GetByNameAsync_WithValidRoleName_ReturnsRole
- uid: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetRolesByUserIdAsync_IncludesRoleClaims
  name: GetRolesByUserIdAsync_IncludesRoleClaims()
  href: api/MyApp.Auth.Tests.Repositories.RoleRepositoryTests.html#MyApp_Auth_Tests_Repositories_RoleRepositoryTests_GetRolesByUserIdAsync_IncludesRoleClaims
  commentId: M:MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetRolesByUserIdAsync_IncludesRoleClaims
  fullName: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetRolesByUserIdAsync_IncludesRoleClaims()
  nameWithType: RoleRepositoryTests.GetRolesByUserIdAsync_IncludesRoleClaims()
- uid: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetRolesByUserIdAsync_IncludesRoleClaims*
  name: GetRolesByUserIdAsync_IncludesRoleClaims
  href: api/MyApp.Auth.Tests.Repositories.RoleRepositoryTests.html#MyApp_Auth_Tests_Repositories_RoleRepositoryTests_GetRolesByUserIdAsync_IncludesRoleClaims_
  commentId: Overload:MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetRolesByUserIdAsync_IncludesRoleClaims
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetRolesByUserIdAsync_IncludesRoleClaims
  nameWithType: RoleRepositoryTests.GetRolesByUserIdAsync_IncludesRoleClaims
- uid: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetRolesByUserIdAsync_WithMultipleUsers_ReturnOnlySpecificUserRoles
  name: GetRolesByUserIdAsync_WithMultipleUsers_ReturnOnlySpecificUserRoles()
  href: api/MyApp.Auth.Tests.Repositories.RoleRepositoryTests.html#MyApp_Auth_Tests_Repositories_RoleRepositoryTests_GetRolesByUserIdAsync_WithMultipleUsers_ReturnOnlySpecificUserRoles
  commentId: M:MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetRolesByUserIdAsync_WithMultipleUsers_ReturnOnlySpecificUserRoles
  fullName: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetRolesByUserIdAsync_WithMultipleUsers_ReturnOnlySpecificUserRoles()
  nameWithType: RoleRepositoryTests.GetRolesByUserIdAsync_WithMultipleUsers_ReturnOnlySpecificUserRoles()
- uid: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetRolesByUserIdAsync_WithMultipleUsers_ReturnOnlySpecificUserRoles*
  name: GetRolesByUserIdAsync_WithMultipleUsers_ReturnOnlySpecificUserRoles
  href: api/MyApp.Auth.Tests.Repositories.RoleRepositoryTests.html#MyApp_Auth_Tests_Repositories_RoleRepositoryTests_GetRolesByUserIdAsync_WithMultipleUsers_ReturnOnlySpecificUserRoles_
  commentId: Overload:MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetRolesByUserIdAsync_WithMultipleUsers_ReturnOnlySpecificUserRoles
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetRolesByUserIdAsync_WithMultipleUsers_ReturnOnlySpecificUserRoles
  nameWithType: RoleRepositoryTests.GetRolesByUserIdAsync_WithMultipleUsers_ReturnOnlySpecificUserRoles
- uid: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetRolesByUserIdAsync_WithNonExistentUserId_ReturnsEmptyList
  name: GetRolesByUserIdAsync_WithNonExistentUserId_ReturnsEmptyList()
  href: api/MyApp.Auth.Tests.Repositories.RoleRepositoryTests.html#MyApp_Auth_Tests_Repositories_RoleRepositoryTests_GetRolesByUserIdAsync_WithNonExistentUserId_ReturnsEmptyList
  commentId: M:MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetRolesByUserIdAsync_WithNonExistentUserId_ReturnsEmptyList
  fullName: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetRolesByUserIdAsync_WithNonExistentUserId_ReturnsEmptyList()
  nameWithType: RoleRepositoryTests.GetRolesByUserIdAsync_WithNonExistentUserId_ReturnsEmptyList()
- uid: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetRolesByUserIdAsync_WithNonExistentUserId_ReturnsEmptyList*
  name: GetRolesByUserIdAsync_WithNonExistentUserId_ReturnsEmptyList
  href: api/MyApp.Auth.Tests.Repositories.RoleRepositoryTests.html#MyApp_Auth_Tests_Repositories_RoleRepositoryTests_GetRolesByUserIdAsync_WithNonExistentUserId_ReturnsEmptyList_
  commentId: Overload:MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetRolesByUserIdAsync_WithNonExistentUserId_ReturnsEmptyList
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetRolesByUserIdAsync_WithNonExistentUserId_ReturnsEmptyList
  nameWithType: RoleRepositoryTests.GetRolesByUserIdAsync_WithNonExistentUserId_ReturnsEmptyList
- uid: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetRolesByUserIdAsync_WithUserInRoles_ReturnsUserRoles
  name: GetRolesByUserIdAsync_WithUserInRoles_ReturnsUserRoles()
  href: api/MyApp.Auth.Tests.Repositories.RoleRepositoryTests.html#MyApp_Auth_Tests_Repositories_RoleRepositoryTests_GetRolesByUserIdAsync_WithUserInRoles_ReturnsUserRoles
  commentId: M:MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetRolesByUserIdAsync_WithUserInRoles_ReturnsUserRoles
  fullName: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetRolesByUserIdAsync_WithUserInRoles_ReturnsUserRoles()
  nameWithType: RoleRepositoryTests.GetRolesByUserIdAsync_WithUserInRoles_ReturnsUserRoles()
- uid: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetRolesByUserIdAsync_WithUserInRoles_ReturnsUserRoles*
  name: GetRolesByUserIdAsync_WithUserInRoles_ReturnsUserRoles
  href: api/MyApp.Auth.Tests.Repositories.RoleRepositoryTests.html#MyApp_Auth_Tests_Repositories_RoleRepositoryTests_GetRolesByUserIdAsync_WithUserInRoles_ReturnsUserRoles_
  commentId: Overload:MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetRolesByUserIdAsync_WithUserInRoles_ReturnsUserRoles
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetRolesByUserIdAsync_WithUserInRoles_ReturnsUserRoles
  nameWithType: RoleRepositoryTests.GetRolesByUserIdAsync_WithUserInRoles_ReturnsUserRoles
- uid: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetRolesByUserIdAsync_WithUserNotInRoles_ReturnsEmptyList
  name: GetRolesByUserIdAsync_WithUserNotInRoles_ReturnsEmptyList()
  href: api/MyApp.Auth.Tests.Repositories.RoleRepositoryTests.html#MyApp_Auth_Tests_Repositories_RoleRepositoryTests_GetRolesByUserIdAsync_WithUserNotInRoles_ReturnsEmptyList
  commentId: M:MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetRolesByUserIdAsync_WithUserNotInRoles_ReturnsEmptyList
  fullName: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetRolesByUserIdAsync_WithUserNotInRoles_ReturnsEmptyList()
  nameWithType: RoleRepositoryTests.GetRolesByUserIdAsync_WithUserNotInRoles_ReturnsEmptyList()
- uid: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetRolesByUserIdAsync_WithUserNotInRoles_ReturnsEmptyList*
  name: GetRolesByUserIdAsync_WithUserNotInRoles_ReturnsEmptyList
  href: api/MyApp.Auth.Tests.Repositories.RoleRepositoryTests.html#MyApp_Auth_Tests_Repositories_RoleRepositoryTests_GetRolesByUserIdAsync_WithUserNotInRoles_ReturnsEmptyList_
  commentId: Overload:MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetRolesByUserIdAsync_WithUserNotInRoles_ReturnsEmptyList
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.GetRolesByUserIdAsync_WithUserNotInRoles_ReturnsEmptyList
  nameWithType: RoleRepositoryTests.GetRolesByUserIdAsync_WithUserNotInRoles_ReturnsEmptyList
- uid: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.NameExistsAsync_WithEmptyString_ReturnsFalse
  name: NameExistsAsync_WithEmptyString_ReturnsFalse()
  href: api/MyApp.Auth.Tests.Repositories.RoleRepositoryTests.html#MyApp_Auth_Tests_Repositories_RoleRepositoryTests_NameExistsAsync_WithEmptyString_ReturnsFalse
  commentId: M:MyApp.Auth.Tests.Repositories.RoleRepositoryTests.NameExistsAsync_WithEmptyString_ReturnsFalse
  fullName: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.NameExistsAsync_WithEmptyString_ReturnsFalse()
  nameWithType: RoleRepositoryTests.NameExistsAsync_WithEmptyString_ReturnsFalse()
- uid: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.NameExistsAsync_WithEmptyString_ReturnsFalse*
  name: NameExistsAsync_WithEmptyString_ReturnsFalse
  href: api/MyApp.Auth.Tests.Repositories.RoleRepositoryTests.html#MyApp_Auth_Tests_Repositories_RoleRepositoryTests_NameExistsAsync_WithEmptyString_ReturnsFalse_
  commentId: Overload:MyApp.Auth.Tests.Repositories.RoleRepositoryTests.NameExistsAsync_WithEmptyString_ReturnsFalse
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.NameExistsAsync_WithEmptyString_ReturnsFalse
  nameWithType: RoleRepositoryTests.NameExistsAsync_WithEmptyString_ReturnsFalse
- uid: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.NameExistsAsync_WithExistingRole_ReturnsTrue
  name: NameExistsAsync_WithExistingRole_ReturnsTrue()
  href: api/MyApp.Auth.Tests.Repositories.RoleRepositoryTests.html#MyApp_Auth_Tests_Repositories_RoleRepositoryTests_NameExistsAsync_WithExistingRole_ReturnsTrue
  commentId: M:MyApp.Auth.Tests.Repositories.RoleRepositoryTests.NameExistsAsync_WithExistingRole_ReturnsTrue
  fullName: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.NameExistsAsync_WithExistingRole_ReturnsTrue()
  nameWithType: RoleRepositoryTests.NameExistsAsync_WithExistingRole_ReturnsTrue()
- uid: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.NameExistsAsync_WithExistingRole_ReturnsTrue*
  name: NameExistsAsync_WithExistingRole_ReturnsTrue
  href: api/MyApp.Auth.Tests.Repositories.RoleRepositoryTests.html#MyApp_Auth_Tests_Repositories_RoleRepositoryTests_NameExistsAsync_WithExistingRole_ReturnsTrue_
  commentId: Overload:MyApp.Auth.Tests.Repositories.RoleRepositoryTests.NameExistsAsync_WithExistingRole_ReturnsTrue
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.NameExistsAsync_WithExistingRole_ReturnsTrue
  nameWithType: RoleRepositoryTests.NameExistsAsync_WithExistingRole_ReturnsTrue
- uid: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.NameExistsAsync_WithMultipleRoles_ChecksCorrectly
  name: NameExistsAsync_WithMultipleRoles_ChecksCorrectly()
  href: api/MyApp.Auth.Tests.Repositories.RoleRepositoryTests.html#MyApp_Auth_Tests_Repositories_RoleRepositoryTests_NameExistsAsync_WithMultipleRoles_ChecksCorrectly
  commentId: M:MyApp.Auth.Tests.Repositories.RoleRepositoryTests.NameExistsAsync_WithMultipleRoles_ChecksCorrectly
  fullName: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.NameExistsAsync_WithMultipleRoles_ChecksCorrectly()
  nameWithType: RoleRepositoryTests.NameExistsAsync_WithMultipleRoles_ChecksCorrectly()
- uid: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.NameExistsAsync_WithMultipleRoles_ChecksCorrectly*
  name: NameExistsAsync_WithMultipleRoles_ChecksCorrectly
  href: api/MyApp.Auth.Tests.Repositories.RoleRepositoryTests.html#MyApp_Auth_Tests_Repositories_RoleRepositoryTests_NameExistsAsync_WithMultipleRoles_ChecksCorrectly_
  commentId: Overload:MyApp.Auth.Tests.Repositories.RoleRepositoryTests.NameExistsAsync_WithMultipleRoles_ChecksCorrectly
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.NameExistsAsync_WithMultipleRoles_ChecksCorrectly
  nameWithType: RoleRepositoryTests.NameExistsAsync_WithMultipleRoles_ChecksCorrectly
- uid: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.NameExistsAsync_WithNonExistentRole_ReturnsFalse
  name: NameExistsAsync_WithNonExistentRole_ReturnsFalse()
  href: api/MyApp.Auth.Tests.Repositories.RoleRepositoryTests.html#MyApp_Auth_Tests_Repositories_RoleRepositoryTests_NameExistsAsync_WithNonExistentRole_ReturnsFalse
  commentId: M:MyApp.Auth.Tests.Repositories.RoleRepositoryTests.NameExistsAsync_WithNonExistentRole_ReturnsFalse
  fullName: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.NameExistsAsync_WithNonExistentRole_ReturnsFalse()
  nameWithType: RoleRepositoryTests.NameExistsAsync_WithNonExistentRole_ReturnsFalse()
- uid: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.NameExistsAsync_WithNonExistentRole_ReturnsFalse*
  name: NameExistsAsync_WithNonExistentRole_ReturnsFalse
  href: api/MyApp.Auth.Tests.Repositories.RoleRepositoryTests.html#MyApp_Auth_Tests_Repositories_RoleRepositoryTests_NameExistsAsync_WithNonExistentRole_ReturnsFalse_
  commentId: Overload:MyApp.Auth.Tests.Repositories.RoleRepositoryTests.NameExistsAsync_WithNonExistentRole_ReturnsFalse
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.NameExistsAsync_WithNonExistentRole_ReturnsFalse
  nameWithType: RoleRepositoryTests.NameExistsAsync_WithNonExistentRole_ReturnsFalse
- uid: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.UpdateAsync_WithExistingRole_UpdatesRoleData
  name: UpdateAsync_WithExistingRole_UpdatesRoleData()
  href: api/MyApp.Auth.Tests.Repositories.RoleRepositoryTests.html#MyApp_Auth_Tests_Repositories_RoleRepositoryTests_UpdateAsync_WithExistingRole_UpdatesRoleData
  commentId: M:MyApp.Auth.Tests.Repositories.RoleRepositoryTests.UpdateAsync_WithExistingRole_UpdatesRoleData
  fullName: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.UpdateAsync_WithExistingRole_UpdatesRoleData()
  nameWithType: RoleRepositoryTests.UpdateAsync_WithExistingRole_UpdatesRoleData()
- uid: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.UpdateAsync_WithExistingRole_UpdatesRoleData*
  name: UpdateAsync_WithExistingRole_UpdatesRoleData
  href: api/MyApp.Auth.Tests.Repositories.RoleRepositoryTests.html#MyApp_Auth_Tests_Repositories_RoleRepositoryTests_UpdateAsync_WithExistingRole_UpdatesRoleData_
  commentId: Overload:MyApp.Auth.Tests.Repositories.RoleRepositoryTests.UpdateAsync_WithExistingRole_UpdatesRoleData
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.RoleRepositoryTests.UpdateAsync_WithExistingRole_UpdatesRoleData
  nameWithType: RoleRepositoryTests.UpdateAsync_WithExistingRole_UpdatesRoleData
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests
  name: UserRepositoryTests
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html
  commentId: T:MyApp.Auth.Tests.Repositories.UserRepositoryTests
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests
  nameWithType: UserRepositoryTests
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.#ctor
  name: UserRepositoryTests()
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests__ctor
  commentId: M:MyApp.Auth.Tests.Repositories.UserRepositoryTests.#ctor
  name.vb: New()
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.UserRepositoryTests()
  fullName.vb: MyApp.Auth.Tests.Repositories.UserRepositoryTests.New()
  nameWithType: UserRepositoryTests.UserRepositoryTests()
  nameWithType.vb: UserRepositoryTests.New()
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.#ctor*
  name: UserRepositoryTests
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests__ctor_
  commentId: Overload:MyApp.Auth.Tests.Repositories.UserRepositoryTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.UserRepositoryTests
  fullName.vb: MyApp.Auth.Tests.Repositories.UserRepositoryTests.New
  nameWithType: UserRepositoryTests.UserRepositoryTests
  nameWithType.vb: UserRepositoryTests.New
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.AddAsync_WithValidUser_CreatesUser
  name: AddAsync_WithValidUser_CreatesUser()
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests_AddAsync_WithValidUser_CreatesUser
  commentId: M:MyApp.Auth.Tests.Repositories.UserRepositoryTests.AddAsync_WithValidUser_CreatesUser
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.AddAsync_WithValidUser_CreatesUser()
  nameWithType: UserRepositoryTests.AddAsync_WithValidUser_CreatesUser()
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.AddAsync_WithValidUser_CreatesUser*
  name: AddAsync_WithValidUser_CreatesUser
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests_AddAsync_WithValidUser_CreatesUser_
  commentId: Overload:MyApp.Auth.Tests.Repositories.UserRepositoryTests.AddAsync_WithValidUser_CreatesUser
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.AddAsync_WithValidUser_CreatesUser
  nameWithType: UserRepositoryTests.AddAsync_WithValidUser_CreatesUser
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.DeleteAsync_WithValidUserId_DeletesUser
  name: DeleteAsync_WithValidUserId_DeletesUser()
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests_DeleteAsync_WithValidUserId_DeletesUser
  commentId: M:MyApp.Auth.Tests.Repositories.UserRepositoryTests.DeleteAsync_WithValidUserId_DeletesUser
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.DeleteAsync_WithValidUserId_DeletesUser()
  nameWithType: UserRepositoryTests.DeleteAsync_WithValidUserId_DeletesUser()
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.DeleteAsync_WithValidUserId_DeletesUser*
  name: DeleteAsync_WithValidUserId_DeletesUser
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests_DeleteAsync_WithValidUserId_DeletesUser_
  commentId: Overload:MyApp.Auth.Tests.Repositories.UserRepositoryTests.DeleteAsync_WithValidUserId_DeletesUser
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.DeleteAsync_WithValidUserId_DeletesUser
  nameWithType: UserRepositoryTests.DeleteAsync_WithValidUserId_DeletesUser
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.EmailExistsAsync_IsCaseSensitive
  name: EmailExistsAsync_IsCaseSensitive()
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests_EmailExistsAsync_IsCaseSensitive
  commentId: M:MyApp.Auth.Tests.Repositories.UserRepositoryTests.EmailExistsAsync_IsCaseSensitive
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.EmailExistsAsync_IsCaseSensitive()
  nameWithType: UserRepositoryTests.EmailExistsAsync_IsCaseSensitive()
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.EmailExistsAsync_IsCaseSensitive*
  name: EmailExistsAsync_IsCaseSensitive
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests_EmailExistsAsync_IsCaseSensitive_
  commentId: Overload:MyApp.Auth.Tests.Repositories.UserRepositoryTests.EmailExistsAsync_IsCaseSensitive
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.EmailExistsAsync_IsCaseSensitive
  nameWithType: UserRepositoryTests.EmailExistsAsync_IsCaseSensitive
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.EmailExistsAsync_WithEmptyString_ReturnsFalse
  name: EmailExistsAsync_WithEmptyString_ReturnsFalse()
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests_EmailExistsAsync_WithEmptyString_ReturnsFalse
  commentId: M:MyApp.Auth.Tests.Repositories.UserRepositoryTests.EmailExistsAsync_WithEmptyString_ReturnsFalse
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.EmailExistsAsync_WithEmptyString_ReturnsFalse()
  nameWithType: UserRepositoryTests.EmailExistsAsync_WithEmptyString_ReturnsFalse()
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.EmailExistsAsync_WithEmptyString_ReturnsFalse*
  name: EmailExistsAsync_WithEmptyString_ReturnsFalse
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests_EmailExistsAsync_WithEmptyString_ReturnsFalse_
  commentId: Overload:MyApp.Auth.Tests.Repositories.UserRepositoryTests.EmailExistsAsync_WithEmptyString_ReturnsFalse
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.EmailExistsAsync_WithEmptyString_ReturnsFalse
  nameWithType: UserRepositoryTests.EmailExistsAsync_WithEmptyString_ReturnsFalse
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.EmailExistsAsync_WithExistingEmail_ReturnsTrue
  name: EmailExistsAsync_WithExistingEmail_ReturnsTrue()
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests_EmailExistsAsync_WithExistingEmail_ReturnsTrue
  commentId: M:MyApp.Auth.Tests.Repositories.UserRepositoryTests.EmailExistsAsync_WithExistingEmail_ReturnsTrue
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.EmailExistsAsync_WithExistingEmail_ReturnsTrue()
  nameWithType: UserRepositoryTests.EmailExistsAsync_WithExistingEmail_ReturnsTrue()
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.EmailExistsAsync_WithExistingEmail_ReturnsTrue*
  name: EmailExistsAsync_WithExistingEmail_ReturnsTrue
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests_EmailExistsAsync_WithExistingEmail_ReturnsTrue_
  commentId: Overload:MyApp.Auth.Tests.Repositories.UserRepositoryTests.EmailExistsAsync_WithExistingEmail_ReturnsTrue
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.EmailExistsAsync_WithExistingEmail_ReturnsTrue
  nameWithType: UserRepositoryTests.EmailExistsAsync_WithExistingEmail_ReturnsTrue
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.EmailExistsAsync_WithNonExistentEmail_ReturnsFalse
  name: EmailExistsAsync_WithNonExistentEmail_ReturnsFalse()
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests_EmailExistsAsync_WithNonExistentEmail_ReturnsFalse
  commentId: M:MyApp.Auth.Tests.Repositories.UserRepositoryTests.EmailExistsAsync_WithNonExistentEmail_ReturnsFalse
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.EmailExistsAsync_WithNonExistentEmail_ReturnsFalse()
  nameWithType: UserRepositoryTests.EmailExistsAsync_WithNonExistentEmail_ReturnsFalse()
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.EmailExistsAsync_WithNonExistentEmail_ReturnsFalse*
  name: EmailExistsAsync_WithNonExistentEmail_ReturnsFalse
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests_EmailExistsAsync_WithNonExistentEmail_ReturnsFalse_
  commentId: Overload:MyApp.Auth.Tests.Repositories.UserRepositoryTests.EmailExistsAsync_WithNonExistentEmail_ReturnsFalse
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.EmailExistsAsync_WithNonExistentEmail_ReturnsFalse
  nameWithType: UserRepositoryTests.EmailExistsAsync_WithNonExistentEmail_ReturnsFalse
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetAllAsync_ReturnsAllUsers
  name: GetAllAsync_ReturnsAllUsers()
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests_GetAllAsync_ReturnsAllUsers
  commentId: M:MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetAllAsync_ReturnsAllUsers
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetAllAsync_ReturnsAllUsers()
  nameWithType: UserRepositoryTests.GetAllAsync_ReturnsAllUsers()
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetAllAsync_ReturnsAllUsers*
  name: GetAllAsync_ReturnsAllUsers
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests_GetAllAsync_ReturnsAllUsers_
  commentId: Overload:MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetAllAsync_ReturnsAllUsers
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetAllAsync_ReturnsAllUsers
  nameWithType: UserRepositoryTests.GetAllAsync_ReturnsAllUsers
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByEmailAsync_IncludesRefreshTokens
  name: GetByEmailAsync_IncludesRefreshTokens()
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests_GetByEmailAsync_IncludesRefreshTokens
  commentId: M:MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByEmailAsync_IncludesRefreshTokens
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByEmailAsync_IncludesRefreshTokens()
  nameWithType: UserRepositoryTests.GetByEmailAsync_IncludesRefreshTokens()
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByEmailAsync_IncludesRefreshTokens*
  name: GetByEmailAsync_IncludesRefreshTokens
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests_GetByEmailAsync_IncludesRefreshTokens_
  commentId: Overload:MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByEmailAsync_IncludesRefreshTokens
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByEmailAsync_IncludesRefreshTokens
  nameWithType: UserRepositoryTests.GetByEmailAsync_IncludesRefreshTokens
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByEmailAsync_WithDifferentCasing_ReturnsNull
  name: GetByEmailAsync_WithDifferentCasing_ReturnsNull()
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests_GetByEmailAsync_WithDifferentCasing_ReturnsNull
  commentId: M:MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByEmailAsync_WithDifferentCasing_ReturnsNull
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByEmailAsync_WithDifferentCasing_ReturnsNull()
  nameWithType: UserRepositoryTests.GetByEmailAsync_WithDifferentCasing_ReturnsNull()
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByEmailAsync_WithDifferentCasing_ReturnsNull*
  name: GetByEmailAsync_WithDifferentCasing_ReturnsNull
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests_GetByEmailAsync_WithDifferentCasing_ReturnsNull_
  commentId: Overload:MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByEmailAsync_WithDifferentCasing_ReturnsNull
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByEmailAsync_WithDifferentCasing_ReturnsNull
  nameWithType: UserRepositoryTests.GetByEmailAsync_WithDifferentCasing_ReturnsNull
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByEmailAsync_WithNonExistentEmail_ReturnsNull
  name: GetByEmailAsync_WithNonExistentEmail_ReturnsNull()
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests_GetByEmailAsync_WithNonExistentEmail_ReturnsNull
  commentId: M:MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByEmailAsync_WithNonExistentEmail_ReturnsNull
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByEmailAsync_WithNonExistentEmail_ReturnsNull()
  nameWithType: UserRepositoryTests.GetByEmailAsync_WithNonExistentEmail_ReturnsNull()
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByEmailAsync_WithNonExistentEmail_ReturnsNull*
  name: GetByEmailAsync_WithNonExistentEmail_ReturnsNull
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests_GetByEmailAsync_WithNonExistentEmail_ReturnsNull_
  commentId: Overload:MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByEmailAsync_WithNonExistentEmail_ReturnsNull
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByEmailAsync_WithNonExistentEmail_ReturnsNull
  nameWithType: UserRepositoryTests.GetByEmailAsync_WithNonExistentEmail_ReturnsNull
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByEmailAsync_WithValidEmail_ReturnsUser
  name: GetByEmailAsync_WithValidEmail_ReturnsUser()
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests_GetByEmailAsync_WithValidEmail_ReturnsUser
  commentId: M:MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByEmailAsync_WithValidEmail_ReturnsUser
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByEmailAsync_WithValidEmail_ReturnsUser()
  nameWithType: UserRepositoryTests.GetByEmailAsync_WithValidEmail_ReturnsUser()
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByEmailAsync_WithValidEmail_ReturnsUser*
  name: GetByEmailAsync_WithValidEmail_ReturnsUser
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests_GetByEmailAsync_WithValidEmail_ReturnsUser_
  commentId: Overload:MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByEmailAsync_WithValidEmail_ReturnsUser
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByEmailAsync_WithValidEmail_ReturnsUser
  nameWithType: UserRepositoryTests.GetByEmailAsync_WithValidEmail_ReturnsUser
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByExternalIdAsync_WithDifferentProvider_ReturnsNull
  name: GetByExternalIdAsync_WithDifferentProvider_ReturnsNull()
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests_GetByExternalIdAsync_WithDifferentProvider_ReturnsNull
  commentId: M:MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByExternalIdAsync_WithDifferentProvider_ReturnsNull
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByExternalIdAsync_WithDifferentProvider_ReturnsNull()
  nameWithType: UserRepositoryTests.GetByExternalIdAsync_WithDifferentProvider_ReturnsNull()
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByExternalIdAsync_WithDifferentProvider_ReturnsNull*
  name: GetByExternalIdAsync_WithDifferentProvider_ReturnsNull
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests_GetByExternalIdAsync_WithDifferentProvider_ReturnsNull_
  commentId: Overload:MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByExternalIdAsync_WithDifferentProvider_ReturnsNull
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByExternalIdAsync_WithDifferentProvider_ReturnsNull
  nameWithType: UserRepositoryTests.GetByExternalIdAsync_WithDifferentProvider_ReturnsNull
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByExternalIdAsync_WithNonExistentId_ReturnsNull
  name: GetByExternalIdAsync_WithNonExistentId_ReturnsNull()
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests_GetByExternalIdAsync_WithNonExistentId_ReturnsNull
  commentId: M:MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByExternalIdAsync_WithNonExistentId_ReturnsNull
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByExternalIdAsync_WithNonExistentId_ReturnsNull()
  nameWithType: UserRepositoryTests.GetByExternalIdAsync_WithNonExistentId_ReturnsNull()
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByExternalIdAsync_WithNonExistentId_ReturnsNull*
  name: GetByExternalIdAsync_WithNonExistentId_ReturnsNull
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests_GetByExternalIdAsync_WithNonExistentId_ReturnsNull_
  commentId: Overload:MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByExternalIdAsync_WithNonExistentId_ReturnsNull
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByExternalIdAsync_WithNonExistentId_ReturnsNull
  nameWithType: UserRepositoryTests.GetByExternalIdAsync_WithNonExistentId_ReturnsNull
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByExternalIdAsync_WithValidExternalProvider_ReturnsUser
  name: GetByExternalIdAsync_WithValidExternalProvider_ReturnsUser()
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests_GetByExternalIdAsync_WithValidExternalProvider_ReturnsUser
  commentId: M:MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByExternalIdAsync_WithValidExternalProvider_ReturnsUser
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByExternalIdAsync_WithValidExternalProvider_ReturnsUser()
  nameWithType: UserRepositoryTests.GetByExternalIdAsync_WithValidExternalProvider_ReturnsUser()
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByExternalIdAsync_WithValidExternalProvider_ReturnsUser*
  name: GetByExternalIdAsync_WithValidExternalProvider_ReturnsUser
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests_GetByExternalIdAsync_WithValidExternalProvider_ReturnsUser_
  commentId: Overload:MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByExternalIdAsync_WithValidExternalProvider_ReturnsUser
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByExternalIdAsync_WithValidExternalProvider_ReturnsUser
  nameWithType: UserRepositoryTests.GetByExternalIdAsync_WithValidExternalProvider_ReturnsUser
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByRoleAsync_WithNoUsersInRole_ReturnsEmptyList
  name: GetByRoleAsync_WithNoUsersInRole_ReturnsEmptyList()
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests_GetByRoleAsync_WithNoUsersInRole_ReturnsEmptyList
  commentId: M:MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByRoleAsync_WithNoUsersInRole_ReturnsEmptyList
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByRoleAsync_WithNoUsersInRole_ReturnsEmptyList()
  nameWithType: UserRepositoryTests.GetByRoleAsync_WithNoUsersInRole_ReturnsEmptyList()
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByRoleAsync_WithNoUsersInRole_ReturnsEmptyList*
  name: GetByRoleAsync_WithNoUsersInRole_ReturnsEmptyList
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests_GetByRoleAsync_WithNoUsersInRole_ReturnsEmptyList_
  commentId: Overload:MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByRoleAsync_WithNoUsersInRole_ReturnsEmptyList
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByRoleAsync_WithNoUsersInRole_ReturnsEmptyList
  nameWithType: UserRepositoryTests.GetByRoleAsync_WithNoUsersInRole_ReturnsEmptyList
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByRoleAsync_WithNonExistentRole_ReturnsEmptyList
  name: GetByRoleAsync_WithNonExistentRole_ReturnsEmptyList()
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests_GetByRoleAsync_WithNonExistentRole_ReturnsEmptyList
  commentId: M:MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByRoleAsync_WithNonExistentRole_ReturnsEmptyList
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByRoleAsync_WithNonExistentRole_ReturnsEmptyList()
  nameWithType: UserRepositoryTests.GetByRoleAsync_WithNonExistentRole_ReturnsEmptyList()
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByRoleAsync_WithNonExistentRole_ReturnsEmptyList*
  name: GetByRoleAsync_WithNonExistentRole_ReturnsEmptyList
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests_GetByRoleAsync_WithNonExistentRole_ReturnsEmptyList_
  commentId: Overload:MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByRoleAsync_WithNonExistentRole_ReturnsEmptyList
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByRoleAsync_WithNonExistentRole_ReturnsEmptyList
  nameWithType: UserRepositoryTests.GetByRoleAsync_WithNonExistentRole_ReturnsEmptyList
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByRoleAsync_WithValidRoleName_ReturnsUsersInRole
  name: GetByRoleAsync_WithValidRoleName_ReturnsUsersInRole()
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests_GetByRoleAsync_WithValidRoleName_ReturnsUsersInRole
  commentId: M:MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByRoleAsync_WithValidRoleName_ReturnsUsersInRole
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByRoleAsync_WithValidRoleName_ReturnsUsersInRole()
  nameWithType: UserRepositoryTests.GetByRoleAsync_WithValidRoleName_ReturnsUsersInRole()
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByRoleAsync_WithValidRoleName_ReturnsUsersInRole*
  name: GetByRoleAsync_WithValidRoleName_ReturnsUsersInRole
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests_GetByRoleAsync_WithValidRoleName_ReturnsUsersInRole_
  commentId: Overload:MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByRoleAsync_WithValidRoleName_ReturnsUsersInRole
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.GetByRoleAsync_WithValidRoleName_ReturnsUsersInRole
  nameWithType: UserRepositoryTests.GetByRoleAsync_WithValidRoleName_ReturnsUsersInRole
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.UpdateAsync_WithExistingUser_UpdatesUserData
  name: UpdateAsync_WithExistingUser_UpdatesUserData()
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests_UpdateAsync_WithExistingUser_UpdatesUserData
  commentId: M:MyApp.Auth.Tests.Repositories.UserRepositoryTests.UpdateAsync_WithExistingUser_UpdatesUserData
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.UpdateAsync_WithExistingUser_UpdatesUserData()
  nameWithType: UserRepositoryTests.UpdateAsync_WithExistingUser_UpdatesUserData()
- uid: MyApp.Auth.Tests.Repositories.UserRepositoryTests.UpdateAsync_WithExistingUser_UpdatesUserData*
  name: UpdateAsync_WithExistingUser_UpdatesUserData
  href: api/MyApp.Auth.Tests.Repositories.UserRepositoryTests.html#MyApp_Auth_Tests_Repositories_UserRepositoryTests_UpdateAsync_WithExistingUser_UpdatesUserData_
  commentId: Overload:MyApp.Auth.Tests.Repositories.UserRepositoryTests.UpdateAsync_WithExistingUser_UpdatesUserData
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Repositories.UserRepositoryTests.UpdateAsync_WithExistingUser_UpdatesUserData
  nameWithType: UserRepositoryTests.UpdateAsync_WithExistingUser_UpdatesUserData
- uid: MyApp.Auth.Tests.Services
  name: MyApp.Auth.Tests.Services
  href: api/MyApp.Auth.Tests.Services.html
  commentId: N:MyApp.Auth.Tests.Services
  fullName: MyApp.Auth.Tests.Services
  nameWithType: MyApp.Auth.Tests.Services
- uid: MyApp.Auth.Tests.Services.JwtTokenProviderTests
  name: JwtTokenProviderTests
  href: api/MyApp.Auth.Tests.Services.JwtTokenProviderTests.html
  commentId: T:MyApp.Auth.Tests.Services.JwtTokenProviderTests
  fullName: MyApp.Auth.Tests.Services.JwtTokenProviderTests
  nameWithType: JwtTokenProviderTests
- uid: MyApp.Auth.Tests.Services.JwtTokenProviderTests.#ctor
  name: JwtTokenProviderTests()
  href: api/MyApp.Auth.Tests.Services.JwtTokenProviderTests.html#MyApp_Auth_Tests_Services_JwtTokenProviderTests__ctor
  commentId: M:MyApp.Auth.Tests.Services.JwtTokenProviderTests.#ctor
  name.vb: New()
  fullName: MyApp.Auth.Tests.Services.JwtTokenProviderTests.JwtTokenProviderTests()
  fullName.vb: MyApp.Auth.Tests.Services.JwtTokenProviderTests.New()
  nameWithType: JwtTokenProviderTests.JwtTokenProviderTests()
  nameWithType.vb: JwtTokenProviderTests.New()
- uid: MyApp.Auth.Tests.Services.JwtTokenProviderTests.#ctor*
  name: JwtTokenProviderTests
  href: api/MyApp.Auth.Tests.Services.JwtTokenProviderTests.html#MyApp_Auth_Tests_Services_JwtTokenProviderTests__ctor_
  commentId: Overload:MyApp.Auth.Tests.Services.JwtTokenProviderTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Auth.Tests.Services.JwtTokenProviderTests.JwtTokenProviderTests
  fullName.vb: MyApp.Auth.Tests.Services.JwtTokenProviderTests.New
  nameWithType: JwtTokenProviderTests.JwtTokenProviderTests
  nameWithType.vb: JwtTokenProviderTests.New
- uid: MyApp.Auth.Tests.Services.JwtTokenProviderTests.Constructor_WithMissingAudience_ThrowsArgumentNullException
  name: Constructor_WithMissingAudience_ThrowsArgumentNullException()
  href: api/MyApp.Auth.Tests.Services.JwtTokenProviderTests.html#MyApp_Auth_Tests_Services_JwtTokenProviderTests_Constructor_WithMissingAudience_ThrowsArgumentNullException
  commentId: M:MyApp.Auth.Tests.Services.JwtTokenProviderTests.Constructor_WithMissingAudience_ThrowsArgumentNullException
  fullName: MyApp.Auth.Tests.Services.JwtTokenProviderTests.Constructor_WithMissingAudience_ThrowsArgumentNullException()
  nameWithType: JwtTokenProviderTests.Constructor_WithMissingAudience_ThrowsArgumentNullException()
- uid: MyApp.Auth.Tests.Services.JwtTokenProviderTests.Constructor_WithMissingAudience_ThrowsArgumentNullException*
  name: Constructor_WithMissingAudience_ThrowsArgumentNullException
  href: api/MyApp.Auth.Tests.Services.JwtTokenProviderTests.html#MyApp_Auth_Tests_Services_JwtTokenProviderTests_Constructor_WithMissingAudience_ThrowsArgumentNullException_
  commentId: Overload:MyApp.Auth.Tests.Services.JwtTokenProviderTests.Constructor_WithMissingAudience_ThrowsArgumentNullException
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Services.JwtTokenProviderTests.Constructor_WithMissingAudience_ThrowsArgumentNullException
  nameWithType: JwtTokenProviderTests.Constructor_WithMissingAudience_ThrowsArgumentNullException
- uid: MyApp.Auth.Tests.Services.JwtTokenProviderTests.Constructor_WithMissingIssuer_ThrowsArgumentNullException
  name: Constructor_WithMissingIssuer_ThrowsArgumentNullException()
  href: api/MyApp.Auth.Tests.Services.JwtTokenProviderTests.html#MyApp_Auth_Tests_Services_JwtTokenProviderTests_Constructor_WithMissingIssuer_ThrowsArgumentNullException
  commentId: M:MyApp.Auth.Tests.Services.JwtTokenProviderTests.Constructor_WithMissingIssuer_ThrowsArgumentNullException
  fullName: MyApp.Auth.Tests.Services.JwtTokenProviderTests.Constructor_WithMissingIssuer_ThrowsArgumentNullException()
  nameWithType: JwtTokenProviderTests.Constructor_WithMissingIssuer_ThrowsArgumentNullException()
- uid: MyApp.Auth.Tests.Services.JwtTokenProviderTests.Constructor_WithMissingIssuer_ThrowsArgumentNullException*
  name: Constructor_WithMissingIssuer_ThrowsArgumentNullException
  href: api/MyApp.Auth.Tests.Services.JwtTokenProviderTests.html#MyApp_Auth_Tests_Services_JwtTokenProviderTests_Constructor_WithMissingIssuer_ThrowsArgumentNullException_
  commentId: Overload:MyApp.Auth.Tests.Services.JwtTokenProviderTests.Constructor_WithMissingIssuer_ThrowsArgumentNullException
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Services.JwtTokenProviderTests.Constructor_WithMissingIssuer_ThrowsArgumentNullException
  nameWithType: JwtTokenProviderTests.Constructor_WithMissingIssuer_ThrowsArgumentNullException
- uid: MyApp.Auth.Tests.Services.JwtTokenProviderTests.Constructor_WithMissingSecretKey_ThrowsArgumentNullException
  name: Constructor_WithMissingSecretKey_ThrowsArgumentNullException()
  href: api/MyApp.Auth.Tests.Services.JwtTokenProviderTests.html#MyApp_Auth_Tests_Services_JwtTokenProviderTests_Constructor_WithMissingSecretKey_ThrowsArgumentNullException
  commentId: M:MyApp.Auth.Tests.Services.JwtTokenProviderTests.Constructor_WithMissingSecretKey_ThrowsArgumentNullException
  fullName: MyApp.Auth.Tests.Services.JwtTokenProviderTests.Constructor_WithMissingSecretKey_ThrowsArgumentNullException()
  nameWithType: JwtTokenProviderTests.Constructor_WithMissingSecretKey_ThrowsArgumentNullException()
- uid: MyApp.Auth.Tests.Services.JwtTokenProviderTests.Constructor_WithMissingSecretKey_ThrowsArgumentNullException*
  name: Constructor_WithMissingSecretKey_ThrowsArgumentNullException
  href: api/MyApp.Auth.Tests.Services.JwtTokenProviderTests.html#MyApp_Auth_Tests_Services_JwtTokenProviderTests_Constructor_WithMissingSecretKey_ThrowsArgumentNullException_
  commentId: Overload:MyApp.Auth.Tests.Services.JwtTokenProviderTests.Constructor_WithMissingSecretKey_ThrowsArgumentNullException
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Services.JwtTokenProviderTests.Constructor_WithMissingSecretKey_ThrowsArgumentNullException
  nameWithType: JwtTokenProviderTests.Constructor_WithMissingSecretKey_ThrowsArgumentNullException
- uid: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateAccessTokenAsync_GeneratedTokenIsValidJwt_CanBeDecoded
  name: GenerateAccessTokenAsync_GeneratedTokenIsValidJwt_CanBeDecoded()
  href: api/MyApp.Auth.Tests.Services.JwtTokenProviderTests.html#MyApp_Auth_Tests_Services_JwtTokenProviderTests_GenerateAccessTokenAsync_GeneratedTokenIsValidJwt_CanBeDecoded
  commentId: M:MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateAccessTokenAsync_GeneratedTokenIsValidJwt_CanBeDecoded
  fullName: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateAccessTokenAsync_GeneratedTokenIsValidJwt_CanBeDecoded()
  nameWithType: JwtTokenProviderTests.GenerateAccessTokenAsync_GeneratedTokenIsValidJwt_CanBeDecoded()
- uid: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateAccessTokenAsync_GeneratedTokenIsValidJwt_CanBeDecoded*
  name: GenerateAccessTokenAsync_GeneratedTokenIsValidJwt_CanBeDecoded
  href: api/MyApp.Auth.Tests.Services.JwtTokenProviderTests.html#MyApp_Auth_Tests_Services_JwtTokenProviderTests_GenerateAccessTokenAsync_GeneratedTokenIsValidJwt_CanBeDecoded_
  commentId: Overload:MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateAccessTokenAsync_GeneratedTokenIsValidJwt_CanBeDecoded
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateAccessTokenAsync_GeneratedTokenIsValidJwt_CanBeDecoded
  nameWithType: JwtTokenProviderTests.GenerateAccessTokenAsync_GeneratedTokenIsValidJwt_CanBeDecoded
- uid: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateAccessTokenAsync_TokenContainsCorrectClaims
  name: GenerateAccessTokenAsync_TokenContainsCorrectClaims()
  href: api/MyApp.Auth.Tests.Services.JwtTokenProviderTests.html#MyApp_Auth_Tests_Services_JwtTokenProviderTests_GenerateAccessTokenAsync_TokenContainsCorrectClaims
  commentId: M:MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateAccessTokenAsync_TokenContainsCorrectClaims
  fullName: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateAccessTokenAsync_TokenContainsCorrectClaims()
  nameWithType: JwtTokenProviderTests.GenerateAccessTokenAsync_TokenContainsCorrectClaims()
- uid: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateAccessTokenAsync_TokenContainsCorrectClaims*
  name: GenerateAccessTokenAsync_TokenContainsCorrectClaims
  href: api/MyApp.Auth.Tests.Services.JwtTokenProviderTests.html#MyApp_Auth_Tests_Services_JwtTokenProviderTests_GenerateAccessTokenAsync_TokenContainsCorrectClaims_
  commentId: Overload:MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateAccessTokenAsync_TokenContainsCorrectClaims
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateAccessTokenAsync_TokenContainsCorrectClaims
  nameWithType: JwtTokenProviderTests.GenerateAccessTokenAsync_TokenContainsCorrectClaims
- uid: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateAccessTokenAsync_TokenExpirationIsCorrect
  name: GenerateAccessTokenAsync_TokenExpirationIsCorrect()
  href: api/MyApp.Auth.Tests.Services.JwtTokenProviderTests.html#MyApp_Auth_Tests_Services_JwtTokenProviderTests_GenerateAccessTokenAsync_TokenExpirationIsCorrect
  commentId: M:MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateAccessTokenAsync_TokenExpirationIsCorrect
  fullName: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateAccessTokenAsync_TokenExpirationIsCorrect()
  nameWithType: JwtTokenProviderTests.GenerateAccessTokenAsync_TokenExpirationIsCorrect()
- uid: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateAccessTokenAsync_TokenExpirationIsCorrect*
  name: GenerateAccessTokenAsync_TokenExpirationIsCorrect
  href: api/MyApp.Auth.Tests.Services.JwtTokenProviderTests.html#MyApp_Auth_Tests_Services_JwtTokenProviderTests_GenerateAccessTokenAsync_TokenExpirationIsCorrect_
  commentId: Overload:MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateAccessTokenAsync_TokenExpirationIsCorrect
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateAccessTokenAsync_TokenExpirationIsCorrect
  nameWithType: JwtTokenProviderTests.GenerateAccessTokenAsync_TokenExpirationIsCorrect
- uid: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateAccessTokenAsync_WithNullEmail_StillGeneratesValidToken
  name: GenerateAccessTokenAsync_WithNullEmail_StillGeneratesValidToken()
  href: api/MyApp.Auth.Tests.Services.JwtTokenProviderTests.html#MyApp_Auth_Tests_Services_JwtTokenProviderTests_GenerateAccessTokenAsync_WithNullEmail_StillGeneratesValidToken
  commentId: M:MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateAccessTokenAsync_WithNullEmail_StillGeneratesValidToken
  fullName: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateAccessTokenAsync_WithNullEmail_StillGeneratesValidToken()
  nameWithType: JwtTokenProviderTests.GenerateAccessTokenAsync_WithNullEmail_StillGeneratesValidToken()
- uid: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateAccessTokenAsync_WithNullEmail_StillGeneratesValidToken*
  name: GenerateAccessTokenAsync_WithNullEmail_StillGeneratesValidToken
  href: api/MyApp.Auth.Tests.Services.JwtTokenProviderTests.html#MyApp_Auth_Tests_Services_JwtTokenProviderTests_GenerateAccessTokenAsync_WithNullEmail_StillGeneratesValidToken_
  commentId: Overload:MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateAccessTokenAsync_WithNullEmail_StillGeneratesValidToken
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateAccessTokenAsync_WithNullEmail_StillGeneratesValidToken
  nameWithType: JwtTokenProviderTests.GenerateAccessTokenAsync_WithNullEmail_StillGeneratesValidToken
- uid: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateAccessTokenAsync_WithValidUser_ReturnsValidToken
  name: GenerateAccessTokenAsync_WithValidUser_ReturnsValidToken()
  href: api/MyApp.Auth.Tests.Services.JwtTokenProviderTests.html#MyApp_Auth_Tests_Services_JwtTokenProviderTests_GenerateAccessTokenAsync_WithValidUser_ReturnsValidToken
  commentId: M:MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateAccessTokenAsync_WithValidUser_ReturnsValidToken
  fullName: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateAccessTokenAsync_WithValidUser_ReturnsValidToken()
  nameWithType: JwtTokenProviderTests.GenerateAccessTokenAsync_WithValidUser_ReturnsValidToken()
- uid: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateAccessTokenAsync_WithValidUser_ReturnsValidToken*
  name: GenerateAccessTokenAsync_WithValidUser_ReturnsValidToken
  href: api/MyApp.Auth.Tests.Services.JwtTokenProviderTests.html#MyApp_Auth_Tests_Services_JwtTokenProviderTests_GenerateAccessTokenAsync_WithValidUser_ReturnsValidToken_
  commentId: Overload:MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateAccessTokenAsync_WithValidUser_ReturnsValidToken
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateAccessTokenAsync_WithValidUser_ReturnsValidToken
  nameWithType: JwtTokenProviderTests.GenerateAccessTokenAsync_WithValidUser_ReturnsValidToken
- uid: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateRefreshToken_GeneratesDifferentTokensEachTime
  name: GenerateRefreshToken_GeneratesDifferentTokensEachTime()
  href: api/MyApp.Auth.Tests.Services.JwtTokenProviderTests.html#MyApp_Auth_Tests_Services_JwtTokenProviderTests_GenerateRefreshToken_GeneratesDifferentTokensEachTime
  commentId: M:MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateRefreshToken_GeneratesDifferentTokensEachTime
  fullName: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateRefreshToken_GeneratesDifferentTokensEachTime()
  nameWithType: JwtTokenProviderTests.GenerateRefreshToken_GeneratesDifferentTokensEachTime()
- uid: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateRefreshToken_GeneratesDifferentTokensEachTime*
  name: GenerateRefreshToken_GeneratesDifferentTokensEachTime
  href: api/MyApp.Auth.Tests.Services.JwtTokenProviderTests.html#MyApp_Auth_Tests_Services_JwtTokenProviderTests_GenerateRefreshToken_GeneratesDifferentTokensEachTime_
  commentId: Overload:MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateRefreshToken_GeneratesDifferentTokensEachTime
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateRefreshToken_GeneratesDifferentTokensEachTime
  nameWithType: JwtTokenProviderTests.GenerateRefreshToken_GeneratesDifferentTokensEachTime
- uid: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateRefreshToken_ReturnsBase64EncodedString
  name: GenerateRefreshToken_ReturnsBase64EncodedString()
  href: api/MyApp.Auth.Tests.Services.JwtTokenProviderTests.html#MyApp_Auth_Tests_Services_JwtTokenProviderTests_GenerateRefreshToken_ReturnsBase64EncodedString
  commentId: M:MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateRefreshToken_ReturnsBase64EncodedString
  fullName: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateRefreshToken_ReturnsBase64EncodedString()
  nameWithType: JwtTokenProviderTests.GenerateRefreshToken_ReturnsBase64EncodedString()
- uid: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateRefreshToken_ReturnsBase64EncodedString*
  name: GenerateRefreshToken_ReturnsBase64EncodedString
  href: api/MyApp.Auth.Tests.Services.JwtTokenProviderTests.html#MyApp_Auth_Tests_Services_JwtTokenProviderTests_GenerateRefreshToken_ReturnsBase64EncodedString_
  commentId: Overload:MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateRefreshToken_ReturnsBase64EncodedString
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateRefreshToken_ReturnsBase64EncodedString
  nameWithType: JwtTokenProviderTests.GenerateRefreshToken_ReturnsBase64EncodedString
- uid: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateRefreshToken_ReturnsNonEmptyString
  name: GenerateRefreshToken_ReturnsNonEmptyString()
  href: api/MyApp.Auth.Tests.Services.JwtTokenProviderTests.html#MyApp_Auth_Tests_Services_JwtTokenProviderTests_GenerateRefreshToken_ReturnsNonEmptyString
  commentId: M:MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateRefreshToken_ReturnsNonEmptyString
  fullName: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateRefreshToken_ReturnsNonEmptyString()
  nameWithType: JwtTokenProviderTests.GenerateRefreshToken_ReturnsNonEmptyString()
- uid: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateRefreshToken_ReturnsNonEmptyString*
  name: GenerateRefreshToken_ReturnsNonEmptyString
  href: api/MyApp.Auth.Tests.Services.JwtTokenProviderTests.html#MyApp_Auth_Tests_Services_JwtTokenProviderTests_GenerateRefreshToken_ReturnsNonEmptyString_
  commentId: Overload:MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateRefreshToken_ReturnsNonEmptyString
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateRefreshToken_ReturnsNonEmptyString
  nameWithType: JwtTokenProviderTests.GenerateRefreshToken_ReturnsNonEmptyString
- uid: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateRefreshToken_TokenIsOfExpectedLength
  name: GenerateRefreshToken_TokenIsOfExpectedLength()
  href: api/MyApp.Auth.Tests.Services.JwtTokenProviderTests.html#MyApp_Auth_Tests_Services_JwtTokenProviderTests_GenerateRefreshToken_TokenIsOfExpectedLength
  commentId: M:MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateRefreshToken_TokenIsOfExpectedLength
  fullName: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateRefreshToken_TokenIsOfExpectedLength()
  nameWithType: JwtTokenProviderTests.GenerateRefreshToken_TokenIsOfExpectedLength()
- uid: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateRefreshToken_TokenIsOfExpectedLength*
  name: GenerateRefreshToken_TokenIsOfExpectedLength
  href: api/MyApp.Auth.Tests.Services.JwtTokenProviderTests.html#MyApp_Auth_Tests_Services_JwtTokenProviderTests_GenerateRefreshToken_TokenIsOfExpectedLength_
  commentId: Overload:MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateRefreshToken_TokenIsOfExpectedLength
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GenerateRefreshToken_TokenIsOfExpectedLength
  nameWithType: JwtTokenProviderTests.GenerateRefreshToken_TokenIsOfExpectedLength
- uid: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithInvalidToken_ReturnsNull
  name: GetPrincipalFromExpiredToken_WithInvalidToken_ReturnsNull()
  href: api/MyApp.Auth.Tests.Services.JwtTokenProviderTests.html#MyApp_Auth_Tests_Services_JwtTokenProviderTests_GetPrincipalFromExpiredToken_WithInvalidToken_ReturnsNull
  commentId: M:MyApp.Auth.Tests.Services.JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithInvalidToken_ReturnsNull
  fullName: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithInvalidToken_ReturnsNull()
  nameWithType: JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithInvalidToken_ReturnsNull()
- uid: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithInvalidToken_ReturnsNull*
  name: GetPrincipalFromExpiredToken_WithInvalidToken_ReturnsNull
  href: api/MyApp.Auth.Tests.Services.JwtTokenProviderTests.html#MyApp_Auth_Tests_Services_JwtTokenProviderTests_GetPrincipalFromExpiredToken_WithInvalidToken_ReturnsNull_
  commentId: Overload:MyApp.Auth.Tests.Services.JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithInvalidToken_ReturnsNull
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithInvalidToken_ReturnsNull
  nameWithType: JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithInvalidToken_ReturnsNull
- uid: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithMalformedToken_ReturnsNull
  name: GetPrincipalFromExpiredToken_WithMalformedToken_ReturnsNull()
  href: api/MyApp.Auth.Tests.Services.JwtTokenProviderTests.html#MyApp_Auth_Tests_Services_JwtTokenProviderTests_GetPrincipalFromExpiredToken_WithMalformedToken_ReturnsNull
  commentId: M:MyApp.Auth.Tests.Services.JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithMalformedToken_ReturnsNull
  fullName: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithMalformedToken_ReturnsNull()
  nameWithType: JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithMalformedToken_ReturnsNull()
- uid: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithMalformedToken_ReturnsNull*
  name: GetPrincipalFromExpiredToken_WithMalformedToken_ReturnsNull
  href: api/MyApp.Auth.Tests.Services.JwtTokenProviderTests.html#MyApp_Auth_Tests_Services_JwtTokenProviderTests_GetPrincipalFromExpiredToken_WithMalformedToken_ReturnsNull_
  commentId: Overload:MyApp.Auth.Tests.Services.JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithMalformedToken_ReturnsNull
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithMalformedToken_ReturnsNull
  nameWithType: JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithMalformedToken_ReturnsNull
- uid: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithValidExpiredToken_ReturnsClaimsPrincipal
  name: GetPrincipalFromExpiredToken_WithValidExpiredToken_ReturnsClaimsPrincipal()
  href: api/MyApp.Auth.Tests.Services.JwtTokenProviderTests.html#MyApp_Auth_Tests_Services_JwtTokenProviderTests_GetPrincipalFromExpiredToken_WithValidExpiredToken_ReturnsClaimsPrincipal
  commentId: M:MyApp.Auth.Tests.Services.JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithValidExpiredToken_ReturnsClaimsPrincipal
  fullName: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithValidExpiredToken_ReturnsClaimsPrincipal()
  nameWithType: JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithValidExpiredToken_ReturnsClaimsPrincipal()
- uid: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithValidExpiredToken_ReturnsClaimsPrincipal*
  name: GetPrincipalFromExpiredToken_WithValidExpiredToken_ReturnsClaimsPrincipal
  href: api/MyApp.Auth.Tests.Services.JwtTokenProviderTests.html#MyApp_Auth_Tests_Services_JwtTokenProviderTests_GetPrincipalFromExpiredToken_WithValidExpiredToken_ReturnsClaimsPrincipal_
  commentId: Overload:MyApp.Auth.Tests.Services.JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithValidExpiredToken_ReturnsClaimsPrincipal
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithValidExpiredToken_ReturnsClaimsPrincipal
  nameWithType: JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithValidExpiredToken_ReturnsClaimsPrincipal
- uid: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithValidToken_ContainsUserClaims
  name: GetPrincipalFromExpiredToken_WithValidToken_ContainsUserClaims()
  href: api/MyApp.Auth.Tests.Services.JwtTokenProviderTests.html#MyApp_Auth_Tests_Services_JwtTokenProviderTests_GetPrincipalFromExpiredToken_WithValidToken_ContainsUserClaims
  commentId: M:MyApp.Auth.Tests.Services.JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithValidToken_ContainsUserClaims
  fullName: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithValidToken_ContainsUserClaims()
  nameWithType: JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithValidToken_ContainsUserClaims()
- uid: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithValidToken_ContainsUserClaims*
  name: GetPrincipalFromExpiredToken_WithValidToken_ContainsUserClaims
  href: api/MyApp.Auth.Tests.Services.JwtTokenProviderTests.html#MyApp_Auth_Tests_Services_JwtTokenProviderTests_GetPrincipalFromExpiredToken_WithValidToken_ContainsUserClaims_
  commentId: Overload:MyApp.Auth.Tests.Services.JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithValidToken_ContainsUserClaims
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithValidToken_ContainsUserClaims
  nameWithType: JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithValidToken_ContainsUserClaims
- uid: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithWrongSigningAlgorithm_ReturnsNull
  name: GetPrincipalFromExpiredToken_WithWrongSigningAlgorithm_ReturnsNull()
  href: api/MyApp.Auth.Tests.Services.JwtTokenProviderTests.html#MyApp_Auth_Tests_Services_JwtTokenProviderTests_GetPrincipalFromExpiredToken_WithWrongSigningAlgorithm_ReturnsNull
  commentId: M:MyApp.Auth.Tests.Services.JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithWrongSigningAlgorithm_ReturnsNull
  fullName: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithWrongSigningAlgorithm_ReturnsNull()
  nameWithType: JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithWrongSigningAlgorithm_ReturnsNull()
- uid: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithWrongSigningAlgorithm_ReturnsNull*
  name: GetPrincipalFromExpiredToken_WithWrongSigningAlgorithm_ReturnsNull
  href: api/MyApp.Auth.Tests.Services.JwtTokenProviderTests.html#MyApp_Auth_Tests_Services_JwtTokenProviderTests_GetPrincipalFromExpiredToken_WithWrongSigningAlgorithm_ReturnsNull_
  commentId: Overload:MyApp.Auth.Tests.Services.JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithWrongSigningAlgorithm_ReturnsNull
  isSpec: "True"
  fullName: MyApp.Auth.Tests.Services.JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithWrongSigningAlgorithm_ReturnsNull
  nameWithType: JwtTokenProviderTests.GetPrincipalFromExpiredToken_WithWrongSigningAlgorithm_ReturnsNull
- uid: MyApp.Billing.API
  name: MyApp.Billing.API
  href: api/MyApp.Billing.API.html
  commentId: N:MyApp.Billing.API
  fullName: MyApp.Billing.API
  nameWithType: MyApp.Billing.API
- uid: MyApp.Billing.API.ValuesController
  name: ValuesController
  href: api/MyApp.Billing.API.ValuesController.html
  commentId: T:MyApp.Billing.API.ValuesController
  fullName: MyApp.Billing.API.ValuesController
  nameWithType: ValuesController
- uid: MyApp.Billing.API.ValuesController.Delete(System.Int32)
  name: Delete(int)
  href: api/MyApp.Billing.API.ValuesController.html#MyApp_Billing_API_ValuesController_Delete_System_Int32_
  commentId: M:MyApp.Billing.API.ValuesController.Delete(System.Int32)
  name.vb: Delete(Integer)
  fullName: MyApp.Billing.API.ValuesController.Delete(int)
  fullName.vb: MyApp.Billing.API.ValuesController.Delete(Integer)
  nameWithType: ValuesController.Delete(int)
  nameWithType.vb: ValuesController.Delete(Integer)
- uid: MyApp.Billing.API.ValuesController.Delete*
  name: Delete
  href: api/MyApp.Billing.API.ValuesController.html#MyApp_Billing_API_ValuesController_Delete_
  commentId: Overload:MyApp.Billing.API.ValuesController.Delete
  isSpec: "True"
  fullName: MyApp.Billing.API.ValuesController.Delete
  nameWithType: ValuesController.Delete
- uid: MyApp.Billing.API.ValuesController.Get
  name: Get()
  href: api/MyApp.Billing.API.ValuesController.html#MyApp_Billing_API_ValuesController_Get
  commentId: M:MyApp.Billing.API.ValuesController.Get
  fullName: MyApp.Billing.API.ValuesController.Get()
  nameWithType: ValuesController.Get()
- uid: MyApp.Billing.API.ValuesController.Get(System.Int32)
  name: Get(int)
  href: api/MyApp.Billing.API.ValuesController.html#MyApp_Billing_API_ValuesController_Get_System_Int32_
  commentId: M:MyApp.Billing.API.ValuesController.Get(System.Int32)
  name.vb: Get(Integer)
  fullName: MyApp.Billing.API.ValuesController.Get(int)
  fullName.vb: MyApp.Billing.API.ValuesController.Get(Integer)
  nameWithType: ValuesController.Get(int)
  nameWithType.vb: ValuesController.Get(Integer)
- uid: MyApp.Billing.API.ValuesController.Get*
  name: Get
  href: api/MyApp.Billing.API.ValuesController.html#MyApp_Billing_API_ValuesController_Get_
  commentId: Overload:MyApp.Billing.API.ValuesController.Get
  isSpec: "True"
  fullName: MyApp.Billing.API.ValuesController.Get
  nameWithType: ValuesController.Get
- uid: MyApp.Billing.API.ValuesController.Post(System.String)
  name: Post(string)
  href: api/MyApp.Billing.API.ValuesController.html#MyApp_Billing_API_ValuesController_Post_System_String_
  commentId: M:MyApp.Billing.API.ValuesController.Post(System.String)
  name.vb: Post(String)
  fullName: MyApp.Billing.API.ValuesController.Post(string)
  fullName.vb: MyApp.Billing.API.ValuesController.Post(String)
  nameWithType: ValuesController.Post(string)
  nameWithType.vb: ValuesController.Post(String)
- uid: MyApp.Billing.API.ValuesController.Post*
  name: Post
  href: api/MyApp.Billing.API.ValuesController.html#MyApp_Billing_API_ValuesController_Post_
  commentId: Overload:MyApp.Billing.API.ValuesController.Post
  isSpec: "True"
  fullName: MyApp.Billing.API.ValuesController.Post
  nameWithType: ValuesController.Post
- uid: MyApp.Billing.API.ValuesController.Put(System.Int32,System.String)
  name: Put(int, string)
  href: api/MyApp.Billing.API.ValuesController.html#MyApp_Billing_API_ValuesController_Put_System_Int32_System_String_
  commentId: M:MyApp.Billing.API.ValuesController.Put(System.Int32,System.String)
  name.vb: Put(Integer, String)
  fullName: MyApp.Billing.API.ValuesController.Put(int, string)
  fullName.vb: MyApp.Billing.API.ValuesController.Put(Integer, String)
  nameWithType: ValuesController.Put(int, string)
  nameWithType.vb: ValuesController.Put(Integer, String)
- uid: MyApp.Billing.API.ValuesController.Put*
  name: Put
  href: api/MyApp.Billing.API.ValuesController.html#MyApp_Billing_API_ValuesController_Put_
  commentId: Overload:MyApp.Billing.API.ValuesController.Put
  isSpec: "True"
  fullName: MyApp.Billing.API.ValuesController.Put
  nameWithType: ValuesController.Put
- uid: MyApp.Inventory.API.Controllers
  name: MyApp.Inventory.API.Controllers
  href: api/MyApp.Inventory.API.Controllers.html
  commentId: N:MyApp.Inventory.API.Controllers
  fullName: MyApp.Inventory.API.Controllers
  nameWithType: MyApp.Inventory.API.Controllers
- uid: MyApp.Inventory.API.Controllers.InventoryTransactionsController
  name: InventoryTransactionsController
  href: api/MyApp.Inventory.API.Controllers.InventoryTransactionsController.html
  commentId: T:MyApp.Inventory.API.Controllers.InventoryTransactionsController
  fullName: MyApp.Inventory.API.Controllers.InventoryTransactionsController
  nameWithType: InventoryTransactionsController
- uid: MyApp.Inventory.API.Controllers.InventoryTransactionsController.#ctor(MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService,Microsoft.Extensions.Logging.ILogger{MyApp.Inventory.API.Controllers.InventoryTransactionsController})
  name: InventoryTransactionsController(IInventoryTransactionService, ILogger<InventoryTransactionsController>)
  href: api/MyApp.Inventory.API.Controllers.InventoryTransactionsController.html#MyApp_Inventory_API_Controllers_InventoryTransactionsController__ctor_MyApp_Inventory_Application_Contracts_Services_IInventoryTransactionService_Microsoft_Extensions_Logging_ILogger_MyApp_Inventory_API_Controllers_InventoryTransactionsController__
  commentId: M:MyApp.Inventory.API.Controllers.InventoryTransactionsController.#ctor(MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService,Microsoft.Extensions.Logging.ILogger{MyApp.Inventory.API.Controllers.InventoryTransactionsController})
  name.vb: New(IInventoryTransactionService, ILogger(Of InventoryTransactionsController))
  fullName: MyApp.Inventory.API.Controllers.InventoryTransactionsController.InventoryTransactionsController(MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService, Microsoft.Extensions.Logging.ILogger<MyApp.Inventory.API.Controllers.InventoryTransactionsController>)
  fullName.vb: MyApp.Inventory.API.Controllers.InventoryTransactionsController.New(MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService, Microsoft.Extensions.Logging.ILogger(Of MyApp.Inventory.API.Controllers.InventoryTransactionsController))
  nameWithType: InventoryTransactionsController.InventoryTransactionsController(IInventoryTransactionService, ILogger<InventoryTransactionsController>)
  nameWithType.vb: InventoryTransactionsController.New(IInventoryTransactionService, ILogger(Of InventoryTransactionsController))
- uid: MyApp.Inventory.API.Controllers.InventoryTransactionsController.#ctor*
  name: InventoryTransactionsController
  href: api/MyApp.Inventory.API.Controllers.InventoryTransactionsController.html#MyApp_Inventory_API_Controllers_InventoryTransactionsController__ctor_
  commentId: Overload:MyApp.Inventory.API.Controllers.InventoryTransactionsController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Inventory.API.Controllers.InventoryTransactionsController.InventoryTransactionsController
  fullName.vb: MyApp.Inventory.API.Controllers.InventoryTransactionsController.New
  nameWithType: InventoryTransactionsController.InventoryTransactionsController
  nameWithType.vb: InventoryTransactionsController.New
- uid: MyApp.Inventory.API.Controllers.InventoryTransactionsController.CreateTransaction(MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto)
  name: CreateTransaction(CreateUpdateInventoryTransactionDto)
  href: api/MyApp.Inventory.API.Controllers.InventoryTransactionsController.html#MyApp_Inventory_API_Controllers_InventoryTransactionsController_CreateTransaction_MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateInventoryTransactionDto_
  commentId: M:MyApp.Inventory.API.Controllers.InventoryTransactionsController.CreateTransaction(MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto)
  fullName: MyApp.Inventory.API.Controllers.InventoryTransactionsController.CreateTransaction(MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto)
  nameWithType: InventoryTransactionsController.CreateTransaction(CreateUpdateInventoryTransactionDto)
- uid: MyApp.Inventory.API.Controllers.InventoryTransactionsController.CreateTransaction*
  name: CreateTransaction
  href: api/MyApp.Inventory.API.Controllers.InventoryTransactionsController.html#MyApp_Inventory_API_Controllers_InventoryTransactionsController_CreateTransaction_
  commentId: Overload:MyApp.Inventory.API.Controllers.InventoryTransactionsController.CreateTransaction
  isSpec: "True"
  fullName: MyApp.Inventory.API.Controllers.InventoryTransactionsController.CreateTransaction
  nameWithType: InventoryTransactionsController.CreateTransaction
- uid: MyApp.Inventory.API.Controllers.InventoryTransactionsController.DeleteTransaction(System.Guid)
  name: DeleteTransaction(Guid)
  href: api/MyApp.Inventory.API.Controllers.InventoryTransactionsController.html#MyApp_Inventory_API_Controllers_InventoryTransactionsController_DeleteTransaction_System_Guid_
  commentId: M:MyApp.Inventory.API.Controllers.InventoryTransactionsController.DeleteTransaction(System.Guid)
  fullName: MyApp.Inventory.API.Controllers.InventoryTransactionsController.DeleteTransaction(System.Guid)
  nameWithType: InventoryTransactionsController.DeleteTransaction(Guid)
- uid: MyApp.Inventory.API.Controllers.InventoryTransactionsController.DeleteTransaction*
  name: DeleteTransaction
  href: api/MyApp.Inventory.API.Controllers.InventoryTransactionsController.html#MyApp_Inventory_API_Controllers_InventoryTransactionsController_DeleteTransaction_
  commentId: Overload:MyApp.Inventory.API.Controllers.InventoryTransactionsController.DeleteTransaction
  isSpec: "True"
  fullName: MyApp.Inventory.API.Controllers.InventoryTransactionsController.DeleteTransaction
  nameWithType: InventoryTransactionsController.DeleteTransaction
- uid: MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetAllTransactions
  name: GetAllTransactions()
  href: api/MyApp.Inventory.API.Controllers.InventoryTransactionsController.html#MyApp_Inventory_API_Controllers_InventoryTransactionsController_GetAllTransactions
  commentId: M:MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetAllTransactions
  fullName: MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetAllTransactions()
  nameWithType: InventoryTransactionsController.GetAllTransactions()
- uid: MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetAllTransactions*
  name: GetAllTransactions
  href: api/MyApp.Inventory.API.Controllers.InventoryTransactionsController.html#MyApp_Inventory_API_Controllers_InventoryTransactionsController_GetAllTransactions_
  commentId: Overload:MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetAllTransactions
  isSpec: "True"
  fullName: MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetAllTransactions
  nameWithType: InventoryTransactionsController.GetAllTransactions
- uid: MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetAllTransactionsPaginated(System.Int32,System.Int32)
  name: GetAllTransactionsPaginated(int, int)
  href: api/MyApp.Inventory.API.Controllers.InventoryTransactionsController.html#MyApp_Inventory_API_Controllers_InventoryTransactionsController_GetAllTransactionsPaginated_System_Int32_System_Int32_
  commentId: M:MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetAllTransactionsPaginated(System.Int32,System.Int32)
  name.vb: GetAllTransactionsPaginated(Integer, Integer)
  fullName: MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetAllTransactionsPaginated(int, int)
  fullName.vb: MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetAllTransactionsPaginated(Integer, Integer)
  nameWithType: InventoryTransactionsController.GetAllTransactionsPaginated(int, int)
  nameWithType.vb: InventoryTransactionsController.GetAllTransactionsPaginated(Integer, Integer)
- uid: MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetAllTransactionsPaginated*
  name: GetAllTransactionsPaginated
  href: api/MyApp.Inventory.API.Controllers.InventoryTransactionsController.html#MyApp_Inventory_API_Controllers_InventoryTransactionsController_GetAllTransactionsPaginated_
  commentId: Overload:MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetAllTransactionsPaginated
  isSpec: "True"
  fullName: MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetAllTransactionsPaginated
  nameWithType: InventoryTransactionsController.GetAllTransactionsPaginated
- uid: MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetTransactionById(System.Guid)
  name: GetTransactionById(Guid)
  href: api/MyApp.Inventory.API.Controllers.InventoryTransactionsController.html#MyApp_Inventory_API_Controllers_InventoryTransactionsController_GetTransactionById_System_Guid_
  commentId: M:MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetTransactionById(System.Guid)
  fullName: MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetTransactionById(System.Guid)
  nameWithType: InventoryTransactionsController.GetTransactionById(Guid)
- uid: MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetTransactionById*
  name: GetTransactionById
  href: api/MyApp.Inventory.API.Controllers.InventoryTransactionsController.html#MyApp_Inventory_API_Controllers_InventoryTransactionsController_GetTransactionById_
  commentId: Overload:MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetTransactionById
  isSpec: "True"
  fullName: MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetTransactionById
  nameWithType: InventoryTransactionsController.GetTransactionById
- uid: MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetTransactionsByProductId(System.Guid)
  name: GetTransactionsByProductId(Guid)
  href: api/MyApp.Inventory.API.Controllers.InventoryTransactionsController.html#MyApp_Inventory_API_Controllers_InventoryTransactionsController_GetTransactionsByProductId_System_Guid_
  commentId: M:MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetTransactionsByProductId(System.Guid)
  fullName: MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetTransactionsByProductId(System.Guid)
  nameWithType: InventoryTransactionsController.GetTransactionsByProductId(Guid)
- uid: MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetTransactionsByProductId*
  name: GetTransactionsByProductId
  href: api/MyApp.Inventory.API.Controllers.InventoryTransactionsController.html#MyApp_Inventory_API_Controllers_InventoryTransactionsController_GetTransactionsByProductId_
  commentId: Overload:MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetTransactionsByProductId
  isSpec: "True"
  fullName: MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetTransactionsByProductId
  nameWithType: InventoryTransactionsController.GetTransactionsByProductId
- uid: MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetTransactionsByType(System.String)
  name: GetTransactionsByType(string)
  href: api/MyApp.Inventory.API.Controllers.InventoryTransactionsController.html#MyApp_Inventory_API_Controllers_InventoryTransactionsController_GetTransactionsByType_System_String_
  commentId: M:MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetTransactionsByType(System.String)
  name.vb: GetTransactionsByType(String)
  fullName: MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetTransactionsByType(string)
  fullName.vb: MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetTransactionsByType(String)
  nameWithType: InventoryTransactionsController.GetTransactionsByType(string)
  nameWithType.vb: InventoryTransactionsController.GetTransactionsByType(String)
- uid: MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetTransactionsByType*
  name: GetTransactionsByType
  href: api/MyApp.Inventory.API.Controllers.InventoryTransactionsController.html#MyApp_Inventory_API_Controllers_InventoryTransactionsController_GetTransactionsByType_
  commentId: Overload:MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetTransactionsByType
  isSpec: "True"
  fullName: MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetTransactionsByType
  nameWithType: InventoryTransactionsController.GetTransactionsByType
- uid: MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetTransactionsByWarehouseId(System.Guid)
  name: GetTransactionsByWarehouseId(Guid)
  href: api/MyApp.Inventory.API.Controllers.InventoryTransactionsController.html#MyApp_Inventory_API_Controllers_InventoryTransactionsController_GetTransactionsByWarehouseId_System_Guid_
  commentId: M:MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetTransactionsByWarehouseId(System.Guid)
  fullName: MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetTransactionsByWarehouseId(System.Guid)
  nameWithType: InventoryTransactionsController.GetTransactionsByWarehouseId(Guid)
- uid: MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetTransactionsByWarehouseId*
  name: GetTransactionsByWarehouseId
  href: api/MyApp.Inventory.API.Controllers.InventoryTransactionsController.html#MyApp_Inventory_API_Controllers_InventoryTransactionsController_GetTransactionsByWarehouseId_
  commentId: Overload:MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetTransactionsByWarehouseId
  isSpec: "True"
  fullName: MyApp.Inventory.API.Controllers.InventoryTransactionsController.GetTransactionsByWarehouseId
  nameWithType: InventoryTransactionsController.GetTransactionsByWarehouseId
- uid: MyApp.Inventory.API.Controllers.InventoryTransactionsController.UpdateTransaction(System.Guid,MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto)
  name: UpdateTransaction(Guid, CreateUpdateInventoryTransactionDto)
  href: api/MyApp.Inventory.API.Controllers.InventoryTransactionsController.html#MyApp_Inventory_API_Controllers_InventoryTransactionsController_UpdateTransaction_System_Guid_MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateInventoryTransactionDto_
  commentId: M:MyApp.Inventory.API.Controllers.InventoryTransactionsController.UpdateTransaction(System.Guid,MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto)
  fullName: MyApp.Inventory.API.Controllers.InventoryTransactionsController.UpdateTransaction(System.Guid, MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto)
  nameWithType: InventoryTransactionsController.UpdateTransaction(Guid, CreateUpdateInventoryTransactionDto)
- uid: MyApp.Inventory.API.Controllers.InventoryTransactionsController.UpdateTransaction*
  name: UpdateTransaction
  href: api/MyApp.Inventory.API.Controllers.InventoryTransactionsController.html#MyApp_Inventory_API_Controllers_InventoryTransactionsController_UpdateTransaction_
  commentId: Overload:MyApp.Inventory.API.Controllers.InventoryTransactionsController.UpdateTransaction
  isSpec: "True"
  fullName: MyApp.Inventory.API.Controllers.InventoryTransactionsController.UpdateTransaction
  nameWithType: InventoryTransactionsController.UpdateTransaction
- uid: MyApp.Inventory.API.Controllers.ProductsController
  name: ProductsController
  href: api/MyApp.Inventory.API.Controllers.ProductsController.html
  commentId: T:MyApp.Inventory.API.Controllers.ProductsController
  fullName: MyApp.Inventory.API.Controllers.ProductsController
  nameWithType: ProductsController
- uid: MyApp.Inventory.API.Controllers.ProductsController.#ctor(MyApp.Inventory.Application.Contracts.Services.IProductService,Microsoft.Extensions.Logging.ILogger{MyApp.Inventory.API.Controllers.ProductsController},MyApp.Shared.Domain.Caching.ICacheService)
  name: ProductsController(IProductService, ILogger<ProductsController>, ICacheService)
  href: api/MyApp.Inventory.API.Controllers.ProductsController.html#MyApp_Inventory_API_Controllers_ProductsController__ctor_MyApp_Inventory_Application_Contracts_Services_IProductService_Microsoft_Extensions_Logging_ILogger_MyApp_Inventory_API_Controllers_ProductsController__MyApp_Shared_Domain_Caching_ICacheService_
  commentId: M:MyApp.Inventory.API.Controllers.ProductsController.#ctor(MyApp.Inventory.Application.Contracts.Services.IProductService,Microsoft.Extensions.Logging.ILogger{MyApp.Inventory.API.Controllers.ProductsController},MyApp.Shared.Domain.Caching.ICacheService)
  name.vb: New(IProductService, ILogger(Of ProductsController), ICacheService)
  fullName: MyApp.Inventory.API.Controllers.ProductsController.ProductsController(MyApp.Inventory.Application.Contracts.Services.IProductService, Microsoft.Extensions.Logging.ILogger<MyApp.Inventory.API.Controllers.ProductsController>, MyApp.Shared.Domain.Caching.ICacheService)
  fullName.vb: MyApp.Inventory.API.Controllers.ProductsController.New(MyApp.Inventory.Application.Contracts.Services.IProductService, Microsoft.Extensions.Logging.ILogger(Of MyApp.Inventory.API.Controllers.ProductsController), MyApp.Shared.Domain.Caching.ICacheService)
  nameWithType: ProductsController.ProductsController(IProductService, ILogger<ProductsController>, ICacheService)
  nameWithType.vb: ProductsController.New(IProductService, ILogger(Of ProductsController), ICacheService)
- uid: MyApp.Inventory.API.Controllers.ProductsController.#ctor*
  name: ProductsController
  href: api/MyApp.Inventory.API.Controllers.ProductsController.html#MyApp_Inventory_API_Controllers_ProductsController__ctor_
  commentId: Overload:MyApp.Inventory.API.Controllers.ProductsController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Inventory.API.Controllers.ProductsController.ProductsController
  fullName.vb: MyApp.Inventory.API.Controllers.ProductsController.New
  nameWithType: ProductsController.ProductsController
  nameWithType.vb: ProductsController.New
- uid: MyApp.Inventory.API.Controllers.ProductsController.CreateProduct(MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto)
  name: CreateProduct(CreateUpdateProductDto)
  href: api/MyApp.Inventory.API.Controllers.ProductsController.html#MyApp_Inventory_API_Controllers_ProductsController_CreateProduct_MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateProductDto_
  commentId: M:MyApp.Inventory.API.Controllers.ProductsController.CreateProduct(MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto)
  fullName: MyApp.Inventory.API.Controllers.ProductsController.CreateProduct(MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto)
  nameWithType: ProductsController.CreateProduct(CreateUpdateProductDto)
- uid: MyApp.Inventory.API.Controllers.ProductsController.CreateProduct*
  name: CreateProduct
  href: api/MyApp.Inventory.API.Controllers.ProductsController.html#MyApp_Inventory_API_Controllers_ProductsController_CreateProduct_
  commentId: Overload:MyApp.Inventory.API.Controllers.ProductsController.CreateProduct
  isSpec: "True"
  fullName: MyApp.Inventory.API.Controllers.ProductsController.CreateProduct
  nameWithType: ProductsController.CreateProduct
- uid: MyApp.Inventory.API.Controllers.ProductsController.DeleteProduct(System.Guid)
  name: DeleteProduct(Guid)
  href: api/MyApp.Inventory.API.Controllers.ProductsController.html#MyApp_Inventory_API_Controllers_ProductsController_DeleteProduct_System_Guid_
  commentId: M:MyApp.Inventory.API.Controllers.ProductsController.DeleteProduct(System.Guid)
  fullName: MyApp.Inventory.API.Controllers.ProductsController.DeleteProduct(System.Guid)
  nameWithType: ProductsController.DeleteProduct(Guid)
- uid: MyApp.Inventory.API.Controllers.ProductsController.DeleteProduct*
  name: DeleteProduct
  href: api/MyApp.Inventory.API.Controllers.ProductsController.html#MyApp_Inventory_API_Controllers_ProductsController_DeleteProduct_
  commentId: Overload:MyApp.Inventory.API.Controllers.ProductsController.DeleteProduct
  isSpec: "True"
  fullName: MyApp.Inventory.API.Controllers.ProductsController.DeleteProduct
  nameWithType: ProductsController.DeleteProduct
- uid: MyApp.Inventory.API.Controllers.ProductsController.GetAllProducts
  name: GetAllProducts()
  href: api/MyApp.Inventory.API.Controllers.ProductsController.html#MyApp_Inventory_API_Controllers_ProductsController_GetAllProducts
  commentId: M:MyApp.Inventory.API.Controllers.ProductsController.GetAllProducts
  fullName: MyApp.Inventory.API.Controllers.ProductsController.GetAllProducts()
  nameWithType: ProductsController.GetAllProducts()
- uid: MyApp.Inventory.API.Controllers.ProductsController.GetAllProducts*
  name: GetAllProducts
  href: api/MyApp.Inventory.API.Controllers.ProductsController.html#MyApp_Inventory_API_Controllers_ProductsController_GetAllProducts_
  commentId: Overload:MyApp.Inventory.API.Controllers.ProductsController.GetAllProducts
  isSpec: "True"
  fullName: MyApp.Inventory.API.Controllers.ProductsController.GetAllProducts
  nameWithType: ProductsController.GetAllProducts
- uid: MyApp.Inventory.API.Controllers.ProductsController.GetAllProductsPaginated(System.Int32,System.Int32)
  name: GetAllProductsPaginated(int, int)
  href: api/MyApp.Inventory.API.Controllers.ProductsController.html#MyApp_Inventory_API_Controllers_ProductsController_GetAllProductsPaginated_System_Int32_System_Int32_
  commentId: M:MyApp.Inventory.API.Controllers.ProductsController.GetAllProductsPaginated(System.Int32,System.Int32)
  name.vb: GetAllProductsPaginated(Integer, Integer)
  fullName: MyApp.Inventory.API.Controllers.ProductsController.GetAllProductsPaginated(int, int)
  fullName.vb: MyApp.Inventory.API.Controllers.ProductsController.GetAllProductsPaginated(Integer, Integer)
  nameWithType: ProductsController.GetAllProductsPaginated(int, int)
  nameWithType.vb: ProductsController.GetAllProductsPaginated(Integer, Integer)
- uid: MyApp.Inventory.API.Controllers.ProductsController.GetAllProductsPaginated*
  name: GetAllProductsPaginated
  href: api/MyApp.Inventory.API.Controllers.ProductsController.html#MyApp_Inventory_API_Controllers_ProductsController_GetAllProductsPaginated_
  commentId: Overload:MyApp.Inventory.API.Controllers.ProductsController.GetAllProductsPaginated
  isSpec: "True"
  fullName: MyApp.Inventory.API.Controllers.ProductsController.GetAllProductsPaginated
  nameWithType: ProductsController.GetAllProductsPaginated
- uid: MyApp.Inventory.API.Controllers.ProductsController.GetLowStockProducts
  name: GetLowStockProducts()
  href: api/MyApp.Inventory.API.Controllers.ProductsController.html#MyApp_Inventory_API_Controllers_ProductsController_GetLowStockProducts
  commentId: M:MyApp.Inventory.API.Controllers.ProductsController.GetLowStockProducts
  fullName: MyApp.Inventory.API.Controllers.ProductsController.GetLowStockProducts()
  nameWithType: ProductsController.GetLowStockProducts()
- uid: MyApp.Inventory.API.Controllers.ProductsController.GetLowStockProducts*
  name: GetLowStockProducts
  href: api/MyApp.Inventory.API.Controllers.ProductsController.html#MyApp_Inventory_API_Controllers_ProductsController_GetLowStockProducts_
  commentId: Overload:MyApp.Inventory.API.Controllers.ProductsController.GetLowStockProducts
  isSpec: "True"
  fullName: MyApp.Inventory.API.Controllers.ProductsController.GetLowStockProducts
  nameWithType: ProductsController.GetLowStockProducts
- uid: MyApp.Inventory.API.Controllers.ProductsController.GetProductById(System.Guid)
  name: GetProductById(Guid)
  href: api/MyApp.Inventory.API.Controllers.ProductsController.html#MyApp_Inventory_API_Controllers_ProductsController_GetProductById_System_Guid_
  commentId: M:MyApp.Inventory.API.Controllers.ProductsController.GetProductById(System.Guid)
  fullName: MyApp.Inventory.API.Controllers.ProductsController.GetProductById(System.Guid)
  nameWithType: ProductsController.GetProductById(Guid)
- uid: MyApp.Inventory.API.Controllers.ProductsController.GetProductById*
  name: GetProductById
  href: api/MyApp.Inventory.API.Controllers.ProductsController.html#MyApp_Inventory_API_Controllers_ProductsController_GetProductById_
  commentId: Overload:MyApp.Inventory.API.Controllers.ProductsController.GetProductById
  isSpec: "True"
  fullName: MyApp.Inventory.API.Controllers.ProductsController.GetProductById
  nameWithType: ProductsController.GetProductById
- uid: MyApp.Inventory.API.Controllers.ProductsController.GetProductBySku(System.String)
  name: GetProductBySku(string)
  href: api/MyApp.Inventory.API.Controllers.ProductsController.html#MyApp_Inventory_API_Controllers_ProductsController_GetProductBySku_System_String_
  commentId: M:MyApp.Inventory.API.Controllers.ProductsController.GetProductBySku(System.String)
  name.vb: GetProductBySku(String)
  fullName: MyApp.Inventory.API.Controllers.ProductsController.GetProductBySku(string)
  fullName.vb: MyApp.Inventory.API.Controllers.ProductsController.GetProductBySku(String)
  nameWithType: ProductsController.GetProductBySku(string)
  nameWithType.vb: ProductsController.GetProductBySku(String)
- uid: MyApp.Inventory.API.Controllers.ProductsController.GetProductBySku*
  name: GetProductBySku
  href: api/MyApp.Inventory.API.Controllers.ProductsController.html#MyApp_Inventory_API_Controllers_ProductsController_GetProductBySku_
  commentId: Overload:MyApp.Inventory.API.Controllers.ProductsController.GetProductBySku
  isSpec: "True"
  fullName: MyApp.Inventory.API.Controllers.ProductsController.GetProductBySku
  nameWithType: ProductsController.GetProductBySku
- uid: MyApp.Inventory.API.Controllers.ProductsController.UpdateProduct(System.Guid,MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto)
  name: UpdateProduct(Guid, CreateUpdateProductDto)
  href: api/MyApp.Inventory.API.Controllers.ProductsController.html#MyApp_Inventory_API_Controllers_ProductsController_UpdateProduct_System_Guid_MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateProductDto_
  commentId: M:MyApp.Inventory.API.Controllers.ProductsController.UpdateProduct(System.Guid,MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto)
  fullName: MyApp.Inventory.API.Controllers.ProductsController.UpdateProduct(System.Guid, MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto)
  nameWithType: ProductsController.UpdateProduct(Guid, CreateUpdateProductDto)
- uid: MyApp.Inventory.API.Controllers.ProductsController.UpdateProduct*
  name: UpdateProduct
  href: api/MyApp.Inventory.API.Controllers.ProductsController.html#MyApp_Inventory_API_Controllers_ProductsController_UpdateProduct_
  commentId: Overload:MyApp.Inventory.API.Controllers.ProductsController.UpdateProduct
  isSpec: "True"
  fullName: MyApp.Inventory.API.Controllers.ProductsController.UpdateProduct
  nameWithType: ProductsController.UpdateProduct
- uid: MyApp.Inventory.API.Controllers.WarehousesController
  name: WarehousesController
  href: api/MyApp.Inventory.API.Controllers.WarehousesController.html
  commentId: T:MyApp.Inventory.API.Controllers.WarehousesController
  fullName: MyApp.Inventory.API.Controllers.WarehousesController
  nameWithType: WarehousesController
- uid: MyApp.Inventory.API.Controllers.WarehousesController.#ctor(MyApp.Inventory.Application.Contracts.Services.IWarehouseService,Microsoft.Extensions.Logging.ILogger{MyApp.Inventory.API.Controllers.WarehousesController})
  name: WarehousesController(IWarehouseService, ILogger<WarehousesController>)
  href: api/MyApp.Inventory.API.Controllers.WarehousesController.html#MyApp_Inventory_API_Controllers_WarehousesController__ctor_MyApp_Inventory_Application_Contracts_Services_IWarehouseService_Microsoft_Extensions_Logging_ILogger_MyApp_Inventory_API_Controllers_WarehousesController__
  commentId: M:MyApp.Inventory.API.Controllers.WarehousesController.#ctor(MyApp.Inventory.Application.Contracts.Services.IWarehouseService,Microsoft.Extensions.Logging.ILogger{MyApp.Inventory.API.Controllers.WarehousesController})
  name.vb: New(IWarehouseService, ILogger(Of WarehousesController))
  fullName: MyApp.Inventory.API.Controllers.WarehousesController.WarehousesController(MyApp.Inventory.Application.Contracts.Services.IWarehouseService, Microsoft.Extensions.Logging.ILogger<MyApp.Inventory.API.Controllers.WarehousesController>)
  fullName.vb: MyApp.Inventory.API.Controllers.WarehousesController.New(MyApp.Inventory.Application.Contracts.Services.IWarehouseService, Microsoft.Extensions.Logging.ILogger(Of MyApp.Inventory.API.Controllers.WarehousesController))
  nameWithType: WarehousesController.WarehousesController(IWarehouseService, ILogger<WarehousesController>)
  nameWithType.vb: WarehousesController.New(IWarehouseService, ILogger(Of WarehousesController))
- uid: MyApp.Inventory.API.Controllers.WarehousesController.#ctor*
  name: WarehousesController
  href: api/MyApp.Inventory.API.Controllers.WarehousesController.html#MyApp_Inventory_API_Controllers_WarehousesController__ctor_
  commentId: Overload:MyApp.Inventory.API.Controllers.WarehousesController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Inventory.API.Controllers.WarehousesController.WarehousesController
  fullName.vb: MyApp.Inventory.API.Controllers.WarehousesController.New
  nameWithType: WarehousesController.WarehousesController
  nameWithType.vb: WarehousesController.New
- uid: MyApp.Inventory.API.Controllers.WarehousesController.CreateWarehouse(MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto)
  name: CreateWarehouse(CreateUpdateWarehouseDto)
  href: api/MyApp.Inventory.API.Controllers.WarehousesController.html#MyApp_Inventory_API_Controllers_WarehousesController_CreateWarehouse_MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateWarehouseDto_
  commentId: M:MyApp.Inventory.API.Controllers.WarehousesController.CreateWarehouse(MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto)
  fullName: MyApp.Inventory.API.Controllers.WarehousesController.CreateWarehouse(MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto)
  nameWithType: WarehousesController.CreateWarehouse(CreateUpdateWarehouseDto)
- uid: MyApp.Inventory.API.Controllers.WarehousesController.CreateWarehouse*
  name: CreateWarehouse
  href: api/MyApp.Inventory.API.Controllers.WarehousesController.html#MyApp_Inventory_API_Controllers_WarehousesController_CreateWarehouse_
  commentId: Overload:MyApp.Inventory.API.Controllers.WarehousesController.CreateWarehouse
  isSpec: "True"
  fullName: MyApp.Inventory.API.Controllers.WarehousesController.CreateWarehouse
  nameWithType: WarehousesController.CreateWarehouse
- uid: MyApp.Inventory.API.Controllers.WarehousesController.DeleteWarehouse(System.Guid)
  name: DeleteWarehouse(Guid)
  href: api/MyApp.Inventory.API.Controllers.WarehousesController.html#MyApp_Inventory_API_Controllers_WarehousesController_DeleteWarehouse_System_Guid_
  commentId: M:MyApp.Inventory.API.Controllers.WarehousesController.DeleteWarehouse(System.Guid)
  fullName: MyApp.Inventory.API.Controllers.WarehousesController.DeleteWarehouse(System.Guid)
  nameWithType: WarehousesController.DeleteWarehouse(Guid)
- uid: MyApp.Inventory.API.Controllers.WarehousesController.DeleteWarehouse*
  name: DeleteWarehouse
  href: api/MyApp.Inventory.API.Controllers.WarehousesController.html#MyApp_Inventory_API_Controllers_WarehousesController_DeleteWarehouse_
  commentId: Overload:MyApp.Inventory.API.Controllers.WarehousesController.DeleteWarehouse
  isSpec: "True"
  fullName: MyApp.Inventory.API.Controllers.WarehousesController.DeleteWarehouse
  nameWithType: WarehousesController.DeleteWarehouse
- uid: MyApp.Inventory.API.Controllers.WarehousesController.GetAllWarehouses
  name: GetAllWarehouses()
  href: api/MyApp.Inventory.API.Controllers.WarehousesController.html#MyApp_Inventory_API_Controllers_WarehousesController_GetAllWarehouses
  commentId: M:MyApp.Inventory.API.Controllers.WarehousesController.GetAllWarehouses
  fullName: MyApp.Inventory.API.Controllers.WarehousesController.GetAllWarehouses()
  nameWithType: WarehousesController.GetAllWarehouses()
- uid: MyApp.Inventory.API.Controllers.WarehousesController.GetAllWarehouses*
  name: GetAllWarehouses
  href: api/MyApp.Inventory.API.Controllers.WarehousesController.html#MyApp_Inventory_API_Controllers_WarehousesController_GetAllWarehouses_
  commentId: Overload:MyApp.Inventory.API.Controllers.WarehousesController.GetAllWarehouses
  isSpec: "True"
  fullName: MyApp.Inventory.API.Controllers.WarehousesController.GetAllWarehouses
  nameWithType: WarehousesController.GetAllWarehouses
- uid: MyApp.Inventory.API.Controllers.WarehousesController.GetAllWarehousesPaginated(System.Int32,System.Int32)
  name: GetAllWarehousesPaginated(int, int)
  href: api/MyApp.Inventory.API.Controllers.WarehousesController.html#MyApp_Inventory_API_Controllers_WarehousesController_GetAllWarehousesPaginated_System_Int32_System_Int32_
  commentId: M:MyApp.Inventory.API.Controllers.WarehousesController.GetAllWarehousesPaginated(System.Int32,System.Int32)
  name.vb: GetAllWarehousesPaginated(Integer, Integer)
  fullName: MyApp.Inventory.API.Controllers.WarehousesController.GetAllWarehousesPaginated(int, int)
  fullName.vb: MyApp.Inventory.API.Controllers.WarehousesController.GetAllWarehousesPaginated(Integer, Integer)
  nameWithType: WarehousesController.GetAllWarehousesPaginated(int, int)
  nameWithType.vb: WarehousesController.GetAllWarehousesPaginated(Integer, Integer)
- uid: MyApp.Inventory.API.Controllers.WarehousesController.GetAllWarehousesPaginated*
  name: GetAllWarehousesPaginated
  href: api/MyApp.Inventory.API.Controllers.WarehousesController.html#MyApp_Inventory_API_Controllers_WarehousesController_GetAllWarehousesPaginated_
  commentId: Overload:MyApp.Inventory.API.Controllers.WarehousesController.GetAllWarehousesPaginated
  isSpec: "True"
  fullName: MyApp.Inventory.API.Controllers.WarehousesController.GetAllWarehousesPaginated
  nameWithType: WarehousesController.GetAllWarehousesPaginated
- uid: MyApp.Inventory.API.Controllers.WarehousesController.GetWarehouseById(System.Guid)
  name: GetWarehouseById(Guid)
  href: api/MyApp.Inventory.API.Controllers.WarehousesController.html#MyApp_Inventory_API_Controllers_WarehousesController_GetWarehouseById_System_Guid_
  commentId: M:MyApp.Inventory.API.Controllers.WarehousesController.GetWarehouseById(System.Guid)
  fullName: MyApp.Inventory.API.Controllers.WarehousesController.GetWarehouseById(System.Guid)
  nameWithType: WarehousesController.GetWarehouseById(Guid)
- uid: MyApp.Inventory.API.Controllers.WarehousesController.GetWarehouseById*
  name: GetWarehouseById
  href: api/MyApp.Inventory.API.Controllers.WarehousesController.html#MyApp_Inventory_API_Controllers_WarehousesController_GetWarehouseById_
  commentId: Overload:MyApp.Inventory.API.Controllers.WarehousesController.GetWarehouseById
  isSpec: "True"
  fullName: MyApp.Inventory.API.Controllers.WarehousesController.GetWarehouseById
  nameWithType: WarehousesController.GetWarehouseById
- uid: MyApp.Inventory.API.Controllers.WarehousesController.UpdateWarehouse(System.Guid,MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto)
  name: UpdateWarehouse(Guid, CreateUpdateWarehouseDto)
  href: api/MyApp.Inventory.API.Controllers.WarehousesController.html#MyApp_Inventory_API_Controllers_WarehousesController_UpdateWarehouse_System_Guid_MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateWarehouseDto_
  commentId: M:MyApp.Inventory.API.Controllers.WarehousesController.UpdateWarehouse(System.Guid,MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto)
  fullName: MyApp.Inventory.API.Controllers.WarehousesController.UpdateWarehouse(System.Guid, MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto)
  nameWithType: WarehousesController.UpdateWarehouse(Guid, CreateUpdateWarehouseDto)
- uid: MyApp.Inventory.API.Controllers.WarehousesController.UpdateWarehouse*
  name: UpdateWarehouse
  href: api/MyApp.Inventory.API.Controllers.WarehousesController.html#MyApp_Inventory_API_Controllers_WarehousesController_UpdateWarehouse_
  commentId: Overload:MyApp.Inventory.API.Controllers.WarehousesController.UpdateWarehouse
  isSpec: "True"
  fullName: MyApp.Inventory.API.Controllers.WarehousesController.UpdateWarehouse
  nameWithType: WarehousesController.UpdateWarehouse
- uid: MyApp.Inventory.Application.Contracts.DTOs
  name: MyApp.Inventory.Application.Contracts.DTOs
  href: api/MyApp.Inventory.Application.Contracts.DTOs.html
  commentId: N:MyApp.Inventory.Application.Contracts.DTOs
  fullName: MyApp.Inventory.Application.Contracts.DTOs
  nameWithType: MyApp.Inventory.Application.Contracts.DTOs
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto
  name: CreateUpdateInventoryTransactionDto
  href: api/MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.html
  commentId: T:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto
  nameWithType: CreateUpdateInventoryTransactionDto
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.ProductId
  name: ProductId
  href: api/MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.html#MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateInventoryTransactionDto_ProductId
  commentId: P:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.ProductId
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.ProductId
  nameWithType: CreateUpdateInventoryTransactionDto.ProductId
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.ProductId*
  name: ProductId
  href: api/MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.html#MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateInventoryTransactionDto_ProductId_
  commentId: Overload:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.ProductId
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.ProductId
  nameWithType: CreateUpdateInventoryTransactionDto.ProductId
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.QuantityChange
  name: QuantityChange
  href: api/MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.html#MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateInventoryTransactionDto_QuantityChange
  commentId: P:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.QuantityChange
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.QuantityChange
  nameWithType: CreateUpdateInventoryTransactionDto.QuantityChange
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.QuantityChange*
  name: QuantityChange
  href: api/MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.html#MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateInventoryTransactionDto_QuantityChange_
  commentId: Overload:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.QuantityChange
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.QuantityChange
  nameWithType: CreateUpdateInventoryTransactionDto.QuantityChange
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.TransactionDate
  name: TransactionDate
  href: api/MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.html#MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateInventoryTransactionDto_TransactionDate
  commentId: P:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.TransactionDate
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.TransactionDate
  nameWithType: CreateUpdateInventoryTransactionDto.TransactionDate
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.TransactionDate*
  name: TransactionDate
  href: api/MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.html#MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateInventoryTransactionDto_TransactionDate_
  commentId: Overload:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.TransactionDate
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.TransactionDate
  nameWithType: CreateUpdateInventoryTransactionDto.TransactionDate
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.TransactionType
  name: TransactionType
  href: api/MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.html#MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateInventoryTransactionDto_TransactionType
  commentId: P:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.TransactionType
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.TransactionType
  nameWithType: CreateUpdateInventoryTransactionDto.TransactionType
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.TransactionType*
  name: TransactionType
  href: api/MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.html#MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateInventoryTransactionDto_TransactionType_
  commentId: Overload:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.TransactionType
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.TransactionType
  nameWithType: CreateUpdateInventoryTransactionDto.TransactionType
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.WarehouseId
  name: WarehouseId
  href: api/MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.html#MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateInventoryTransactionDto_WarehouseId
  commentId: P:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.WarehouseId
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.WarehouseId
  nameWithType: CreateUpdateInventoryTransactionDto.WarehouseId
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.WarehouseId*
  name: WarehouseId
  href: api/MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.html#MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateInventoryTransactionDto_WarehouseId_
  commentId: Overload:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.WarehouseId
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto.WarehouseId
  nameWithType: CreateUpdateInventoryTransactionDto.WarehouseId
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto
  name: CreateUpdateProductDto
  href: api/MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.html
  commentId: T:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto
  nameWithType: CreateUpdateProductDto
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.Description
  name: Description
  href: api/MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.html#MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateProductDto_Description
  commentId: P:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.Description
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.Description
  nameWithType: CreateUpdateProductDto.Description
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.Description*
  name: Description
  href: api/MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.html#MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateProductDto_Description_
  commentId: Overload:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.Description
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.Description
  nameWithType: CreateUpdateProductDto.Description
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.Name
  name: Name
  href: api/MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.html#MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateProductDto_Name
  commentId: P:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.Name
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.Name
  nameWithType: CreateUpdateProductDto.Name
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.Name*
  name: Name
  href: api/MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.html#MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateProductDto_Name_
  commentId: Overload:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.Name
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.Name
  nameWithType: CreateUpdateProductDto.Name
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.QuantityInStock
  name: QuantityInStock
  href: api/MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.html#MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateProductDto_QuantityInStock
  commentId: P:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.QuantityInStock
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.QuantityInStock
  nameWithType: CreateUpdateProductDto.QuantityInStock
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.QuantityInStock*
  name: QuantityInStock
  href: api/MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.html#MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateProductDto_QuantityInStock_
  commentId: Overload:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.QuantityInStock
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.QuantityInStock
  nameWithType: CreateUpdateProductDto.QuantityInStock
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.ReorderLevel
  name: ReorderLevel
  href: api/MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.html#MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateProductDto_ReorderLevel
  commentId: P:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.ReorderLevel
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.ReorderLevel
  nameWithType: CreateUpdateProductDto.ReorderLevel
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.ReorderLevel*
  name: ReorderLevel
  href: api/MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.html#MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateProductDto_ReorderLevel_
  commentId: Overload:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.ReorderLevel
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.ReorderLevel
  nameWithType: CreateUpdateProductDto.ReorderLevel
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.SKU
  name: SKU
  href: api/MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.html#MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateProductDto_SKU
  commentId: P:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.SKU
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.SKU
  nameWithType: CreateUpdateProductDto.SKU
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.SKU*
  name: SKU
  href: api/MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.html#MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateProductDto_SKU_
  commentId: Overload:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.SKU
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.SKU
  nameWithType: CreateUpdateProductDto.SKU
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.UnitPrice
  name: UnitPrice
  href: api/MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.html#MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateProductDto_UnitPrice
  commentId: P:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.UnitPrice
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.UnitPrice
  nameWithType: CreateUpdateProductDto.UnitPrice
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.UnitPrice*
  name: UnitPrice
  href: api/MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.html#MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateProductDto_UnitPrice_
  commentId: Overload:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.UnitPrice
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto.UnitPrice
  nameWithType: CreateUpdateProductDto.UnitPrice
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto
  name: CreateUpdateWarehouseDto
  href: api/MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto.html
  commentId: T:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto
  nameWithType: CreateUpdateWarehouseDto
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto.Location
  name: Location
  href: api/MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto.html#MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateWarehouseDto_Location
  commentId: P:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto.Location
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto.Location
  nameWithType: CreateUpdateWarehouseDto.Location
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto.Location*
  name: Location
  href: api/MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto.html#MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateWarehouseDto_Location_
  commentId: Overload:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto.Location
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto.Location
  nameWithType: CreateUpdateWarehouseDto.Location
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto.Name
  name: Name
  href: api/MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto.html#MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateWarehouseDto_Name
  commentId: P:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto.Name
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto.Name
  nameWithType: CreateUpdateWarehouseDto.Name
- uid: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto.Name*
  name: Name
  href: api/MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto.html#MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateWarehouseDto_Name_
  commentId: Overload:MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto.Name
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto.Name
  nameWithType: CreateUpdateWarehouseDto.Name
- uid: MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto
  name: InventoryTransactionDto
  href: api/MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.html
  commentId: T:MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto
  fullName: MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto
  nameWithType: InventoryTransactionDto
- uid: MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.Id
  name: Id
  href: api/MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.html#MyApp_Inventory_Application_Contracts_DTOs_InventoryTransactionDto_Id
  commentId: P:MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.Id
  fullName: MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.Id
  nameWithType: InventoryTransactionDto.Id
- uid: MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.Id*
  name: Id
  href: api/MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.html#MyApp_Inventory_Application_Contracts_DTOs_InventoryTransactionDto_Id_
  commentId: Overload:MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.Id
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.Id
  nameWithType: InventoryTransactionDto.Id
- uid: MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.Product
  name: Product
  href: api/MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.html#MyApp_Inventory_Application_Contracts_DTOs_InventoryTransactionDto_Product
  commentId: P:MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.Product
  fullName: MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.Product
  nameWithType: InventoryTransactionDto.Product
- uid: MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.Product*
  name: Product
  href: api/MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.html#MyApp_Inventory_Application_Contracts_DTOs_InventoryTransactionDto_Product_
  commentId: Overload:MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.Product
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.Product
  nameWithType: InventoryTransactionDto.Product
- uid: MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.ProductId
  name: ProductId
  href: api/MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.html#MyApp_Inventory_Application_Contracts_DTOs_InventoryTransactionDto_ProductId
  commentId: P:MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.ProductId
  fullName: MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.ProductId
  nameWithType: InventoryTransactionDto.ProductId
- uid: MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.ProductId*
  name: ProductId
  href: api/MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.html#MyApp_Inventory_Application_Contracts_DTOs_InventoryTransactionDto_ProductId_
  commentId: Overload:MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.ProductId
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.ProductId
  nameWithType: InventoryTransactionDto.ProductId
- uid: MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.QuantityChange
  name: QuantityChange
  href: api/MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.html#MyApp_Inventory_Application_Contracts_DTOs_InventoryTransactionDto_QuantityChange
  commentId: P:MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.QuantityChange
  fullName: MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.QuantityChange
  nameWithType: InventoryTransactionDto.QuantityChange
- uid: MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.QuantityChange*
  name: QuantityChange
  href: api/MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.html#MyApp_Inventory_Application_Contracts_DTOs_InventoryTransactionDto_QuantityChange_
  commentId: Overload:MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.QuantityChange
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.QuantityChange
  nameWithType: InventoryTransactionDto.QuantityChange
- uid: MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.TransactionDate
  name: TransactionDate
  href: api/MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.html#MyApp_Inventory_Application_Contracts_DTOs_InventoryTransactionDto_TransactionDate
  commentId: P:MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.TransactionDate
  fullName: MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.TransactionDate
  nameWithType: InventoryTransactionDto.TransactionDate
- uid: MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.TransactionDate*
  name: TransactionDate
  href: api/MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.html#MyApp_Inventory_Application_Contracts_DTOs_InventoryTransactionDto_TransactionDate_
  commentId: Overload:MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.TransactionDate
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.TransactionDate
  nameWithType: InventoryTransactionDto.TransactionDate
- uid: MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.TransactionType
  name: TransactionType
  href: api/MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.html#MyApp_Inventory_Application_Contracts_DTOs_InventoryTransactionDto_TransactionType
  commentId: P:MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.TransactionType
  fullName: MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.TransactionType
  nameWithType: InventoryTransactionDto.TransactionType
- uid: MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.TransactionType*
  name: TransactionType
  href: api/MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.html#MyApp_Inventory_Application_Contracts_DTOs_InventoryTransactionDto_TransactionType_
  commentId: Overload:MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.TransactionType
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.TransactionType
  nameWithType: InventoryTransactionDto.TransactionType
- uid: MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.Warehouse
  name: Warehouse
  href: api/MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.html#MyApp_Inventory_Application_Contracts_DTOs_InventoryTransactionDto_Warehouse
  commentId: P:MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.Warehouse
  fullName: MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.Warehouse
  nameWithType: InventoryTransactionDto.Warehouse
- uid: MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.Warehouse*
  name: Warehouse
  href: api/MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.html#MyApp_Inventory_Application_Contracts_DTOs_InventoryTransactionDto_Warehouse_
  commentId: Overload:MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.Warehouse
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.Warehouse
  nameWithType: InventoryTransactionDto.Warehouse
- uid: MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.WarehouseId
  name: WarehouseId
  href: api/MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.html#MyApp_Inventory_Application_Contracts_DTOs_InventoryTransactionDto_WarehouseId
  commentId: P:MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.WarehouseId
  fullName: MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.WarehouseId
  nameWithType: InventoryTransactionDto.WarehouseId
- uid: MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.WarehouseId*
  name: WarehouseId
  href: api/MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.html#MyApp_Inventory_Application_Contracts_DTOs_InventoryTransactionDto_WarehouseId_
  commentId: Overload:MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.WarehouseId
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.DTOs.InventoryTransactionDto.WarehouseId
  nameWithType: InventoryTransactionDto.WarehouseId
- uid: MyApp.Inventory.Application.Contracts.DTOs.ProductDto
  name: ProductDto
  href: api/MyApp.Inventory.Application.Contracts.DTOs.ProductDto.html
  commentId: T:MyApp.Inventory.Application.Contracts.DTOs.ProductDto
  fullName: MyApp.Inventory.Application.Contracts.DTOs.ProductDto
  nameWithType: ProductDto
- uid: MyApp.Inventory.Application.Contracts.DTOs.ProductDto.Description
  name: Description
  href: api/MyApp.Inventory.Application.Contracts.DTOs.ProductDto.html#MyApp_Inventory_Application_Contracts_DTOs_ProductDto_Description
  commentId: P:MyApp.Inventory.Application.Contracts.DTOs.ProductDto.Description
  fullName: MyApp.Inventory.Application.Contracts.DTOs.ProductDto.Description
  nameWithType: ProductDto.Description
- uid: MyApp.Inventory.Application.Contracts.DTOs.ProductDto.Description*
  name: Description
  href: api/MyApp.Inventory.Application.Contracts.DTOs.ProductDto.html#MyApp_Inventory_Application_Contracts_DTOs_ProductDto_Description_
  commentId: Overload:MyApp.Inventory.Application.Contracts.DTOs.ProductDto.Description
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.DTOs.ProductDto.Description
  nameWithType: ProductDto.Description
- uid: MyApp.Inventory.Application.Contracts.DTOs.ProductDto.Id
  name: Id
  href: api/MyApp.Inventory.Application.Contracts.DTOs.ProductDto.html#MyApp_Inventory_Application_Contracts_DTOs_ProductDto_Id
  commentId: P:MyApp.Inventory.Application.Contracts.DTOs.ProductDto.Id
  fullName: MyApp.Inventory.Application.Contracts.DTOs.ProductDto.Id
  nameWithType: ProductDto.Id
- uid: MyApp.Inventory.Application.Contracts.DTOs.ProductDto.Id*
  name: Id
  href: api/MyApp.Inventory.Application.Contracts.DTOs.ProductDto.html#MyApp_Inventory_Application_Contracts_DTOs_ProductDto_Id_
  commentId: Overload:MyApp.Inventory.Application.Contracts.DTOs.ProductDto.Id
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.DTOs.ProductDto.Id
  nameWithType: ProductDto.Id
- uid: MyApp.Inventory.Application.Contracts.DTOs.ProductDto.Name
  name: Name
  href: api/MyApp.Inventory.Application.Contracts.DTOs.ProductDto.html#MyApp_Inventory_Application_Contracts_DTOs_ProductDto_Name
  commentId: P:MyApp.Inventory.Application.Contracts.DTOs.ProductDto.Name
  fullName: MyApp.Inventory.Application.Contracts.DTOs.ProductDto.Name
  nameWithType: ProductDto.Name
- uid: MyApp.Inventory.Application.Contracts.DTOs.ProductDto.Name*
  name: Name
  href: api/MyApp.Inventory.Application.Contracts.DTOs.ProductDto.html#MyApp_Inventory_Application_Contracts_DTOs_ProductDto_Name_
  commentId: Overload:MyApp.Inventory.Application.Contracts.DTOs.ProductDto.Name
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.DTOs.ProductDto.Name
  nameWithType: ProductDto.Name
- uid: MyApp.Inventory.Application.Contracts.DTOs.ProductDto.QuantityInStock
  name: QuantityInStock
  href: api/MyApp.Inventory.Application.Contracts.DTOs.ProductDto.html#MyApp_Inventory_Application_Contracts_DTOs_ProductDto_QuantityInStock
  commentId: P:MyApp.Inventory.Application.Contracts.DTOs.ProductDto.QuantityInStock
  fullName: MyApp.Inventory.Application.Contracts.DTOs.ProductDto.QuantityInStock
  nameWithType: ProductDto.QuantityInStock
- uid: MyApp.Inventory.Application.Contracts.DTOs.ProductDto.QuantityInStock*
  name: QuantityInStock
  href: api/MyApp.Inventory.Application.Contracts.DTOs.ProductDto.html#MyApp_Inventory_Application_Contracts_DTOs_ProductDto_QuantityInStock_
  commentId: Overload:MyApp.Inventory.Application.Contracts.DTOs.ProductDto.QuantityInStock
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.DTOs.ProductDto.QuantityInStock
  nameWithType: ProductDto.QuantityInStock
- uid: MyApp.Inventory.Application.Contracts.DTOs.ProductDto.ReorderLevel
  name: ReorderLevel
  href: api/MyApp.Inventory.Application.Contracts.DTOs.ProductDto.html#MyApp_Inventory_Application_Contracts_DTOs_ProductDto_ReorderLevel
  commentId: P:MyApp.Inventory.Application.Contracts.DTOs.ProductDto.ReorderLevel
  fullName: MyApp.Inventory.Application.Contracts.DTOs.ProductDto.ReorderLevel
  nameWithType: ProductDto.ReorderLevel
- uid: MyApp.Inventory.Application.Contracts.DTOs.ProductDto.ReorderLevel*
  name: ReorderLevel
  href: api/MyApp.Inventory.Application.Contracts.DTOs.ProductDto.html#MyApp_Inventory_Application_Contracts_DTOs_ProductDto_ReorderLevel_
  commentId: Overload:MyApp.Inventory.Application.Contracts.DTOs.ProductDto.ReorderLevel
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.DTOs.ProductDto.ReorderLevel
  nameWithType: ProductDto.ReorderLevel
- uid: MyApp.Inventory.Application.Contracts.DTOs.ProductDto.SKU
  name: SKU
  href: api/MyApp.Inventory.Application.Contracts.DTOs.ProductDto.html#MyApp_Inventory_Application_Contracts_DTOs_ProductDto_SKU
  commentId: P:MyApp.Inventory.Application.Contracts.DTOs.ProductDto.SKU
  fullName: MyApp.Inventory.Application.Contracts.DTOs.ProductDto.SKU
  nameWithType: ProductDto.SKU
- uid: MyApp.Inventory.Application.Contracts.DTOs.ProductDto.SKU*
  name: SKU
  href: api/MyApp.Inventory.Application.Contracts.DTOs.ProductDto.html#MyApp_Inventory_Application_Contracts_DTOs_ProductDto_SKU_
  commentId: Overload:MyApp.Inventory.Application.Contracts.DTOs.ProductDto.SKU
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.DTOs.ProductDto.SKU
  nameWithType: ProductDto.SKU
- uid: MyApp.Inventory.Application.Contracts.DTOs.ProductDto.UnitPrice
  name: UnitPrice
  href: api/MyApp.Inventory.Application.Contracts.DTOs.ProductDto.html#MyApp_Inventory_Application_Contracts_DTOs_ProductDto_UnitPrice
  commentId: P:MyApp.Inventory.Application.Contracts.DTOs.ProductDto.UnitPrice
  fullName: MyApp.Inventory.Application.Contracts.DTOs.ProductDto.UnitPrice
  nameWithType: ProductDto.UnitPrice
- uid: MyApp.Inventory.Application.Contracts.DTOs.ProductDto.UnitPrice*
  name: UnitPrice
  href: api/MyApp.Inventory.Application.Contracts.DTOs.ProductDto.html#MyApp_Inventory_Application_Contracts_DTOs_ProductDto_UnitPrice_
  commentId: Overload:MyApp.Inventory.Application.Contracts.DTOs.ProductDto.UnitPrice
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.DTOs.ProductDto.UnitPrice
  nameWithType: ProductDto.UnitPrice
- uid: MyApp.Inventory.Application.Contracts.DTOs.WarehouseDto
  name: WarehouseDto
  href: api/MyApp.Inventory.Application.Contracts.DTOs.WarehouseDto.html
  commentId: T:MyApp.Inventory.Application.Contracts.DTOs.WarehouseDto
  fullName: MyApp.Inventory.Application.Contracts.DTOs.WarehouseDto
  nameWithType: WarehouseDto
- uid: MyApp.Inventory.Application.Contracts.DTOs.WarehouseDto.Location
  name: Location
  href: api/MyApp.Inventory.Application.Contracts.DTOs.WarehouseDto.html#MyApp_Inventory_Application_Contracts_DTOs_WarehouseDto_Location
  commentId: P:MyApp.Inventory.Application.Contracts.DTOs.WarehouseDto.Location
  fullName: MyApp.Inventory.Application.Contracts.DTOs.WarehouseDto.Location
  nameWithType: WarehouseDto.Location
- uid: MyApp.Inventory.Application.Contracts.DTOs.WarehouseDto.Location*
  name: Location
  href: api/MyApp.Inventory.Application.Contracts.DTOs.WarehouseDto.html#MyApp_Inventory_Application_Contracts_DTOs_WarehouseDto_Location_
  commentId: Overload:MyApp.Inventory.Application.Contracts.DTOs.WarehouseDto.Location
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.DTOs.WarehouseDto.Location
  nameWithType: WarehouseDto.Location
- uid: MyApp.Inventory.Application.Contracts.DTOs.WarehouseDto.Name
  name: Name
  href: api/MyApp.Inventory.Application.Contracts.DTOs.WarehouseDto.html#MyApp_Inventory_Application_Contracts_DTOs_WarehouseDto_Name
  commentId: P:MyApp.Inventory.Application.Contracts.DTOs.WarehouseDto.Name
  fullName: MyApp.Inventory.Application.Contracts.DTOs.WarehouseDto.Name
  nameWithType: WarehouseDto.Name
- uid: MyApp.Inventory.Application.Contracts.DTOs.WarehouseDto.Name*
  name: Name
  href: api/MyApp.Inventory.Application.Contracts.DTOs.WarehouseDto.html#MyApp_Inventory_Application_Contracts_DTOs_WarehouseDto_Name_
  commentId: Overload:MyApp.Inventory.Application.Contracts.DTOs.WarehouseDto.Name
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.DTOs.WarehouseDto.Name
  nameWithType: WarehouseDto.Name
- uid: MyApp.Inventory.Application.Contracts.Services
  name: MyApp.Inventory.Application.Contracts.Services
  href: api/MyApp.Inventory.Application.Contracts.Services.html
  commentId: N:MyApp.Inventory.Application.Contracts.Services
  fullName: MyApp.Inventory.Application.Contracts.Services
  nameWithType: MyApp.Inventory.Application.Contracts.Services
- uid: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService
  name: IInventoryTransactionService
  href: api/MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.html
  commentId: T:MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService
  fullName: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService
  nameWithType: IInventoryTransactionService
- uid: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.CreateTransactionAsync(MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto)
  name: CreateTransactionAsync(CreateUpdateInventoryTransactionDto)
  href: api/MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.html#MyApp_Inventory_Application_Contracts_Services_IInventoryTransactionService_CreateTransactionAsync_MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateInventoryTransactionDto_
  commentId: M:MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.CreateTransactionAsync(MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto)
  fullName: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.CreateTransactionAsync(MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto)
  nameWithType: IInventoryTransactionService.CreateTransactionAsync(CreateUpdateInventoryTransactionDto)
- uid: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.CreateTransactionAsync*
  name: CreateTransactionAsync
  href: api/MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.html#MyApp_Inventory_Application_Contracts_Services_IInventoryTransactionService_CreateTransactionAsync_
  commentId: Overload:MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.CreateTransactionAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.CreateTransactionAsync
  nameWithType: IInventoryTransactionService.CreateTransactionAsync
- uid: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.DeleteTransactionAsync(System.Guid)
  name: DeleteTransactionAsync(Guid)
  href: api/MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.html#MyApp_Inventory_Application_Contracts_Services_IInventoryTransactionService_DeleteTransactionAsync_System_Guid_
  commentId: M:MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.DeleteTransactionAsync(System.Guid)
  fullName: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.DeleteTransactionAsync(System.Guid)
  nameWithType: IInventoryTransactionService.DeleteTransactionAsync(Guid)
- uid: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.DeleteTransactionAsync*
  name: DeleteTransactionAsync
  href: api/MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.html#MyApp_Inventory_Application_Contracts_Services_IInventoryTransactionService_DeleteTransactionAsync_
  commentId: Overload:MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.DeleteTransactionAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.DeleteTransactionAsync
  nameWithType: IInventoryTransactionService.DeleteTransactionAsync
- uid: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.GetAllTransactionsAsync
  name: GetAllTransactionsAsync()
  href: api/MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.html#MyApp_Inventory_Application_Contracts_Services_IInventoryTransactionService_GetAllTransactionsAsync
  commentId: M:MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.GetAllTransactionsAsync
  fullName: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.GetAllTransactionsAsync()
  nameWithType: IInventoryTransactionService.GetAllTransactionsAsync()
- uid: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.GetAllTransactionsAsync*
  name: GetAllTransactionsAsync
  href: api/MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.html#MyApp_Inventory_Application_Contracts_Services_IInventoryTransactionService_GetAllTransactionsAsync_
  commentId: Overload:MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.GetAllTransactionsAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.GetAllTransactionsAsync
  nameWithType: IInventoryTransactionService.GetAllTransactionsAsync
- uid: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.GetAllTransactionsPaginatedAsync(System.Int32,System.Int32)
  name: GetAllTransactionsPaginatedAsync(int, int)
  href: api/MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.html#MyApp_Inventory_Application_Contracts_Services_IInventoryTransactionService_GetAllTransactionsPaginatedAsync_System_Int32_System_Int32_
  commentId: M:MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.GetAllTransactionsPaginatedAsync(System.Int32,System.Int32)
  name.vb: GetAllTransactionsPaginatedAsync(Integer, Integer)
  fullName: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.GetAllTransactionsPaginatedAsync(int, int)
  fullName.vb: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.GetAllTransactionsPaginatedAsync(Integer, Integer)
  nameWithType: IInventoryTransactionService.GetAllTransactionsPaginatedAsync(int, int)
  nameWithType.vb: IInventoryTransactionService.GetAllTransactionsPaginatedAsync(Integer, Integer)
- uid: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.GetAllTransactionsPaginatedAsync*
  name: GetAllTransactionsPaginatedAsync
  href: api/MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.html#MyApp_Inventory_Application_Contracts_Services_IInventoryTransactionService_GetAllTransactionsPaginatedAsync_
  commentId: Overload:MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.GetAllTransactionsPaginatedAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.GetAllTransactionsPaginatedAsync
  nameWithType: IInventoryTransactionService.GetAllTransactionsPaginatedAsync
- uid: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.GetTransactionByIdAsync(System.Guid)
  name: GetTransactionByIdAsync(Guid)
  href: api/MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.html#MyApp_Inventory_Application_Contracts_Services_IInventoryTransactionService_GetTransactionByIdAsync_System_Guid_
  commentId: M:MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.GetTransactionByIdAsync(System.Guid)
  fullName: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.GetTransactionByIdAsync(System.Guid)
  nameWithType: IInventoryTransactionService.GetTransactionByIdAsync(Guid)
- uid: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.GetTransactionByIdAsync*
  name: GetTransactionByIdAsync
  href: api/MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.html#MyApp_Inventory_Application_Contracts_Services_IInventoryTransactionService_GetTransactionByIdAsync_
  commentId: Overload:MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.GetTransactionByIdAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.GetTransactionByIdAsync
  nameWithType: IInventoryTransactionService.GetTransactionByIdAsync
- uid: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.GetTransactionsByProductIdAsync(System.Guid)
  name: GetTransactionsByProductIdAsync(Guid)
  href: api/MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.html#MyApp_Inventory_Application_Contracts_Services_IInventoryTransactionService_GetTransactionsByProductIdAsync_System_Guid_
  commentId: M:MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.GetTransactionsByProductIdAsync(System.Guid)
  fullName: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.GetTransactionsByProductIdAsync(System.Guid)
  nameWithType: IInventoryTransactionService.GetTransactionsByProductIdAsync(Guid)
- uid: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.GetTransactionsByProductIdAsync*
  name: GetTransactionsByProductIdAsync
  href: api/MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.html#MyApp_Inventory_Application_Contracts_Services_IInventoryTransactionService_GetTransactionsByProductIdAsync_
  commentId: Overload:MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.GetTransactionsByProductIdAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.GetTransactionsByProductIdAsync
  nameWithType: IInventoryTransactionService.GetTransactionsByProductIdAsync
- uid: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.GetTransactionsByTypeAsync(MyApp.Inventory.Domain.Entities.TransactionType)
  name: GetTransactionsByTypeAsync(TransactionType)
  href: api/MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.html#MyApp_Inventory_Application_Contracts_Services_IInventoryTransactionService_GetTransactionsByTypeAsync_MyApp_Inventory_Domain_Entities_TransactionType_
  commentId: M:MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.GetTransactionsByTypeAsync(MyApp.Inventory.Domain.Entities.TransactionType)
  fullName: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.GetTransactionsByTypeAsync(MyApp.Inventory.Domain.Entities.TransactionType)
  nameWithType: IInventoryTransactionService.GetTransactionsByTypeAsync(TransactionType)
- uid: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.GetTransactionsByTypeAsync*
  name: GetTransactionsByTypeAsync
  href: api/MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.html#MyApp_Inventory_Application_Contracts_Services_IInventoryTransactionService_GetTransactionsByTypeAsync_
  commentId: Overload:MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.GetTransactionsByTypeAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.GetTransactionsByTypeAsync
  nameWithType: IInventoryTransactionService.GetTransactionsByTypeAsync
- uid: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.GetTransactionsByWarehouseIdAsync(System.Guid)
  name: GetTransactionsByWarehouseIdAsync(Guid)
  href: api/MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.html#MyApp_Inventory_Application_Contracts_Services_IInventoryTransactionService_GetTransactionsByWarehouseIdAsync_System_Guid_
  commentId: M:MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.GetTransactionsByWarehouseIdAsync(System.Guid)
  fullName: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.GetTransactionsByWarehouseIdAsync(System.Guid)
  nameWithType: IInventoryTransactionService.GetTransactionsByWarehouseIdAsync(Guid)
- uid: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.GetTransactionsByWarehouseIdAsync*
  name: GetTransactionsByWarehouseIdAsync
  href: api/MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.html#MyApp_Inventory_Application_Contracts_Services_IInventoryTransactionService_GetTransactionsByWarehouseIdAsync_
  commentId: Overload:MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.GetTransactionsByWarehouseIdAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.GetTransactionsByWarehouseIdAsync
  nameWithType: IInventoryTransactionService.GetTransactionsByWarehouseIdAsync
- uid: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.UpdateTransactionAsync(System.Guid,MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto)
  name: UpdateTransactionAsync(Guid, CreateUpdateInventoryTransactionDto)
  href: api/MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.html#MyApp_Inventory_Application_Contracts_Services_IInventoryTransactionService_UpdateTransactionAsync_System_Guid_MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateInventoryTransactionDto_
  commentId: M:MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.UpdateTransactionAsync(System.Guid,MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto)
  fullName: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.UpdateTransactionAsync(System.Guid, MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto)
  nameWithType: IInventoryTransactionService.UpdateTransactionAsync(Guid, CreateUpdateInventoryTransactionDto)
- uid: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.UpdateTransactionAsync*
  name: UpdateTransactionAsync
  href: api/MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.html#MyApp_Inventory_Application_Contracts_Services_IInventoryTransactionService_UpdateTransactionAsync_
  commentId: Overload:MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.UpdateTransactionAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.Services.IInventoryTransactionService.UpdateTransactionAsync
  nameWithType: IInventoryTransactionService.UpdateTransactionAsync
- uid: MyApp.Inventory.Application.Contracts.Services.IProductService
  name: IProductService
  href: api/MyApp.Inventory.Application.Contracts.Services.IProductService.html
  commentId: T:MyApp.Inventory.Application.Contracts.Services.IProductService
  fullName: MyApp.Inventory.Application.Contracts.Services.IProductService
  nameWithType: IProductService
- uid: MyApp.Inventory.Application.Contracts.Services.IProductService.CreateProductAsync(MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto)
  name: CreateProductAsync(CreateUpdateProductDto)
  href: api/MyApp.Inventory.Application.Contracts.Services.IProductService.html#MyApp_Inventory_Application_Contracts_Services_IProductService_CreateProductAsync_MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateProductDto_
  commentId: M:MyApp.Inventory.Application.Contracts.Services.IProductService.CreateProductAsync(MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto)
  fullName: MyApp.Inventory.Application.Contracts.Services.IProductService.CreateProductAsync(MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto)
  nameWithType: IProductService.CreateProductAsync(CreateUpdateProductDto)
- uid: MyApp.Inventory.Application.Contracts.Services.IProductService.CreateProductAsync*
  name: CreateProductAsync
  href: api/MyApp.Inventory.Application.Contracts.Services.IProductService.html#MyApp_Inventory_Application_Contracts_Services_IProductService_CreateProductAsync_
  commentId: Overload:MyApp.Inventory.Application.Contracts.Services.IProductService.CreateProductAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.Services.IProductService.CreateProductAsync
  nameWithType: IProductService.CreateProductAsync
- uid: MyApp.Inventory.Application.Contracts.Services.IProductService.DeleteProductAsync(System.Guid)
  name: DeleteProductAsync(Guid)
  href: api/MyApp.Inventory.Application.Contracts.Services.IProductService.html#MyApp_Inventory_Application_Contracts_Services_IProductService_DeleteProductAsync_System_Guid_
  commentId: M:MyApp.Inventory.Application.Contracts.Services.IProductService.DeleteProductAsync(System.Guid)
  fullName: MyApp.Inventory.Application.Contracts.Services.IProductService.DeleteProductAsync(System.Guid)
  nameWithType: IProductService.DeleteProductAsync(Guid)
- uid: MyApp.Inventory.Application.Contracts.Services.IProductService.DeleteProductAsync*
  name: DeleteProductAsync
  href: api/MyApp.Inventory.Application.Contracts.Services.IProductService.html#MyApp_Inventory_Application_Contracts_Services_IProductService_DeleteProductAsync_
  commentId: Overload:MyApp.Inventory.Application.Contracts.Services.IProductService.DeleteProductAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.Services.IProductService.DeleteProductAsync
  nameWithType: IProductService.DeleteProductAsync
- uid: MyApp.Inventory.Application.Contracts.Services.IProductService.GetAllProductsAsync
  name: GetAllProductsAsync()
  href: api/MyApp.Inventory.Application.Contracts.Services.IProductService.html#MyApp_Inventory_Application_Contracts_Services_IProductService_GetAllProductsAsync
  commentId: M:MyApp.Inventory.Application.Contracts.Services.IProductService.GetAllProductsAsync
  fullName: MyApp.Inventory.Application.Contracts.Services.IProductService.GetAllProductsAsync()
  nameWithType: IProductService.GetAllProductsAsync()
- uid: MyApp.Inventory.Application.Contracts.Services.IProductService.GetAllProductsAsync*
  name: GetAllProductsAsync
  href: api/MyApp.Inventory.Application.Contracts.Services.IProductService.html#MyApp_Inventory_Application_Contracts_Services_IProductService_GetAllProductsAsync_
  commentId: Overload:MyApp.Inventory.Application.Contracts.Services.IProductService.GetAllProductsAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.Services.IProductService.GetAllProductsAsync
  nameWithType: IProductService.GetAllProductsAsync
- uid: MyApp.Inventory.Application.Contracts.Services.IProductService.GetAllProductsPaginatedAsync(System.Int32,System.Int32)
  name: GetAllProductsPaginatedAsync(int, int)
  href: api/MyApp.Inventory.Application.Contracts.Services.IProductService.html#MyApp_Inventory_Application_Contracts_Services_IProductService_GetAllProductsPaginatedAsync_System_Int32_System_Int32_
  commentId: M:MyApp.Inventory.Application.Contracts.Services.IProductService.GetAllProductsPaginatedAsync(System.Int32,System.Int32)
  name.vb: GetAllProductsPaginatedAsync(Integer, Integer)
  fullName: MyApp.Inventory.Application.Contracts.Services.IProductService.GetAllProductsPaginatedAsync(int, int)
  fullName.vb: MyApp.Inventory.Application.Contracts.Services.IProductService.GetAllProductsPaginatedAsync(Integer, Integer)
  nameWithType: IProductService.GetAllProductsPaginatedAsync(int, int)
  nameWithType.vb: IProductService.GetAllProductsPaginatedAsync(Integer, Integer)
- uid: MyApp.Inventory.Application.Contracts.Services.IProductService.GetAllProductsPaginatedAsync*
  name: GetAllProductsPaginatedAsync
  href: api/MyApp.Inventory.Application.Contracts.Services.IProductService.html#MyApp_Inventory_Application_Contracts_Services_IProductService_GetAllProductsPaginatedAsync_
  commentId: Overload:MyApp.Inventory.Application.Contracts.Services.IProductService.GetAllProductsPaginatedAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.Services.IProductService.GetAllProductsPaginatedAsync
  nameWithType: IProductService.GetAllProductsPaginatedAsync
- uid: MyApp.Inventory.Application.Contracts.Services.IProductService.GetLowStockProductsAsync
  name: GetLowStockProductsAsync()
  href: api/MyApp.Inventory.Application.Contracts.Services.IProductService.html#MyApp_Inventory_Application_Contracts_Services_IProductService_GetLowStockProductsAsync
  commentId: M:MyApp.Inventory.Application.Contracts.Services.IProductService.GetLowStockProductsAsync
  fullName: MyApp.Inventory.Application.Contracts.Services.IProductService.GetLowStockProductsAsync()
  nameWithType: IProductService.GetLowStockProductsAsync()
- uid: MyApp.Inventory.Application.Contracts.Services.IProductService.GetLowStockProductsAsync*
  name: GetLowStockProductsAsync
  href: api/MyApp.Inventory.Application.Contracts.Services.IProductService.html#MyApp_Inventory_Application_Contracts_Services_IProductService_GetLowStockProductsAsync_
  commentId: Overload:MyApp.Inventory.Application.Contracts.Services.IProductService.GetLowStockProductsAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.Services.IProductService.GetLowStockProductsAsync
  nameWithType: IProductService.GetLowStockProductsAsync
- uid: MyApp.Inventory.Application.Contracts.Services.IProductService.GetProductByIdAsync(System.Guid)
  name: GetProductByIdAsync(Guid)
  href: api/MyApp.Inventory.Application.Contracts.Services.IProductService.html#MyApp_Inventory_Application_Contracts_Services_IProductService_GetProductByIdAsync_System_Guid_
  commentId: M:MyApp.Inventory.Application.Contracts.Services.IProductService.GetProductByIdAsync(System.Guid)
  fullName: MyApp.Inventory.Application.Contracts.Services.IProductService.GetProductByIdAsync(System.Guid)
  nameWithType: IProductService.GetProductByIdAsync(Guid)
- uid: MyApp.Inventory.Application.Contracts.Services.IProductService.GetProductByIdAsync*
  name: GetProductByIdAsync
  href: api/MyApp.Inventory.Application.Contracts.Services.IProductService.html#MyApp_Inventory_Application_Contracts_Services_IProductService_GetProductByIdAsync_
  commentId: Overload:MyApp.Inventory.Application.Contracts.Services.IProductService.GetProductByIdAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.Services.IProductService.GetProductByIdAsync
  nameWithType: IProductService.GetProductByIdAsync
- uid: MyApp.Inventory.Application.Contracts.Services.IProductService.GetProductBySkuAsync(System.String)
  name: GetProductBySkuAsync(string)
  href: api/MyApp.Inventory.Application.Contracts.Services.IProductService.html#MyApp_Inventory_Application_Contracts_Services_IProductService_GetProductBySkuAsync_System_String_
  commentId: M:MyApp.Inventory.Application.Contracts.Services.IProductService.GetProductBySkuAsync(System.String)
  name.vb: GetProductBySkuAsync(String)
  fullName: MyApp.Inventory.Application.Contracts.Services.IProductService.GetProductBySkuAsync(string)
  fullName.vb: MyApp.Inventory.Application.Contracts.Services.IProductService.GetProductBySkuAsync(String)
  nameWithType: IProductService.GetProductBySkuAsync(string)
  nameWithType.vb: IProductService.GetProductBySkuAsync(String)
- uid: MyApp.Inventory.Application.Contracts.Services.IProductService.GetProductBySkuAsync*
  name: GetProductBySkuAsync
  href: api/MyApp.Inventory.Application.Contracts.Services.IProductService.html#MyApp_Inventory_Application_Contracts_Services_IProductService_GetProductBySkuAsync_
  commentId: Overload:MyApp.Inventory.Application.Contracts.Services.IProductService.GetProductBySkuAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.Services.IProductService.GetProductBySkuAsync
  nameWithType: IProductService.GetProductBySkuAsync
- uid: MyApp.Inventory.Application.Contracts.Services.IProductService.UpdateProductAsync(System.Guid,MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto)
  name: UpdateProductAsync(Guid, CreateUpdateProductDto)
  href: api/MyApp.Inventory.Application.Contracts.Services.IProductService.html#MyApp_Inventory_Application_Contracts_Services_IProductService_UpdateProductAsync_System_Guid_MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateProductDto_
  commentId: M:MyApp.Inventory.Application.Contracts.Services.IProductService.UpdateProductAsync(System.Guid,MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto)
  fullName: MyApp.Inventory.Application.Contracts.Services.IProductService.UpdateProductAsync(System.Guid, MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto)
  nameWithType: IProductService.UpdateProductAsync(Guid, CreateUpdateProductDto)
- uid: MyApp.Inventory.Application.Contracts.Services.IProductService.UpdateProductAsync*
  name: UpdateProductAsync
  href: api/MyApp.Inventory.Application.Contracts.Services.IProductService.html#MyApp_Inventory_Application_Contracts_Services_IProductService_UpdateProductAsync_
  commentId: Overload:MyApp.Inventory.Application.Contracts.Services.IProductService.UpdateProductAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.Services.IProductService.UpdateProductAsync
  nameWithType: IProductService.UpdateProductAsync
- uid: MyApp.Inventory.Application.Contracts.Services.IWarehouseService
  name: IWarehouseService
  href: api/MyApp.Inventory.Application.Contracts.Services.IWarehouseService.html
  commentId: T:MyApp.Inventory.Application.Contracts.Services.IWarehouseService
  fullName: MyApp.Inventory.Application.Contracts.Services.IWarehouseService
  nameWithType: IWarehouseService
- uid: MyApp.Inventory.Application.Contracts.Services.IWarehouseService.CreateWarehouseAsync(MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto)
  name: CreateWarehouseAsync(CreateUpdateWarehouseDto)
  href: api/MyApp.Inventory.Application.Contracts.Services.IWarehouseService.html#MyApp_Inventory_Application_Contracts_Services_IWarehouseService_CreateWarehouseAsync_MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateWarehouseDto_
  commentId: M:MyApp.Inventory.Application.Contracts.Services.IWarehouseService.CreateWarehouseAsync(MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto)
  fullName: MyApp.Inventory.Application.Contracts.Services.IWarehouseService.CreateWarehouseAsync(MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto)
  nameWithType: IWarehouseService.CreateWarehouseAsync(CreateUpdateWarehouseDto)
- uid: MyApp.Inventory.Application.Contracts.Services.IWarehouseService.CreateWarehouseAsync*
  name: CreateWarehouseAsync
  href: api/MyApp.Inventory.Application.Contracts.Services.IWarehouseService.html#MyApp_Inventory_Application_Contracts_Services_IWarehouseService_CreateWarehouseAsync_
  commentId: Overload:MyApp.Inventory.Application.Contracts.Services.IWarehouseService.CreateWarehouseAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.Services.IWarehouseService.CreateWarehouseAsync
  nameWithType: IWarehouseService.CreateWarehouseAsync
- uid: MyApp.Inventory.Application.Contracts.Services.IWarehouseService.DeleteWarehouseAsync(System.Guid)
  name: DeleteWarehouseAsync(Guid)
  href: api/MyApp.Inventory.Application.Contracts.Services.IWarehouseService.html#MyApp_Inventory_Application_Contracts_Services_IWarehouseService_DeleteWarehouseAsync_System_Guid_
  commentId: M:MyApp.Inventory.Application.Contracts.Services.IWarehouseService.DeleteWarehouseAsync(System.Guid)
  fullName: MyApp.Inventory.Application.Contracts.Services.IWarehouseService.DeleteWarehouseAsync(System.Guid)
  nameWithType: IWarehouseService.DeleteWarehouseAsync(Guid)
- uid: MyApp.Inventory.Application.Contracts.Services.IWarehouseService.DeleteWarehouseAsync*
  name: DeleteWarehouseAsync
  href: api/MyApp.Inventory.Application.Contracts.Services.IWarehouseService.html#MyApp_Inventory_Application_Contracts_Services_IWarehouseService_DeleteWarehouseAsync_
  commentId: Overload:MyApp.Inventory.Application.Contracts.Services.IWarehouseService.DeleteWarehouseAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.Services.IWarehouseService.DeleteWarehouseAsync
  nameWithType: IWarehouseService.DeleteWarehouseAsync
- uid: MyApp.Inventory.Application.Contracts.Services.IWarehouseService.GetAllWarehousesAsync
  name: GetAllWarehousesAsync()
  href: api/MyApp.Inventory.Application.Contracts.Services.IWarehouseService.html#MyApp_Inventory_Application_Contracts_Services_IWarehouseService_GetAllWarehousesAsync
  commentId: M:MyApp.Inventory.Application.Contracts.Services.IWarehouseService.GetAllWarehousesAsync
  fullName: MyApp.Inventory.Application.Contracts.Services.IWarehouseService.GetAllWarehousesAsync()
  nameWithType: IWarehouseService.GetAllWarehousesAsync()
- uid: MyApp.Inventory.Application.Contracts.Services.IWarehouseService.GetAllWarehousesAsync*
  name: GetAllWarehousesAsync
  href: api/MyApp.Inventory.Application.Contracts.Services.IWarehouseService.html#MyApp_Inventory_Application_Contracts_Services_IWarehouseService_GetAllWarehousesAsync_
  commentId: Overload:MyApp.Inventory.Application.Contracts.Services.IWarehouseService.GetAllWarehousesAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.Services.IWarehouseService.GetAllWarehousesAsync
  nameWithType: IWarehouseService.GetAllWarehousesAsync
- uid: MyApp.Inventory.Application.Contracts.Services.IWarehouseService.GetAllWarehousesPaginatedAsync(System.Int32,System.Int32)
  name: GetAllWarehousesPaginatedAsync(int, int)
  href: api/MyApp.Inventory.Application.Contracts.Services.IWarehouseService.html#MyApp_Inventory_Application_Contracts_Services_IWarehouseService_GetAllWarehousesPaginatedAsync_System_Int32_System_Int32_
  commentId: M:MyApp.Inventory.Application.Contracts.Services.IWarehouseService.GetAllWarehousesPaginatedAsync(System.Int32,System.Int32)
  name.vb: GetAllWarehousesPaginatedAsync(Integer, Integer)
  fullName: MyApp.Inventory.Application.Contracts.Services.IWarehouseService.GetAllWarehousesPaginatedAsync(int, int)
  fullName.vb: MyApp.Inventory.Application.Contracts.Services.IWarehouseService.GetAllWarehousesPaginatedAsync(Integer, Integer)
  nameWithType: IWarehouseService.GetAllWarehousesPaginatedAsync(int, int)
  nameWithType.vb: IWarehouseService.GetAllWarehousesPaginatedAsync(Integer, Integer)
- uid: MyApp.Inventory.Application.Contracts.Services.IWarehouseService.GetAllWarehousesPaginatedAsync*
  name: GetAllWarehousesPaginatedAsync
  href: api/MyApp.Inventory.Application.Contracts.Services.IWarehouseService.html#MyApp_Inventory_Application_Contracts_Services_IWarehouseService_GetAllWarehousesPaginatedAsync_
  commentId: Overload:MyApp.Inventory.Application.Contracts.Services.IWarehouseService.GetAllWarehousesPaginatedAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.Services.IWarehouseService.GetAllWarehousesPaginatedAsync
  nameWithType: IWarehouseService.GetAllWarehousesPaginatedAsync
- uid: MyApp.Inventory.Application.Contracts.Services.IWarehouseService.GetWarehouseByIdAsync(System.Guid)
  name: GetWarehouseByIdAsync(Guid)
  href: api/MyApp.Inventory.Application.Contracts.Services.IWarehouseService.html#MyApp_Inventory_Application_Contracts_Services_IWarehouseService_GetWarehouseByIdAsync_System_Guid_
  commentId: M:MyApp.Inventory.Application.Contracts.Services.IWarehouseService.GetWarehouseByIdAsync(System.Guid)
  fullName: MyApp.Inventory.Application.Contracts.Services.IWarehouseService.GetWarehouseByIdAsync(System.Guid)
  nameWithType: IWarehouseService.GetWarehouseByIdAsync(Guid)
- uid: MyApp.Inventory.Application.Contracts.Services.IWarehouseService.GetWarehouseByIdAsync*
  name: GetWarehouseByIdAsync
  href: api/MyApp.Inventory.Application.Contracts.Services.IWarehouseService.html#MyApp_Inventory_Application_Contracts_Services_IWarehouseService_GetWarehouseByIdAsync_
  commentId: Overload:MyApp.Inventory.Application.Contracts.Services.IWarehouseService.GetWarehouseByIdAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.Services.IWarehouseService.GetWarehouseByIdAsync
  nameWithType: IWarehouseService.GetWarehouseByIdAsync
- uid: MyApp.Inventory.Application.Contracts.Services.IWarehouseService.UpdateWarehouseAsync(System.Guid,MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto)
  name: UpdateWarehouseAsync(Guid, CreateUpdateWarehouseDto)
  href: api/MyApp.Inventory.Application.Contracts.Services.IWarehouseService.html#MyApp_Inventory_Application_Contracts_Services_IWarehouseService_UpdateWarehouseAsync_System_Guid_MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateWarehouseDto_
  commentId: M:MyApp.Inventory.Application.Contracts.Services.IWarehouseService.UpdateWarehouseAsync(System.Guid,MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto)
  fullName: MyApp.Inventory.Application.Contracts.Services.IWarehouseService.UpdateWarehouseAsync(System.Guid, MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto)
  nameWithType: IWarehouseService.UpdateWarehouseAsync(Guid, CreateUpdateWarehouseDto)
- uid: MyApp.Inventory.Application.Contracts.Services.IWarehouseService.UpdateWarehouseAsync*
  name: UpdateWarehouseAsync
  href: api/MyApp.Inventory.Application.Contracts.Services.IWarehouseService.html#MyApp_Inventory_Application_Contracts_Services_IWarehouseService_UpdateWarehouseAsync_
  commentId: Overload:MyApp.Inventory.Application.Contracts.Services.IWarehouseService.UpdateWarehouseAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Contracts.Services.IWarehouseService.UpdateWarehouseAsync
  nameWithType: IWarehouseService.UpdateWarehouseAsync
- uid: MyApp.Inventory.Application.Mappings
  name: MyApp.Inventory.Application.Mappings
  href: api/MyApp.Inventory.Application.Mappings.html
  commentId: N:MyApp.Inventory.Application.Mappings
  fullName: MyApp.Inventory.Application.Mappings
  nameWithType: MyApp.Inventory.Application.Mappings
- uid: MyApp.Inventory.Application.Mappings.InventoryMappingProfile
  name: InventoryMappingProfile
  href: api/MyApp.Inventory.Application.Mappings.InventoryMappingProfile.html
  commentId: T:MyApp.Inventory.Application.Mappings.InventoryMappingProfile
  fullName: MyApp.Inventory.Application.Mappings.InventoryMappingProfile
  nameWithType: InventoryMappingProfile
- uid: MyApp.Inventory.Application.Mappings.InventoryMappingProfile.#ctor
  name: InventoryMappingProfile()
  href: api/MyApp.Inventory.Application.Mappings.InventoryMappingProfile.html#MyApp_Inventory_Application_Mappings_InventoryMappingProfile__ctor
  commentId: M:MyApp.Inventory.Application.Mappings.InventoryMappingProfile.#ctor
  name.vb: New()
  fullName: MyApp.Inventory.Application.Mappings.InventoryMappingProfile.InventoryMappingProfile()
  fullName.vb: MyApp.Inventory.Application.Mappings.InventoryMappingProfile.New()
  nameWithType: InventoryMappingProfile.InventoryMappingProfile()
  nameWithType.vb: InventoryMappingProfile.New()
- uid: MyApp.Inventory.Application.Mappings.InventoryMappingProfile.#ctor*
  name: InventoryMappingProfile
  href: api/MyApp.Inventory.Application.Mappings.InventoryMappingProfile.html#MyApp_Inventory_Application_Mappings_InventoryMappingProfile__ctor_
  commentId: Overload:MyApp.Inventory.Application.Mappings.InventoryMappingProfile.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Inventory.Application.Mappings.InventoryMappingProfile.InventoryMappingProfile
  fullName.vb: MyApp.Inventory.Application.Mappings.InventoryMappingProfile.New
  nameWithType: InventoryMappingProfile.InventoryMappingProfile
  nameWithType.vb: InventoryMappingProfile.New
- uid: MyApp.Inventory.Application.Services
  name: MyApp.Inventory.Application.Services
  href: api/MyApp.Inventory.Application.Services.html
  commentId: N:MyApp.Inventory.Application.Services
  fullName: MyApp.Inventory.Application.Services
  nameWithType: MyApp.Inventory.Application.Services
- uid: MyApp.Inventory.Application.Services.InventoryTransactionService
  name: InventoryTransactionService
  href: api/MyApp.Inventory.Application.Services.InventoryTransactionService.html
  commentId: T:MyApp.Inventory.Application.Services.InventoryTransactionService
  fullName: MyApp.Inventory.Application.Services.InventoryTransactionService
  nameWithType: InventoryTransactionService
- uid: MyApp.Inventory.Application.Services.InventoryTransactionService.#ctor(MyApp.Inventory.Domain.Repositories.IInventoryTransactionRepository,MyApp.Inventory.Domain.Repositories.IProductRepository,AutoMapper.IMapper)
  name: InventoryTransactionService(IInventoryTransactionRepository, IProductRepository, IMapper)
  href: api/MyApp.Inventory.Application.Services.InventoryTransactionService.html#MyApp_Inventory_Application_Services_InventoryTransactionService__ctor_MyApp_Inventory_Domain_Repositories_IInventoryTransactionRepository_MyApp_Inventory_Domain_Repositories_IProductRepository_AutoMapper_IMapper_
  commentId: M:MyApp.Inventory.Application.Services.InventoryTransactionService.#ctor(MyApp.Inventory.Domain.Repositories.IInventoryTransactionRepository,MyApp.Inventory.Domain.Repositories.IProductRepository,AutoMapper.IMapper)
  name.vb: New(IInventoryTransactionRepository, IProductRepository, IMapper)
  fullName: MyApp.Inventory.Application.Services.InventoryTransactionService.InventoryTransactionService(MyApp.Inventory.Domain.Repositories.IInventoryTransactionRepository, MyApp.Inventory.Domain.Repositories.IProductRepository, AutoMapper.IMapper)
  fullName.vb: MyApp.Inventory.Application.Services.InventoryTransactionService.New(MyApp.Inventory.Domain.Repositories.IInventoryTransactionRepository, MyApp.Inventory.Domain.Repositories.IProductRepository, AutoMapper.IMapper)
  nameWithType: InventoryTransactionService.InventoryTransactionService(IInventoryTransactionRepository, IProductRepository, IMapper)
  nameWithType.vb: InventoryTransactionService.New(IInventoryTransactionRepository, IProductRepository, IMapper)
- uid: MyApp.Inventory.Application.Services.InventoryTransactionService.#ctor*
  name: InventoryTransactionService
  href: api/MyApp.Inventory.Application.Services.InventoryTransactionService.html#MyApp_Inventory_Application_Services_InventoryTransactionService__ctor_
  commentId: Overload:MyApp.Inventory.Application.Services.InventoryTransactionService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Inventory.Application.Services.InventoryTransactionService.InventoryTransactionService
  fullName.vb: MyApp.Inventory.Application.Services.InventoryTransactionService.New
  nameWithType: InventoryTransactionService.InventoryTransactionService
  nameWithType.vb: InventoryTransactionService.New
- uid: MyApp.Inventory.Application.Services.InventoryTransactionService.CreateTransactionAsync(MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto)
  name: CreateTransactionAsync(CreateUpdateInventoryTransactionDto)
  href: api/MyApp.Inventory.Application.Services.InventoryTransactionService.html#MyApp_Inventory_Application_Services_InventoryTransactionService_CreateTransactionAsync_MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateInventoryTransactionDto_
  commentId: M:MyApp.Inventory.Application.Services.InventoryTransactionService.CreateTransactionAsync(MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto)
  fullName: MyApp.Inventory.Application.Services.InventoryTransactionService.CreateTransactionAsync(MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto)
  nameWithType: InventoryTransactionService.CreateTransactionAsync(CreateUpdateInventoryTransactionDto)
- uid: MyApp.Inventory.Application.Services.InventoryTransactionService.CreateTransactionAsync*
  name: CreateTransactionAsync
  href: api/MyApp.Inventory.Application.Services.InventoryTransactionService.html#MyApp_Inventory_Application_Services_InventoryTransactionService_CreateTransactionAsync_
  commentId: Overload:MyApp.Inventory.Application.Services.InventoryTransactionService.CreateTransactionAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Services.InventoryTransactionService.CreateTransactionAsync
  nameWithType: InventoryTransactionService.CreateTransactionAsync
- uid: MyApp.Inventory.Application.Services.InventoryTransactionService.DeleteTransactionAsync(System.Guid)
  name: DeleteTransactionAsync(Guid)
  href: api/MyApp.Inventory.Application.Services.InventoryTransactionService.html#MyApp_Inventory_Application_Services_InventoryTransactionService_DeleteTransactionAsync_System_Guid_
  commentId: M:MyApp.Inventory.Application.Services.InventoryTransactionService.DeleteTransactionAsync(System.Guid)
  fullName: MyApp.Inventory.Application.Services.InventoryTransactionService.DeleteTransactionAsync(System.Guid)
  nameWithType: InventoryTransactionService.DeleteTransactionAsync(Guid)
- uid: MyApp.Inventory.Application.Services.InventoryTransactionService.DeleteTransactionAsync*
  name: DeleteTransactionAsync
  href: api/MyApp.Inventory.Application.Services.InventoryTransactionService.html#MyApp_Inventory_Application_Services_InventoryTransactionService_DeleteTransactionAsync_
  commentId: Overload:MyApp.Inventory.Application.Services.InventoryTransactionService.DeleteTransactionAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Services.InventoryTransactionService.DeleteTransactionAsync
  nameWithType: InventoryTransactionService.DeleteTransactionAsync
- uid: MyApp.Inventory.Application.Services.InventoryTransactionService.GetAllTransactionsAsync
  name: GetAllTransactionsAsync()
  href: api/MyApp.Inventory.Application.Services.InventoryTransactionService.html#MyApp_Inventory_Application_Services_InventoryTransactionService_GetAllTransactionsAsync
  commentId: M:MyApp.Inventory.Application.Services.InventoryTransactionService.GetAllTransactionsAsync
  fullName: MyApp.Inventory.Application.Services.InventoryTransactionService.GetAllTransactionsAsync()
  nameWithType: InventoryTransactionService.GetAllTransactionsAsync()
- uid: MyApp.Inventory.Application.Services.InventoryTransactionService.GetAllTransactionsAsync*
  name: GetAllTransactionsAsync
  href: api/MyApp.Inventory.Application.Services.InventoryTransactionService.html#MyApp_Inventory_Application_Services_InventoryTransactionService_GetAllTransactionsAsync_
  commentId: Overload:MyApp.Inventory.Application.Services.InventoryTransactionService.GetAllTransactionsAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Services.InventoryTransactionService.GetAllTransactionsAsync
  nameWithType: InventoryTransactionService.GetAllTransactionsAsync
- uid: MyApp.Inventory.Application.Services.InventoryTransactionService.GetAllTransactionsPaginatedAsync(System.Int32,System.Int32)
  name: GetAllTransactionsPaginatedAsync(int, int)
  href: api/MyApp.Inventory.Application.Services.InventoryTransactionService.html#MyApp_Inventory_Application_Services_InventoryTransactionService_GetAllTransactionsPaginatedAsync_System_Int32_System_Int32_
  commentId: M:MyApp.Inventory.Application.Services.InventoryTransactionService.GetAllTransactionsPaginatedAsync(System.Int32,System.Int32)
  name.vb: GetAllTransactionsPaginatedAsync(Integer, Integer)
  fullName: MyApp.Inventory.Application.Services.InventoryTransactionService.GetAllTransactionsPaginatedAsync(int, int)
  fullName.vb: MyApp.Inventory.Application.Services.InventoryTransactionService.GetAllTransactionsPaginatedAsync(Integer, Integer)
  nameWithType: InventoryTransactionService.GetAllTransactionsPaginatedAsync(int, int)
  nameWithType.vb: InventoryTransactionService.GetAllTransactionsPaginatedAsync(Integer, Integer)
- uid: MyApp.Inventory.Application.Services.InventoryTransactionService.GetAllTransactionsPaginatedAsync*
  name: GetAllTransactionsPaginatedAsync
  href: api/MyApp.Inventory.Application.Services.InventoryTransactionService.html#MyApp_Inventory_Application_Services_InventoryTransactionService_GetAllTransactionsPaginatedAsync_
  commentId: Overload:MyApp.Inventory.Application.Services.InventoryTransactionService.GetAllTransactionsPaginatedAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Services.InventoryTransactionService.GetAllTransactionsPaginatedAsync
  nameWithType: InventoryTransactionService.GetAllTransactionsPaginatedAsync
- uid: MyApp.Inventory.Application.Services.InventoryTransactionService.GetTransactionByIdAsync(System.Guid)
  name: GetTransactionByIdAsync(Guid)
  href: api/MyApp.Inventory.Application.Services.InventoryTransactionService.html#MyApp_Inventory_Application_Services_InventoryTransactionService_GetTransactionByIdAsync_System_Guid_
  commentId: M:MyApp.Inventory.Application.Services.InventoryTransactionService.GetTransactionByIdAsync(System.Guid)
  fullName: MyApp.Inventory.Application.Services.InventoryTransactionService.GetTransactionByIdAsync(System.Guid)
  nameWithType: InventoryTransactionService.GetTransactionByIdAsync(Guid)
- uid: MyApp.Inventory.Application.Services.InventoryTransactionService.GetTransactionByIdAsync*
  name: GetTransactionByIdAsync
  href: api/MyApp.Inventory.Application.Services.InventoryTransactionService.html#MyApp_Inventory_Application_Services_InventoryTransactionService_GetTransactionByIdAsync_
  commentId: Overload:MyApp.Inventory.Application.Services.InventoryTransactionService.GetTransactionByIdAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Services.InventoryTransactionService.GetTransactionByIdAsync
  nameWithType: InventoryTransactionService.GetTransactionByIdAsync
- uid: MyApp.Inventory.Application.Services.InventoryTransactionService.GetTransactionsByProductIdAsync(System.Guid)
  name: GetTransactionsByProductIdAsync(Guid)
  href: api/MyApp.Inventory.Application.Services.InventoryTransactionService.html#MyApp_Inventory_Application_Services_InventoryTransactionService_GetTransactionsByProductIdAsync_System_Guid_
  commentId: M:MyApp.Inventory.Application.Services.InventoryTransactionService.GetTransactionsByProductIdAsync(System.Guid)
  fullName: MyApp.Inventory.Application.Services.InventoryTransactionService.GetTransactionsByProductIdAsync(System.Guid)
  nameWithType: InventoryTransactionService.GetTransactionsByProductIdAsync(Guid)
- uid: MyApp.Inventory.Application.Services.InventoryTransactionService.GetTransactionsByProductIdAsync*
  name: GetTransactionsByProductIdAsync
  href: api/MyApp.Inventory.Application.Services.InventoryTransactionService.html#MyApp_Inventory_Application_Services_InventoryTransactionService_GetTransactionsByProductIdAsync_
  commentId: Overload:MyApp.Inventory.Application.Services.InventoryTransactionService.GetTransactionsByProductIdAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Services.InventoryTransactionService.GetTransactionsByProductIdAsync
  nameWithType: InventoryTransactionService.GetTransactionsByProductIdAsync
- uid: MyApp.Inventory.Application.Services.InventoryTransactionService.GetTransactionsByTypeAsync(MyApp.Inventory.Domain.Entities.TransactionType)
  name: GetTransactionsByTypeAsync(TransactionType)
  href: api/MyApp.Inventory.Application.Services.InventoryTransactionService.html#MyApp_Inventory_Application_Services_InventoryTransactionService_GetTransactionsByTypeAsync_MyApp_Inventory_Domain_Entities_TransactionType_
  commentId: M:MyApp.Inventory.Application.Services.InventoryTransactionService.GetTransactionsByTypeAsync(MyApp.Inventory.Domain.Entities.TransactionType)
  fullName: MyApp.Inventory.Application.Services.InventoryTransactionService.GetTransactionsByTypeAsync(MyApp.Inventory.Domain.Entities.TransactionType)
  nameWithType: InventoryTransactionService.GetTransactionsByTypeAsync(TransactionType)
- uid: MyApp.Inventory.Application.Services.InventoryTransactionService.GetTransactionsByTypeAsync*
  name: GetTransactionsByTypeAsync
  href: api/MyApp.Inventory.Application.Services.InventoryTransactionService.html#MyApp_Inventory_Application_Services_InventoryTransactionService_GetTransactionsByTypeAsync_
  commentId: Overload:MyApp.Inventory.Application.Services.InventoryTransactionService.GetTransactionsByTypeAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Services.InventoryTransactionService.GetTransactionsByTypeAsync
  nameWithType: InventoryTransactionService.GetTransactionsByTypeAsync
- uid: MyApp.Inventory.Application.Services.InventoryTransactionService.GetTransactionsByWarehouseIdAsync(System.Guid)
  name: GetTransactionsByWarehouseIdAsync(Guid)
  href: api/MyApp.Inventory.Application.Services.InventoryTransactionService.html#MyApp_Inventory_Application_Services_InventoryTransactionService_GetTransactionsByWarehouseIdAsync_System_Guid_
  commentId: M:MyApp.Inventory.Application.Services.InventoryTransactionService.GetTransactionsByWarehouseIdAsync(System.Guid)
  fullName: MyApp.Inventory.Application.Services.InventoryTransactionService.GetTransactionsByWarehouseIdAsync(System.Guid)
  nameWithType: InventoryTransactionService.GetTransactionsByWarehouseIdAsync(Guid)
- uid: MyApp.Inventory.Application.Services.InventoryTransactionService.GetTransactionsByWarehouseIdAsync*
  name: GetTransactionsByWarehouseIdAsync
  href: api/MyApp.Inventory.Application.Services.InventoryTransactionService.html#MyApp_Inventory_Application_Services_InventoryTransactionService_GetTransactionsByWarehouseIdAsync_
  commentId: Overload:MyApp.Inventory.Application.Services.InventoryTransactionService.GetTransactionsByWarehouseIdAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Services.InventoryTransactionService.GetTransactionsByWarehouseIdAsync
  nameWithType: InventoryTransactionService.GetTransactionsByWarehouseIdAsync
- uid: MyApp.Inventory.Application.Services.InventoryTransactionService.UpdateTransactionAsync(System.Guid,MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto)
  name: UpdateTransactionAsync(Guid, CreateUpdateInventoryTransactionDto)
  href: api/MyApp.Inventory.Application.Services.InventoryTransactionService.html#MyApp_Inventory_Application_Services_InventoryTransactionService_UpdateTransactionAsync_System_Guid_MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateInventoryTransactionDto_
  commentId: M:MyApp.Inventory.Application.Services.InventoryTransactionService.UpdateTransactionAsync(System.Guid,MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto)
  fullName: MyApp.Inventory.Application.Services.InventoryTransactionService.UpdateTransactionAsync(System.Guid, MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateInventoryTransactionDto)
  nameWithType: InventoryTransactionService.UpdateTransactionAsync(Guid, CreateUpdateInventoryTransactionDto)
- uid: MyApp.Inventory.Application.Services.InventoryTransactionService.UpdateTransactionAsync*
  name: UpdateTransactionAsync
  href: api/MyApp.Inventory.Application.Services.InventoryTransactionService.html#MyApp_Inventory_Application_Services_InventoryTransactionService_UpdateTransactionAsync_
  commentId: Overload:MyApp.Inventory.Application.Services.InventoryTransactionService.UpdateTransactionAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Services.InventoryTransactionService.UpdateTransactionAsync
  nameWithType: InventoryTransactionService.UpdateTransactionAsync
- uid: MyApp.Inventory.Application.Services.ProductService
  name: ProductService
  href: api/MyApp.Inventory.Application.Services.ProductService.html
  commentId: T:MyApp.Inventory.Application.Services.ProductService
  fullName: MyApp.Inventory.Application.Services.ProductService
  nameWithType: ProductService
- uid: MyApp.Inventory.Application.Services.ProductService.#ctor(MyApp.Inventory.Domain.Repositories.IProductRepository,AutoMapper.IMapper)
  name: ProductService(IProductRepository, IMapper)
  href: api/MyApp.Inventory.Application.Services.ProductService.html#MyApp_Inventory_Application_Services_ProductService__ctor_MyApp_Inventory_Domain_Repositories_IProductRepository_AutoMapper_IMapper_
  commentId: M:MyApp.Inventory.Application.Services.ProductService.#ctor(MyApp.Inventory.Domain.Repositories.IProductRepository,AutoMapper.IMapper)
  name.vb: New(IProductRepository, IMapper)
  fullName: MyApp.Inventory.Application.Services.ProductService.ProductService(MyApp.Inventory.Domain.Repositories.IProductRepository, AutoMapper.IMapper)
  fullName.vb: MyApp.Inventory.Application.Services.ProductService.New(MyApp.Inventory.Domain.Repositories.IProductRepository, AutoMapper.IMapper)
  nameWithType: ProductService.ProductService(IProductRepository, IMapper)
  nameWithType.vb: ProductService.New(IProductRepository, IMapper)
- uid: MyApp.Inventory.Application.Services.ProductService.#ctor*
  name: ProductService
  href: api/MyApp.Inventory.Application.Services.ProductService.html#MyApp_Inventory_Application_Services_ProductService__ctor_
  commentId: Overload:MyApp.Inventory.Application.Services.ProductService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Inventory.Application.Services.ProductService.ProductService
  fullName.vb: MyApp.Inventory.Application.Services.ProductService.New
  nameWithType: ProductService.ProductService
  nameWithType.vb: ProductService.New
- uid: MyApp.Inventory.Application.Services.ProductService.CreateProductAsync(MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto)
  name: CreateProductAsync(CreateUpdateProductDto)
  href: api/MyApp.Inventory.Application.Services.ProductService.html#MyApp_Inventory_Application_Services_ProductService_CreateProductAsync_MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateProductDto_
  commentId: M:MyApp.Inventory.Application.Services.ProductService.CreateProductAsync(MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto)
  fullName: MyApp.Inventory.Application.Services.ProductService.CreateProductAsync(MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto)
  nameWithType: ProductService.CreateProductAsync(CreateUpdateProductDto)
- uid: MyApp.Inventory.Application.Services.ProductService.CreateProductAsync*
  name: CreateProductAsync
  href: api/MyApp.Inventory.Application.Services.ProductService.html#MyApp_Inventory_Application_Services_ProductService_CreateProductAsync_
  commentId: Overload:MyApp.Inventory.Application.Services.ProductService.CreateProductAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Services.ProductService.CreateProductAsync
  nameWithType: ProductService.CreateProductAsync
- uid: MyApp.Inventory.Application.Services.ProductService.DeleteProductAsync(System.Guid)
  name: DeleteProductAsync(Guid)
  href: api/MyApp.Inventory.Application.Services.ProductService.html#MyApp_Inventory_Application_Services_ProductService_DeleteProductAsync_System_Guid_
  commentId: M:MyApp.Inventory.Application.Services.ProductService.DeleteProductAsync(System.Guid)
  fullName: MyApp.Inventory.Application.Services.ProductService.DeleteProductAsync(System.Guid)
  nameWithType: ProductService.DeleteProductAsync(Guid)
- uid: MyApp.Inventory.Application.Services.ProductService.DeleteProductAsync*
  name: DeleteProductAsync
  href: api/MyApp.Inventory.Application.Services.ProductService.html#MyApp_Inventory_Application_Services_ProductService_DeleteProductAsync_
  commentId: Overload:MyApp.Inventory.Application.Services.ProductService.DeleteProductAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Services.ProductService.DeleteProductAsync
  nameWithType: ProductService.DeleteProductAsync
- uid: MyApp.Inventory.Application.Services.ProductService.GetAllProductsAsync
  name: GetAllProductsAsync()
  href: api/MyApp.Inventory.Application.Services.ProductService.html#MyApp_Inventory_Application_Services_ProductService_GetAllProductsAsync
  commentId: M:MyApp.Inventory.Application.Services.ProductService.GetAllProductsAsync
  fullName: MyApp.Inventory.Application.Services.ProductService.GetAllProductsAsync()
  nameWithType: ProductService.GetAllProductsAsync()
- uid: MyApp.Inventory.Application.Services.ProductService.GetAllProductsAsync*
  name: GetAllProductsAsync
  href: api/MyApp.Inventory.Application.Services.ProductService.html#MyApp_Inventory_Application_Services_ProductService_GetAllProductsAsync_
  commentId: Overload:MyApp.Inventory.Application.Services.ProductService.GetAllProductsAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Services.ProductService.GetAllProductsAsync
  nameWithType: ProductService.GetAllProductsAsync
- uid: MyApp.Inventory.Application.Services.ProductService.GetAllProductsPaginatedAsync(System.Int32,System.Int32)
  name: GetAllProductsPaginatedAsync(int, int)
  href: api/MyApp.Inventory.Application.Services.ProductService.html#MyApp_Inventory_Application_Services_ProductService_GetAllProductsPaginatedAsync_System_Int32_System_Int32_
  commentId: M:MyApp.Inventory.Application.Services.ProductService.GetAllProductsPaginatedAsync(System.Int32,System.Int32)
  name.vb: GetAllProductsPaginatedAsync(Integer, Integer)
  fullName: MyApp.Inventory.Application.Services.ProductService.GetAllProductsPaginatedAsync(int, int)
  fullName.vb: MyApp.Inventory.Application.Services.ProductService.GetAllProductsPaginatedAsync(Integer, Integer)
  nameWithType: ProductService.GetAllProductsPaginatedAsync(int, int)
  nameWithType.vb: ProductService.GetAllProductsPaginatedAsync(Integer, Integer)
- uid: MyApp.Inventory.Application.Services.ProductService.GetAllProductsPaginatedAsync*
  name: GetAllProductsPaginatedAsync
  href: api/MyApp.Inventory.Application.Services.ProductService.html#MyApp_Inventory_Application_Services_ProductService_GetAllProductsPaginatedAsync_
  commentId: Overload:MyApp.Inventory.Application.Services.ProductService.GetAllProductsPaginatedAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Services.ProductService.GetAllProductsPaginatedAsync
  nameWithType: ProductService.GetAllProductsPaginatedAsync
- uid: MyApp.Inventory.Application.Services.ProductService.GetLowStockProductsAsync
  name: GetLowStockProductsAsync()
  href: api/MyApp.Inventory.Application.Services.ProductService.html#MyApp_Inventory_Application_Services_ProductService_GetLowStockProductsAsync
  commentId: M:MyApp.Inventory.Application.Services.ProductService.GetLowStockProductsAsync
  fullName: MyApp.Inventory.Application.Services.ProductService.GetLowStockProductsAsync()
  nameWithType: ProductService.GetLowStockProductsAsync()
- uid: MyApp.Inventory.Application.Services.ProductService.GetLowStockProductsAsync*
  name: GetLowStockProductsAsync
  href: api/MyApp.Inventory.Application.Services.ProductService.html#MyApp_Inventory_Application_Services_ProductService_GetLowStockProductsAsync_
  commentId: Overload:MyApp.Inventory.Application.Services.ProductService.GetLowStockProductsAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Services.ProductService.GetLowStockProductsAsync
  nameWithType: ProductService.GetLowStockProductsAsync
- uid: MyApp.Inventory.Application.Services.ProductService.GetProductByIdAsync(System.Guid)
  name: GetProductByIdAsync(Guid)
  href: api/MyApp.Inventory.Application.Services.ProductService.html#MyApp_Inventory_Application_Services_ProductService_GetProductByIdAsync_System_Guid_
  commentId: M:MyApp.Inventory.Application.Services.ProductService.GetProductByIdAsync(System.Guid)
  fullName: MyApp.Inventory.Application.Services.ProductService.GetProductByIdAsync(System.Guid)
  nameWithType: ProductService.GetProductByIdAsync(Guid)
- uid: MyApp.Inventory.Application.Services.ProductService.GetProductByIdAsync*
  name: GetProductByIdAsync
  href: api/MyApp.Inventory.Application.Services.ProductService.html#MyApp_Inventory_Application_Services_ProductService_GetProductByIdAsync_
  commentId: Overload:MyApp.Inventory.Application.Services.ProductService.GetProductByIdAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Services.ProductService.GetProductByIdAsync
  nameWithType: ProductService.GetProductByIdAsync
- uid: MyApp.Inventory.Application.Services.ProductService.GetProductBySkuAsync(System.String)
  name: GetProductBySkuAsync(string)
  href: api/MyApp.Inventory.Application.Services.ProductService.html#MyApp_Inventory_Application_Services_ProductService_GetProductBySkuAsync_System_String_
  commentId: M:MyApp.Inventory.Application.Services.ProductService.GetProductBySkuAsync(System.String)
  name.vb: GetProductBySkuAsync(String)
  fullName: MyApp.Inventory.Application.Services.ProductService.GetProductBySkuAsync(string)
  fullName.vb: MyApp.Inventory.Application.Services.ProductService.GetProductBySkuAsync(String)
  nameWithType: ProductService.GetProductBySkuAsync(string)
  nameWithType.vb: ProductService.GetProductBySkuAsync(String)
- uid: MyApp.Inventory.Application.Services.ProductService.GetProductBySkuAsync*
  name: GetProductBySkuAsync
  href: api/MyApp.Inventory.Application.Services.ProductService.html#MyApp_Inventory_Application_Services_ProductService_GetProductBySkuAsync_
  commentId: Overload:MyApp.Inventory.Application.Services.ProductService.GetProductBySkuAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Services.ProductService.GetProductBySkuAsync
  nameWithType: ProductService.GetProductBySkuAsync
- uid: MyApp.Inventory.Application.Services.ProductService.UpdateProductAsync(System.Guid,MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto)
  name: UpdateProductAsync(Guid, CreateUpdateProductDto)
  href: api/MyApp.Inventory.Application.Services.ProductService.html#MyApp_Inventory_Application_Services_ProductService_UpdateProductAsync_System_Guid_MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateProductDto_
  commentId: M:MyApp.Inventory.Application.Services.ProductService.UpdateProductAsync(System.Guid,MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto)
  fullName: MyApp.Inventory.Application.Services.ProductService.UpdateProductAsync(System.Guid, MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateProductDto)
  nameWithType: ProductService.UpdateProductAsync(Guid, CreateUpdateProductDto)
- uid: MyApp.Inventory.Application.Services.ProductService.UpdateProductAsync*
  name: UpdateProductAsync
  href: api/MyApp.Inventory.Application.Services.ProductService.html#MyApp_Inventory_Application_Services_ProductService_UpdateProductAsync_
  commentId: Overload:MyApp.Inventory.Application.Services.ProductService.UpdateProductAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Services.ProductService.UpdateProductAsync
  nameWithType: ProductService.UpdateProductAsync
- uid: MyApp.Inventory.Application.Services.WarehouseService
  name: WarehouseService
  href: api/MyApp.Inventory.Application.Services.WarehouseService.html
  commentId: T:MyApp.Inventory.Application.Services.WarehouseService
  fullName: MyApp.Inventory.Application.Services.WarehouseService
  nameWithType: WarehouseService
- uid: MyApp.Inventory.Application.Services.WarehouseService.#ctor(MyApp.Inventory.Domain.Repositories.IWarehouseRepository,AutoMapper.IMapper)
  name: WarehouseService(IWarehouseRepository, IMapper)
  href: api/MyApp.Inventory.Application.Services.WarehouseService.html#MyApp_Inventory_Application_Services_WarehouseService__ctor_MyApp_Inventory_Domain_Repositories_IWarehouseRepository_AutoMapper_IMapper_
  commentId: M:MyApp.Inventory.Application.Services.WarehouseService.#ctor(MyApp.Inventory.Domain.Repositories.IWarehouseRepository,AutoMapper.IMapper)
  name.vb: New(IWarehouseRepository, IMapper)
  fullName: MyApp.Inventory.Application.Services.WarehouseService.WarehouseService(MyApp.Inventory.Domain.Repositories.IWarehouseRepository, AutoMapper.IMapper)
  fullName.vb: MyApp.Inventory.Application.Services.WarehouseService.New(MyApp.Inventory.Domain.Repositories.IWarehouseRepository, AutoMapper.IMapper)
  nameWithType: WarehouseService.WarehouseService(IWarehouseRepository, IMapper)
  nameWithType.vb: WarehouseService.New(IWarehouseRepository, IMapper)
- uid: MyApp.Inventory.Application.Services.WarehouseService.#ctor*
  name: WarehouseService
  href: api/MyApp.Inventory.Application.Services.WarehouseService.html#MyApp_Inventory_Application_Services_WarehouseService__ctor_
  commentId: Overload:MyApp.Inventory.Application.Services.WarehouseService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Inventory.Application.Services.WarehouseService.WarehouseService
  fullName.vb: MyApp.Inventory.Application.Services.WarehouseService.New
  nameWithType: WarehouseService.WarehouseService
  nameWithType.vb: WarehouseService.New
- uid: MyApp.Inventory.Application.Services.WarehouseService.CreateWarehouseAsync(MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto)
  name: CreateWarehouseAsync(CreateUpdateWarehouseDto)
  href: api/MyApp.Inventory.Application.Services.WarehouseService.html#MyApp_Inventory_Application_Services_WarehouseService_CreateWarehouseAsync_MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateWarehouseDto_
  commentId: M:MyApp.Inventory.Application.Services.WarehouseService.CreateWarehouseAsync(MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto)
  fullName: MyApp.Inventory.Application.Services.WarehouseService.CreateWarehouseAsync(MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto)
  nameWithType: WarehouseService.CreateWarehouseAsync(CreateUpdateWarehouseDto)
- uid: MyApp.Inventory.Application.Services.WarehouseService.CreateWarehouseAsync*
  name: CreateWarehouseAsync
  href: api/MyApp.Inventory.Application.Services.WarehouseService.html#MyApp_Inventory_Application_Services_WarehouseService_CreateWarehouseAsync_
  commentId: Overload:MyApp.Inventory.Application.Services.WarehouseService.CreateWarehouseAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Services.WarehouseService.CreateWarehouseAsync
  nameWithType: WarehouseService.CreateWarehouseAsync
- uid: MyApp.Inventory.Application.Services.WarehouseService.DeleteWarehouseAsync(System.Guid)
  name: DeleteWarehouseAsync(Guid)
  href: api/MyApp.Inventory.Application.Services.WarehouseService.html#MyApp_Inventory_Application_Services_WarehouseService_DeleteWarehouseAsync_System_Guid_
  commentId: M:MyApp.Inventory.Application.Services.WarehouseService.DeleteWarehouseAsync(System.Guid)
  fullName: MyApp.Inventory.Application.Services.WarehouseService.DeleteWarehouseAsync(System.Guid)
  nameWithType: WarehouseService.DeleteWarehouseAsync(Guid)
- uid: MyApp.Inventory.Application.Services.WarehouseService.DeleteWarehouseAsync*
  name: DeleteWarehouseAsync
  href: api/MyApp.Inventory.Application.Services.WarehouseService.html#MyApp_Inventory_Application_Services_WarehouseService_DeleteWarehouseAsync_
  commentId: Overload:MyApp.Inventory.Application.Services.WarehouseService.DeleteWarehouseAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Services.WarehouseService.DeleteWarehouseAsync
  nameWithType: WarehouseService.DeleteWarehouseAsync
- uid: MyApp.Inventory.Application.Services.WarehouseService.GetAllWarehousesAsync
  name: GetAllWarehousesAsync()
  href: api/MyApp.Inventory.Application.Services.WarehouseService.html#MyApp_Inventory_Application_Services_WarehouseService_GetAllWarehousesAsync
  commentId: M:MyApp.Inventory.Application.Services.WarehouseService.GetAllWarehousesAsync
  fullName: MyApp.Inventory.Application.Services.WarehouseService.GetAllWarehousesAsync()
  nameWithType: WarehouseService.GetAllWarehousesAsync()
- uid: MyApp.Inventory.Application.Services.WarehouseService.GetAllWarehousesAsync*
  name: GetAllWarehousesAsync
  href: api/MyApp.Inventory.Application.Services.WarehouseService.html#MyApp_Inventory_Application_Services_WarehouseService_GetAllWarehousesAsync_
  commentId: Overload:MyApp.Inventory.Application.Services.WarehouseService.GetAllWarehousesAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Services.WarehouseService.GetAllWarehousesAsync
  nameWithType: WarehouseService.GetAllWarehousesAsync
- uid: MyApp.Inventory.Application.Services.WarehouseService.GetAllWarehousesPaginatedAsync(System.Int32,System.Int32)
  name: GetAllWarehousesPaginatedAsync(int, int)
  href: api/MyApp.Inventory.Application.Services.WarehouseService.html#MyApp_Inventory_Application_Services_WarehouseService_GetAllWarehousesPaginatedAsync_System_Int32_System_Int32_
  commentId: M:MyApp.Inventory.Application.Services.WarehouseService.GetAllWarehousesPaginatedAsync(System.Int32,System.Int32)
  name.vb: GetAllWarehousesPaginatedAsync(Integer, Integer)
  fullName: MyApp.Inventory.Application.Services.WarehouseService.GetAllWarehousesPaginatedAsync(int, int)
  fullName.vb: MyApp.Inventory.Application.Services.WarehouseService.GetAllWarehousesPaginatedAsync(Integer, Integer)
  nameWithType: WarehouseService.GetAllWarehousesPaginatedAsync(int, int)
  nameWithType.vb: WarehouseService.GetAllWarehousesPaginatedAsync(Integer, Integer)
- uid: MyApp.Inventory.Application.Services.WarehouseService.GetAllWarehousesPaginatedAsync*
  name: GetAllWarehousesPaginatedAsync
  href: api/MyApp.Inventory.Application.Services.WarehouseService.html#MyApp_Inventory_Application_Services_WarehouseService_GetAllWarehousesPaginatedAsync_
  commentId: Overload:MyApp.Inventory.Application.Services.WarehouseService.GetAllWarehousesPaginatedAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Services.WarehouseService.GetAllWarehousesPaginatedAsync
  nameWithType: WarehouseService.GetAllWarehousesPaginatedAsync
- uid: MyApp.Inventory.Application.Services.WarehouseService.GetWarehouseByIdAsync(System.Guid)
  name: GetWarehouseByIdAsync(Guid)
  href: api/MyApp.Inventory.Application.Services.WarehouseService.html#MyApp_Inventory_Application_Services_WarehouseService_GetWarehouseByIdAsync_System_Guid_
  commentId: M:MyApp.Inventory.Application.Services.WarehouseService.GetWarehouseByIdAsync(System.Guid)
  fullName: MyApp.Inventory.Application.Services.WarehouseService.GetWarehouseByIdAsync(System.Guid)
  nameWithType: WarehouseService.GetWarehouseByIdAsync(Guid)
- uid: MyApp.Inventory.Application.Services.WarehouseService.GetWarehouseByIdAsync*
  name: GetWarehouseByIdAsync
  href: api/MyApp.Inventory.Application.Services.WarehouseService.html#MyApp_Inventory_Application_Services_WarehouseService_GetWarehouseByIdAsync_
  commentId: Overload:MyApp.Inventory.Application.Services.WarehouseService.GetWarehouseByIdAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Services.WarehouseService.GetWarehouseByIdAsync
  nameWithType: WarehouseService.GetWarehouseByIdAsync
- uid: MyApp.Inventory.Application.Services.WarehouseService.UpdateWarehouseAsync(System.Guid,MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto)
  name: UpdateWarehouseAsync(Guid, CreateUpdateWarehouseDto)
  href: api/MyApp.Inventory.Application.Services.WarehouseService.html#MyApp_Inventory_Application_Services_WarehouseService_UpdateWarehouseAsync_System_Guid_MyApp_Inventory_Application_Contracts_DTOs_CreateUpdateWarehouseDto_
  commentId: M:MyApp.Inventory.Application.Services.WarehouseService.UpdateWarehouseAsync(System.Guid,MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto)
  fullName: MyApp.Inventory.Application.Services.WarehouseService.UpdateWarehouseAsync(System.Guid, MyApp.Inventory.Application.Contracts.DTOs.CreateUpdateWarehouseDto)
  nameWithType: WarehouseService.UpdateWarehouseAsync(Guid, CreateUpdateWarehouseDto)
- uid: MyApp.Inventory.Application.Services.WarehouseService.UpdateWarehouseAsync*
  name: UpdateWarehouseAsync
  href: api/MyApp.Inventory.Application.Services.WarehouseService.html#MyApp_Inventory_Application_Services_WarehouseService_UpdateWarehouseAsync_
  commentId: Overload:MyApp.Inventory.Application.Services.WarehouseService.UpdateWarehouseAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Services.WarehouseService.UpdateWarehouseAsync
  nameWithType: WarehouseService.UpdateWarehouseAsync
- uid: MyApp.Inventory.Application.Tests.Services
  name: MyApp.Inventory.Application.Tests.Services
  href: api/MyApp.Inventory.Application.Tests.Services.html
  commentId: N:MyApp.Inventory.Application.Tests.Services
  fullName: MyApp.Inventory.Application.Tests.Services
  nameWithType: MyApp.Inventory.Application.Tests.Services
- uid: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests
  name: InventoryTransactionServiceTests
  href: api/MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.html
  commentId: T:MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests
  fullName: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests
  nameWithType: InventoryTransactionServiceTests
- uid: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.#ctor
  name: InventoryTransactionServiceTests()
  href: api/MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.html#MyApp_Inventory_Application_Tests_Services_InventoryTransactionServiceTests__ctor
  commentId: M:MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.#ctor
  name.vb: New()
  fullName: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.InventoryTransactionServiceTests()
  fullName.vb: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.New()
  nameWithType: InventoryTransactionServiceTests.InventoryTransactionServiceTests()
  nameWithType.vb: InventoryTransactionServiceTests.New()
- uid: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.#ctor*
  name: InventoryTransactionServiceTests
  href: api/MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.html#MyApp_Inventory_Application_Tests_Services_InventoryTransactionServiceTests__ctor_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.InventoryTransactionServiceTests
  fullName.vb: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.New
  nameWithType: InventoryTransactionServiceTests.InventoryTransactionServiceTests
  nameWithType.vb: InventoryTransactionServiceTests.New
- uid: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.CreateTransactionAsync_WithInsufficientStock_ThrowsInvalidOperationException
  name: CreateTransactionAsync_WithInsufficientStock_ThrowsInvalidOperationException()
  href: api/MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.html#MyApp_Inventory_Application_Tests_Services_InventoryTransactionServiceTests_CreateTransactionAsync_WithInsufficientStock_ThrowsInvalidOperationException
  commentId: M:MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.CreateTransactionAsync_WithInsufficientStock_ThrowsInvalidOperationException
  fullName: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.CreateTransactionAsync_WithInsufficientStock_ThrowsInvalidOperationException()
  nameWithType: InventoryTransactionServiceTests.CreateTransactionAsync_WithInsufficientStock_ThrowsInvalidOperationException()
- uid: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.CreateTransactionAsync_WithInsufficientStock_ThrowsInvalidOperationException*
  name: CreateTransactionAsync_WithInsufficientStock_ThrowsInvalidOperationException
  href: api/MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.html#MyApp_Inventory_Application_Tests_Services_InventoryTransactionServiceTests_CreateTransactionAsync_WithInsufficientStock_ThrowsInvalidOperationException_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.CreateTransactionAsync_WithInsufficientStock_ThrowsInvalidOperationException
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.CreateTransactionAsync_WithInsufficientStock_ThrowsInvalidOperationException
  nameWithType: InventoryTransactionServiceTests.CreateTransactionAsync_WithInsufficientStock_ThrowsInvalidOperationException
- uid: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.CreateTransactionAsync_WithNonExistentProduct_ThrowsKeyNotFoundException
  name: CreateTransactionAsync_WithNonExistentProduct_ThrowsKeyNotFoundException()
  href: api/MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.html#MyApp_Inventory_Application_Tests_Services_InventoryTransactionServiceTests_CreateTransactionAsync_WithNonExistentProduct_ThrowsKeyNotFoundException
  commentId: M:MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.CreateTransactionAsync_WithNonExistentProduct_ThrowsKeyNotFoundException
  fullName: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.CreateTransactionAsync_WithNonExistentProduct_ThrowsKeyNotFoundException()
  nameWithType: InventoryTransactionServiceTests.CreateTransactionAsync_WithNonExistentProduct_ThrowsKeyNotFoundException()
- uid: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.CreateTransactionAsync_WithNonExistentProduct_ThrowsKeyNotFoundException*
  name: CreateTransactionAsync_WithNonExistentProduct_ThrowsKeyNotFoundException
  href: api/MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.html#MyApp_Inventory_Application_Tests_Services_InventoryTransactionServiceTests_CreateTransactionAsync_WithNonExistentProduct_ThrowsKeyNotFoundException_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.CreateTransactionAsync_WithNonExistentProduct_ThrowsKeyNotFoundException
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.CreateTransactionAsync_WithNonExistentProduct_ThrowsKeyNotFoundException
  nameWithType: InventoryTransactionServiceTests.CreateTransactionAsync_WithNonExistentProduct_ThrowsKeyNotFoundException
- uid: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.CreateTransactionAsync_WithValidData_CreatesTransactionAndUpdatesStock
  name: CreateTransactionAsync_WithValidData_CreatesTransactionAndUpdatesStock()
  href: api/MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.html#MyApp_Inventory_Application_Tests_Services_InventoryTransactionServiceTests_CreateTransactionAsync_WithValidData_CreatesTransactionAndUpdatesStock
  commentId: M:MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.CreateTransactionAsync_WithValidData_CreatesTransactionAndUpdatesStock
  fullName: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.CreateTransactionAsync_WithValidData_CreatesTransactionAndUpdatesStock()
  nameWithType: InventoryTransactionServiceTests.CreateTransactionAsync_WithValidData_CreatesTransactionAndUpdatesStock()
- uid: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.CreateTransactionAsync_WithValidData_CreatesTransactionAndUpdatesStock*
  name: CreateTransactionAsync_WithValidData_CreatesTransactionAndUpdatesStock
  href: api/MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.html#MyApp_Inventory_Application_Tests_Services_InventoryTransactionServiceTests_CreateTransactionAsync_WithValidData_CreatesTransactionAndUpdatesStock_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.CreateTransactionAsync_WithValidData_CreatesTransactionAndUpdatesStock
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.CreateTransactionAsync_WithValidData_CreatesTransactionAndUpdatesStock
  nameWithType: InventoryTransactionServiceTests.CreateTransactionAsync_WithValidData_CreatesTransactionAndUpdatesStock
- uid: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.DeleteTransactionAsync_WithExistingTransaction_DeletesAndReversesStock
  name: DeleteTransactionAsync_WithExistingTransaction_DeletesAndReversesStock()
  href: api/MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.html#MyApp_Inventory_Application_Tests_Services_InventoryTransactionServiceTests_DeleteTransactionAsync_WithExistingTransaction_DeletesAndReversesStock
  commentId: M:MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.DeleteTransactionAsync_WithExistingTransaction_DeletesAndReversesStock
  fullName: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.DeleteTransactionAsync_WithExistingTransaction_DeletesAndReversesStock()
  nameWithType: InventoryTransactionServiceTests.DeleteTransactionAsync_WithExistingTransaction_DeletesAndReversesStock()
- uid: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.DeleteTransactionAsync_WithExistingTransaction_DeletesAndReversesStock*
  name: DeleteTransactionAsync_WithExistingTransaction_DeletesAndReversesStock
  href: api/MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.html#MyApp_Inventory_Application_Tests_Services_InventoryTransactionServiceTests_DeleteTransactionAsync_WithExistingTransaction_DeletesAndReversesStock_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.DeleteTransactionAsync_WithExistingTransaction_DeletesAndReversesStock
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.DeleteTransactionAsync_WithExistingTransaction_DeletesAndReversesStock
  nameWithType: InventoryTransactionServiceTests.DeleteTransactionAsync_WithExistingTransaction_DeletesAndReversesStock
- uid: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.DeleteTransactionAsync_WithNonExistentProduct_StillDeletesTransaction
  name: DeleteTransactionAsync_WithNonExistentProduct_StillDeletesTransaction()
  href: api/MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.html#MyApp_Inventory_Application_Tests_Services_InventoryTransactionServiceTests_DeleteTransactionAsync_WithNonExistentProduct_StillDeletesTransaction
  commentId: M:MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.DeleteTransactionAsync_WithNonExistentProduct_StillDeletesTransaction
  fullName: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.DeleteTransactionAsync_WithNonExistentProduct_StillDeletesTransaction()
  nameWithType: InventoryTransactionServiceTests.DeleteTransactionAsync_WithNonExistentProduct_StillDeletesTransaction()
- uid: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.DeleteTransactionAsync_WithNonExistentProduct_StillDeletesTransaction*
  name: DeleteTransactionAsync_WithNonExistentProduct_StillDeletesTransaction
  href: api/MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.html#MyApp_Inventory_Application_Tests_Services_InventoryTransactionServiceTests_DeleteTransactionAsync_WithNonExistentProduct_StillDeletesTransaction_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.DeleteTransactionAsync_WithNonExistentProduct_StillDeletesTransaction
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.DeleteTransactionAsync_WithNonExistentProduct_StillDeletesTransaction
  nameWithType: InventoryTransactionServiceTests.DeleteTransactionAsync_WithNonExistentProduct_StillDeletesTransaction
- uid: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.DeleteTransactionAsync_WithNonExistentTransaction_ThrowsKeyNotFoundException
  name: DeleteTransactionAsync_WithNonExistentTransaction_ThrowsKeyNotFoundException()
  href: api/MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.html#MyApp_Inventory_Application_Tests_Services_InventoryTransactionServiceTests_DeleteTransactionAsync_WithNonExistentTransaction_ThrowsKeyNotFoundException
  commentId: M:MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.DeleteTransactionAsync_WithNonExistentTransaction_ThrowsKeyNotFoundException
  fullName: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.DeleteTransactionAsync_WithNonExistentTransaction_ThrowsKeyNotFoundException()
  nameWithType: InventoryTransactionServiceTests.DeleteTransactionAsync_WithNonExistentTransaction_ThrowsKeyNotFoundException()
- uid: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.DeleteTransactionAsync_WithNonExistentTransaction_ThrowsKeyNotFoundException*
  name: DeleteTransactionAsync_WithNonExistentTransaction_ThrowsKeyNotFoundException
  href: api/MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.html#MyApp_Inventory_Application_Tests_Services_InventoryTransactionServiceTests_DeleteTransactionAsync_WithNonExistentTransaction_ThrowsKeyNotFoundException_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.DeleteTransactionAsync_WithNonExistentTransaction_ThrowsKeyNotFoundException
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.DeleteTransactionAsync_WithNonExistentTransaction_ThrowsKeyNotFoundException
  nameWithType: InventoryTransactionServiceTests.DeleteTransactionAsync_WithNonExistentTransaction_ThrowsKeyNotFoundException
- uid: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.GetAllTransactionsAsync_ReturnsAllTransactions
  name: GetAllTransactionsAsync_ReturnsAllTransactions()
  href: api/MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.html#MyApp_Inventory_Application_Tests_Services_InventoryTransactionServiceTests_GetAllTransactionsAsync_ReturnsAllTransactions
  commentId: M:MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.GetAllTransactionsAsync_ReturnsAllTransactions
  fullName: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.GetAllTransactionsAsync_ReturnsAllTransactions()
  nameWithType: InventoryTransactionServiceTests.GetAllTransactionsAsync_ReturnsAllTransactions()
- uid: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.GetAllTransactionsAsync_ReturnsAllTransactions*
  name: GetAllTransactionsAsync_ReturnsAllTransactions
  href: api/MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.html#MyApp_Inventory_Application_Tests_Services_InventoryTransactionServiceTests_GetAllTransactionsAsync_ReturnsAllTransactions_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.GetAllTransactionsAsync_ReturnsAllTransactions
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.GetAllTransactionsAsync_ReturnsAllTransactions
  nameWithType: InventoryTransactionServiceTests.GetAllTransactionsAsync_ReturnsAllTransactions
- uid: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.GetTransactionByIdAsync_WithExistingId_ReturnsTransactionDto
  name: GetTransactionByIdAsync_WithExistingId_ReturnsTransactionDto()
  href: api/MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.html#MyApp_Inventory_Application_Tests_Services_InventoryTransactionServiceTests_GetTransactionByIdAsync_WithExistingId_ReturnsTransactionDto
  commentId: M:MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.GetTransactionByIdAsync_WithExistingId_ReturnsTransactionDto
  fullName: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.GetTransactionByIdAsync_WithExistingId_ReturnsTransactionDto()
  nameWithType: InventoryTransactionServiceTests.GetTransactionByIdAsync_WithExistingId_ReturnsTransactionDto()
- uid: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.GetTransactionByIdAsync_WithExistingId_ReturnsTransactionDto*
  name: GetTransactionByIdAsync_WithExistingId_ReturnsTransactionDto
  href: api/MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.html#MyApp_Inventory_Application_Tests_Services_InventoryTransactionServiceTests_GetTransactionByIdAsync_WithExistingId_ReturnsTransactionDto_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.GetTransactionByIdAsync_WithExistingId_ReturnsTransactionDto
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.GetTransactionByIdAsync_WithExistingId_ReturnsTransactionDto
  nameWithType: InventoryTransactionServiceTests.GetTransactionByIdAsync_WithExistingId_ReturnsTransactionDto
- uid: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.GetTransactionByIdAsync_WithNonExistentId_ReturnsNull
  name: GetTransactionByIdAsync_WithNonExistentId_ReturnsNull()
  href: api/MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.html#MyApp_Inventory_Application_Tests_Services_InventoryTransactionServiceTests_GetTransactionByIdAsync_WithNonExistentId_ReturnsNull
  commentId: M:MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.GetTransactionByIdAsync_WithNonExistentId_ReturnsNull
  fullName: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.GetTransactionByIdAsync_WithNonExistentId_ReturnsNull()
  nameWithType: InventoryTransactionServiceTests.GetTransactionByIdAsync_WithNonExistentId_ReturnsNull()
- uid: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.GetTransactionByIdAsync_WithNonExistentId_ReturnsNull*
  name: GetTransactionByIdAsync_WithNonExistentId_ReturnsNull
  href: api/MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.html#MyApp_Inventory_Application_Tests_Services_InventoryTransactionServiceTests_GetTransactionByIdAsync_WithNonExistentId_ReturnsNull_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.GetTransactionByIdAsync_WithNonExistentId_ReturnsNull
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.GetTransactionByIdAsync_WithNonExistentId_ReturnsNull
  nameWithType: InventoryTransactionServiceTests.GetTransactionByIdAsync_WithNonExistentId_ReturnsNull
- uid: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.GetTransactionsByProductIdAsync_ReturnsTransactionsForProduct
  name: GetTransactionsByProductIdAsync_ReturnsTransactionsForProduct()
  href: api/MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.html#MyApp_Inventory_Application_Tests_Services_InventoryTransactionServiceTests_GetTransactionsByProductIdAsync_ReturnsTransactionsForProduct
  commentId: M:MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.GetTransactionsByProductIdAsync_ReturnsTransactionsForProduct
  fullName: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.GetTransactionsByProductIdAsync_ReturnsTransactionsForProduct()
  nameWithType: InventoryTransactionServiceTests.GetTransactionsByProductIdAsync_ReturnsTransactionsForProduct()
- uid: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.GetTransactionsByProductIdAsync_ReturnsTransactionsForProduct*
  name: GetTransactionsByProductIdAsync_ReturnsTransactionsForProduct
  href: api/MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.html#MyApp_Inventory_Application_Tests_Services_InventoryTransactionServiceTests_GetTransactionsByProductIdAsync_ReturnsTransactionsForProduct_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.GetTransactionsByProductIdAsync_ReturnsTransactionsForProduct
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.GetTransactionsByProductIdAsync_ReturnsTransactionsForProduct
  nameWithType: InventoryTransactionServiceTests.GetTransactionsByProductIdAsync_ReturnsTransactionsForProduct
- uid: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.GetTransactionsByTypeAsync_ReturnsTransactionsOfType
  name: GetTransactionsByTypeAsync_ReturnsTransactionsOfType()
  href: api/MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.html#MyApp_Inventory_Application_Tests_Services_InventoryTransactionServiceTests_GetTransactionsByTypeAsync_ReturnsTransactionsOfType
  commentId: M:MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.GetTransactionsByTypeAsync_ReturnsTransactionsOfType
  fullName: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.GetTransactionsByTypeAsync_ReturnsTransactionsOfType()
  nameWithType: InventoryTransactionServiceTests.GetTransactionsByTypeAsync_ReturnsTransactionsOfType()
- uid: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.GetTransactionsByTypeAsync_ReturnsTransactionsOfType*
  name: GetTransactionsByTypeAsync_ReturnsTransactionsOfType
  href: api/MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.html#MyApp_Inventory_Application_Tests_Services_InventoryTransactionServiceTests_GetTransactionsByTypeAsync_ReturnsTransactionsOfType_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.GetTransactionsByTypeAsync_ReturnsTransactionsOfType
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.GetTransactionsByTypeAsync_ReturnsTransactionsOfType
  nameWithType: InventoryTransactionServiceTests.GetTransactionsByTypeAsync_ReturnsTransactionsOfType
- uid: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.GetTransactionsByWarehouseIdAsync_ReturnsTransactionsForWarehouse
  name: GetTransactionsByWarehouseIdAsync_ReturnsTransactionsForWarehouse()
  href: api/MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.html#MyApp_Inventory_Application_Tests_Services_InventoryTransactionServiceTests_GetTransactionsByWarehouseIdAsync_ReturnsTransactionsForWarehouse
  commentId: M:MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.GetTransactionsByWarehouseIdAsync_ReturnsTransactionsForWarehouse
  fullName: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.GetTransactionsByWarehouseIdAsync_ReturnsTransactionsForWarehouse()
  nameWithType: InventoryTransactionServiceTests.GetTransactionsByWarehouseIdAsync_ReturnsTransactionsForWarehouse()
- uid: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.GetTransactionsByWarehouseIdAsync_ReturnsTransactionsForWarehouse*
  name: GetTransactionsByWarehouseIdAsync_ReturnsTransactionsForWarehouse
  href: api/MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.html#MyApp_Inventory_Application_Tests_Services_InventoryTransactionServiceTests_GetTransactionsByWarehouseIdAsync_ReturnsTransactionsForWarehouse_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.GetTransactionsByWarehouseIdAsync_ReturnsTransactionsForWarehouse
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.GetTransactionsByWarehouseIdAsync_ReturnsTransactionsForWarehouse
  nameWithType: InventoryTransactionServiceTests.GetTransactionsByWarehouseIdAsync_ReturnsTransactionsForWarehouse
- uid: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.UpdateTransactionAsync_WithInsufficientStock_ThrowsInvalidOperationException
  name: UpdateTransactionAsync_WithInsufficientStock_ThrowsInvalidOperationException()
  href: api/MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.html#MyApp_Inventory_Application_Tests_Services_InventoryTransactionServiceTests_UpdateTransactionAsync_WithInsufficientStock_ThrowsInvalidOperationException
  commentId: M:MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.UpdateTransactionAsync_WithInsufficientStock_ThrowsInvalidOperationException
  fullName: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.UpdateTransactionAsync_WithInsufficientStock_ThrowsInvalidOperationException()
  nameWithType: InventoryTransactionServiceTests.UpdateTransactionAsync_WithInsufficientStock_ThrowsInvalidOperationException()
- uid: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.UpdateTransactionAsync_WithInsufficientStock_ThrowsInvalidOperationException*
  name: UpdateTransactionAsync_WithInsufficientStock_ThrowsInvalidOperationException
  href: api/MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.html#MyApp_Inventory_Application_Tests_Services_InventoryTransactionServiceTests_UpdateTransactionAsync_WithInsufficientStock_ThrowsInvalidOperationException_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.UpdateTransactionAsync_WithInsufficientStock_ThrowsInvalidOperationException
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.UpdateTransactionAsync_WithInsufficientStock_ThrowsInvalidOperationException
  nameWithType: InventoryTransactionServiceTests.UpdateTransactionAsync_WithInsufficientStock_ThrowsInvalidOperationException
- uid: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.UpdateTransactionAsync_WithNonExistentTransaction_ThrowsKeyNotFoundException
  name: UpdateTransactionAsync_WithNonExistentTransaction_ThrowsKeyNotFoundException()
  href: api/MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.html#MyApp_Inventory_Application_Tests_Services_InventoryTransactionServiceTests_UpdateTransactionAsync_WithNonExistentTransaction_ThrowsKeyNotFoundException
  commentId: M:MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.UpdateTransactionAsync_WithNonExistentTransaction_ThrowsKeyNotFoundException
  fullName: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.UpdateTransactionAsync_WithNonExistentTransaction_ThrowsKeyNotFoundException()
  nameWithType: InventoryTransactionServiceTests.UpdateTransactionAsync_WithNonExistentTransaction_ThrowsKeyNotFoundException()
- uid: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.UpdateTransactionAsync_WithNonExistentTransaction_ThrowsKeyNotFoundException*
  name: UpdateTransactionAsync_WithNonExistentTransaction_ThrowsKeyNotFoundException
  href: api/MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.html#MyApp_Inventory_Application_Tests_Services_InventoryTransactionServiceTests_UpdateTransactionAsync_WithNonExistentTransaction_ThrowsKeyNotFoundException_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.UpdateTransactionAsync_WithNonExistentTransaction_ThrowsKeyNotFoundException
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.UpdateTransactionAsync_WithNonExistentTransaction_ThrowsKeyNotFoundException
  nameWithType: InventoryTransactionServiceTests.UpdateTransactionAsync_WithNonExistentTransaction_ThrowsKeyNotFoundException
- uid: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.UpdateTransactionAsync_WithValidData_UpdatesTransactionAndStock
  name: UpdateTransactionAsync_WithValidData_UpdatesTransactionAndStock()
  href: api/MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.html#MyApp_Inventory_Application_Tests_Services_InventoryTransactionServiceTests_UpdateTransactionAsync_WithValidData_UpdatesTransactionAndStock
  commentId: M:MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.UpdateTransactionAsync_WithValidData_UpdatesTransactionAndStock
  fullName: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.UpdateTransactionAsync_WithValidData_UpdatesTransactionAndStock()
  nameWithType: InventoryTransactionServiceTests.UpdateTransactionAsync_WithValidData_UpdatesTransactionAndStock()
- uid: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.UpdateTransactionAsync_WithValidData_UpdatesTransactionAndStock*
  name: UpdateTransactionAsync_WithValidData_UpdatesTransactionAndStock
  href: api/MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.html#MyApp_Inventory_Application_Tests_Services_InventoryTransactionServiceTests_UpdateTransactionAsync_WithValidData_UpdatesTransactionAndStock_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.UpdateTransactionAsync_WithValidData_UpdatesTransactionAndStock
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.InventoryTransactionServiceTests.UpdateTransactionAsync_WithValidData_UpdatesTransactionAndStock
  nameWithType: InventoryTransactionServiceTests.UpdateTransactionAsync_WithValidData_UpdatesTransactionAndStock
- uid: MyApp.Inventory.Application.Tests.Services.ProductServiceTests
  name: ProductServiceTests
  href: api/MyApp.Inventory.Application.Tests.Services.ProductServiceTests.html
  commentId: T:MyApp.Inventory.Application.Tests.Services.ProductServiceTests
  fullName: MyApp.Inventory.Application.Tests.Services.ProductServiceTests
  nameWithType: ProductServiceTests
- uid: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.#ctor
  name: ProductServiceTests()
  href: api/MyApp.Inventory.Application.Tests.Services.ProductServiceTests.html#MyApp_Inventory_Application_Tests_Services_ProductServiceTests__ctor
  commentId: M:MyApp.Inventory.Application.Tests.Services.ProductServiceTests.#ctor
  name.vb: New()
  fullName: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.ProductServiceTests()
  fullName.vb: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.New()
  nameWithType: ProductServiceTests.ProductServiceTests()
  nameWithType.vb: ProductServiceTests.New()
- uid: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.#ctor*
  name: ProductServiceTests
  href: api/MyApp.Inventory.Application.Tests.Services.ProductServiceTests.html#MyApp_Inventory_Application_Tests_Services_ProductServiceTests__ctor_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.ProductServiceTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.ProductServiceTests
  fullName.vb: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.New
  nameWithType: ProductServiceTests.ProductServiceTests
  nameWithType.vb: ProductServiceTests.New
- uid: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.CreateProductAsync_WithDuplicateSku_ThrowsInvalidOperationException
  name: CreateProductAsync_WithDuplicateSku_ThrowsInvalidOperationException()
  href: api/MyApp.Inventory.Application.Tests.Services.ProductServiceTests.html#MyApp_Inventory_Application_Tests_Services_ProductServiceTests_CreateProductAsync_WithDuplicateSku_ThrowsInvalidOperationException
  commentId: M:MyApp.Inventory.Application.Tests.Services.ProductServiceTests.CreateProductAsync_WithDuplicateSku_ThrowsInvalidOperationException
  fullName: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.CreateProductAsync_WithDuplicateSku_ThrowsInvalidOperationException()
  nameWithType: ProductServiceTests.CreateProductAsync_WithDuplicateSku_ThrowsInvalidOperationException()
- uid: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.CreateProductAsync_WithDuplicateSku_ThrowsInvalidOperationException*
  name: CreateProductAsync_WithDuplicateSku_ThrowsInvalidOperationException
  href: api/MyApp.Inventory.Application.Tests.Services.ProductServiceTests.html#MyApp_Inventory_Application_Tests_Services_ProductServiceTests_CreateProductAsync_WithDuplicateSku_ThrowsInvalidOperationException_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.ProductServiceTests.CreateProductAsync_WithDuplicateSku_ThrowsInvalidOperationException
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.CreateProductAsync_WithDuplicateSku_ThrowsInvalidOperationException
  nameWithType: ProductServiceTests.CreateProductAsync_WithDuplicateSku_ThrowsInvalidOperationException
- uid: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.CreateProductAsync_WithUniqueSku_CreatesProduct
  name: CreateProductAsync_WithUniqueSku_CreatesProduct()
  href: api/MyApp.Inventory.Application.Tests.Services.ProductServiceTests.html#MyApp_Inventory_Application_Tests_Services_ProductServiceTests_CreateProductAsync_WithUniqueSku_CreatesProduct
  commentId: M:MyApp.Inventory.Application.Tests.Services.ProductServiceTests.CreateProductAsync_WithUniqueSku_CreatesProduct
  fullName: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.CreateProductAsync_WithUniqueSku_CreatesProduct()
  nameWithType: ProductServiceTests.CreateProductAsync_WithUniqueSku_CreatesProduct()
- uid: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.CreateProductAsync_WithUniqueSku_CreatesProduct*
  name: CreateProductAsync_WithUniqueSku_CreatesProduct
  href: api/MyApp.Inventory.Application.Tests.Services.ProductServiceTests.html#MyApp_Inventory_Application_Tests_Services_ProductServiceTests_CreateProductAsync_WithUniqueSku_CreatesProduct_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.ProductServiceTests.CreateProductAsync_WithUniqueSku_CreatesProduct
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.CreateProductAsync_WithUniqueSku_CreatesProduct
  nameWithType: ProductServiceTests.CreateProductAsync_WithUniqueSku_CreatesProduct
- uid: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.DeleteProductAsync_WithExistingProduct_DeletesProduct
  name: DeleteProductAsync_WithExistingProduct_DeletesProduct()
  href: api/MyApp.Inventory.Application.Tests.Services.ProductServiceTests.html#MyApp_Inventory_Application_Tests_Services_ProductServiceTests_DeleteProductAsync_WithExistingProduct_DeletesProduct
  commentId: M:MyApp.Inventory.Application.Tests.Services.ProductServiceTests.DeleteProductAsync_WithExistingProduct_DeletesProduct
  fullName: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.DeleteProductAsync_WithExistingProduct_DeletesProduct()
  nameWithType: ProductServiceTests.DeleteProductAsync_WithExistingProduct_DeletesProduct()
- uid: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.DeleteProductAsync_WithExistingProduct_DeletesProduct*
  name: DeleteProductAsync_WithExistingProduct_DeletesProduct
  href: api/MyApp.Inventory.Application.Tests.Services.ProductServiceTests.html#MyApp_Inventory_Application_Tests_Services_ProductServiceTests_DeleteProductAsync_WithExistingProduct_DeletesProduct_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.ProductServiceTests.DeleteProductAsync_WithExistingProduct_DeletesProduct
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.DeleteProductAsync_WithExistingProduct_DeletesProduct
  nameWithType: ProductServiceTests.DeleteProductAsync_WithExistingProduct_DeletesProduct
- uid: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.DeleteProductAsync_WithNonExistentProduct_ThrowsKeyNotFoundException
  name: DeleteProductAsync_WithNonExistentProduct_ThrowsKeyNotFoundException()
  href: api/MyApp.Inventory.Application.Tests.Services.ProductServiceTests.html#MyApp_Inventory_Application_Tests_Services_ProductServiceTests_DeleteProductAsync_WithNonExistentProduct_ThrowsKeyNotFoundException
  commentId: M:MyApp.Inventory.Application.Tests.Services.ProductServiceTests.DeleteProductAsync_WithNonExistentProduct_ThrowsKeyNotFoundException
  fullName: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.DeleteProductAsync_WithNonExistentProduct_ThrowsKeyNotFoundException()
  nameWithType: ProductServiceTests.DeleteProductAsync_WithNonExistentProduct_ThrowsKeyNotFoundException()
- uid: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.DeleteProductAsync_WithNonExistentProduct_ThrowsKeyNotFoundException*
  name: DeleteProductAsync_WithNonExistentProduct_ThrowsKeyNotFoundException
  href: api/MyApp.Inventory.Application.Tests.Services.ProductServiceTests.html#MyApp_Inventory_Application_Tests_Services_ProductServiceTests_DeleteProductAsync_WithNonExistentProduct_ThrowsKeyNotFoundException_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.ProductServiceTests.DeleteProductAsync_WithNonExistentProduct_ThrowsKeyNotFoundException
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.DeleteProductAsync_WithNonExistentProduct_ThrowsKeyNotFoundException
  nameWithType: ProductServiceTests.DeleteProductAsync_WithNonExistentProduct_ThrowsKeyNotFoundException
- uid: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.GetAllProductsAsync_ReturnsAllProducts
  name: GetAllProductsAsync_ReturnsAllProducts()
  href: api/MyApp.Inventory.Application.Tests.Services.ProductServiceTests.html#MyApp_Inventory_Application_Tests_Services_ProductServiceTests_GetAllProductsAsync_ReturnsAllProducts
  commentId: M:MyApp.Inventory.Application.Tests.Services.ProductServiceTests.GetAllProductsAsync_ReturnsAllProducts
  fullName: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.GetAllProductsAsync_ReturnsAllProducts()
  nameWithType: ProductServiceTests.GetAllProductsAsync_ReturnsAllProducts()
- uid: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.GetAllProductsAsync_ReturnsAllProducts*
  name: GetAllProductsAsync_ReturnsAllProducts
  href: api/MyApp.Inventory.Application.Tests.Services.ProductServiceTests.html#MyApp_Inventory_Application_Tests_Services_ProductServiceTests_GetAllProductsAsync_ReturnsAllProducts_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.ProductServiceTests.GetAllProductsAsync_ReturnsAllProducts
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.GetAllProductsAsync_ReturnsAllProducts
  nameWithType: ProductServiceTests.GetAllProductsAsync_ReturnsAllProducts
- uid: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.GetLowStockProductsAsync_ReturnsLowStockProducts
  name: GetLowStockProductsAsync_ReturnsLowStockProducts()
  href: api/MyApp.Inventory.Application.Tests.Services.ProductServiceTests.html#MyApp_Inventory_Application_Tests_Services_ProductServiceTests_GetLowStockProductsAsync_ReturnsLowStockProducts
  commentId: M:MyApp.Inventory.Application.Tests.Services.ProductServiceTests.GetLowStockProductsAsync_ReturnsLowStockProducts
  fullName: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.GetLowStockProductsAsync_ReturnsLowStockProducts()
  nameWithType: ProductServiceTests.GetLowStockProductsAsync_ReturnsLowStockProducts()
- uid: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.GetLowStockProductsAsync_ReturnsLowStockProducts*
  name: GetLowStockProductsAsync_ReturnsLowStockProducts
  href: api/MyApp.Inventory.Application.Tests.Services.ProductServiceTests.html#MyApp_Inventory_Application_Tests_Services_ProductServiceTests_GetLowStockProductsAsync_ReturnsLowStockProducts_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.ProductServiceTests.GetLowStockProductsAsync_ReturnsLowStockProducts
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.GetLowStockProductsAsync_ReturnsLowStockProducts
  nameWithType: ProductServiceTests.GetLowStockProductsAsync_ReturnsLowStockProducts
- uid: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.GetProductByIdAsync_WithExistingId_ReturnsProductDto
  name: GetProductByIdAsync_WithExistingId_ReturnsProductDto()
  href: api/MyApp.Inventory.Application.Tests.Services.ProductServiceTests.html#MyApp_Inventory_Application_Tests_Services_ProductServiceTests_GetProductByIdAsync_WithExistingId_ReturnsProductDto
  commentId: M:MyApp.Inventory.Application.Tests.Services.ProductServiceTests.GetProductByIdAsync_WithExistingId_ReturnsProductDto
  fullName: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.GetProductByIdAsync_WithExistingId_ReturnsProductDto()
  nameWithType: ProductServiceTests.GetProductByIdAsync_WithExistingId_ReturnsProductDto()
- uid: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.GetProductByIdAsync_WithExistingId_ReturnsProductDto*
  name: GetProductByIdAsync_WithExistingId_ReturnsProductDto
  href: api/MyApp.Inventory.Application.Tests.Services.ProductServiceTests.html#MyApp_Inventory_Application_Tests_Services_ProductServiceTests_GetProductByIdAsync_WithExistingId_ReturnsProductDto_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.ProductServiceTests.GetProductByIdAsync_WithExistingId_ReturnsProductDto
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.GetProductByIdAsync_WithExistingId_ReturnsProductDto
  nameWithType: ProductServiceTests.GetProductByIdAsync_WithExistingId_ReturnsProductDto
- uid: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.GetProductByIdAsync_WithNonExistentId_ReturnsNull
  name: GetProductByIdAsync_WithNonExistentId_ReturnsNull()
  href: api/MyApp.Inventory.Application.Tests.Services.ProductServiceTests.html#MyApp_Inventory_Application_Tests_Services_ProductServiceTests_GetProductByIdAsync_WithNonExistentId_ReturnsNull
  commentId: M:MyApp.Inventory.Application.Tests.Services.ProductServiceTests.GetProductByIdAsync_WithNonExistentId_ReturnsNull
  fullName: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.GetProductByIdAsync_WithNonExistentId_ReturnsNull()
  nameWithType: ProductServiceTests.GetProductByIdAsync_WithNonExistentId_ReturnsNull()
- uid: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.GetProductByIdAsync_WithNonExistentId_ReturnsNull*
  name: GetProductByIdAsync_WithNonExistentId_ReturnsNull
  href: api/MyApp.Inventory.Application.Tests.Services.ProductServiceTests.html#MyApp_Inventory_Application_Tests_Services_ProductServiceTests_GetProductByIdAsync_WithNonExistentId_ReturnsNull_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.ProductServiceTests.GetProductByIdAsync_WithNonExistentId_ReturnsNull
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.GetProductByIdAsync_WithNonExistentId_ReturnsNull
  nameWithType: ProductServiceTests.GetProductByIdAsync_WithNonExistentId_ReturnsNull
- uid: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.GetProductBySkuAsync_WithExistingSku_ReturnsProductDto
  name: GetProductBySkuAsync_WithExistingSku_ReturnsProductDto()
  href: api/MyApp.Inventory.Application.Tests.Services.ProductServiceTests.html#MyApp_Inventory_Application_Tests_Services_ProductServiceTests_GetProductBySkuAsync_WithExistingSku_ReturnsProductDto
  commentId: M:MyApp.Inventory.Application.Tests.Services.ProductServiceTests.GetProductBySkuAsync_WithExistingSku_ReturnsProductDto
  fullName: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.GetProductBySkuAsync_WithExistingSku_ReturnsProductDto()
  nameWithType: ProductServiceTests.GetProductBySkuAsync_WithExistingSku_ReturnsProductDto()
- uid: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.GetProductBySkuAsync_WithExistingSku_ReturnsProductDto*
  name: GetProductBySkuAsync_WithExistingSku_ReturnsProductDto
  href: api/MyApp.Inventory.Application.Tests.Services.ProductServiceTests.html#MyApp_Inventory_Application_Tests_Services_ProductServiceTests_GetProductBySkuAsync_WithExistingSku_ReturnsProductDto_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.ProductServiceTests.GetProductBySkuAsync_WithExistingSku_ReturnsProductDto
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.GetProductBySkuAsync_WithExistingSku_ReturnsProductDto
  nameWithType: ProductServiceTests.GetProductBySkuAsync_WithExistingSku_ReturnsProductDto
- uid: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.GetProductBySkuAsync_WithNonExistentSku_ReturnsNull
  name: GetProductBySkuAsync_WithNonExistentSku_ReturnsNull()
  href: api/MyApp.Inventory.Application.Tests.Services.ProductServiceTests.html#MyApp_Inventory_Application_Tests_Services_ProductServiceTests_GetProductBySkuAsync_WithNonExistentSku_ReturnsNull
  commentId: M:MyApp.Inventory.Application.Tests.Services.ProductServiceTests.GetProductBySkuAsync_WithNonExistentSku_ReturnsNull
  fullName: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.GetProductBySkuAsync_WithNonExistentSku_ReturnsNull()
  nameWithType: ProductServiceTests.GetProductBySkuAsync_WithNonExistentSku_ReturnsNull()
- uid: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.GetProductBySkuAsync_WithNonExistentSku_ReturnsNull*
  name: GetProductBySkuAsync_WithNonExistentSku_ReturnsNull
  href: api/MyApp.Inventory.Application.Tests.Services.ProductServiceTests.html#MyApp_Inventory_Application_Tests_Services_ProductServiceTests_GetProductBySkuAsync_WithNonExistentSku_ReturnsNull_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.ProductServiceTests.GetProductBySkuAsync_WithNonExistentSku_ReturnsNull
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.GetProductBySkuAsync_WithNonExistentSku_ReturnsNull
  nameWithType: ProductServiceTests.GetProductBySkuAsync_WithNonExistentSku_ReturnsNull
- uid: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.UpdateProductAsync_WithDuplicateSku_ThrowsInvalidOperationException
  name: UpdateProductAsync_WithDuplicateSku_ThrowsInvalidOperationException()
  href: api/MyApp.Inventory.Application.Tests.Services.ProductServiceTests.html#MyApp_Inventory_Application_Tests_Services_ProductServiceTests_UpdateProductAsync_WithDuplicateSku_ThrowsInvalidOperationException
  commentId: M:MyApp.Inventory.Application.Tests.Services.ProductServiceTests.UpdateProductAsync_WithDuplicateSku_ThrowsInvalidOperationException
  fullName: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.UpdateProductAsync_WithDuplicateSku_ThrowsInvalidOperationException()
  nameWithType: ProductServiceTests.UpdateProductAsync_WithDuplicateSku_ThrowsInvalidOperationException()
- uid: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.UpdateProductAsync_WithDuplicateSku_ThrowsInvalidOperationException*
  name: UpdateProductAsync_WithDuplicateSku_ThrowsInvalidOperationException
  href: api/MyApp.Inventory.Application.Tests.Services.ProductServiceTests.html#MyApp_Inventory_Application_Tests_Services_ProductServiceTests_UpdateProductAsync_WithDuplicateSku_ThrowsInvalidOperationException_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.ProductServiceTests.UpdateProductAsync_WithDuplicateSku_ThrowsInvalidOperationException
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.UpdateProductAsync_WithDuplicateSku_ThrowsInvalidOperationException
  nameWithType: ProductServiceTests.UpdateProductAsync_WithDuplicateSku_ThrowsInvalidOperationException
- uid: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.UpdateProductAsync_WithExistingProduct_UpdatesSuccessfully
  name: UpdateProductAsync_WithExistingProduct_UpdatesSuccessfully()
  href: api/MyApp.Inventory.Application.Tests.Services.ProductServiceTests.html#MyApp_Inventory_Application_Tests_Services_ProductServiceTests_UpdateProductAsync_WithExistingProduct_UpdatesSuccessfully
  commentId: M:MyApp.Inventory.Application.Tests.Services.ProductServiceTests.UpdateProductAsync_WithExistingProduct_UpdatesSuccessfully
  fullName: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.UpdateProductAsync_WithExistingProduct_UpdatesSuccessfully()
  nameWithType: ProductServiceTests.UpdateProductAsync_WithExistingProduct_UpdatesSuccessfully()
- uid: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.UpdateProductAsync_WithExistingProduct_UpdatesSuccessfully*
  name: UpdateProductAsync_WithExistingProduct_UpdatesSuccessfully
  href: api/MyApp.Inventory.Application.Tests.Services.ProductServiceTests.html#MyApp_Inventory_Application_Tests_Services_ProductServiceTests_UpdateProductAsync_WithExistingProduct_UpdatesSuccessfully_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.ProductServiceTests.UpdateProductAsync_WithExistingProduct_UpdatesSuccessfully
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.UpdateProductAsync_WithExistingProduct_UpdatesSuccessfully
  nameWithType: ProductServiceTests.UpdateProductAsync_WithExistingProduct_UpdatesSuccessfully
- uid: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.UpdateProductAsync_WithNonExistentProduct_ThrowsKeyNotFoundException
  name: UpdateProductAsync_WithNonExistentProduct_ThrowsKeyNotFoundException()
  href: api/MyApp.Inventory.Application.Tests.Services.ProductServiceTests.html#MyApp_Inventory_Application_Tests_Services_ProductServiceTests_UpdateProductAsync_WithNonExistentProduct_ThrowsKeyNotFoundException
  commentId: M:MyApp.Inventory.Application.Tests.Services.ProductServiceTests.UpdateProductAsync_WithNonExistentProduct_ThrowsKeyNotFoundException
  fullName: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.UpdateProductAsync_WithNonExistentProduct_ThrowsKeyNotFoundException()
  nameWithType: ProductServiceTests.UpdateProductAsync_WithNonExistentProduct_ThrowsKeyNotFoundException()
- uid: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.UpdateProductAsync_WithNonExistentProduct_ThrowsKeyNotFoundException*
  name: UpdateProductAsync_WithNonExistentProduct_ThrowsKeyNotFoundException
  href: api/MyApp.Inventory.Application.Tests.Services.ProductServiceTests.html#MyApp_Inventory_Application_Tests_Services_ProductServiceTests_UpdateProductAsync_WithNonExistentProduct_ThrowsKeyNotFoundException_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.ProductServiceTests.UpdateProductAsync_WithNonExistentProduct_ThrowsKeyNotFoundException
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.ProductServiceTests.UpdateProductAsync_WithNonExistentProduct_ThrowsKeyNotFoundException
  nameWithType: ProductServiceTests.UpdateProductAsync_WithNonExistentProduct_ThrowsKeyNotFoundException
- uid: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests
  name: WarehouseServiceTests
  href: api/MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.html
  commentId: T:MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests
  fullName: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests
  nameWithType: WarehouseServiceTests
- uid: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.#ctor
  name: WarehouseServiceTests()
  href: api/MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.html#MyApp_Inventory_Application_Tests_Services_WarehouseServiceTests__ctor
  commentId: M:MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.#ctor
  name.vb: New()
  fullName: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.WarehouseServiceTests()
  fullName.vb: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.New()
  nameWithType: WarehouseServiceTests.WarehouseServiceTests()
  nameWithType.vb: WarehouseServiceTests.New()
- uid: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.#ctor*
  name: WarehouseServiceTests
  href: api/MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.html#MyApp_Inventory_Application_Tests_Services_WarehouseServiceTests__ctor_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.WarehouseServiceTests
  fullName.vb: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.New
  nameWithType: WarehouseServiceTests.WarehouseServiceTests
  nameWithType.vb: WarehouseServiceTests.New
- uid: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.CreateWarehouseAsync_WithDuplicateName_ThrowsInvalidOperationException
  name: CreateWarehouseAsync_WithDuplicateName_ThrowsInvalidOperationException()
  href: api/MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.html#MyApp_Inventory_Application_Tests_Services_WarehouseServiceTests_CreateWarehouseAsync_WithDuplicateName_ThrowsInvalidOperationException
  commentId: M:MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.CreateWarehouseAsync_WithDuplicateName_ThrowsInvalidOperationException
  fullName: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.CreateWarehouseAsync_WithDuplicateName_ThrowsInvalidOperationException()
  nameWithType: WarehouseServiceTests.CreateWarehouseAsync_WithDuplicateName_ThrowsInvalidOperationException()
- uid: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.CreateWarehouseAsync_WithDuplicateName_ThrowsInvalidOperationException*
  name: CreateWarehouseAsync_WithDuplicateName_ThrowsInvalidOperationException
  href: api/MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.html#MyApp_Inventory_Application_Tests_Services_WarehouseServiceTests_CreateWarehouseAsync_WithDuplicateName_ThrowsInvalidOperationException_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.CreateWarehouseAsync_WithDuplicateName_ThrowsInvalidOperationException
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.CreateWarehouseAsync_WithDuplicateName_ThrowsInvalidOperationException
  nameWithType: WarehouseServiceTests.CreateWarehouseAsync_WithDuplicateName_ThrowsInvalidOperationException
- uid: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.CreateWarehouseAsync_WithUniqueName_CreatesWarehouse
  name: CreateWarehouseAsync_WithUniqueName_CreatesWarehouse()
  href: api/MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.html#MyApp_Inventory_Application_Tests_Services_WarehouseServiceTests_CreateWarehouseAsync_WithUniqueName_CreatesWarehouse
  commentId: M:MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.CreateWarehouseAsync_WithUniqueName_CreatesWarehouse
  fullName: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.CreateWarehouseAsync_WithUniqueName_CreatesWarehouse()
  nameWithType: WarehouseServiceTests.CreateWarehouseAsync_WithUniqueName_CreatesWarehouse()
- uid: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.CreateWarehouseAsync_WithUniqueName_CreatesWarehouse*
  name: CreateWarehouseAsync_WithUniqueName_CreatesWarehouse
  href: api/MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.html#MyApp_Inventory_Application_Tests_Services_WarehouseServiceTests_CreateWarehouseAsync_WithUniqueName_CreatesWarehouse_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.CreateWarehouseAsync_WithUniqueName_CreatesWarehouse
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.CreateWarehouseAsync_WithUniqueName_CreatesWarehouse
  nameWithType: WarehouseServiceTests.CreateWarehouseAsync_WithUniqueName_CreatesWarehouse
- uid: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.DeleteWarehouseAsync_WithExistingWarehouse_DeletesWarehouse
  name: DeleteWarehouseAsync_WithExistingWarehouse_DeletesWarehouse()
  href: api/MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.html#MyApp_Inventory_Application_Tests_Services_WarehouseServiceTests_DeleteWarehouseAsync_WithExistingWarehouse_DeletesWarehouse
  commentId: M:MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.DeleteWarehouseAsync_WithExistingWarehouse_DeletesWarehouse
  fullName: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.DeleteWarehouseAsync_WithExistingWarehouse_DeletesWarehouse()
  nameWithType: WarehouseServiceTests.DeleteWarehouseAsync_WithExistingWarehouse_DeletesWarehouse()
- uid: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.DeleteWarehouseAsync_WithExistingWarehouse_DeletesWarehouse*
  name: DeleteWarehouseAsync_WithExistingWarehouse_DeletesWarehouse
  href: api/MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.html#MyApp_Inventory_Application_Tests_Services_WarehouseServiceTests_DeleteWarehouseAsync_WithExistingWarehouse_DeletesWarehouse_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.DeleteWarehouseAsync_WithExistingWarehouse_DeletesWarehouse
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.DeleteWarehouseAsync_WithExistingWarehouse_DeletesWarehouse
  nameWithType: WarehouseServiceTests.DeleteWarehouseAsync_WithExistingWarehouse_DeletesWarehouse
- uid: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.DeleteWarehouseAsync_WithNonExistentWarehouse_ThrowsKeyNotFoundException
  name: DeleteWarehouseAsync_WithNonExistentWarehouse_ThrowsKeyNotFoundException()
  href: api/MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.html#MyApp_Inventory_Application_Tests_Services_WarehouseServiceTests_DeleteWarehouseAsync_WithNonExistentWarehouse_ThrowsKeyNotFoundException
  commentId: M:MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.DeleteWarehouseAsync_WithNonExistentWarehouse_ThrowsKeyNotFoundException
  fullName: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.DeleteWarehouseAsync_WithNonExistentWarehouse_ThrowsKeyNotFoundException()
  nameWithType: WarehouseServiceTests.DeleteWarehouseAsync_WithNonExistentWarehouse_ThrowsKeyNotFoundException()
- uid: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.DeleteWarehouseAsync_WithNonExistentWarehouse_ThrowsKeyNotFoundException*
  name: DeleteWarehouseAsync_WithNonExistentWarehouse_ThrowsKeyNotFoundException
  href: api/MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.html#MyApp_Inventory_Application_Tests_Services_WarehouseServiceTests_DeleteWarehouseAsync_WithNonExistentWarehouse_ThrowsKeyNotFoundException_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.DeleteWarehouseAsync_WithNonExistentWarehouse_ThrowsKeyNotFoundException
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.DeleteWarehouseAsync_WithNonExistentWarehouse_ThrowsKeyNotFoundException
  nameWithType: WarehouseServiceTests.DeleteWarehouseAsync_WithNonExistentWarehouse_ThrowsKeyNotFoundException
- uid: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.GetAllWarehousesAsync_ReturnsAllWarehouses
  name: GetAllWarehousesAsync_ReturnsAllWarehouses()
  href: api/MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.html#MyApp_Inventory_Application_Tests_Services_WarehouseServiceTests_GetAllWarehousesAsync_ReturnsAllWarehouses
  commentId: M:MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.GetAllWarehousesAsync_ReturnsAllWarehouses
  fullName: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.GetAllWarehousesAsync_ReturnsAllWarehouses()
  nameWithType: WarehouseServiceTests.GetAllWarehousesAsync_ReturnsAllWarehouses()
- uid: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.GetAllWarehousesAsync_ReturnsAllWarehouses*
  name: GetAllWarehousesAsync_ReturnsAllWarehouses
  href: api/MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.html#MyApp_Inventory_Application_Tests_Services_WarehouseServiceTests_GetAllWarehousesAsync_ReturnsAllWarehouses_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.GetAllWarehousesAsync_ReturnsAllWarehouses
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.GetAllWarehousesAsync_ReturnsAllWarehouses
  nameWithType: WarehouseServiceTests.GetAllWarehousesAsync_ReturnsAllWarehouses
- uid: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.GetWarehouseByIdAsync_WithExistingId_ReturnsWarehouseDto
  name: GetWarehouseByIdAsync_WithExistingId_ReturnsWarehouseDto()
  href: api/MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.html#MyApp_Inventory_Application_Tests_Services_WarehouseServiceTests_GetWarehouseByIdAsync_WithExistingId_ReturnsWarehouseDto
  commentId: M:MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.GetWarehouseByIdAsync_WithExistingId_ReturnsWarehouseDto
  fullName: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.GetWarehouseByIdAsync_WithExistingId_ReturnsWarehouseDto()
  nameWithType: WarehouseServiceTests.GetWarehouseByIdAsync_WithExistingId_ReturnsWarehouseDto()
- uid: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.GetWarehouseByIdAsync_WithExistingId_ReturnsWarehouseDto*
  name: GetWarehouseByIdAsync_WithExistingId_ReturnsWarehouseDto
  href: api/MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.html#MyApp_Inventory_Application_Tests_Services_WarehouseServiceTests_GetWarehouseByIdAsync_WithExistingId_ReturnsWarehouseDto_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.GetWarehouseByIdAsync_WithExistingId_ReturnsWarehouseDto
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.GetWarehouseByIdAsync_WithExistingId_ReturnsWarehouseDto
  nameWithType: WarehouseServiceTests.GetWarehouseByIdAsync_WithExistingId_ReturnsWarehouseDto
- uid: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.GetWarehouseByIdAsync_WithNonExistentId_ReturnsNull
  name: GetWarehouseByIdAsync_WithNonExistentId_ReturnsNull()
  href: api/MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.html#MyApp_Inventory_Application_Tests_Services_WarehouseServiceTests_GetWarehouseByIdAsync_WithNonExistentId_ReturnsNull
  commentId: M:MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.GetWarehouseByIdAsync_WithNonExistentId_ReturnsNull
  fullName: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.GetWarehouseByIdAsync_WithNonExistentId_ReturnsNull()
  nameWithType: WarehouseServiceTests.GetWarehouseByIdAsync_WithNonExistentId_ReturnsNull()
- uid: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.GetWarehouseByIdAsync_WithNonExistentId_ReturnsNull*
  name: GetWarehouseByIdAsync_WithNonExistentId_ReturnsNull
  href: api/MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.html#MyApp_Inventory_Application_Tests_Services_WarehouseServiceTests_GetWarehouseByIdAsync_WithNonExistentId_ReturnsNull_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.GetWarehouseByIdAsync_WithNonExistentId_ReturnsNull
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.GetWarehouseByIdAsync_WithNonExistentId_ReturnsNull
  nameWithType: WarehouseServiceTests.GetWarehouseByIdAsync_WithNonExistentId_ReturnsNull
- uid: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.UpdateWarehouseAsync_WithDuplicateName_ThrowsInvalidOperationException
  name: UpdateWarehouseAsync_WithDuplicateName_ThrowsInvalidOperationException()
  href: api/MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.html#MyApp_Inventory_Application_Tests_Services_WarehouseServiceTests_UpdateWarehouseAsync_WithDuplicateName_ThrowsInvalidOperationException
  commentId: M:MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.UpdateWarehouseAsync_WithDuplicateName_ThrowsInvalidOperationException
  fullName: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.UpdateWarehouseAsync_WithDuplicateName_ThrowsInvalidOperationException()
  nameWithType: WarehouseServiceTests.UpdateWarehouseAsync_WithDuplicateName_ThrowsInvalidOperationException()
- uid: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.UpdateWarehouseAsync_WithDuplicateName_ThrowsInvalidOperationException*
  name: UpdateWarehouseAsync_WithDuplicateName_ThrowsInvalidOperationException
  href: api/MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.html#MyApp_Inventory_Application_Tests_Services_WarehouseServiceTests_UpdateWarehouseAsync_WithDuplicateName_ThrowsInvalidOperationException_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.UpdateWarehouseAsync_WithDuplicateName_ThrowsInvalidOperationException
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.UpdateWarehouseAsync_WithDuplicateName_ThrowsInvalidOperationException
  nameWithType: WarehouseServiceTests.UpdateWarehouseAsync_WithDuplicateName_ThrowsInvalidOperationException
- uid: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.UpdateWarehouseAsync_WithExistingWarehouse_UpdatesSuccessfully
  name: UpdateWarehouseAsync_WithExistingWarehouse_UpdatesSuccessfully()
  href: api/MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.html#MyApp_Inventory_Application_Tests_Services_WarehouseServiceTests_UpdateWarehouseAsync_WithExistingWarehouse_UpdatesSuccessfully
  commentId: M:MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.UpdateWarehouseAsync_WithExistingWarehouse_UpdatesSuccessfully
  fullName: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.UpdateWarehouseAsync_WithExistingWarehouse_UpdatesSuccessfully()
  nameWithType: WarehouseServiceTests.UpdateWarehouseAsync_WithExistingWarehouse_UpdatesSuccessfully()
- uid: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.UpdateWarehouseAsync_WithExistingWarehouse_UpdatesSuccessfully*
  name: UpdateWarehouseAsync_WithExistingWarehouse_UpdatesSuccessfully
  href: api/MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.html#MyApp_Inventory_Application_Tests_Services_WarehouseServiceTests_UpdateWarehouseAsync_WithExistingWarehouse_UpdatesSuccessfully_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.UpdateWarehouseAsync_WithExistingWarehouse_UpdatesSuccessfully
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.UpdateWarehouseAsync_WithExistingWarehouse_UpdatesSuccessfully
  nameWithType: WarehouseServiceTests.UpdateWarehouseAsync_WithExistingWarehouse_UpdatesSuccessfully
- uid: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.UpdateWarehouseAsync_WithNonExistentWarehouse_ThrowsKeyNotFoundException
  name: UpdateWarehouseAsync_WithNonExistentWarehouse_ThrowsKeyNotFoundException()
  href: api/MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.html#MyApp_Inventory_Application_Tests_Services_WarehouseServiceTests_UpdateWarehouseAsync_WithNonExistentWarehouse_ThrowsKeyNotFoundException
  commentId: M:MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.UpdateWarehouseAsync_WithNonExistentWarehouse_ThrowsKeyNotFoundException
  fullName: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.UpdateWarehouseAsync_WithNonExistentWarehouse_ThrowsKeyNotFoundException()
  nameWithType: WarehouseServiceTests.UpdateWarehouseAsync_WithNonExistentWarehouse_ThrowsKeyNotFoundException()
- uid: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.UpdateWarehouseAsync_WithNonExistentWarehouse_ThrowsKeyNotFoundException*
  name: UpdateWarehouseAsync_WithNonExistentWarehouse_ThrowsKeyNotFoundException
  href: api/MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.html#MyApp_Inventory_Application_Tests_Services_WarehouseServiceTests_UpdateWarehouseAsync_WithNonExistentWarehouse_ThrowsKeyNotFoundException_
  commentId: Overload:MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.UpdateWarehouseAsync_WithNonExistentWarehouse_ThrowsKeyNotFoundException
  isSpec: "True"
  fullName: MyApp.Inventory.Application.Tests.Services.WarehouseServiceTests.UpdateWarehouseAsync_WithNonExistentWarehouse_ThrowsKeyNotFoundException
  nameWithType: WarehouseServiceTests.UpdateWarehouseAsync_WithNonExistentWarehouse_ThrowsKeyNotFoundException
- uid: MyApp.Inventory.Domain.Entities
  name: MyApp.Inventory.Domain.Entities
  href: api/MyApp.Inventory.Domain.Entities.html
  commentId: N:MyApp.Inventory.Domain.Entities
  fullName: MyApp.Inventory.Domain.Entities
  nameWithType: MyApp.Inventory.Domain.Entities
- uid: MyApp.Inventory.Domain.Entities.InventoryTransaction
  name: InventoryTransaction
  href: api/MyApp.Inventory.Domain.Entities.InventoryTransaction.html
  commentId: T:MyApp.Inventory.Domain.Entities.InventoryTransaction
  fullName: MyApp.Inventory.Domain.Entities.InventoryTransaction
  nameWithType: InventoryTransaction
- uid: MyApp.Inventory.Domain.Entities.InventoryTransaction.Product
  name: Product
  href: api/MyApp.Inventory.Domain.Entities.InventoryTransaction.html#MyApp_Inventory_Domain_Entities_InventoryTransaction_Product
  commentId: P:MyApp.Inventory.Domain.Entities.InventoryTransaction.Product
  fullName: MyApp.Inventory.Domain.Entities.InventoryTransaction.Product
  nameWithType: InventoryTransaction.Product
- uid: MyApp.Inventory.Domain.Entities.InventoryTransaction.Product*
  name: Product
  href: api/MyApp.Inventory.Domain.Entities.InventoryTransaction.html#MyApp_Inventory_Domain_Entities_InventoryTransaction_Product_
  commentId: Overload:MyApp.Inventory.Domain.Entities.InventoryTransaction.Product
  isSpec: "True"
  fullName: MyApp.Inventory.Domain.Entities.InventoryTransaction.Product
  nameWithType: InventoryTransaction.Product
- uid: MyApp.Inventory.Domain.Entities.InventoryTransaction.ProductId
  name: ProductId
  href: api/MyApp.Inventory.Domain.Entities.InventoryTransaction.html#MyApp_Inventory_Domain_Entities_InventoryTransaction_ProductId
  commentId: P:MyApp.Inventory.Domain.Entities.InventoryTransaction.ProductId
  fullName: MyApp.Inventory.Domain.Entities.InventoryTransaction.ProductId
  nameWithType: InventoryTransaction.ProductId
- uid: MyApp.Inventory.Domain.Entities.InventoryTransaction.ProductId*
  name: ProductId
  href: api/MyApp.Inventory.Domain.Entities.InventoryTransaction.html#MyApp_Inventory_Domain_Entities_InventoryTransaction_ProductId_
  commentId: Overload:MyApp.Inventory.Domain.Entities.InventoryTransaction.ProductId
  isSpec: "True"
  fullName: MyApp.Inventory.Domain.Entities.InventoryTransaction.ProductId
  nameWithType: InventoryTransaction.ProductId
- uid: MyApp.Inventory.Domain.Entities.InventoryTransaction.QuantityChange
  name: QuantityChange
  href: api/MyApp.Inventory.Domain.Entities.InventoryTransaction.html#MyApp_Inventory_Domain_Entities_InventoryTransaction_QuantityChange
  commentId: P:MyApp.Inventory.Domain.Entities.InventoryTransaction.QuantityChange
  fullName: MyApp.Inventory.Domain.Entities.InventoryTransaction.QuantityChange
  nameWithType: InventoryTransaction.QuantityChange
- uid: MyApp.Inventory.Domain.Entities.InventoryTransaction.QuantityChange*
  name: QuantityChange
  href: api/MyApp.Inventory.Domain.Entities.InventoryTransaction.html#MyApp_Inventory_Domain_Entities_InventoryTransaction_QuantityChange_
  commentId: Overload:MyApp.Inventory.Domain.Entities.InventoryTransaction.QuantityChange
  isSpec: "True"
  fullName: MyApp.Inventory.Domain.Entities.InventoryTransaction.QuantityChange
  nameWithType: InventoryTransaction.QuantityChange
- uid: MyApp.Inventory.Domain.Entities.InventoryTransaction.TransactionDate
  name: TransactionDate
  href: api/MyApp.Inventory.Domain.Entities.InventoryTransaction.html#MyApp_Inventory_Domain_Entities_InventoryTransaction_TransactionDate
  commentId: P:MyApp.Inventory.Domain.Entities.InventoryTransaction.TransactionDate
  fullName: MyApp.Inventory.Domain.Entities.InventoryTransaction.TransactionDate
  nameWithType: InventoryTransaction.TransactionDate
- uid: MyApp.Inventory.Domain.Entities.InventoryTransaction.TransactionDate*
  name: TransactionDate
  href: api/MyApp.Inventory.Domain.Entities.InventoryTransaction.html#MyApp_Inventory_Domain_Entities_InventoryTransaction_TransactionDate_
  commentId: Overload:MyApp.Inventory.Domain.Entities.InventoryTransaction.TransactionDate
  isSpec: "True"
  fullName: MyApp.Inventory.Domain.Entities.InventoryTransaction.TransactionDate
  nameWithType: InventoryTransaction.TransactionDate
- uid: MyApp.Inventory.Domain.Entities.InventoryTransaction.TransactionType
  name: TransactionType
  href: api/MyApp.Inventory.Domain.Entities.InventoryTransaction.html#MyApp_Inventory_Domain_Entities_InventoryTransaction_TransactionType
  commentId: P:MyApp.Inventory.Domain.Entities.InventoryTransaction.TransactionType
  fullName: MyApp.Inventory.Domain.Entities.InventoryTransaction.TransactionType
  nameWithType: InventoryTransaction.TransactionType
- uid: MyApp.Inventory.Domain.Entities.InventoryTransaction.TransactionType*
  name: TransactionType
  href: api/MyApp.Inventory.Domain.Entities.InventoryTransaction.html#MyApp_Inventory_Domain_Entities_InventoryTransaction_TransactionType_
  commentId: Overload:MyApp.Inventory.Domain.Entities.InventoryTransaction.TransactionType
  isSpec: "True"
  fullName: MyApp.Inventory.Domain.Entities.InventoryTransaction.TransactionType
  nameWithType: InventoryTransaction.TransactionType
- uid: MyApp.Inventory.Domain.Entities.InventoryTransaction.Warehouse
  name: Warehouse
  href: api/MyApp.Inventory.Domain.Entities.InventoryTransaction.html#MyApp_Inventory_Domain_Entities_InventoryTransaction_Warehouse
  commentId: P:MyApp.Inventory.Domain.Entities.InventoryTransaction.Warehouse
  fullName: MyApp.Inventory.Domain.Entities.InventoryTransaction.Warehouse
  nameWithType: InventoryTransaction.Warehouse
- uid: MyApp.Inventory.Domain.Entities.InventoryTransaction.Warehouse*
  name: Warehouse
  href: api/MyApp.Inventory.Domain.Entities.InventoryTransaction.html#MyApp_Inventory_Domain_Entities_InventoryTransaction_Warehouse_
  commentId: Overload:MyApp.Inventory.Domain.Entities.InventoryTransaction.Warehouse
  isSpec: "True"
  fullName: MyApp.Inventory.Domain.Entities.InventoryTransaction.Warehouse
  nameWithType: InventoryTransaction.Warehouse
- uid: MyApp.Inventory.Domain.Entities.InventoryTransaction.WarehouseId
  name: WarehouseId
  href: api/MyApp.Inventory.Domain.Entities.InventoryTransaction.html#MyApp_Inventory_Domain_Entities_InventoryTransaction_WarehouseId
  commentId: P:MyApp.Inventory.Domain.Entities.InventoryTransaction.WarehouseId
  fullName: MyApp.Inventory.Domain.Entities.InventoryTransaction.WarehouseId
  nameWithType: InventoryTransaction.WarehouseId
- uid: MyApp.Inventory.Domain.Entities.InventoryTransaction.WarehouseId*
  name: WarehouseId
  href: api/MyApp.Inventory.Domain.Entities.InventoryTransaction.html#MyApp_Inventory_Domain_Entities_InventoryTransaction_WarehouseId_
  commentId: Overload:MyApp.Inventory.Domain.Entities.InventoryTransaction.WarehouseId
  isSpec: "True"
  fullName: MyApp.Inventory.Domain.Entities.InventoryTransaction.WarehouseId
  nameWithType: InventoryTransaction.WarehouseId
- uid: MyApp.Inventory.Domain.Entities.Product
  name: Product
  href: api/MyApp.Inventory.Domain.Entities.Product.html
  commentId: T:MyApp.Inventory.Domain.Entities.Product
  fullName: MyApp.Inventory.Domain.Entities.Product
  nameWithType: Product
- uid: MyApp.Inventory.Domain.Entities.Product.Description
  name: Description
  href: api/MyApp.Inventory.Domain.Entities.Product.html#MyApp_Inventory_Domain_Entities_Product_Description
  commentId: P:MyApp.Inventory.Domain.Entities.Product.Description
  fullName: MyApp.Inventory.Domain.Entities.Product.Description
  nameWithType: Product.Description
- uid: MyApp.Inventory.Domain.Entities.Product.Description*
  name: Description
  href: api/MyApp.Inventory.Domain.Entities.Product.html#MyApp_Inventory_Domain_Entities_Product_Description_
  commentId: Overload:MyApp.Inventory.Domain.Entities.Product.Description
  isSpec: "True"
  fullName: MyApp.Inventory.Domain.Entities.Product.Description
  nameWithType: Product.Description
- uid: MyApp.Inventory.Domain.Entities.Product.InventoryTransactions
  name: InventoryTransactions
  href: api/MyApp.Inventory.Domain.Entities.Product.html#MyApp_Inventory_Domain_Entities_Product_InventoryTransactions
  commentId: P:MyApp.Inventory.Domain.Entities.Product.InventoryTransactions
  fullName: MyApp.Inventory.Domain.Entities.Product.InventoryTransactions
  nameWithType: Product.InventoryTransactions
- uid: MyApp.Inventory.Domain.Entities.Product.InventoryTransactions*
  name: InventoryTransactions
  href: api/MyApp.Inventory.Domain.Entities.Product.html#MyApp_Inventory_Domain_Entities_Product_InventoryTransactions_
  commentId: Overload:MyApp.Inventory.Domain.Entities.Product.InventoryTransactions
  isSpec: "True"
  fullName: MyApp.Inventory.Domain.Entities.Product.InventoryTransactions
  nameWithType: Product.InventoryTransactions
- uid: MyApp.Inventory.Domain.Entities.Product.Name
  name: Name
  href: api/MyApp.Inventory.Domain.Entities.Product.html#MyApp_Inventory_Domain_Entities_Product_Name
  commentId: P:MyApp.Inventory.Domain.Entities.Product.Name
  fullName: MyApp.Inventory.Domain.Entities.Product.Name
  nameWithType: Product.Name
- uid: MyApp.Inventory.Domain.Entities.Product.Name*
  name: Name
  href: api/MyApp.Inventory.Domain.Entities.Product.html#MyApp_Inventory_Domain_Entities_Product_Name_
  commentId: Overload:MyApp.Inventory.Domain.Entities.Product.Name
  isSpec: "True"
  fullName: MyApp.Inventory.Domain.Entities.Product.Name
  nameWithType: Product.Name
- uid: MyApp.Inventory.Domain.Entities.Product.QuantityInStock
  name: QuantityInStock
  href: api/MyApp.Inventory.Domain.Entities.Product.html#MyApp_Inventory_Domain_Entities_Product_QuantityInStock
  commentId: P:MyApp.Inventory.Domain.Entities.Product.QuantityInStock
  fullName: MyApp.Inventory.Domain.Entities.Product.QuantityInStock
  nameWithType: Product.QuantityInStock
- uid: MyApp.Inventory.Domain.Entities.Product.QuantityInStock*
  name: QuantityInStock
  href: api/MyApp.Inventory.Domain.Entities.Product.html#MyApp_Inventory_Domain_Entities_Product_QuantityInStock_
  commentId: Overload:MyApp.Inventory.Domain.Entities.Product.QuantityInStock
  isSpec: "True"
  fullName: MyApp.Inventory.Domain.Entities.Product.QuantityInStock
  nameWithType: Product.QuantityInStock
- uid: MyApp.Inventory.Domain.Entities.Product.ReorderLevel
  name: ReorderLevel
  href: api/MyApp.Inventory.Domain.Entities.Product.html#MyApp_Inventory_Domain_Entities_Product_ReorderLevel
  commentId: P:MyApp.Inventory.Domain.Entities.Product.ReorderLevel
  fullName: MyApp.Inventory.Domain.Entities.Product.ReorderLevel
  nameWithType: Product.ReorderLevel
- uid: MyApp.Inventory.Domain.Entities.Product.ReorderLevel*
  name: ReorderLevel
  href: api/MyApp.Inventory.Domain.Entities.Product.html#MyApp_Inventory_Domain_Entities_Product_ReorderLevel_
  commentId: Overload:MyApp.Inventory.Domain.Entities.Product.ReorderLevel
  isSpec: "True"
  fullName: MyApp.Inventory.Domain.Entities.Product.ReorderLevel
  nameWithType: Product.ReorderLevel
- uid: MyApp.Inventory.Domain.Entities.Product.SKU
  name: SKU
  href: api/MyApp.Inventory.Domain.Entities.Product.html#MyApp_Inventory_Domain_Entities_Product_SKU
  commentId: P:MyApp.Inventory.Domain.Entities.Product.SKU
  fullName: MyApp.Inventory.Domain.Entities.Product.SKU
  nameWithType: Product.SKU
- uid: MyApp.Inventory.Domain.Entities.Product.SKU*
  name: SKU
  href: api/MyApp.Inventory.Domain.Entities.Product.html#MyApp_Inventory_Domain_Entities_Product_SKU_
  commentId: Overload:MyApp.Inventory.Domain.Entities.Product.SKU
  isSpec: "True"
  fullName: MyApp.Inventory.Domain.Entities.Product.SKU
  nameWithType: Product.SKU
- uid: MyApp.Inventory.Domain.Entities.Product.UnitPrice
  name: UnitPrice
  href: api/MyApp.Inventory.Domain.Entities.Product.html#MyApp_Inventory_Domain_Entities_Product_UnitPrice
  commentId: P:MyApp.Inventory.Domain.Entities.Product.UnitPrice
  fullName: MyApp.Inventory.Domain.Entities.Product.UnitPrice
  nameWithType: Product.UnitPrice
- uid: MyApp.Inventory.Domain.Entities.Product.UnitPrice*
  name: UnitPrice
  href: api/MyApp.Inventory.Domain.Entities.Product.html#MyApp_Inventory_Domain_Entities_Product_UnitPrice_
  commentId: Overload:MyApp.Inventory.Domain.Entities.Product.UnitPrice
  isSpec: "True"
  fullName: MyApp.Inventory.Domain.Entities.Product.UnitPrice
  nameWithType: Product.UnitPrice
- uid: MyApp.Inventory.Domain.Entities.TransactionType
  name: TransactionType
  href: api/MyApp.Inventory.Domain.Entities.TransactionType.html
  commentId: T:MyApp.Inventory.Domain.Entities.TransactionType
  fullName: MyApp.Inventory.Domain.Entities.TransactionType
  nameWithType: TransactionType
- uid: MyApp.Inventory.Domain.Entities.TransactionType.Adjustment
  name: Adjustment
  href: api/MyApp.Inventory.Domain.Entities.TransactionType.html#MyApp_Inventory_Domain_Entities_TransactionType_Adjustment
  commentId: F:MyApp.Inventory.Domain.Entities.TransactionType.Adjustment
  fullName: MyApp.Inventory.Domain.Entities.TransactionType.Adjustment
  nameWithType: TransactionType.Adjustment
- uid: MyApp.Inventory.Domain.Entities.TransactionType.Inbound
  name: Inbound
  href: api/MyApp.Inventory.Domain.Entities.TransactionType.html#MyApp_Inventory_Domain_Entities_TransactionType_Inbound
  commentId: F:MyApp.Inventory.Domain.Entities.TransactionType.Inbound
  fullName: MyApp.Inventory.Domain.Entities.TransactionType.Inbound
  nameWithType: TransactionType.Inbound
- uid: MyApp.Inventory.Domain.Entities.TransactionType.Outbound
  name: Outbound
  href: api/MyApp.Inventory.Domain.Entities.TransactionType.html#MyApp_Inventory_Domain_Entities_TransactionType_Outbound
  commentId: F:MyApp.Inventory.Domain.Entities.TransactionType.Outbound
  fullName: MyApp.Inventory.Domain.Entities.TransactionType.Outbound
  nameWithType: TransactionType.Outbound
- uid: MyApp.Inventory.Domain.Entities.Warehouse
  name: Warehouse
  href: api/MyApp.Inventory.Domain.Entities.Warehouse.html
  commentId: T:MyApp.Inventory.Domain.Entities.Warehouse
  fullName: MyApp.Inventory.Domain.Entities.Warehouse
  nameWithType: Warehouse
- uid: MyApp.Inventory.Domain.Entities.Warehouse.InventoryTransactions
  name: InventoryTransactions
  href: api/MyApp.Inventory.Domain.Entities.Warehouse.html#MyApp_Inventory_Domain_Entities_Warehouse_InventoryTransactions
  commentId: P:MyApp.Inventory.Domain.Entities.Warehouse.InventoryTransactions
  fullName: MyApp.Inventory.Domain.Entities.Warehouse.InventoryTransactions
  nameWithType: Warehouse.InventoryTransactions
- uid: MyApp.Inventory.Domain.Entities.Warehouse.InventoryTransactions*
  name: InventoryTransactions
  href: api/MyApp.Inventory.Domain.Entities.Warehouse.html#MyApp_Inventory_Domain_Entities_Warehouse_InventoryTransactions_
  commentId: Overload:MyApp.Inventory.Domain.Entities.Warehouse.InventoryTransactions
  isSpec: "True"
  fullName: MyApp.Inventory.Domain.Entities.Warehouse.InventoryTransactions
  nameWithType: Warehouse.InventoryTransactions
- uid: MyApp.Inventory.Domain.Entities.Warehouse.Location
  name: Location
  href: api/MyApp.Inventory.Domain.Entities.Warehouse.html#MyApp_Inventory_Domain_Entities_Warehouse_Location
  commentId: P:MyApp.Inventory.Domain.Entities.Warehouse.Location
  fullName: MyApp.Inventory.Domain.Entities.Warehouse.Location
  nameWithType: Warehouse.Location
- uid: MyApp.Inventory.Domain.Entities.Warehouse.Location*
  name: Location
  href: api/MyApp.Inventory.Domain.Entities.Warehouse.html#MyApp_Inventory_Domain_Entities_Warehouse_Location_
  commentId: Overload:MyApp.Inventory.Domain.Entities.Warehouse.Location
  isSpec: "True"
  fullName: MyApp.Inventory.Domain.Entities.Warehouse.Location
  nameWithType: Warehouse.Location
- uid: MyApp.Inventory.Domain.Entities.Warehouse.Name
  name: Name
  href: api/MyApp.Inventory.Domain.Entities.Warehouse.html#MyApp_Inventory_Domain_Entities_Warehouse_Name
  commentId: P:MyApp.Inventory.Domain.Entities.Warehouse.Name
  fullName: MyApp.Inventory.Domain.Entities.Warehouse.Name
  nameWithType: Warehouse.Name
- uid: MyApp.Inventory.Domain.Entities.Warehouse.Name*
  name: Name
  href: api/MyApp.Inventory.Domain.Entities.Warehouse.html#MyApp_Inventory_Domain_Entities_Warehouse_Name_
  commentId: Overload:MyApp.Inventory.Domain.Entities.Warehouse.Name
  isSpec: "True"
  fullName: MyApp.Inventory.Domain.Entities.Warehouse.Name
  nameWithType: Warehouse.Name
- uid: MyApp.Inventory.Domain.Repositories
  name: MyApp.Inventory.Domain.Repositories
  href: api/MyApp.Inventory.Domain.Repositories.html
  commentId: N:MyApp.Inventory.Domain.Repositories
  fullName: MyApp.Inventory.Domain.Repositories
  nameWithType: MyApp.Inventory.Domain.Repositories
- uid: MyApp.Inventory.Domain.Repositories.IInventoryTransactionRepository
  name: IInventoryTransactionRepository
  href: api/MyApp.Inventory.Domain.Repositories.IInventoryTransactionRepository.html
  commentId: T:MyApp.Inventory.Domain.Repositories.IInventoryTransactionRepository
  fullName: MyApp.Inventory.Domain.Repositories.IInventoryTransactionRepository
  nameWithType: IInventoryTransactionRepository
- uid: MyApp.Inventory.Domain.Repositories.IInventoryTransactionRepository.GetByProductIdAsync(System.Guid)
  name: GetByProductIdAsync(Guid)
  href: api/MyApp.Inventory.Domain.Repositories.IInventoryTransactionRepository.html#MyApp_Inventory_Domain_Repositories_IInventoryTransactionRepository_GetByProductIdAsync_System_Guid_
  commentId: M:MyApp.Inventory.Domain.Repositories.IInventoryTransactionRepository.GetByProductIdAsync(System.Guid)
  fullName: MyApp.Inventory.Domain.Repositories.IInventoryTransactionRepository.GetByProductIdAsync(System.Guid)
  nameWithType: IInventoryTransactionRepository.GetByProductIdAsync(Guid)
- uid: MyApp.Inventory.Domain.Repositories.IInventoryTransactionRepository.GetByProductIdAsync*
  name: GetByProductIdAsync
  href: api/MyApp.Inventory.Domain.Repositories.IInventoryTransactionRepository.html#MyApp_Inventory_Domain_Repositories_IInventoryTransactionRepository_GetByProductIdAsync_
  commentId: Overload:MyApp.Inventory.Domain.Repositories.IInventoryTransactionRepository.GetByProductIdAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Domain.Repositories.IInventoryTransactionRepository.GetByProductIdAsync
  nameWithType: IInventoryTransactionRepository.GetByProductIdAsync
- uid: MyApp.Inventory.Domain.Repositories.IInventoryTransactionRepository.GetByTransactionTypeAsync(MyApp.Inventory.Domain.Entities.TransactionType)
  name: GetByTransactionTypeAsync(TransactionType)
  href: api/MyApp.Inventory.Domain.Repositories.IInventoryTransactionRepository.html#MyApp_Inventory_Domain_Repositories_IInventoryTransactionRepository_GetByTransactionTypeAsync_MyApp_Inventory_Domain_Entities_TransactionType_
  commentId: M:MyApp.Inventory.Domain.Repositories.IInventoryTransactionRepository.GetByTransactionTypeAsync(MyApp.Inventory.Domain.Entities.TransactionType)
  fullName: MyApp.Inventory.Domain.Repositories.IInventoryTransactionRepository.GetByTransactionTypeAsync(MyApp.Inventory.Domain.Entities.TransactionType)
  nameWithType: IInventoryTransactionRepository.GetByTransactionTypeAsync(TransactionType)
- uid: MyApp.Inventory.Domain.Repositories.IInventoryTransactionRepository.GetByTransactionTypeAsync*
  name: GetByTransactionTypeAsync
  href: api/MyApp.Inventory.Domain.Repositories.IInventoryTransactionRepository.html#MyApp_Inventory_Domain_Repositories_IInventoryTransactionRepository_GetByTransactionTypeAsync_
  commentId: Overload:MyApp.Inventory.Domain.Repositories.IInventoryTransactionRepository.GetByTransactionTypeAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Domain.Repositories.IInventoryTransactionRepository.GetByTransactionTypeAsync
  nameWithType: IInventoryTransactionRepository.GetByTransactionTypeAsync
- uid: MyApp.Inventory.Domain.Repositories.IInventoryTransactionRepository.GetByWarehouseIdAsync(System.Guid)
  name: GetByWarehouseIdAsync(Guid)
  href: api/MyApp.Inventory.Domain.Repositories.IInventoryTransactionRepository.html#MyApp_Inventory_Domain_Repositories_IInventoryTransactionRepository_GetByWarehouseIdAsync_System_Guid_
  commentId: M:MyApp.Inventory.Domain.Repositories.IInventoryTransactionRepository.GetByWarehouseIdAsync(System.Guid)
  fullName: MyApp.Inventory.Domain.Repositories.IInventoryTransactionRepository.GetByWarehouseIdAsync(System.Guid)
  nameWithType: IInventoryTransactionRepository.GetByWarehouseIdAsync(Guid)
- uid: MyApp.Inventory.Domain.Repositories.IInventoryTransactionRepository.GetByWarehouseIdAsync*
  name: GetByWarehouseIdAsync
  href: api/MyApp.Inventory.Domain.Repositories.IInventoryTransactionRepository.html#MyApp_Inventory_Domain_Repositories_IInventoryTransactionRepository_GetByWarehouseIdAsync_
  commentId: Overload:MyApp.Inventory.Domain.Repositories.IInventoryTransactionRepository.GetByWarehouseIdAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Domain.Repositories.IInventoryTransactionRepository.GetByWarehouseIdAsync
  nameWithType: IInventoryTransactionRepository.GetByWarehouseIdAsync
- uid: MyApp.Inventory.Domain.Repositories.IProductRepository
  name: IProductRepository
  href: api/MyApp.Inventory.Domain.Repositories.IProductRepository.html
  commentId: T:MyApp.Inventory.Domain.Repositories.IProductRepository
  fullName: MyApp.Inventory.Domain.Repositories.IProductRepository
  nameWithType: IProductRepository
- uid: MyApp.Inventory.Domain.Repositories.IProductRepository.GetBySkuAsync(System.String)
  name: GetBySkuAsync(string)
  href: api/MyApp.Inventory.Domain.Repositories.IProductRepository.html#MyApp_Inventory_Domain_Repositories_IProductRepository_GetBySkuAsync_System_String_
  commentId: M:MyApp.Inventory.Domain.Repositories.IProductRepository.GetBySkuAsync(System.String)
  name.vb: GetBySkuAsync(String)
  fullName: MyApp.Inventory.Domain.Repositories.IProductRepository.GetBySkuAsync(string)
  fullName.vb: MyApp.Inventory.Domain.Repositories.IProductRepository.GetBySkuAsync(String)
  nameWithType: IProductRepository.GetBySkuAsync(string)
  nameWithType.vb: IProductRepository.GetBySkuAsync(String)
- uid: MyApp.Inventory.Domain.Repositories.IProductRepository.GetBySkuAsync*
  name: GetBySkuAsync
  href: api/MyApp.Inventory.Domain.Repositories.IProductRepository.html#MyApp_Inventory_Domain_Repositories_IProductRepository_GetBySkuAsync_
  commentId: Overload:MyApp.Inventory.Domain.Repositories.IProductRepository.GetBySkuAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Domain.Repositories.IProductRepository.GetBySkuAsync
  nameWithType: IProductRepository.GetBySkuAsync
- uid: MyApp.Inventory.Domain.Repositories.IProductRepository.GetLowStockProductsAsync
  name: GetLowStockProductsAsync()
  href: api/MyApp.Inventory.Domain.Repositories.IProductRepository.html#MyApp_Inventory_Domain_Repositories_IProductRepository_GetLowStockProductsAsync
  commentId: M:MyApp.Inventory.Domain.Repositories.IProductRepository.GetLowStockProductsAsync
  fullName: MyApp.Inventory.Domain.Repositories.IProductRepository.GetLowStockProductsAsync()
  nameWithType: IProductRepository.GetLowStockProductsAsync()
- uid: MyApp.Inventory.Domain.Repositories.IProductRepository.GetLowStockProductsAsync*
  name: GetLowStockProductsAsync
  href: api/MyApp.Inventory.Domain.Repositories.IProductRepository.html#MyApp_Inventory_Domain_Repositories_IProductRepository_GetLowStockProductsAsync_
  commentId: Overload:MyApp.Inventory.Domain.Repositories.IProductRepository.GetLowStockProductsAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Domain.Repositories.IProductRepository.GetLowStockProductsAsync
  nameWithType: IProductRepository.GetLowStockProductsAsync
- uid: MyApp.Inventory.Domain.Repositories.IWarehouseRepository
  name: IWarehouseRepository
  href: api/MyApp.Inventory.Domain.Repositories.IWarehouseRepository.html
  commentId: T:MyApp.Inventory.Domain.Repositories.IWarehouseRepository
  fullName: MyApp.Inventory.Domain.Repositories.IWarehouseRepository
  nameWithType: IWarehouseRepository
- uid: MyApp.Inventory.Domain.Repositories.IWarehouseRepository.GetByNameAsync(System.String)
  name: GetByNameAsync(string)
  href: api/MyApp.Inventory.Domain.Repositories.IWarehouseRepository.html#MyApp_Inventory_Domain_Repositories_IWarehouseRepository_GetByNameAsync_System_String_
  commentId: M:MyApp.Inventory.Domain.Repositories.IWarehouseRepository.GetByNameAsync(System.String)
  name.vb: GetByNameAsync(String)
  fullName: MyApp.Inventory.Domain.Repositories.IWarehouseRepository.GetByNameAsync(string)
  fullName.vb: MyApp.Inventory.Domain.Repositories.IWarehouseRepository.GetByNameAsync(String)
  nameWithType: IWarehouseRepository.GetByNameAsync(string)
  nameWithType.vb: IWarehouseRepository.GetByNameAsync(String)
- uid: MyApp.Inventory.Domain.Repositories.IWarehouseRepository.GetByNameAsync*
  name: GetByNameAsync
  href: api/MyApp.Inventory.Domain.Repositories.IWarehouseRepository.html#MyApp_Inventory_Domain_Repositories_IWarehouseRepository_GetByNameAsync_
  commentId: Overload:MyApp.Inventory.Domain.Repositories.IWarehouseRepository.GetByNameAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Domain.Repositories.IWarehouseRepository.GetByNameAsync
  nameWithType: IWarehouseRepository.GetByNameAsync
- uid: MyApp.Inventory.Infrastructure.Data
  name: MyApp.Inventory.Infrastructure.Data
  href: api/MyApp.Inventory.Infrastructure.Data.html
  commentId: N:MyApp.Inventory.Infrastructure.Data
  fullName: MyApp.Inventory.Infrastructure.Data
  nameWithType: MyApp.Inventory.Infrastructure.Data
- uid: MyApp.Inventory.Infrastructure.Data.Configurations
  name: MyApp.Inventory.Infrastructure.Data.Configurations
  href: api/MyApp.Inventory.Infrastructure.Data.Configurations.html
  commentId: N:MyApp.Inventory.Infrastructure.Data.Configurations
  fullName: MyApp.Inventory.Infrastructure.Data.Configurations
  nameWithType: MyApp.Inventory.Infrastructure.Data.Configurations
- uid: MyApp.Inventory.Infrastructure.Data.Configurations.InventoryTransactionConfiguration
  name: InventoryTransactionConfiguration
  href: api/MyApp.Inventory.Infrastructure.Data.Configurations.InventoryTransactionConfiguration.html
  commentId: T:MyApp.Inventory.Infrastructure.Data.Configurations.InventoryTransactionConfiguration
  fullName: MyApp.Inventory.Infrastructure.Data.Configurations.InventoryTransactionConfiguration
  nameWithType: InventoryTransactionConfiguration
- uid: MyApp.Inventory.Infrastructure.Data.Configurations.InventoryTransactionConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{MyApp.Inventory.Domain.Entities.InventoryTransaction})
  name: Configure(EntityTypeBuilder<InventoryTransaction>)
  href: api/MyApp.Inventory.Infrastructure.Data.Configurations.InventoryTransactionConfiguration.html#MyApp_Inventory_Infrastructure_Data_Configurations_InventoryTransactionConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_MyApp_Inventory_Domain_Entities_InventoryTransaction__
  commentId: M:MyApp.Inventory.Infrastructure.Data.Configurations.InventoryTransactionConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{MyApp.Inventory.Domain.Entities.InventoryTransaction})
  name.vb: Configure(EntityTypeBuilder(Of InventoryTransaction))
  fullName: MyApp.Inventory.Infrastructure.Data.Configurations.InventoryTransactionConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<MyApp.Inventory.Domain.Entities.InventoryTransaction>)
  fullName.vb: MyApp.Inventory.Infrastructure.Data.Configurations.InventoryTransactionConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of MyApp.Inventory.Domain.Entities.InventoryTransaction))
  nameWithType: InventoryTransactionConfiguration.Configure(EntityTypeBuilder<InventoryTransaction>)
  nameWithType.vb: InventoryTransactionConfiguration.Configure(EntityTypeBuilder(Of InventoryTransaction))
- uid: MyApp.Inventory.Infrastructure.Data.Configurations.InventoryTransactionConfiguration.Configure*
  name: Configure
  href: api/MyApp.Inventory.Infrastructure.Data.Configurations.InventoryTransactionConfiguration.html#MyApp_Inventory_Infrastructure_Data_Configurations_InventoryTransactionConfiguration_Configure_
  commentId: Overload:MyApp.Inventory.Infrastructure.Data.Configurations.InventoryTransactionConfiguration.Configure
  isSpec: "True"
  fullName: MyApp.Inventory.Infrastructure.Data.Configurations.InventoryTransactionConfiguration.Configure
  nameWithType: InventoryTransactionConfiguration.Configure
- uid: MyApp.Inventory.Infrastructure.Data.Configurations.ProductConfiguration
  name: ProductConfiguration
  href: api/MyApp.Inventory.Infrastructure.Data.Configurations.ProductConfiguration.html
  commentId: T:MyApp.Inventory.Infrastructure.Data.Configurations.ProductConfiguration
  fullName: MyApp.Inventory.Infrastructure.Data.Configurations.ProductConfiguration
  nameWithType: ProductConfiguration
- uid: MyApp.Inventory.Infrastructure.Data.Configurations.ProductConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{MyApp.Inventory.Domain.Entities.Product})
  name: Configure(EntityTypeBuilder<Product>)
  href: api/MyApp.Inventory.Infrastructure.Data.Configurations.ProductConfiguration.html#MyApp_Inventory_Infrastructure_Data_Configurations_ProductConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_MyApp_Inventory_Domain_Entities_Product__
  commentId: M:MyApp.Inventory.Infrastructure.Data.Configurations.ProductConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{MyApp.Inventory.Domain.Entities.Product})
  name.vb: Configure(EntityTypeBuilder(Of Product))
  fullName: MyApp.Inventory.Infrastructure.Data.Configurations.ProductConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<MyApp.Inventory.Domain.Entities.Product>)
  fullName.vb: MyApp.Inventory.Infrastructure.Data.Configurations.ProductConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of MyApp.Inventory.Domain.Entities.Product))
  nameWithType: ProductConfiguration.Configure(EntityTypeBuilder<Product>)
  nameWithType.vb: ProductConfiguration.Configure(EntityTypeBuilder(Of Product))
- uid: MyApp.Inventory.Infrastructure.Data.Configurations.ProductConfiguration.Configure*
  name: Configure
  href: api/MyApp.Inventory.Infrastructure.Data.Configurations.ProductConfiguration.html#MyApp_Inventory_Infrastructure_Data_Configurations_ProductConfiguration_Configure_
  commentId: Overload:MyApp.Inventory.Infrastructure.Data.Configurations.ProductConfiguration.Configure
  isSpec: "True"
  fullName: MyApp.Inventory.Infrastructure.Data.Configurations.ProductConfiguration.Configure
  nameWithType: ProductConfiguration.Configure
- uid: MyApp.Inventory.Infrastructure.Data.Configurations.WarehouseConfiguration
  name: WarehouseConfiguration
  href: api/MyApp.Inventory.Infrastructure.Data.Configurations.WarehouseConfiguration.html
  commentId: T:MyApp.Inventory.Infrastructure.Data.Configurations.WarehouseConfiguration
  fullName: MyApp.Inventory.Infrastructure.Data.Configurations.WarehouseConfiguration
  nameWithType: WarehouseConfiguration
- uid: MyApp.Inventory.Infrastructure.Data.Configurations.WarehouseConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{MyApp.Inventory.Domain.Entities.Warehouse})
  name: Configure(EntityTypeBuilder<Warehouse>)
  href: api/MyApp.Inventory.Infrastructure.Data.Configurations.WarehouseConfiguration.html#MyApp_Inventory_Infrastructure_Data_Configurations_WarehouseConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_MyApp_Inventory_Domain_Entities_Warehouse__
  commentId: M:MyApp.Inventory.Infrastructure.Data.Configurations.WarehouseConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{MyApp.Inventory.Domain.Entities.Warehouse})
  name.vb: Configure(EntityTypeBuilder(Of Warehouse))
  fullName: MyApp.Inventory.Infrastructure.Data.Configurations.WarehouseConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<MyApp.Inventory.Domain.Entities.Warehouse>)
  fullName.vb: MyApp.Inventory.Infrastructure.Data.Configurations.WarehouseConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of MyApp.Inventory.Domain.Entities.Warehouse))
  nameWithType: WarehouseConfiguration.Configure(EntityTypeBuilder<Warehouse>)
  nameWithType.vb: WarehouseConfiguration.Configure(EntityTypeBuilder(Of Warehouse))
- uid: MyApp.Inventory.Infrastructure.Data.Configurations.WarehouseConfiguration.Configure*
  name: Configure
  href: api/MyApp.Inventory.Infrastructure.Data.Configurations.WarehouseConfiguration.html#MyApp_Inventory_Infrastructure_Data_Configurations_WarehouseConfiguration_Configure_
  commentId: Overload:MyApp.Inventory.Infrastructure.Data.Configurations.WarehouseConfiguration.Configure
  isSpec: "True"
  fullName: MyApp.Inventory.Infrastructure.Data.Configurations.WarehouseConfiguration.Configure
  nameWithType: WarehouseConfiguration.Configure
- uid: MyApp.Inventory.Infrastructure.Data.InventoryDbContext
  name: InventoryDbContext
  href: api/MyApp.Inventory.Infrastructure.Data.InventoryDbContext.html
  commentId: T:MyApp.Inventory.Infrastructure.Data.InventoryDbContext
  fullName: MyApp.Inventory.Infrastructure.Data.InventoryDbContext
  nameWithType: InventoryDbContext
- uid: MyApp.Inventory.Infrastructure.Data.InventoryDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{MyApp.Inventory.Infrastructure.Data.InventoryDbContext})
  name: InventoryDbContext(DbContextOptions<InventoryDbContext>)
  href: api/MyApp.Inventory.Infrastructure.Data.InventoryDbContext.html#MyApp_Inventory_Infrastructure_Data_InventoryDbContext__ctor_Microsoft_EntityFrameworkCore_DbContextOptions_MyApp_Inventory_Infrastructure_Data_InventoryDbContext__
  commentId: M:MyApp.Inventory.Infrastructure.Data.InventoryDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{MyApp.Inventory.Infrastructure.Data.InventoryDbContext})
  name.vb: New(DbContextOptions(Of InventoryDbContext))
  fullName: MyApp.Inventory.Infrastructure.Data.InventoryDbContext.InventoryDbContext(Microsoft.EntityFrameworkCore.DbContextOptions<MyApp.Inventory.Infrastructure.Data.InventoryDbContext>)
  fullName.vb: MyApp.Inventory.Infrastructure.Data.InventoryDbContext.New(Microsoft.EntityFrameworkCore.DbContextOptions(Of MyApp.Inventory.Infrastructure.Data.InventoryDbContext))
  nameWithType: InventoryDbContext.InventoryDbContext(DbContextOptions<InventoryDbContext>)
  nameWithType.vb: InventoryDbContext.New(DbContextOptions(Of InventoryDbContext))
- uid: MyApp.Inventory.Infrastructure.Data.InventoryDbContext.#ctor*
  name: InventoryDbContext
  href: api/MyApp.Inventory.Infrastructure.Data.InventoryDbContext.html#MyApp_Inventory_Infrastructure_Data_InventoryDbContext__ctor_
  commentId: Overload:MyApp.Inventory.Infrastructure.Data.InventoryDbContext.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Inventory.Infrastructure.Data.InventoryDbContext.InventoryDbContext
  fullName.vb: MyApp.Inventory.Infrastructure.Data.InventoryDbContext.New
  nameWithType: InventoryDbContext.InventoryDbContext
  nameWithType.vb: InventoryDbContext.New
- uid: MyApp.Inventory.Infrastructure.Data.InventoryDbContext.InventoryTransactions
  name: InventoryTransactions
  href: api/MyApp.Inventory.Infrastructure.Data.InventoryDbContext.html#MyApp_Inventory_Infrastructure_Data_InventoryDbContext_InventoryTransactions
  commentId: P:MyApp.Inventory.Infrastructure.Data.InventoryDbContext.InventoryTransactions
  fullName: MyApp.Inventory.Infrastructure.Data.InventoryDbContext.InventoryTransactions
  nameWithType: InventoryDbContext.InventoryTransactions
- uid: MyApp.Inventory.Infrastructure.Data.InventoryDbContext.InventoryTransactions*
  name: InventoryTransactions
  href: api/MyApp.Inventory.Infrastructure.Data.InventoryDbContext.html#MyApp_Inventory_Infrastructure_Data_InventoryDbContext_InventoryTransactions_
  commentId: Overload:MyApp.Inventory.Infrastructure.Data.InventoryDbContext.InventoryTransactions
  isSpec: "True"
  fullName: MyApp.Inventory.Infrastructure.Data.InventoryDbContext.InventoryTransactions
  nameWithType: InventoryDbContext.InventoryTransactions
- uid: MyApp.Inventory.Infrastructure.Data.InventoryDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: OnModelCreating(ModelBuilder)
  href: api/MyApp.Inventory.Infrastructure.Data.InventoryDbContext.html#MyApp_Inventory_Infrastructure_Data_InventoryDbContext_OnModelCreating_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:MyApp.Inventory.Infrastructure.Data.InventoryDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: MyApp.Inventory.Infrastructure.Data.InventoryDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: InventoryDbContext.OnModelCreating(ModelBuilder)
- uid: MyApp.Inventory.Infrastructure.Data.InventoryDbContext.OnModelCreating*
  name: OnModelCreating
  href: api/MyApp.Inventory.Infrastructure.Data.InventoryDbContext.html#MyApp_Inventory_Infrastructure_Data_InventoryDbContext_OnModelCreating_
  commentId: Overload:MyApp.Inventory.Infrastructure.Data.InventoryDbContext.OnModelCreating
  isSpec: "True"
  fullName: MyApp.Inventory.Infrastructure.Data.InventoryDbContext.OnModelCreating
  nameWithType: InventoryDbContext.OnModelCreating
- uid: MyApp.Inventory.Infrastructure.Data.InventoryDbContext.Products
  name: Products
  href: api/MyApp.Inventory.Infrastructure.Data.InventoryDbContext.html#MyApp_Inventory_Infrastructure_Data_InventoryDbContext_Products
  commentId: P:MyApp.Inventory.Infrastructure.Data.InventoryDbContext.Products
  fullName: MyApp.Inventory.Infrastructure.Data.InventoryDbContext.Products
  nameWithType: InventoryDbContext.Products
- uid: MyApp.Inventory.Infrastructure.Data.InventoryDbContext.Products*
  name: Products
  href: api/MyApp.Inventory.Infrastructure.Data.InventoryDbContext.html#MyApp_Inventory_Infrastructure_Data_InventoryDbContext_Products_
  commentId: Overload:MyApp.Inventory.Infrastructure.Data.InventoryDbContext.Products
  isSpec: "True"
  fullName: MyApp.Inventory.Infrastructure.Data.InventoryDbContext.Products
  nameWithType: InventoryDbContext.Products
- uid: MyApp.Inventory.Infrastructure.Data.InventoryDbContext.Warehouses
  name: Warehouses
  href: api/MyApp.Inventory.Infrastructure.Data.InventoryDbContext.html#MyApp_Inventory_Infrastructure_Data_InventoryDbContext_Warehouses
  commentId: P:MyApp.Inventory.Infrastructure.Data.InventoryDbContext.Warehouses
  fullName: MyApp.Inventory.Infrastructure.Data.InventoryDbContext.Warehouses
  nameWithType: InventoryDbContext.Warehouses
- uid: MyApp.Inventory.Infrastructure.Data.InventoryDbContext.Warehouses*
  name: Warehouses
  href: api/MyApp.Inventory.Infrastructure.Data.InventoryDbContext.html#MyApp_Inventory_Infrastructure_Data_InventoryDbContext_Warehouses_
  commentId: Overload:MyApp.Inventory.Infrastructure.Data.InventoryDbContext.Warehouses
  isSpec: "True"
  fullName: MyApp.Inventory.Infrastructure.Data.InventoryDbContext.Warehouses
  nameWithType: InventoryDbContext.Warehouses
- uid: MyApp.Inventory.Infrastructure.Data.InventoryDbContextFactory
  name: InventoryDbContextFactory
  href: api/MyApp.Inventory.Infrastructure.Data.InventoryDbContextFactory.html
  commentId: T:MyApp.Inventory.Infrastructure.Data.InventoryDbContextFactory
  fullName: MyApp.Inventory.Infrastructure.Data.InventoryDbContextFactory
  nameWithType: InventoryDbContextFactory
- uid: MyApp.Inventory.Infrastructure.Data.InventoryDbContextFactory.CreateDbContext(System.String[])
  name: CreateDbContext(string[])
  href: api/MyApp.Inventory.Infrastructure.Data.InventoryDbContextFactory.html#MyApp_Inventory_Infrastructure_Data_InventoryDbContextFactory_CreateDbContext_System_String___
  commentId: M:MyApp.Inventory.Infrastructure.Data.InventoryDbContextFactory.CreateDbContext(System.String[])
  name.vb: CreateDbContext(String())
  fullName: MyApp.Inventory.Infrastructure.Data.InventoryDbContextFactory.CreateDbContext(string[])
  fullName.vb: MyApp.Inventory.Infrastructure.Data.InventoryDbContextFactory.CreateDbContext(String())
  nameWithType: InventoryDbContextFactory.CreateDbContext(string[])
  nameWithType.vb: InventoryDbContextFactory.CreateDbContext(String())
- uid: MyApp.Inventory.Infrastructure.Data.InventoryDbContextFactory.CreateDbContext*
  name: CreateDbContext
  href: api/MyApp.Inventory.Infrastructure.Data.InventoryDbContextFactory.html#MyApp_Inventory_Infrastructure_Data_InventoryDbContextFactory_CreateDbContext_
  commentId: Overload:MyApp.Inventory.Infrastructure.Data.InventoryDbContextFactory.CreateDbContext
  isSpec: "True"
  fullName: MyApp.Inventory.Infrastructure.Data.InventoryDbContextFactory.CreateDbContext
  nameWithType: InventoryDbContextFactory.CreateDbContext
- uid: MyApp.Inventory.Infrastructure.Data.Repositories
  name: MyApp.Inventory.Infrastructure.Data.Repositories
  href: api/MyApp.Inventory.Infrastructure.Data.Repositories.html
  commentId: N:MyApp.Inventory.Infrastructure.Data.Repositories
  fullName: MyApp.Inventory.Infrastructure.Data.Repositories
  nameWithType: MyApp.Inventory.Infrastructure.Data.Repositories
- uid: MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository
  name: InventoryTransactionRepository
  href: api/MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository.html
  commentId: T:MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository
  fullName: MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository
  nameWithType: InventoryTransactionRepository
- uid: MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository.#ctor(MyApp.Inventory.Infrastructure.Data.InventoryDbContext)
  name: InventoryTransactionRepository(InventoryDbContext)
  href: api/MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository.html#MyApp_Inventory_Infrastructure_Data_Repositories_InventoryTransactionRepository__ctor_MyApp_Inventory_Infrastructure_Data_InventoryDbContext_
  commentId: M:MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository.#ctor(MyApp.Inventory.Infrastructure.Data.InventoryDbContext)
  name.vb: New(InventoryDbContext)
  fullName: MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository.InventoryTransactionRepository(MyApp.Inventory.Infrastructure.Data.InventoryDbContext)
  fullName.vb: MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository.New(MyApp.Inventory.Infrastructure.Data.InventoryDbContext)
  nameWithType: InventoryTransactionRepository.InventoryTransactionRepository(InventoryDbContext)
  nameWithType.vb: InventoryTransactionRepository.New(InventoryDbContext)
- uid: MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository.#ctor*
  name: InventoryTransactionRepository
  href: api/MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository.html#MyApp_Inventory_Infrastructure_Data_Repositories_InventoryTransactionRepository__ctor_
  commentId: Overload:MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository.InventoryTransactionRepository
  fullName.vb: MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository.New
  nameWithType: InventoryTransactionRepository.InventoryTransactionRepository
  nameWithType.vb: InventoryTransactionRepository.New
- uid: MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository.GetByProductIdAsync(System.Guid)
  name: GetByProductIdAsync(Guid)
  href: api/MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository.html#MyApp_Inventory_Infrastructure_Data_Repositories_InventoryTransactionRepository_GetByProductIdAsync_System_Guid_
  commentId: M:MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository.GetByProductIdAsync(System.Guid)
  fullName: MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository.GetByProductIdAsync(System.Guid)
  nameWithType: InventoryTransactionRepository.GetByProductIdAsync(Guid)
- uid: MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository.GetByProductIdAsync*
  name: GetByProductIdAsync
  href: api/MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository.html#MyApp_Inventory_Infrastructure_Data_Repositories_InventoryTransactionRepository_GetByProductIdAsync_
  commentId: Overload:MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository.GetByProductIdAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository.GetByProductIdAsync
  nameWithType: InventoryTransactionRepository.GetByProductIdAsync
- uid: MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository.GetByTransactionTypeAsync(MyApp.Inventory.Domain.Entities.TransactionType)
  name: GetByTransactionTypeAsync(TransactionType)
  href: api/MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository.html#MyApp_Inventory_Infrastructure_Data_Repositories_InventoryTransactionRepository_GetByTransactionTypeAsync_MyApp_Inventory_Domain_Entities_TransactionType_
  commentId: M:MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository.GetByTransactionTypeAsync(MyApp.Inventory.Domain.Entities.TransactionType)
  fullName: MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository.GetByTransactionTypeAsync(MyApp.Inventory.Domain.Entities.TransactionType)
  nameWithType: InventoryTransactionRepository.GetByTransactionTypeAsync(TransactionType)
- uid: MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository.GetByTransactionTypeAsync*
  name: GetByTransactionTypeAsync
  href: api/MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository.html#MyApp_Inventory_Infrastructure_Data_Repositories_InventoryTransactionRepository_GetByTransactionTypeAsync_
  commentId: Overload:MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository.GetByTransactionTypeAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository.GetByTransactionTypeAsync
  nameWithType: InventoryTransactionRepository.GetByTransactionTypeAsync
- uid: MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository.GetByWarehouseIdAsync(System.Guid)
  name: GetByWarehouseIdAsync(Guid)
  href: api/MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository.html#MyApp_Inventory_Infrastructure_Data_Repositories_InventoryTransactionRepository_GetByWarehouseIdAsync_System_Guid_
  commentId: M:MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository.GetByWarehouseIdAsync(System.Guid)
  fullName: MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository.GetByWarehouseIdAsync(System.Guid)
  nameWithType: InventoryTransactionRepository.GetByWarehouseIdAsync(Guid)
- uid: MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository.GetByWarehouseIdAsync*
  name: GetByWarehouseIdAsync
  href: api/MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository.html#MyApp_Inventory_Infrastructure_Data_Repositories_InventoryTransactionRepository_GetByWarehouseIdAsync_
  commentId: Overload:MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository.GetByWarehouseIdAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Infrastructure.Data.Repositories.InventoryTransactionRepository.GetByWarehouseIdAsync
  nameWithType: InventoryTransactionRepository.GetByWarehouseIdAsync
- uid: MyApp.Inventory.Infrastructure.Data.Repositories.ProductRepository
  name: ProductRepository
  href: api/MyApp.Inventory.Infrastructure.Data.Repositories.ProductRepository.html
  commentId: T:MyApp.Inventory.Infrastructure.Data.Repositories.ProductRepository
  fullName: MyApp.Inventory.Infrastructure.Data.Repositories.ProductRepository
  nameWithType: ProductRepository
- uid: MyApp.Inventory.Infrastructure.Data.Repositories.ProductRepository.#ctor(MyApp.Inventory.Infrastructure.Data.InventoryDbContext)
  name: ProductRepository(InventoryDbContext)
  href: api/MyApp.Inventory.Infrastructure.Data.Repositories.ProductRepository.html#MyApp_Inventory_Infrastructure_Data_Repositories_ProductRepository__ctor_MyApp_Inventory_Infrastructure_Data_InventoryDbContext_
  commentId: M:MyApp.Inventory.Infrastructure.Data.Repositories.ProductRepository.#ctor(MyApp.Inventory.Infrastructure.Data.InventoryDbContext)
  name.vb: New(InventoryDbContext)
  fullName: MyApp.Inventory.Infrastructure.Data.Repositories.ProductRepository.ProductRepository(MyApp.Inventory.Infrastructure.Data.InventoryDbContext)
  fullName.vb: MyApp.Inventory.Infrastructure.Data.Repositories.ProductRepository.New(MyApp.Inventory.Infrastructure.Data.InventoryDbContext)
  nameWithType: ProductRepository.ProductRepository(InventoryDbContext)
  nameWithType.vb: ProductRepository.New(InventoryDbContext)
- uid: MyApp.Inventory.Infrastructure.Data.Repositories.ProductRepository.#ctor*
  name: ProductRepository
  href: api/MyApp.Inventory.Infrastructure.Data.Repositories.ProductRepository.html#MyApp_Inventory_Infrastructure_Data_Repositories_ProductRepository__ctor_
  commentId: Overload:MyApp.Inventory.Infrastructure.Data.Repositories.ProductRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Inventory.Infrastructure.Data.Repositories.ProductRepository.ProductRepository
  fullName.vb: MyApp.Inventory.Infrastructure.Data.Repositories.ProductRepository.New
  nameWithType: ProductRepository.ProductRepository
  nameWithType.vb: ProductRepository.New
- uid: MyApp.Inventory.Infrastructure.Data.Repositories.ProductRepository.GetBySkuAsync(System.String)
  name: GetBySkuAsync(string)
  href: api/MyApp.Inventory.Infrastructure.Data.Repositories.ProductRepository.html#MyApp_Inventory_Infrastructure_Data_Repositories_ProductRepository_GetBySkuAsync_System_String_
  commentId: M:MyApp.Inventory.Infrastructure.Data.Repositories.ProductRepository.GetBySkuAsync(System.String)
  name.vb: GetBySkuAsync(String)
  fullName: MyApp.Inventory.Infrastructure.Data.Repositories.ProductRepository.GetBySkuAsync(string)
  fullName.vb: MyApp.Inventory.Infrastructure.Data.Repositories.ProductRepository.GetBySkuAsync(String)
  nameWithType: ProductRepository.GetBySkuAsync(string)
  nameWithType.vb: ProductRepository.GetBySkuAsync(String)
- uid: MyApp.Inventory.Infrastructure.Data.Repositories.ProductRepository.GetBySkuAsync*
  name: GetBySkuAsync
  href: api/MyApp.Inventory.Infrastructure.Data.Repositories.ProductRepository.html#MyApp_Inventory_Infrastructure_Data_Repositories_ProductRepository_GetBySkuAsync_
  commentId: Overload:MyApp.Inventory.Infrastructure.Data.Repositories.ProductRepository.GetBySkuAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Infrastructure.Data.Repositories.ProductRepository.GetBySkuAsync
  nameWithType: ProductRepository.GetBySkuAsync
- uid: MyApp.Inventory.Infrastructure.Data.Repositories.ProductRepository.GetLowStockProductsAsync
  name: GetLowStockProductsAsync()
  href: api/MyApp.Inventory.Infrastructure.Data.Repositories.ProductRepository.html#MyApp_Inventory_Infrastructure_Data_Repositories_ProductRepository_GetLowStockProductsAsync
  commentId: M:MyApp.Inventory.Infrastructure.Data.Repositories.ProductRepository.GetLowStockProductsAsync
  fullName: MyApp.Inventory.Infrastructure.Data.Repositories.ProductRepository.GetLowStockProductsAsync()
  nameWithType: ProductRepository.GetLowStockProductsAsync()
- uid: MyApp.Inventory.Infrastructure.Data.Repositories.ProductRepository.GetLowStockProductsAsync*
  name: GetLowStockProductsAsync
  href: api/MyApp.Inventory.Infrastructure.Data.Repositories.ProductRepository.html#MyApp_Inventory_Infrastructure_Data_Repositories_ProductRepository_GetLowStockProductsAsync_
  commentId: Overload:MyApp.Inventory.Infrastructure.Data.Repositories.ProductRepository.GetLowStockProductsAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Infrastructure.Data.Repositories.ProductRepository.GetLowStockProductsAsync
  nameWithType: ProductRepository.GetLowStockProductsAsync
- uid: MyApp.Inventory.Infrastructure.Data.Repositories.WarehouseRepository
  name: WarehouseRepository
  href: api/MyApp.Inventory.Infrastructure.Data.Repositories.WarehouseRepository.html
  commentId: T:MyApp.Inventory.Infrastructure.Data.Repositories.WarehouseRepository
  fullName: MyApp.Inventory.Infrastructure.Data.Repositories.WarehouseRepository
  nameWithType: WarehouseRepository
- uid: MyApp.Inventory.Infrastructure.Data.Repositories.WarehouseRepository.#ctor(MyApp.Inventory.Infrastructure.Data.InventoryDbContext)
  name: WarehouseRepository(InventoryDbContext)
  href: api/MyApp.Inventory.Infrastructure.Data.Repositories.WarehouseRepository.html#MyApp_Inventory_Infrastructure_Data_Repositories_WarehouseRepository__ctor_MyApp_Inventory_Infrastructure_Data_InventoryDbContext_
  commentId: M:MyApp.Inventory.Infrastructure.Data.Repositories.WarehouseRepository.#ctor(MyApp.Inventory.Infrastructure.Data.InventoryDbContext)
  name.vb: New(InventoryDbContext)
  fullName: MyApp.Inventory.Infrastructure.Data.Repositories.WarehouseRepository.WarehouseRepository(MyApp.Inventory.Infrastructure.Data.InventoryDbContext)
  fullName.vb: MyApp.Inventory.Infrastructure.Data.Repositories.WarehouseRepository.New(MyApp.Inventory.Infrastructure.Data.InventoryDbContext)
  nameWithType: WarehouseRepository.WarehouseRepository(InventoryDbContext)
  nameWithType.vb: WarehouseRepository.New(InventoryDbContext)
- uid: MyApp.Inventory.Infrastructure.Data.Repositories.WarehouseRepository.#ctor*
  name: WarehouseRepository
  href: api/MyApp.Inventory.Infrastructure.Data.Repositories.WarehouseRepository.html#MyApp_Inventory_Infrastructure_Data_Repositories_WarehouseRepository__ctor_
  commentId: Overload:MyApp.Inventory.Infrastructure.Data.Repositories.WarehouseRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Inventory.Infrastructure.Data.Repositories.WarehouseRepository.WarehouseRepository
  fullName.vb: MyApp.Inventory.Infrastructure.Data.Repositories.WarehouseRepository.New
  nameWithType: WarehouseRepository.WarehouseRepository
  nameWithType.vb: WarehouseRepository.New
- uid: MyApp.Inventory.Infrastructure.Data.Repositories.WarehouseRepository.GetByNameAsync(System.String)
  name: GetByNameAsync(string)
  href: api/MyApp.Inventory.Infrastructure.Data.Repositories.WarehouseRepository.html#MyApp_Inventory_Infrastructure_Data_Repositories_WarehouseRepository_GetByNameAsync_System_String_
  commentId: M:MyApp.Inventory.Infrastructure.Data.Repositories.WarehouseRepository.GetByNameAsync(System.String)
  name.vb: GetByNameAsync(String)
  fullName: MyApp.Inventory.Infrastructure.Data.Repositories.WarehouseRepository.GetByNameAsync(string)
  fullName.vb: MyApp.Inventory.Infrastructure.Data.Repositories.WarehouseRepository.GetByNameAsync(String)
  nameWithType: WarehouseRepository.GetByNameAsync(string)
  nameWithType.vb: WarehouseRepository.GetByNameAsync(String)
- uid: MyApp.Inventory.Infrastructure.Data.Repositories.WarehouseRepository.GetByNameAsync*
  name: GetByNameAsync
  href: api/MyApp.Inventory.Infrastructure.Data.Repositories.WarehouseRepository.html#MyApp_Inventory_Infrastructure_Data_Repositories_WarehouseRepository_GetByNameAsync_
  commentId: Overload:MyApp.Inventory.Infrastructure.Data.Repositories.WarehouseRepository.GetByNameAsync
  isSpec: "True"
  fullName: MyApp.Inventory.Infrastructure.Data.Repositories.WarehouseRepository.GetByNameAsync
  nameWithType: WarehouseRepository.GetByNameAsync
- uid: MyApp.Inventory.Infrastructure.Migrations
  name: MyApp.Inventory.Infrastructure.Migrations
  href: api/MyApp.Inventory.Infrastructure.Migrations.html
  commentId: N:MyApp.Inventory.Infrastructure.Migrations
  fullName: MyApp.Inventory.Infrastructure.Migrations
  nameWithType: MyApp.Inventory.Infrastructure.Migrations
- uid: MyApp.Inventory.Infrastructure.Migrations.AuditableEntities
  name: AuditableEntities
  href: api/MyApp.Inventory.Infrastructure.Migrations.AuditableEntities.html
  commentId: T:MyApp.Inventory.Infrastructure.Migrations.AuditableEntities
  fullName: MyApp.Inventory.Infrastructure.Migrations.AuditableEntities
  nameWithType: AuditableEntities
- uid: MyApp.Inventory.Infrastructure.Migrations.AuditableEntities.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/MyApp.Inventory.Infrastructure.Migrations.AuditableEntities.html#MyApp_Inventory_Infrastructure_Migrations_AuditableEntities_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:MyApp.Inventory.Infrastructure.Migrations.AuditableEntities.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: MyApp.Inventory.Infrastructure.Migrations.AuditableEntities.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: AuditableEntities.BuildTargetModel(ModelBuilder)
- uid: MyApp.Inventory.Infrastructure.Migrations.AuditableEntities.BuildTargetModel*
  name: BuildTargetModel
  href: api/MyApp.Inventory.Infrastructure.Migrations.AuditableEntities.html#MyApp_Inventory_Infrastructure_Migrations_AuditableEntities_BuildTargetModel_
  commentId: Overload:MyApp.Inventory.Infrastructure.Migrations.AuditableEntities.BuildTargetModel
  isSpec: "True"
  fullName: MyApp.Inventory.Infrastructure.Migrations.AuditableEntities.BuildTargetModel
  nameWithType: AuditableEntities.BuildTargetModel
- uid: MyApp.Inventory.Infrastructure.Migrations.AuditableEntities.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/MyApp.Inventory.Infrastructure.Migrations.AuditableEntities.html#MyApp_Inventory_Infrastructure_Migrations_AuditableEntities_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MyApp.Inventory.Infrastructure.Migrations.AuditableEntities.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MyApp.Inventory.Infrastructure.Migrations.AuditableEntities.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: AuditableEntities.Down(MigrationBuilder)
- uid: MyApp.Inventory.Infrastructure.Migrations.AuditableEntities.Down*
  name: Down
  href: api/MyApp.Inventory.Infrastructure.Migrations.AuditableEntities.html#MyApp_Inventory_Infrastructure_Migrations_AuditableEntities_Down_
  commentId: Overload:MyApp.Inventory.Infrastructure.Migrations.AuditableEntities.Down
  isSpec: "True"
  fullName: MyApp.Inventory.Infrastructure.Migrations.AuditableEntities.Down
  nameWithType: AuditableEntities.Down
- uid: MyApp.Inventory.Infrastructure.Migrations.AuditableEntities.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/MyApp.Inventory.Infrastructure.Migrations.AuditableEntities.html#MyApp_Inventory_Infrastructure_Migrations_AuditableEntities_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MyApp.Inventory.Infrastructure.Migrations.AuditableEntities.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MyApp.Inventory.Infrastructure.Migrations.AuditableEntities.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: AuditableEntities.Up(MigrationBuilder)
- uid: MyApp.Inventory.Infrastructure.Migrations.AuditableEntities.Up*
  name: Up
  href: api/MyApp.Inventory.Infrastructure.Migrations.AuditableEntities.html#MyApp_Inventory_Infrastructure_Migrations_AuditableEntities_Up_
  commentId: Overload:MyApp.Inventory.Infrastructure.Migrations.AuditableEntities.Up
  isSpec: "True"
  fullName: MyApp.Inventory.Infrastructure.Migrations.AuditableEntities.Up
  nameWithType: AuditableEntities.Up
- uid: MyApp.Inventory.Infrastructure.Migrations.InitialInventory
  name: InitialInventory
  href: api/MyApp.Inventory.Infrastructure.Migrations.InitialInventory.html
  commentId: T:MyApp.Inventory.Infrastructure.Migrations.InitialInventory
  fullName: MyApp.Inventory.Infrastructure.Migrations.InitialInventory
  nameWithType: InitialInventory
- uid: MyApp.Inventory.Infrastructure.Migrations.InitialInventory.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/MyApp.Inventory.Infrastructure.Migrations.InitialInventory.html#MyApp_Inventory_Infrastructure_Migrations_InitialInventory_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:MyApp.Inventory.Infrastructure.Migrations.InitialInventory.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: MyApp.Inventory.Infrastructure.Migrations.InitialInventory.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: InitialInventory.BuildTargetModel(ModelBuilder)
- uid: MyApp.Inventory.Infrastructure.Migrations.InitialInventory.BuildTargetModel*
  name: BuildTargetModel
  href: api/MyApp.Inventory.Infrastructure.Migrations.InitialInventory.html#MyApp_Inventory_Infrastructure_Migrations_InitialInventory_BuildTargetModel_
  commentId: Overload:MyApp.Inventory.Infrastructure.Migrations.InitialInventory.BuildTargetModel
  isSpec: "True"
  fullName: MyApp.Inventory.Infrastructure.Migrations.InitialInventory.BuildTargetModel
  nameWithType: InitialInventory.BuildTargetModel
- uid: MyApp.Inventory.Infrastructure.Migrations.InitialInventory.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/MyApp.Inventory.Infrastructure.Migrations.InitialInventory.html#MyApp_Inventory_Infrastructure_Migrations_InitialInventory_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MyApp.Inventory.Infrastructure.Migrations.InitialInventory.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MyApp.Inventory.Infrastructure.Migrations.InitialInventory.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: InitialInventory.Down(MigrationBuilder)
- uid: MyApp.Inventory.Infrastructure.Migrations.InitialInventory.Down*
  name: Down
  href: api/MyApp.Inventory.Infrastructure.Migrations.InitialInventory.html#MyApp_Inventory_Infrastructure_Migrations_InitialInventory_Down_
  commentId: Overload:MyApp.Inventory.Infrastructure.Migrations.InitialInventory.Down
  isSpec: "True"
  fullName: MyApp.Inventory.Infrastructure.Migrations.InitialInventory.Down
  nameWithType: InitialInventory.Down
- uid: MyApp.Inventory.Infrastructure.Migrations.InitialInventory.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/MyApp.Inventory.Infrastructure.Migrations.InitialInventory.html#MyApp_Inventory_Infrastructure_Migrations_InitialInventory_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MyApp.Inventory.Infrastructure.Migrations.InitialInventory.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MyApp.Inventory.Infrastructure.Migrations.InitialInventory.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: InitialInventory.Up(MigrationBuilder)
- uid: MyApp.Inventory.Infrastructure.Migrations.InitialInventory.Up*
  name: Up
  href: api/MyApp.Inventory.Infrastructure.Migrations.InitialInventory.html#MyApp_Inventory_Infrastructure_Migrations_InitialInventory_Up_
  commentId: Overload:MyApp.Inventory.Infrastructure.Migrations.InitialInventory.Up
  isSpec: "True"
  fullName: MyApp.Inventory.Infrastructure.Migrations.InitialInventory.Up
  nameWithType: InitialInventory.Up
- uid: MyApp.Inventory.Infrastructure.Migrations.TransactionDate_HasDefaultValueSql_Fix
  name: TransactionDate_HasDefaultValueSql_Fix
  href: api/MyApp.Inventory.Infrastructure.Migrations.TransactionDate_HasDefaultValueSql_Fix.html
  commentId: T:MyApp.Inventory.Infrastructure.Migrations.TransactionDate_HasDefaultValueSql_Fix
  fullName: MyApp.Inventory.Infrastructure.Migrations.TransactionDate_HasDefaultValueSql_Fix
  nameWithType: TransactionDate_HasDefaultValueSql_Fix
- uid: MyApp.Inventory.Infrastructure.Migrations.TransactionDate_HasDefaultValueSql_Fix.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/MyApp.Inventory.Infrastructure.Migrations.TransactionDate_HasDefaultValueSql_Fix.html#MyApp_Inventory_Infrastructure_Migrations_TransactionDate_HasDefaultValueSql_Fix_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:MyApp.Inventory.Infrastructure.Migrations.TransactionDate_HasDefaultValueSql_Fix.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: MyApp.Inventory.Infrastructure.Migrations.TransactionDate_HasDefaultValueSql_Fix.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: TransactionDate_HasDefaultValueSql_Fix.BuildTargetModel(ModelBuilder)
- uid: MyApp.Inventory.Infrastructure.Migrations.TransactionDate_HasDefaultValueSql_Fix.BuildTargetModel*
  name: BuildTargetModel
  href: api/MyApp.Inventory.Infrastructure.Migrations.TransactionDate_HasDefaultValueSql_Fix.html#MyApp_Inventory_Infrastructure_Migrations_TransactionDate_HasDefaultValueSql_Fix_BuildTargetModel_
  commentId: Overload:MyApp.Inventory.Infrastructure.Migrations.TransactionDate_HasDefaultValueSql_Fix.BuildTargetModel
  isSpec: "True"
  fullName: MyApp.Inventory.Infrastructure.Migrations.TransactionDate_HasDefaultValueSql_Fix.BuildTargetModel
  nameWithType: TransactionDate_HasDefaultValueSql_Fix.BuildTargetModel
- uid: MyApp.Inventory.Infrastructure.Migrations.TransactionDate_HasDefaultValueSql_Fix.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/MyApp.Inventory.Infrastructure.Migrations.TransactionDate_HasDefaultValueSql_Fix.html#MyApp_Inventory_Infrastructure_Migrations_TransactionDate_HasDefaultValueSql_Fix_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MyApp.Inventory.Infrastructure.Migrations.TransactionDate_HasDefaultValueSql_Fix.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MyApp.Inventory.Infrastructure.Migrations.TransactionDate_HasDefaultValueSql_Fix.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: TransactionDate_HasDefaultValueSql_Fix.Down(MigrationBuilder)
- uid: MyApp.Inventory.Infrastructure.Migrations.TransactionDate_HasDefaultValueSql_Fix.Down*
  name: Down
  href: api/MyApp.Inventory.Infrastructure.Migrations.TransactionDate_HasDefaultValueSql_Fix.html#MyApp_Inventory_Infrastructure_Migrations_TransactionDate_HasDefaultValueSql_Fix_Down_
  commentId: Overload:MyApp.Inventory.Infrastructure.Migrations.TransactionDate_HasDefaultValueSql_Fix.Down
  isSpec: "True"
  fullName: MyApp.Inventory.Infrastructure.Migrations.TransactionDate_HasDefaultValueSql_Fix.Down
  nameWithType: TransactionDate_HasDefaultValueSql_Fix.Down
- uid: MyApp.Inventory.Infrastructure.Migrations.TransactionDate_HasDefaultValueSql_Fix.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/MyApp.Inventory.Infrastructure.Migrations.TransactionDate_HasDefaultValueSql_Fix.html#MyApp_Inventory_Infrastructure_Migrations_TransactionDate_HasDefaultValueSql_Fix_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MyApp.Inventory.Infrastructure.Migrations.TransactionDate_HasDefaultValueSql_Fix.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MyApp.Inventory.Infrastructure.Migrations.TransactionDate_HasDefaultValueSql_Fix.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: TransactionDate_HasDefaultValueSql_Fix.Up(MigrationBuilder)
- uid: MyApp.Inventory.Infrastructure.Migrations.TransactionDate_HasDefaultValueSql_Fix.Up*
  name: Up
  href: api/MyApp.Inventory.Infrastructure.Migrations.TransactionDate_HasDefaultValueSql_Fix.html#MyApp_Inventory_Infrastructure_Migrations_TransactionDate_HasDefaultValueSql_Fix_Up_
  commentId: Overload:MyApp.Inventory.Infrastructure.Migrations.TransactionDate_HasDefaultValueSql_Fix.Up
  isSpec: "True"
  fullName: MyApp.Inventory.Infrastructure.Migrations.TransactionDate_HasDefaultValueSql_Fix.Up
  nameWithType: TransactionDate_HasDefaultValueSql_Fix.Up
- uid: MyApp.Inventory.Tests.Helpers
  name: MyApp.Inventory.Tests.Helpers
  href: api/MyApp.Inventory.Tests.Helpers.html
  commentId: N:MyApp.Inventory.Tests.Helpers
  fullName: MyApp.Inventory.Tests.Helpers
  nameWithType: MyApp.Inventory.Tests.Helpers
- uid: MyApp.Inventory.Tests.Helpers.TestDbContextFactory
  name: TestDbContextFactory
  href: api/MyApp.Inventory.Tests.Helpers.TestDbContextFactory.html
  commentId: T:MyApp.Inventory.Tests.Helpers.TestDbContextFactory
  fullName: MyApp.Inventory.Tests.Helpers.TestDbContextFactory
  nameWithType: TestDbContextFactory
- uid: MyApp.Inventory.Tests.Helpers.TestDbContextFactory.CreateInMemoryContext
  name: CreateInMemoryContext()
  href: api/MyApp.Inventory.Tests.Helpers.TestDbContextFactory.html#MyApp_Inventory_Tests_Helpers_TestDbContextFactory_CreateInMemoryContext
  commentId: M:MyApp.Inventory.Tests.Helpers.TestDbContextFactory.CreateInMemoryContext
  fullName: MyApp.Inventory.Tests.Helpers.TestDbContextFactory.CreateInMemoryContext()
  nameWithType: TestDbContextFactory.CreateInMemoryContext()
- uid: MyApp.Inventory.Tests.Helpers.TestDbContextFactory.CreateInMemoryContext*
  name: CreateInMemoryContext
  href: api/MyApp.Inventory.Tests.Helpers.TestDbContextFactory.html#MyApp_Inventory_Tests_Helpers_TestDbContextFactory_CreateInMemoryContext_
  commentId: Overload:MyApp.Inventory.Tests.Helpers.TestDbContextFactory.CreateInMemoryContext
  isSpec: "True"
  fullName: MyApp.Inventory.Tests.Helpers.TestDbContextFactory.CreateInMemoryContext
  nameWithType: TestDbContextFactory.CreateInMemoryContext
- uid: MyApp.Inventory.Tests.Helpers.TestDbContextFactory.SeedTestData(MyApp.Inventory.Infrastructure.Data.InventoryDbContext)
  name: SeedTestData(InventoryDbContext)
  href: api/MyApp.Inventory.Tests.Helpers.TestDbContextFactory.html#MyApp_Inventory_Tests_Helpers_TestDbContextFactory_SeedTestData_MyApp_Inventory_Infrastructure_Data_InventoryDbContext_
  commentId: M:MyApp.Inventory.Tests.Helpers.TestDbContextFactory.SeedTestData(MyApp.Inventory.Infrastructure.Data.InventoryDbContext)
  fullName: MyApp.Inventory.Tests.Helpers.TestDbContextFactory.SeedTestData(MyApp.Inventory.Infrastructure.Data.InventoryDbContext)
  nameWithType: TestDbContextFactory.SeedTestData(InventoryDbContext)
- uid: MyApp.Inventory.Tests.Helpers.TestDbContextFactory.SeedTestData*
  name: SeedTestData
  href: api/MyApp.Inventory.Tests.Helpers.TestDbContextFactory.html#MyApp_Inventory_Tests_Helpers_TestDbContextFactory_SeedTestData_
  commentId: Overload:MyApp.Inventory.Tests.Helpers.TestDbContextFactory.SeedTestData
  isSpec: "True"
  fullName: MyApp.Inventory.Tests.Helpers.TestDbContextFactory.SeedTestData
  nameWithType: TestDbContextFactory.SeedTestData
- uid: MyApp.Inventory.Tests.Repositories
  name: MyApp.Inventory.Tests.Repositories
  href: api/MyApp.Inventory.Tests.Repositories.html
  commentId: N:MyApp.Inventory.Tests.Repositories
  fullName: MyApp.Inventory.Tests.Repositories
  nameWithType: MyApp.Inventory.Tests.Repositories
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests
  name: ProductRepositoryTests
  href: api/MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.html
  commentId: T:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests
  nameWithType: ProductRepositoryTests
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.#ctor
  name: ProductRepositoryTests()
  href: api/MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.html#MyApp_Inventory_Tests_Repositories_ProductRepositoryTests__ctor
  commentId: M:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.#ctor
  name.vb: New()
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.ProductRepositoryTests()
  fullName.vb: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.New()
  nameWithType: ProductRepositoryTests.ProductRepositoryTests()
  nameWithType.vb: ProductRepositoryTests.New()
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.#ctor*
  name: ProductRepositoryTests
  href: api/MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.html#MyApp_Inventory_Tests_Repositories_ProductRepositoryTests__ctor_
  commentId: Overload:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.ProductRepositoryTests
  fullName.vb: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.New
  nameWithType: ProductRepositoryTests.ProductRepositoryTests
  nameWithType.vb: ProductRepositoryTests.New
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.AddAsync_WithValidProduct_CreatesProduct
  name: AddAsync_WithValidProduct_CreatesProduct()
  href: api/MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.html#MyApp_Inventory_Tests_Repositories_ProductRepositoryTests_AddAsync_WithValidProduct_CreatesProduct
  commentId: M:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.AddAsync_WithValidProduct_CreatesProduct
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.AddAsync_WithValidProduct_CreatesProduct()
  nameWithType: ProductRepositoryTests.AddAsync_WithValidProduct_CreatesProduct()
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.AddAsync_WithValidProduct_CreatesProduct*
  name: AddAsync_WithValidProduct_CreatesProduct
  href: api/MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.html#MyApp_Inventory_Tests_Repositories_ProductRepositoryTests_AddAsync_WithValidProduct_CreatesProduct_
  commentId: Overload:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.AddAsync_WithValidProduct_CreatesProduct
  isSpec: "True"
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.AddAsync_WithValidProduct_CreatesProduct
  nameWithType: ProductRepositoryTests.AddAsync_WithValidProduct_CreatesProduct
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.DeleteAsync_WithValidId_DeletesProduct
  name: DeleteAsync_WithValidId_DeletesProduct()
  href: api/MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.html#MyApp_Inventory_Tests_Repositories_ProductRepositoryTests_DeleteAsync_WithValidId_DeletesProduct
  commentId: M:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.DeleteAsync_WithValidId_DeletesProduct
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.DeleteAsync_WithValidId_DeletesProduct()
  nameWithType: ProductRepositoryTests.DeleteAsync_WithValidId_DeletesProduct()
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.DeleteAsync_WithValidId_DeletesProduct*
  name: DeleteAsync_WithValidId_DeletesProduct
  href: api/MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.html#MyApp_Inventory_Tests_Repositories_ProductRepositoryTests_DeleteAsync_WithValidId_DeletesProduct_
  commentId: Overload:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.DeleteAsync_WithValidId_DeletesProduct
  isSpec: "True"
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.DeleteAsync_WithValidId_DeletesProduct
  nameWithType: ProductRepositoryTests.DeleteAsync_WithValidId_DeletesProduct
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetAllAsync_ReturnsAllProducts
  name: GetAllAsync_ReturnsAllProducts()
  href: api/MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.html#MyApp_Inventory_Tests_Repositories_ProductRepositoryTests_GetAllAsync_ReturnsAllProducts
  commentId: M:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetAllAsync_ReturnsAllProducts
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetAllAsync_ReturnsAllProducts()
  nameWithType: ProductRepositoryTests.GetAllAsync_ReturnsAllProducts()
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetAllAsync_ReturnsAllProducts*
  name: GetAllAsync_ReturnsAllProducts
  href: api/MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.html#MyApp_Inventory_Tests_Repositories_ProductRepositoryTests_GetAllAsync_ReturnsAllProducts_
  commentId: Overload:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetAllAsync_ReturnsAllProducts
  isSpec: "True"
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetAllAsync_ReturnsAllProducts
  nameWithType: ProductRepositoryTests.GetAllAsync_ReturnsAllProducts
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull
  name: GetByIdAsync_WithNonExistentId_ReturnsNull()
  href: api/MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.html#MyApp_Inventory_Tests_Repositories_ProductRepositoryTests_GetByIdAsync_WithNonExistentId_ReturnsNull
  commentId: M:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull()
  nameWithType: ProductRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull()
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull*
  name: GetByIdAsync_WithNonExistentId_ReturnsNull
  href: api/MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.html#MyApp_Inventory_Tests_Repositories_ProductRepositoryTests_GetByIdAsync_WithNonExistentId_ReturnsNull_
  commentId: Overload:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull
  isSpec: "True"
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull
  nameWithType: ProductRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetByIdAsync_WithValidId_ReturnsProduct
  name: GetByIdAsync_WithValidId_ReturnsProduct()
  href: api/MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.html#MyApp_Inventory_Tests_Repositories_ProductRepositoryTests_GetByIdAsync_WithValidId_ReturnsProduct
  commentId: M:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetByIdAsync_WithValidId_ReturnsProduct
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetByIdAsync_WithValidId_ReturnsProduct()
  nameWithType: ProductRepositoryTests.GetByIdAsync_WithValidId_ReturnsProduct()
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetByIdAsync_WithValidId_ReturnsProduct*
  name: GetByIdAsync_WithValidId_ReturnsProduct
  href: api/MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.html#MyApp_Inventory_Tests_Repositories_ProductRepositoryTests_GetByIdAsync_WithValidId_ReturnsProduct_
  commentId: Overload:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetByIdAsync_WithValidId_ReturnsProduct
  isSpec: "True"
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetByIdAsync_WithValidId_ReturnsProduct
  nameWithType: ProductRepositoryTests.GetByIdAsync_WithValidId_ReturnsProduct
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetBySkuAsync_WithNonExistentSku_ReturnsNull
  name: GetBySkuAsync_WithNonExistentSku_ReturnsNull()
  href: api/MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.html#MyApp_Inventory_Tests_Repositories_ProductRepositoryTests_GetBySkuAsync_WithNonExistentSku_ReturnsNull
  commentId: M:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetBySkuAsync_WithNonExistentSku_ReturnsNull
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetBySkuAsync_WithNonExistentSku_ReturnsNull()
  nameWithType: ProductRepositoryTests.GetBySkuAsync_WithNonExistentSku_ReturnsNull()
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetBySkuAsync_WithNonExistentSku_ReturnsNull*
  name: GetBySkuAsync_WithNonExistentSku_ReturnsNull
  href: api/MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.html#MyApp_Inventory_Tests_Repositories_ProductRepositoryTests_GetBySkuAsync_WithNonExistentSku_ReturnsNull_
  commentId: Overload:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetBySkuAsync_WithNonExistentSku_ReturnsNull
  isSpec: "True"
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetBySkuAsync_WithNonExistentSku_ReturnsNull
  nameWithType: ProductRepositoryTests.GetBySkuAsync_WithNonExistentSku_ReturnsNull
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetBySkuAsync_WithValidSku_ReturnsProduct
  name: GetBySkuAsync_WithValidSku_ReturnsProduct()
  href: api/MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.html#MyApp_Inventory_Tests_Repositories_ProductRepositoryTests_GetBySkuAsync_WithValidSku_ReturnsProduct
  commentId: M:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetBySkuAsync_WithValidSku_ReturnsProduct
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetBySkuAsync_WithValidSku_ReturnsProduct()
  nameWithType: ProductRepositoryTests.GetBySkuAsync_WithValidSku_ReturnsProduct()
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetBySkuAsync_WithValidSku_ReturnsProduct*
  name: GetBySkuAsync_WithValidSku_ReturnsProduct
  href: api/MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.html#MyApp_Inventory_Tests_Repositories_ProductRepositoryTests_GetBySkuAsync_WithValidSku_ReturnsProduct_
  commentId: Overload:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetBySkuAsync_WithValidSku_ReturnsProduct
  isSpec: "True"
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetBySkuAsync_WithValidSku_ReturnsProduct
  nameWithType: ProductRepositoryTests.GetBySkuAsync_WithValidSku_ReturnsProduct
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetLowStockProductsAsync_ReturnsEmpty_WhenNoLowStockProducts
  name: GetLowStockProductsAsync_ReturnsEmpty_WhenNoLowStockProducts()
  href: api/MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.html#MyApp_Inventory_Tests_Repositories_ProductRepositoryTests_GetLowStockProductsAsync_ReturnsEmpty_WhenNoLowStockProducts
  commentId: M:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetLowStockProductsAsync_ReturnsEmpty_WhenNoLowStockProducts
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetLowStockProductsAsync_ReturnsEmpty_WhenNoLowStockProducts()
  nameWithType: ProductRepositoryTests.GetLowStockProductsAsync_ReturnsEmpty_WhenNoLowStockProducts()
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetLowStockProductsAsync_ReturnsEmpty_WhenNoLowStockProducts*
  name: GetLowStockProductsAsync_ReturnsEmpty_WhenNoLowStockProducts
  href: api/MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.html#MyApp_Inventory_Tests_Repositories_ProductRepositoryTests_GetLowStockProductsAsync_ReturnsEmpty_WhenNoLowStockProducts_
  commentId: Overload:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetLowStockProductsAsync_ReturnsEmpty_WhenNoLowStockProducts
  isSpec: "True"
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetLowStockProductsAsync_ReturnsEmpty_WhenNoLowStockProducts
  nameWithType: ProductRepositoryTests.GetLowStockProductsAsync_ReturnsEmpty_WhenNoLowStockProducts
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetLowStockProductsAsync_ReturnsProductsBelowReorderLevel
  name: GetLowStockProductsAsync_ReturnsProductsBelowReorderLevel()
  href: api/MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.html#MyApp_Inventory_Tests_Repositories_ProductRepositoryTests_GetLowStockProductsAsync_ReturnsProductsBelowReorderLevel
  commentId: M:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetLowStockProductsAsync_ReturnsProductsBelowReorderLevel
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetLowStockProductsAsync_ReturnsProductsBelowReorderLevel()
  nameWithType: ProductRepositoryTests.GetLowStockProductsAsync_ReturnsProductsBelowReorderLevel()
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetLowStockProductsAsync_ReturnsProductsBelowReorderLevel*
  name: GetLowStockProductsAsync_ReturnsProductsBelowReorderLevel
  href: api/MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.html#MyApp_Inventory_Tests_Repositories_ProductRepositoryTests_GetLowStockProductsAsync_ReturnsProductsBelowReorderLevel_
  commentId: Overload:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetLowStockProductsAsync_ReturnsProductsBelowReorderLevel
  isSpec: "True"
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.GetLowStockProductsAsync_ReturnsProductsBelowReorderLevel
  nameWithType: ProductRepositoryTests.GetLowStockProductsAsync_ReturnsProductsBelowReorderLevel
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.UpdateAsync_WithExistingProduct_UpdatesProductData
  name: UpdateAsync_WithExistingProduct_UpdatesProductData()
  href: api/MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.html#MyApp_Inventory_Tests_Repositories_ProductRepositoryTests_UpdateAsync_WithExistingProduct_UpdatesProductData
  commentId: M:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.UpdateAsync_WithExistingProduct_UpdatesProductData
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.UpdateAsync_WithExistingProduct_UpdatesProductData()
  nameWithType: ProductRepositoryTests.UpdateAsync_WithExistingProduct_UpdatesProductData()
- uid: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.UpdateAsync_WithExistingProduct_UpdatesProductData*
  name: UpdateAsync_WithExistingProduct_UpdatesProductData
  href: api/MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.html#MyApp_Inventory_Tests_Repositories_ProductRepositoryTests_UpdateAsync_WithExistingProduct_UpdatesProductData_
  commentId: Overload:MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.UpdateAsync_WithExistingProduct_UpdatesProductData
  isSpec: "True"
  fullName: MyApp.Inventory.Tests.Repositories.ProductRepositoryTests.UpdateAsync_WithExistingProduct_UpdatesProductData
  nameWithType: ProductRepositoryTests.UpdateAsync_WithExistingProduct_UpdatesProductData
- uid: MyApp.Orders.API
  name: MyApp.Orders.API
  href: api/MyApp.Orders.API.html
  commentId: N:MyApp.Orders.API
  fullName: MyApp.Orders.API
  nameWithType: MyApp.Orders.API
- uid: MyApp.Orders.API.OrdersController
  name: OrdersController
  href: api/MyApp.Orders.API.OrdersController.html
  commentId: T:MyApp.Orders.API.OrdersController
  fullName: MyApp.Orders.API.OrdersController
  nameWithType: OrdersController
- uid: MyApp.Orders.API.OrdersController.#ctor(MyApp.Orders.Application.Contracts.IOrderService,MyApp.Shared.Domain.Caching.ICacheService,Microsoft.Extensions.Logging.ILogger{MyApp.Orders.API.OrdersController})
  name: OrdersController(IOrderService, ICacheService, ILogger<OrdersController>)
  href: api/MyApp.Orders.API.OrdersController.html#MyApp_Orders_API_OrdersController__ctor_MyApp_Orders_Application_Contracts_IOrderService_MyApp_Shared_Domain_Caching_ICacheService_Microsoft_Extensions_Logging_ILogger_MyApp_Orders_API_OrdersController__
  commentId: M:MyApp.Orders.API.OrdersController.#ctor(MyApp.Orders.Application.Contracts.IOrderService,MyApp.Shared.Domain.Caching.ICacheService,Microsoft.Extensions.Logging.ILogger{MyApp.Orders.API.OrdersController})
  name.vb: New(IOrderService, ICacheService, ILogger(Of OrdersController))
  fullName: MyApp.Orders.API.OrdersController.OrdersController(MyApp.Orders.Application.Contracts.IOrderService, MyApp.Shared.Domain.Caching.ICacheService, Microsoft.Extensions.Logging.ILogger<MyApp.Orders.API.OrdersController>)
  fullName.vb: MyApp.Orders.API.OrdersController.New(MyApp.Orders.Application.Contracts.IOrderService, MyApp.Shared.Domain.Caching.ICacheService, Microsoft.Extensions.Logging.ILogger(Of MyApp.Orders.API.OrdersController))
  nameWithType: OrdersController.OrdersController(IOrderService, ICacheService, ILogger<OrdersController>)
  nameWithType.vb: OrdersController.New(IOrderService, ICacheService, ILogger(Of OrdersController))
- uid: MyApp.Orders.API.OrdersController.#ctor*
  name: OrdersController
  href: api/MyApp.Orders.API.OrdersController.html#MyApp_Orders_API_OrdersController__ctor_
  commentId: Overload:MyApp.Orders.API.OrdersController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Orders.API.OrdersController.OrdersController
  fullName.vb: MyApp.Orders.API.OrdersController.New
  nameWithType: OrdersController.OrdersController
  nameWithType.vb: OrdersController.New
- uid: MyApp.Orders.API.OrdersController.Delete(System.Guid)
  name: Delete(Guid)
  href: api/MyApp.Orders.API.OrdersController.html#MyApp_Orders_API_OrdersController_Delete_System_Guid_
  commentId: M:MyApp.Orders.API.OrdersController.Delete(System.Guid)
  fullName: MyApp.Orders.API.OrdersController.Delete(System.Guid)
  nameWithType: OrdersController.Delete(Guid)
- uid: MyApp.Orders.API.OrdersController.Delete*
  name: Delete
  href: api/MyApp.Orders.API.OrdersController.html#MyApp_Orders_API_OrdersController_Delete_
  commentId: Overload:MyApp.Orders.API.OrdersController.Delete
  isSpec: "True"
  fullName: MyApp.Orders.API.OrdersController.Delete
  nameWithType: OrdersController.Delete
- uid: MyApp.Orders.API.OrdersController.Get
  name: Get()
  href: api/MyApp.Orders.API.OrdersController.html#MyApp_Orders_API_OrdersController_Get
  commentId: M:MyApp.Orders.API.OrdersController.Get
  fullName: MyApp.Orders.API.OrdersController.Get()
  nameWithType: OrdersController.Get()
- uid: MyApp.Orders.API.OrdersController.Get(System.Guid)
  name: Get(Guid)
  href: api/MyApp.Orders.API.OrdersController.html#MyApp_Orders_API_OrdersController_Get_System_Guid_
  commentId: M:MyApp.Orders.API.OrdersController.Get(System.Guid)
  fullName: MyApp.Orders.API.OrdersController.Get(System.Guid)
  nameWithType: OrdersController.Get(Guid)
- uid: MyApp.Orders.API.OrdersController.Get*
  name: Get
  href: api/MyApp.Orders.API.OrdersController.html#MyApp_Orders_API_OrdersController_Get_
  commentId: Overload:MyApp.Orders.API.OrdersController.Get
  isSpec: "True"
  fullName: MyApp.Orders.API.OrdersController.Get
  nameWithType: OrdersController.Get
- uid: MyApp.Orders.API.OrdersController.Post(MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto)
  name: Post(CreateUpdateOrderDto)
  href: api/MyApp.Orders.API.OrdersController.html#MyApp_Orders_API_OrdersController_Post_MyApp_Orders_Application_Contracts_Dtos_CreateUpdateOrderDto_
  commentId: M:MyApp.Orders.API.OrdersController.Post(MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto)
  fullName: MyApp.Orders.API.OrdersController.Post(MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto)
  nameWithType: OrdersController.Post(CreateUpdateOrderDto)
- uid: MyApp.Orders.API.OrdersController.Post*
  name: Post
  href: api/MyApp.Orders.API.OrdersController.html#MyApp_Orders_API_OrdersController_Post_
  commentId: Overload:MyApp.Orders.API.OrdersController.Post
  isSpec: "True"
  fullName: MyApp.Orders.API.OrdersController.Post
  nameWithType: OrdersController.Post
- uid: MyApp.Orders.API.OrdersController.Put(System.Guid,MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto)
  name: Put(Guid, CreateUpdateOrderDto)
  href: api/MyApp.Orders.API.OrdersController.html#MyApp_Orders_API_OrdersController_Put_System_Guid_MyApp_Orders_Application_Contracts_Dtos_CreateUpdateOrderDto_
  commentId: M:MyApp.Orders.API.OrdersController.Put(System.Guid,MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto)
  fullName: MyApp.Orders.API.OrdersController.Put(System.Guid, MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto)
  nameWithType: OrdersController.Put(Guid, CreateUpdateOrderDto)
- uid: MyApp.Orders.API.OrdersController.Put*
  name: Put
  href: api/MyApp.Orders.API.OrdersController.html#MyApp_Orders_API_OrdersController_Put_
  commentId: Overload:MyApp.Orders.API.OrdersController.Put
  isSpec: "True"
  fullName: MyApp.Orders.API.OrdersController.Put
  nameWithType: OrdersController.Put
- uid: MyApp.Orders.Application.Contracts
  name: MyApp.Orders.Application.Contracts
  href: api/MyApp.Orders.Application.Contracts.html
  commentId: N:MyApp.Orders.Application.Contracts
  fullName: MyApp.Orders.Application.Contracts
  nameWithType: MyApp.Orders.Application.Contracts
- uid: MyApp.Orders.Application.Contracts.Dtos
  name: MyApp.Orders.Application.Contracts.Dtos
  href: api/MyApp.Orders.Application.Contracts.Dtos.html
  commentId: N:MyApp.Orders.Application.Contracts.Dtos
  fullName: MyApp.Orders.Application.Contracts.Dtos
  nameWithType: MyApp.Orders.Application.Contracts.Dtos
- uid: MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto
  name: CreateUpdateOrderDto
  href: api/MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto.html
  commentId: T:MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto
  fullName: MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto
  nameWithType: CreateUpdateOrderDto
- uid: MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto.CustomerId
  name: CustomerId
  href: api/MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto.html#MyApp_Orders_Application_Contracts_Dtos_CreateUpdateOrderDto_CustomerId
  commentId: P:MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto.CustomerId
  fullName: MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto.CustomerId
  nameWithType: CreateUpdateOrderDto.CustomerId
- uid: MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto.CustomerId*
  name: CustomerId
  href: api/MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto.html#MyApp_Orders_Application_Contracts_Dtos_CreateUpdateOrderDto_CustomerId_
  commentId: Overload:MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto.CustomerId
  isSpec: "True"
  fullName: MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto.CustomerId
  nameWithType: CreateUpdateOrderDto.CustomerId
- uid: MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto.Lines
  name: Lines
  href: api/MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto.html#MyApp_Orders_Application_Contracts_Dtos_CreateUpdateOrderDto_Lines
  commentId: P:MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto.Lines
  fullName: MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto.Lines
  nameWithType: CreateUpdateOrderDto.Lines
- uid: MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto.Lines*
  name: Lines
  href: api/MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto.html#MyApp_Orders_Application_Contracts_Dtos_CreateUpdateOrderDto_Lines_
  commentId: Overload:MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto.Lines
  isSpec: "True"
  fullName: MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto.Lines
  nameWithType: CreateUpdateOrderDto.Lines
- uid: MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto.OrderDate
  name: OrderDate
  href: api/MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto.html#MyApp_Orders_Application_Contracts_Dtos_CreateUpdateOrderDto_OrderDate
  commentId: P:MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto.OrderDate
  fullName: MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto.OrderDate
  nameWithType: CreateUpdateOrderDto.OrderDate
- uid: MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto.OrderDate*
  name: OrderDate
  href: api/MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto.html#MyApp_Orders_Application_Contracts_Dtos_CreateUpdateOrderDto_OrderDate_
  commentId: Overload:MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto.OrderDate
  isSpec: "True"
  fullName: MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto.OrderDate
  nameWithType: CreateUpdateOrderDto.OrderDate
- uid: MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto.OrderNumber
  name: OrderNumber
  href: api/MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto.html#MyApp_Orders_Application_Contracts_Dtos_CreateUpdateOrderDto_OrderNumber
  commentId: P:MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto.OrderNumber
  fullName: MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto.OrderNumber
  nameWithType: CreateUpdateOrderDto.OrderNumber
- uid: MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto.OrderNumber*
  name: OrderNumber
  href: api/MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto.html#MyApp_Orders_Application_Contracts_Dtos_CreateUpdateOrderDto_OrderNumber_
  commentId: Overload:MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto.OrderNumber
  isSpec: "True"
  fullName: MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto.OrderNumber
  nameWithType: CreateUpdateOrderDto.OrderNumber
- uid: MyApp.Orders.Application.Contracts.Dtos.OrderDto
  name: OrderDto
  href: api/MyApp.Orders.Application.Contracts.Dtos.OrderDto.html
  commentId: T:MyApp.Orders.Application.Contracts.Dtos.OrderDto
  fullName: MyApp.Orders.Application.Contracts.Dtos.OrderDto
  nameWithType: OrderDto
- uid: MyApp.Orders.Application.Contracts.Dtos.OrderDto.CustomerId
  name: CustomerId
  href: api/MyApp.Orders.Application.Contracts.Dtos.OrderDto.html#MyApp_Orders_Application_Contracts_Dtos_OrderDto_CustomerId
  commentId: P:MyApp.Orders.Application.Contracts.Dtos.OrderDto.CustomerId
  fullName: MyApp.Orders.Application.Contracts.Dtos.OrderDto.CustomerId
  nameWithType: OrderDto.CustomerId
- uid: MyApp.Orders.Application.Contracts.Dtos.OrderDto.CustomerId*
  name: CustomerId
  href: api/MyApp.Orders.Application.Contracts.Dtos.OrderDto.html#MyApp_Orders_Application_Contracts_Dtos_OrderDto_CustomerId_
  commentId: Overload:MyApp.Orders.Application.Contracts.Dtos.OrderDto.CustomerId
  isSpec: "True"
  fullName: MyApp.Orders.Application.Contracts.Dtos.OrderDto.CustomerId
  nameWithType: OrderDto.CustomerId
- uid: MyApp.Orders.Application.Contracts.Dtos.OrderDto.Lines
  name: Lines
  href: api/MyApp.Orders.Application.Contracts.Dtos.OrderDto.html#MyApp_Orders_Application_Contracts_Dtos_OrderDto_Lines
  commentId: P:MyApp.Orders.Application.Contracts.Dtos.OrderDto.Lines
  fullName: MyApp.Orders.Application.Contracts.Dtos.OrderDto.Lines
  nameWithType: OrderDto.Lines
- uid: MyApp.Orders.Application.Contracts.Dtos.OrderDto.Lines*
  name: Lines
  href: api/MyApp.Orders.Application.Contracts.Dtos.OrderDto.html#MyApp_Orders_Application_Contracts_Dtos_OrderDto_Lines_
  commentId: Overload:MyApp.Orders.Application.Contracts.Dtos.OrderDto.Lines
  isSpec: "True"
  fullName: MyApp.Orders.Application.Contracts.Dtos.OrderDto.Lines
  nameWithType: OrderDto.Lines
- uid: MyApp.Orders.Application.Contracts.Dtos.OrderDto.OrderDate
  name: OrderDate
  href: api/MyApp.Orders.Application.Contracts.Dtos.OrderDto.html#MyApp_Orders_Application_Contracts_Dtos_OrderDto_OrderDate
  commentId: P:MyApp.Orders.Application.Contracts.Dtos.OrderDto.OrderDate
  fullName: MyApp.Orders.Application.Contracts.Dtos.OrderDto.OrderDate
  nameWithType: OrderDto.OrderDate
- uid: MyApp.Orders.Application.Contracts.Dtos.OrderDto.OrderDate*
  name: OrderDate
  href: api/MyApp.Orders.Application.Contracts.Dtos.OrderDto.html#MyApp_Orders_Application_Contracts_Dtos_OrderDto_OrderDate_
  commentId: Overload:MyApp.Orders.Application.Contracts.Dtos.OrderDto.OrderDate
  isSpec: "True"
  fullName: MyApp.Orders.Application.Contracts.Dtos.OrderDto.OrderDate
  nameWithType: OrderDto.OrderDate
- uid: MyApp.Orders.Application.Contracts.Dtos.OrderDto.OrderNumber
  name: OrderNumber
  href: api/MyApp.Orders.Application.Contracts.Dtos.OrderDto.html#MyApp_Orders_Application_Contracts_Dtos_OrderDto_OrderNumber
  commentId: P:MyApp.Orders.Application.Contracts.Dtos.OrderDto.OrderNumber
  fullName: MyApp.Orders.Application.Contracts.Dtos.OrderDto.OrderNumber
  nameWithType: OrderDto.OrderNumber
- uid: MyApp.Orders.Application.Contracts.Dtos.OrderDto.OrderNumber*
  name: OrderNumber
  href: api/MyApp.Orders.Application.Contracts.Dtos.OrderDto.html#MyApp_Orders_Application_Contracts_Dtos_OrderDto_OrderNumber_
  commentId: Overload:MyApp.Orders.Application.Contracts.Dtos.OrderDto.OrderNumber
  isSpec: "True"
  fullName: MyApp.Orders.Application.Contracts.Dtos.OrderDto.OrderNumber
  nameWithType: OrderDto.OrderNumber
- uid: MyApp.Orders.Application.Contracts.Dtos.OrderDto.Status
  name: Status
  href: api/MyApp.Orders.Application.Contracts.Dtos.OrderDto.html#MyApp_Orders_Application_Contracts_Dtos_OrderDto_Status
  commentId: P:MyApp.Orders.Application.Contracts.Dtos.OrderDto.Status
  fullName: MyApp.Orders.Application.Contracts.Dtos.OrderDto.Status
  nameWithType: OrderDto.Status
- uid: MyApp.Orders.Application.Contracts.Dtos.OrderDto.Status*
  name: Status
  href: api/MyApp.Orders.Application.Contracts.Dtos.OrderDto.html#MyApp_Orders_Application_Contracts_Dtos_OrderDto_Status_
  commentId: Overload:MyApp.Orders.Application.Contracts.Dtos.OrderDto.Status
  isSpec: "True"
  fullName: MyApp.Orders.Application.Contracts.Dtos.OrderDto.Status
  nameWithType: OrderDto.Status
- uid: MyApp.Orders.Application.Contracts.Dtos.OrderDto.TotalAmount
  name: TotalAmount
  href: api/MyApp.Orders.Application.Contracts.Dtos.OrderDto.html#MyApp_Orders_Application_Contracts_Dtos_OrderDto_TotalAmount
  commentId: P:MyApp.Orders.Application.Contracts.Dtos.OrderDto.TotalAmount
  fullName: MyApp.Orders.Application.Contracts.Dtos.OrderDto.TotalAmount
  nameWithType: OrderDto.TotalAmount
- uid: MyApp.Orders.Application.Contracts.Dtos.OrderDto.TotalAmount*
  name: TotalAmount
  href: api/MyApp.Orders.Application.Contracts.Dtos.OrderDto.html#MyApp_Orders_Application_Contracts_Dtos_OrderDto_TotalAmount_
  commentId: Overload:MyApp.Orders.Application.Contracts.Dtos.OrderDto.TotalAmount
  isSpec: "True"
  fullName: MyApp.Orders.Application.Contracts.Dtos.OrderDto.TotalAmount
  nameWithType: OrderDto.TotalAmount
- uid: MyApp.Orders.Application.Contracts.Dtos.OrderLineDto
  name: OrderLineDto
  href: api/MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.html
  commentId: T:MyApp.Orders.Application.Contracts.Dtos.OrderLineDto
  fullName: MyApp.Orders.Application.Contracts.Dtos.OrderLineDto
  nameWithType: OrderLineDto
- uid: MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.Id
  name: Id
  href: api/MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.html#MyApp_Orders_Application_Contracts_Dtos_OrderLineDto_Id
  commentId: P:MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.Id
  fullName: MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.Id
  nameWithType: OrderLineDto.Id
- uid: MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.Id*
  name: Id
  href: api/MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.html#MyApp_Orders_Application_Contracts_Dtos_OrderLineDto_Id_
  commentId: Overload:MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.Id
  isSpec: "True"
  fullName: MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.Id
  nameWithType: OrderLineDto.Id
- uid: MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.LineTotal
  name: LineTotal
  href: api/MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.html#MyApp_Orders_Application_Contracts_Dtos_OrderLineDto_LineTotal
  commentId: P:MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.LineTotal
  fullName: MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.LineTotal
  nameWithType: OrderLineDto.LineTotal
- uid: MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.LineTotal*
  name: LineTotal
  href: api/MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.html#MyApp_Orders_Application_Contracts_Dtos_OrderLineDto_LineTotal_
  commentId: Overload:MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.LineTotal
  isSpec: "True"
  fullName: MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.LineTotal
  nameWithType: OrderLineDto.LineTotal
- uid: MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.ProductId
  name: ProductId
  href: api/MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.html#MyApp_Orders_Application_Contracts_Dtos_OrderLineDto_ProductId
  commentId: P:MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.ProductId
  fullName: MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.ProductId
  nameWithType: OrderLineDto.ProductId
- uid: MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.ProductId*
  name: ProductId
  href: api/MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.html#MyApp_Orders_Application_Contracts_Dtos_OrderLineDto_ProductId_
  commentId: Overload:MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.ProductId
  isSpec: "True"
  fullName: MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.ProductId
  nameWithType: OrderLineDto.ProductId
- uid: MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.Quantity
  name: Quantity
  href: api/MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.html#MyApp_Orders_Application_Contracts_Dtos_OrderLineDto_Quantity
  commentId: P:MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.Quantity
  fullName: MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.Quantity
  nameWithType: OrderLineDto.Quantity
- uid: MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.Quantity*
  name: Quantity
  href: api/MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.html#MyApp_Orders_Application_Contracts_Dtos_OrderLineDto_Quantity_
  commentId: Overload:MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.Quantity
  isSpec: "True"
  fullName: MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.Quantity
  nameWithType: OrderLineDto.Quantity
- uid: MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.UnitPrice
  name: UnitPrice
  href: api/MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.html#MyApp_Orders_Application_Contracts_Dtos_OrderLineDto_UnitPrice
  commentId: P:MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.UnitPrice
  fullName: MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.UnitPrice
  nameWithType: OrderLineDto.UnitPrice
- uid: MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.UnitPrice*
  name: UnitPrice
  href: api/MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.html#MyApp_Orders_Application_Contracts_Dtos_OrderLineDto_UnitPrice_
  commentId: Overload:MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.UnitPrice
  isSpec: "True"
  fullName: MyApp.Orders.Application.Contracts.Dtos.OrderLineDto.UnitPrice
  nameWithType: OrderLineDto.UnitPrice
- uid: MyApp.Orders.Application.Contracts.IOrderService
  name: IOrderService
  href: api/MyApp.Orders.Application.Contracts.IOrderService.html
  commentId: T:MyApp.Orders.Application.Contracts.IOrderService
  fullName: MyApp.Orders.Application.Contracts.IOrderService
  nameWithType: IOrderService
- uid: MyApp.Orders.Application.Contracts.IOrderService.CreateAsync(MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto)
  name: CreateAsync(CreateUpdateOrderDto)
  href: api/MyApp.Orders.Application.Contracts.IOrderService.html#MyApp_Orders_Application_Contracts_IOrderService_CreateAsync_MyApp_Orders_Application_Contracts_Dtos_CreateUpdateOrderDto_
  commentId: M:MyApp.Orders.Application.Contracts.IOrderService.CreateAsync(MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto)
  fullName: MyApp.Orders.Application.Contracts.IOrderService.CreateAsync(MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto)
  nameWithType: IOrderService.CreateAsync(CreateUpdateOrderDto)
- uid: MyApp.Orders.Application.Contracts.IOrderService.CreateAsync*
  name: CreateAsync
  href: api/MyApp.Orders.Application.Contracts.IOrderService.html#MyApp_Orders_Application_Contracts_IOrderService_CreateAsync_
  commentId: Overload:MyApp.Orders.Application.Contracts.IOrderService.CreateAsync
  isSpec: "True"
  fullName: MyApp.Orders.Application.Contracts.IOrderService.CreateAsync
  nameWithType: IOrderService.CreateAsync
- uid: MyApp.Orders.Application.Contracts.IOrderService.DeleteAsync(System.Guid)
  name: DeleteAsync(Guid)
  href: api/MyApp.Orders.Application.Contracts.IOrderService.html#MyApp_Orders_Application_Contracts_IOrderService_DeleteAsync_System_Guid_
  commentId: M:MyApp.Orders.Application.Contracts.IOrderService.DeleteAsync(System.Guid)
  fullName: MyApp.Orders.Application.Contracts.IOrderService.DeleteAsync(System.Guid)
  nameWithType: IOrderService.DeleteAsync(Guid)
- uid: MyApp.Orders.Application.Contracts.IOrderService.DeleteAsync*
  name: DeleteAsync
  href: api/MyApp.Orders.Application.Contracts.IOrderService.html#MyApp_Orders_Application_Contracts_IOrderService_DeleteAsync_
  commentId: Overload:MyApp.Orders.Application.Contracts.IOrderService.DeleteAsync
  isSpec: "True"
  fullName: MyApp.Orders.Application.Contracts.IOrderService.DeleteAsync
  nameWithType: IOrderService.DeleteAsync
- uid: MyApp.Orders.Application.Contracts.IOrderService.GetByIdAsync(System.Guid)
  name: GetByIdAsync(Guid)
  href: api/MyApp.Orders.Application.Contracts.IOrderService.html#MyApp_Orders_Application_Contracts_IOrderService_GetByIdAsync_System_Guid_
  commentId: M:MyApp.Orders.Application.Contracts.IOrderService.GetByIdAsync(System.Guid)
  fullName: MyApp.Orders.Application.Contracts.IOrderService.GetByIdAsync(System.Guid)
  nameWithType: IOrderService.GetByIdAsync(Guid)
- uid: MyApp.Orders.Application.Contracts.IOrderService.GetByIdAsync*
  name: GetByIdAsync
  href: api/MyApp.Orders.Application.Contracts.IOrderService.html#MyApp_Orders_Application_Contracts_IOrderService_GetByIdAsync_
  commentId: Overload:MyApp.Orders.Application.Contracts.IOrderService.GetByIdAsync
  isSpec: "True"
  fullName: MyApp.Orders.Application.Contracts.IOrderService.GetByIdAsync
  nameWithType: IOrderService.GetByIdAsync
- uid: MyApp.Orders.Application.Contracts.IOrderService.ListAsync
  name: ListAsync()
  href: api/MyApp.Orders.Application.Contracts.IOrderService.html#MyApp_Orders_Application_Contracts_IOrderService_ListAsync
  commentId: M:MyApp.Orders.Application.Contracts.IOrderService.ListAsync
  fullName: MyApp.Orders.Application.Contracts.IOrderService.ListAsync()
  nameWithType: IOrderService.ListAsync()
- uid: MyApp.Orders.Application.Contracts.IOrderService.ListAsync*
  name: ListAsync
  href: api/MyApp.Orders.Application.Contracts.IOrderService.html#MyApp_Orders_Application_Contracts_IOrderService_ListAsync_
  commentId: Overload:MyApp.Orders.Application.Contracts.IOrderService.ListAsync
  isSpec: "True"
  fullName: MyApp.Orders.Application.Contracts.IOrderService.ListAsync
  nameWithType: IOrderService.ListAsync
- uid: MyApp.Orders.Application.Contracts.IOrderService.UpdateAsync(System.Guid,MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto)
  name: UpdateAsync(Guid, CreateUpdateOrderDto)
  href: api/MyApp.Orders.Application.Contracts.IOrderService.html#MyApp_Orders_Application_Contracts_IOrderService_UpdateAsync_System_Guid_MyApp_Orders_Application_Contracts_Dtos_CreateUpdateOrderDto_
  commentId: M:MyApp.Orders.Application.Contracts.IOrderService.UpdateAsync(System.Guid,MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto)
  fullName: MyApp.Orders.Application.Contracts.IOrderService.UpdateAsync(System.Guid, MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto)
  nameWithType: IOrderService.UpdateAsync(Guid, CreateUpdateOrderDto)
- uid: MyApp.Orders.Application.Contracts.IOrderService.UpdateAsync*
  name: UpdateAsync
  href: api/MyApp.Orders.Application.Contracts.IOrderService.html#MyApp_Orders_Application_Contracts_IOrderService_UpdateAsync_
  commentId: Overload:MyApp.Orders.Application.Contracts.IOrderService.UpdateAsync
  isSpec: "True"
  fullName: MyApp.Orders.Application.Contracts.IOrderService.UpdateAsync
  nameWithType: IOrderService.UpdateAsync
- uid: MyApp.Orders.Application.Mapping
  name: MyApp.Orders.Application.Mapping
  href: api/MyApp.Orders.Application.Mapping.html
  commentId: N:MyApp.Orders.Application.Mapping
  fullName: MyApp.Orders.Application.Mapping
  nameWithType: MyApp.Orders.Application.Mapping
- uid: MyApp.Orders.Application.Mapping.OrderProfile
  name: OrderProfile
  href: api/MyApp.Orders.Application.Mapping.OrderProfile.html
  commentId: T:MyApp.Orders.Application.Mapping.OrderProfile
  fullName: MyApp.Orders.Application.Mapping.OrderProfile
  nameWithType: OrderProfile
- uid: MyApp.Orders.Application.Mapping.OrderProfile.#ctor
  name: OrderProfile()
  href: api/MyApp.Orders.Application.Mapping.OrderProfile.html#MyApp_Orders_Application_Mapping_OrderProfile__ctor
  commentId: M:MyApp.Orders.Application.Mapping.OrderProfile.#ctor
  name.vb: New()
  fullName: MyApp.Orders.Application.Mapping.OrderProfile.OrderProfile()
  fullName.vb: MyApp.Orders.Application.Mapping.OrderProfile.New()
  nameWithType: OrderProfile.OrderProfile()
  nameWithType.vb: OrderProfile.New()
- uid: MyApp.Orders.Application.Mapping.OrderProfile.#ctor*
  name: OrderProfile
  href: api/MyApp.Orders.Application.Mapping.OrderProfile.html#MyApp_Orders_Application_Mapping_OrderProfile__ctor_
  commentId: Overload:MyApp.Orders.Application.Mapping.OrderProfile.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Orders.Application.Mapping.OrderProfile.OrderProfile
  fullName.vb: MyApp.Orders.Application.Mapping.OrderProfile.New
  nameWithType: OrderProfile.OrderProfile
  nameWithType.vb: OrderProfile.New
- uid: MyApp.Orders.Application.Services
  name: MyApp.Orders.Application.Services
  href: api/MyApp.Orders.Application.Services.html
  commentId: N:MyApp.Orders.Application.Services
  fullName: MyApp.Orders.Application.Services
  nameWithType: MyApp.Orders.Application.Services
- uid: MyApp.Orders.Application.Services.OrderService
  name: OrderService
  href: api/MyApp.Orders.Application.Services.OrderService.html
  commentId: T:MyApp.Orders.Application.Services.OrderService
  fullName: MyApp.Orders.Application.Services.OrderService
  nameWithType: OrderService
- uid: MyApp.Orders.Application.Services.OrderService.#ctor(MyApp.Orders.Domain.IOrderRepository,MyApp.Orders.Domain.IOrderLineRepository,AutoMapper.IMapper)
  name: OrderService(IOrderRepository, IOrderLineRepository, IMapper)
  href: api/MyApp.Orders.Application.Services.OrderService.html#MyApp_Orders_Application_Services_OrderService__ctor_MyApp_Orders_Domain_IOrderRepository_MyApp_Orders_Domain_IOrderLineRepository_AutoMapper_IMapper_
  commentId: M:MyApp.Orders.Application.Services.OrderService.#ctor(MyApp.Orders.Domain.IOrderRepository,MyApp.Orders.Domain.IOrderLineRepository,AutoMapper.IMapper)
  name.vb: New(IOrderRepository, IOrderLineRepository, IMapper)
  fullName: MyApp.Orders.Application.Services.OrderService.OrderService(MyApp.Orders.Domain.IOrderRepository, MyApp.Orders.Domain.IOrderLineRepository, AutoMapper.IMapper)
  fullName.vb: MyApp.Orders.Application.Services.OrderService.New(MyApp.Orders.Domain.IOrderRepository, MyApp.Orders.Domain.IOrderLineRepository, AutoMapper.IMapper)
  nameWithType: OrderService.OrderService(IOrderRepository, IOrderLineRepository, IMapper)
  nameWithType.vb: OrderService.New(IOrderRepository, IOrderLineRepository, IMapper)
- uid: MyApp.Orders.Application.Services.OrderService.#ctor*
  name: OrderService
  href: api/MyApp.Orders.Application.Services.OrderService.html#MyApp_Orders_Application_Services_OrderService__ctor_
  commentId: Overload:MyApp.Orders.Application.Services.OrderService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Orders.Application.Services.OrderService.OrderService
  fullName.vb: MyApp.Orders.Application.Services.OrderService.New
  nameWithType: OrderService.OrderService
  nameWithType.vb: OrderService.New
- uid: MyApp.Orders.Application.Services.OrderService.CreateAsync(MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto)
  name: CreateAsync(CreateUpdateOrderDto)
  href: api/MyApp.Orders.Application.Services.OrderService.html#MyApp_Orders_Application_Services_OrderService_CreateAsync_MyApp_Orders_Application_Contracts_Dtos_CreateUpdateOrderDto_
  commentId: M:MyApp.Orders.Application.Services.OrderService.CreateAsync(MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto)
  fullName: MyApp.Orders.Application.Services.OrderService.CreateAsync(MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto)
  nameWithType: OrderService.CreateAsync(CreateUpdateOrderDto)
- uid: MyApp.Orders.Application.Services.OrderService.CreateAsync*
  name: CreateAsync
  href: api/MyApp.Orders.Application.Services.OrderService.html#MyApp_Orders_Application_Services_OrderService_CreateAsync_
  commentId: Overload:MyApp.Orders.Application.Services.OrderService.CreateAsync
  isSpec: "True"
  fullName: MyApp.Orders.Application.Services.OrderService.CreateAsync
  nameWithType: OrderService.CreateAsync
- uid: MyApp.Orders.Application.Services.OrderService.DeleteAsync(System.Guid)
  name: DeleteAsync(Guid)
  href: api/MyApp.Orders.Application.Services.OrderService.html#MyApp_Orders_Application_Services_OrderService_DeleteAsync_System_Guid_
  commentId: M:MyApp.Orders.Application.Services.OrderService.DeleteAsync(System.Guid)
  fullName: MyApp.Orders.Application.Services.OrderService.DeleteAsync(System.Guid)
  nameWithType: OrderService.DeleteAsync(Guid)
- uid: MyApp.Orders.Application.Services.OrderService.DeleteAsync*
  name: DeleteAsync
  href: api/MyApp.Orders.Application.Services.OrderService.html#MyApp_Orders_Application_Services_OrderService_DeleteAsync_
  commentId: Overload:MyApp.Orders.Application.Services.OrderService.DeleteAsync
  isSpec: "True"
  fullName: MyApp.Orders.Application.Services.OrderService.DeleteAsync
  nameWithType: OrderService.DeleteAsync
- uid: MyApp.Orders.Application.Services.OrderService.GetByIdAsync(System.Guid)
  name: GetByIdAsync(Guid)
  href: api/MyApp.Orders.Application.Services.OrderService.html#MyApp_Orders_Application_Services_OrderService_GetByIdAsync_System_Guid_
  commentId: M:MyApp.Orders.Application.Services.OrderService.GetByIdAsync(System.Guid)
  fullName: MyApp.Orders.Application.Services.OrderService.GetByIdAsync(System.Guid)
  nameWithType: OrderService.GetByIdAsync(Guid)
- uid: MyApp.Orders.Application.Services.OrderService.GetByIdAsync*
  name: GetByIdAsync
  href: api/MyApp.Orders.Application.Services.OrderService.html#MyApp_Orders_Application_Services_OrderService_GetByIdAsync_
  commentId: Overload:MyApp.Orders.Application.Services.OrderService.GetByIdAsync
  isSpec: "True"
  fullName: MyApp.Orders.Application.Services.OrderService.GetByIdAsync
  nameWithType: OrderService.GetByIdAsync
- uid: MyApp.Orders.Application.Services.OrderService.ListAsync
  name: ListAsync()
  href: api/MyApp.Orders.Application.Services.OrderService.html#MyApp_Orders_Application_Services_OrderService_ListAsync
  commentId: M:MyApp.Orders.Application.Services.OrderService.ListAsync
  fullName: MyApp.Orders.Application.Services.OrderService.ListAsync()
  nameWithType: OrderService.ListAsync()
- uid: MyApp.Orders.Application.Services.OrderService.ListAsync*
  name: ListAsync
  href: api/MyApp.Orders.Application.Services.OrderService.html#MyApp_Orders_Application_Services_OrderService_ListAsync_
  commentId: Overload:MyApp.Orders.Application.Services.OrderService.ListAsync
  isSpec: "True"
  fullName: MyApp.Orders.Application.Services.OrderService.ListAsync
  nameWithType: OrderService.ListAsync
- uid: MyApp.Orders.Application.Services.OrderService.UpdateAsync(System.Guid,MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto)
  name: UpdateAsync(Guid, CreateUpdateOrderDto)
  href: api/MyApp.Orders.Application.Services.OrderService.html#MyApp_Orders_Application_Services_OrderService_UpdateAsync_System_Guid_MyApp_Orders_Application_Contracts_Dtos_CreateUpdateOrderDto_
  commentId: M:MyApp.Orders.Application.Services.OrderService.UpdateAsync(System.Guid,MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto)
  fullName: MyApp.Orders.Application.Services.OrderService.UpdateAsync(System.Guid, MyApp.Orders.Application.Contracts.Dtos.CreateUpdateOrderDto)
  nameWithType: OrderService.UpdateAsync(Guid, CreateUpdateOrderDto)
- uid: MyApp.Orders.Application.Services.OrderService.UpdateAsync*
  name: UpdateAsync
  href: api/MyApp.Orders.Application.Services.OrderService.html#MyApp_Orders_Application_Services_OrderService_UpdateAsync_
  commentId: Overload:MyApp.Orders.Application.Services.OrderService.UpdateAsync
  isSpec: "True"
  fullName: MyApp.Orders.Application.Services.OrderService.UpdateAsync
  nameWithType: OrderService.UpdateAsync
- uid: MyApp.Orders.Application.Tests.Services
  name: MyApp.Orders.Application.Tests.Services
  href: api/MyApp.Orders.Application.Tests.Services.html
  commentId: N:MyApp.Orders.Application.Tests.Services
  fullName: MyApp.Orders.Application.Tests.Services
  nameWithType: MyApp.Orders.Application.Tests.Services
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests
  name: OrderServiceTests
  href: api/MyApp.Orders.Application.Tests.Services.OrderServiceTests.html
  commentId: T:MyApp.Orders.Application.Tests.Services.OrderServiceTests
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests
  nameWithType: OrderServiceTests
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.#ctor
  name: OrderServiceTests()
  href: api/MyApp.Orders.Application.Tests.Services.OrderServiceTests.html#MyApp_Orders_Application_Tests_Services_OrderServiceTests__ctor
  commentId: M:MyApp.Orders.Application.Tests.Services.OrderServiceTests.#ctor
  name.vb: New()
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.OrderServiceTests()
  fullName.vb: MyApp.Orders.Application.Tests.Services.OrderServiceTests.New()
  nameWithType: OrderServiceTests.OrderServiceTests()
  nameWithType.vb: OrderServiceTests.New()
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.#ctor*
  name: OrderServiceTests
  href: api/MyApp.Orders.Application.Tests.Services.OrderServiceTests.html#MyApp_Orders_Application_Tests_Services_OrderServiceTests__ctor_
  commentId: Overload:MyApp.Orders.Application.Tests.Services.OrderServiceTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.OrderServiceTests
  fullName.vb: MyApp.Orders.Application.Tests.Services.OrderServiceTests.New
  nameWithType: OrderServiceTests.OrderServiceTests
  nameWithType.vb: OrderServiceTests.New
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_AssignsGuidsToOrderAndLines
  name: CreateAsync_AssignsGuidsToOrderAndLines()
  href: api/MyApp.Orders.Application.Tests.Services.OrderServiceTests.html#MyApp_Orders_Application_Tests_Services_OrderServiceTests_CreateAsync_AssignsGuidsToOrderAndLines
  commentId: M:MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_AssignsGuidsToOrderAndLines
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_AssignsGuidsToOrderAndLines()
  nameWithType: OrderServiceTests.CreateAsync_AssignsGuidsToOrderAndLines()
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_AssignsGuidsToOrderAndLines*
  name: CreateAsync_AssignsGuidsToOrderAndLines
  href: api/MyApp.Orders.Application.Tests.Services.OrderServiceTests.html#MyApp_Orders_Application_Tests_Services_OrderServiceTests_CreateAsync_AssignsGuidsToOrderAndLines_
  commentId: Overload:MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_AssignsGuidsToOrderAndLines
  isSpec: "True"
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_AssignsGuidsToOrderAndLines
  nameWithType: OrderServiceTests.CreateAsync_AssignsGuidsToOrderAndLines
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_CalculatesTotalAmountFromLines
  name: CreateAsync_CalculatesTotalAmountFromLines()
  href: api/MyApp.Orders.Application.Tests.Services.OrderServiceTests.html#MyApp_Orders_Application_Tests_Services_OrderServiceTests_CreateAsync_CalculatesTotalAmountFromLines
  commentId: M:MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_CalculatesTotalAmountFromLines
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_CalculatesTotalAmountFromLines()
  nameWithType: OrderServiceTests.CreateAsync_CalculatesTotalAmountFromLines()
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_CalculatesTotalAmountFromLines*
  name: CreateAsync_CalculatesTotalAmountFromLines
  href: api/MyApp.Orders.Application.Tests.Services.OrderServiceTests.html#MyApp_Orders_Application_Tests_Services_OrderServiceTests_CreateAsync_CalculatesTotalAmountFromLines_
  commentId: Overload:MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_CalculatesTotalAmountFromLines
  isSpec: "True"
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_CalculatesTotalAmountFromLines
  nameWithType: OrderServiceTests.CreateAsync_CalculatesTotalAmountFromLines
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_SetsOrderStatusToDraft
  name: CreateAsync_SetsOrderStatusToDraft()
  href: api/MyApp.Orders.Application.Tests.Services.OrderServiceTests.html#MyApp_Orders_Application_Tests_Services_OrderServiceTests_CreateAsync_SetsOrderStatusToDraft
  commentId: M:MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_SetsOrderStatusToDraft
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_SetsOrderStatusToDraft()
  nameWithType: OrderServiceTests.CreateAsync_SetsOrderStatusToDraft()
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_SetsOrderStatusToDraft*
  name: CreateAsync_SetsOrderStatusToDraft
  href: api/MyApp.Orders.Application.Tests.Services.OrderServiceTests.html#MyApp_Orders_Application_Tests_Services_OrderServiceTests_CreateAsync_SetsOrderStatusToDraft_
  commentId: Overload:MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_SetsOrderStatusToDraft
  isSpec: "True"
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_SetsOrderStatusToDraft
  nameWithType: OrderServiceTests.CreateAsync_SetsOrderStatusToDraft
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_WithValidDto_CallsAddAsyncOnRepository
  name: CreateAsync_WithValidDto_CallsAddAsyncOnRepository()
  href: api/MyApp.Orders.Application.Tests.Services.OrderServiceTests.html#MyApp_Orders_Application_Tests_Services_OrderServiceTests_CreateAsync_WithValidDto_CallsAddAsyncOnRepository
  commentId: M:MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_WithValidDto_CallsAddAsyncOnRepository
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_WithValidDto_CallsAddAsyncOnRepository()
  nameWithType: OrderServiceTests.CreateAsync_WithValidDto_CallsAddAsyncOnRepository()
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_WithValidDto_CallsAddAsyncOnRepository*
  name: CreateAsync_WithValidDto_CallsAddAsyncOnRepository
  href: api/MyApp.Orders.Application.Tests.Services.OrderServiceTests.html#MyApp_Orders_Application_Tests_Services_OrderServiceTests_CreateAsync_WithValidDto_CallsAddAsyncOnRepository_
  commentId: Overload:MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_WithValidDto_CallsAddAsyncOnRepository
  isSpec: "True"
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.CreateAsync_WithValidDto_CallsAddAsyncOnRepository
  nameWithType: OrderServiceTests.CreateAsync_WithValidDto_CallsAddAsyncOnRepository
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.DeleteAsync_CallsRepositoryDeleteWithCorrectId
  name: DeleteAsync_CallsRepositoryDeleteWithCorrectId()
  href: api/MyApp.Orders.Application.Tests.Services.OrderServiceTests.html#MyApp_Orders_Application_Tests_Services_OrderServiceTests_DeleteAsync_CallsRepositoryDeleteWithCorrectId
  commentId: M:MyApp.Orders.Application.Tests.Services.OrderServiceTests.DeleteAsync_CallsRepositoryDeleteWithCorrectId
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.DeleteAsync_CallsRepositoryDeleteWithCorrectId()
  nameWithType: OrderServiceTests.DeleteAsync_CallsRepositoryDeleteWithCorrectId()
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.DeleteAsync_CallsRepositoryDeleteWithCorrectId*
  name: DeleteAsync_CallsRepositoryDeleteWithCorrectId
  href: api/MyApp.Orders.Application.Tests.Services.OrderServiceTests.html#MyApp_Orders_Application_Tests_Services_OrderServiceTests_DeleteAsync_CallsRepositoryDeleteWithCorrectId_
  commentId: Overload:MyApp.Orders.Application.Tests.Services.OrderServiceTests.DeleteAsync_CallsRepositoryDeleteWithCorrectId
  isSpec: "True"
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.DeleteAsync_CallsRepositoryDeleteWithCorrectId
  nameWithType: OrderServiceTests.DeleteAsync_CallsRepositoryDeleteWithCorrectId
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.GetByIdAsync_WithExistingId_ReturnsOrderDto
  name: GetByIdAsync_WithExistingId_ReturnsOrderDto()
  href: api/MyApp.Orders.Application.Tests.Services.OrderServiceTests.html#MyApp_Orders_Application_Tests_Services_OrderServiceTests_GetByIdAsync_WithExistingId_ReturnsOrderDto
  commentId: M:MyApp.Orders.Application.Tests.Services.OrderServiceTests.GetByIdAsync_WithExistingId_ReturnsOrderDto
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.GetByIdAsync_WithExistingId_ReturnsOrderDto()
  nameWithType: OrderServiceTests.GetByIdAsync_WithExistingId_ReturnsOrderDto()
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.GetByIdAsync_WithExistingId_ReturnsOrderDto*
  name: GetByIdAsync_WithExistingId_ReturnsOrderDto
  href: api/MyApp.Orders.Application.Tests.Services.OrderServiceTests.html#MyApp_Orders_Application_Tests_Services_OrderServiceTests_GetByIdAsync_WithExistingId_ReturnsOrderDto_
  commentId: Overload:MyApp.Orders.Application.Tests.Services.OrderServiceTests.GetByIdAsync_WithExistingId_ReturnsOrderDto
  isSpec: "True"
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.GetByIdAsync_WithExistingId_ReturnsOrderDto
  nameWithType: OrderServiceTests.GetByIdAsync_WithExistingId_ReturnsOrderDto
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.ListAsync_ReturnsAllOrdersAsDtos
  name: ListAsync_ReturnsAllOrdersAsDtos()
  href: api/MyApp.Orders.Application.Tests.Services.OrderServiceTests.html#MyApp_Orders_Application_Tests_Services_OrderServiceTests_ListAsync_ReturnsAllOrdersAsDtos
  commentId: M:MyApp.Orders.Application.Tests.Services.OrderServiceTests.ListAsync_ReturnsAllOrdersAsDtos
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.ListAsync_ReturnsAllOrdersAsDtos()
  nameWithType: OrderServiceTests.ListAsync_ReturnsAllOrdersAsDtos()
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.ListAsync_ReturnsAllOrdersAsDtos*
  name: ListAsync_ReturnsAllOrdersAsDtos
  href: api/MyApp.Orders.Application.Tests.Services.OrderServiceTests.html#MyApp_Orders_Application_Tests_Services_OrderServiceTests_ListAsync_ReturnsAllOrdersAsDtos_
  commentId: Overload:MyApp.Orders.Application.Tests.Services.OrderServiceTests.ListAsync_ReturnsAllOrdersAsDtos
  isSpec: "True"
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.ListAsync_ReturnsAllOrdersAsDtos
  nameWithType: OrderServiceTests.ListAsync_ReturnsAllOrdersAsDtos
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.ListAsync_WithEmptyRepository_ReturnsEmptyList
  name: ListAsync_WithEmptyRepository_ReturnsEmptyList()
  href: api/MyApp.Orders.Application.Tests.Services.OrderServiceTests.html#MyApp_Orders_Application_Tests_Services_OrderServiceTests_ListAsync_WithEmptyRepository_ReturnsEmptyList
  commentId: M:MyApp.Orders.Application.Tests.Services.OrderServiceTests.ListAsync_WithEmptyRepository_ReturnsEmptyList
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.ListAsync_WithEmptyRepository_ReturnsEmptyList()
  nameWithType: OrderServiceTests.ListAsync_WithEmptyRepository_ReturnsEmptyList()
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.ListAsync_WithEmptyRepository_ReturnsEmptyList*
  name: ListAsync_WithEmptyRepository_ReturnsEmptyList
  href: api/MyApp.Orders.Application.Tests.Services.OrderServiceTests.html#MyApp_Orders_Application_Tests_Services_OrderServiceTests_ListAsync_WithEmptyRepository_ReturnsEmptyList_
  commentId: Overload:MyApp.Orders.Application.Tests.Services.OrderServiceTests.ListAsync_WithEmptyRepository_ReturnsEmptyList
  isSpec: "True"
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.ListAsync_WithEmptyRepository_ReturnsEmptyList
  nameWithType: OrderServiceTests.ListAsync_WithEmptyRepository_ReturnsEmptyList
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_ReplacesAllLinesAndRecalculatesTotal
  name: UpdateAsync_ReplacesAllLinesAndRecalculatesTotal()
  href: api/MyApp.Orders.Application.Tests.Services.OrderServiceTests.html#MyApp_Orders_Application_Tests_Services_OrderServiceTests_UpdateAsync_ReplacesAllLinesAndRecalculatesTotal
  commentId: M:MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_ReplacesAllLinesAndRecalculatesTotal
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_ReplacesAllLinesAndRecalculatesTotal()
  nameWithType: OrderServiceTests.UpdateAsync_ReplacesAllLinesAndRecalculatesTotal()
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_ReplacesAllLinesAndRecalculatesTotal*
  name: UpdateAsync_ReplacesAllLinesAndRecalculatesTotal
  href: api/MyApp.Orders.Application.Tests.Services.OrderServiceTests.html#MyApp_Orders_Application_Tests_Services_OrderServiceTests_UpdateAsync_ReplacesAllLinesAndRecalculatesTotal_
  commentId: Overload:MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_ReplacesAllLinesAndRecalculatesTotal
  isSpec: "True"
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_ReplacesAllLinesAndRecalculatesTotal
  nameWithType: OrderServiceTests.UpdateAsync_ReplacesAllLinesAndRecalculatesTotal
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_WithExistingOrder_UpdatesSuccessfully
  name: UpdateAsync_WithExistingOrder_UpdatesSuccessfully()
  href: api/MyApp.Orders.Application.Tests.Services.OrderServiceTests.html#MyApp_Orders_Application_Tests_Services_OrderServiceTests_UpdateAsync_WithExistingOrder_UpdatesSuccessfully
  commentId: M:MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_WithExistingOrder_UpdatesSuccessfully
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_WithExistingOrder_UpdatesSuccessfully()
  nameWithType: OrderServiceTests.UpdateAsync_WithExistingOrder_UpdatesSuccessfully()
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_WithExistingOrder_UpdatesSuccessfully*
  name: UpdateAsync_WithExistingOrder_UpdatesSuccessfully
  href: api/MyApp.Orders.Application.Tests.Services.OrderServiceTests.html#MyApp_Orders_Application_Tests_Services_OrderServiceTests_UpdateAsync_WithExistingOrder_UpdatesSuccessfully_
  commentId: Overload:MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_WithExistingOrder_UpdatesSuccessfully
  isSpec: "True"
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_WithExistingOrder_UpdatesSuccessfully
  nameWithType: OrderServiceTests.UpdateAsync_WithExistingOrder_UpdatesSuccessfully
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_WithNonExistentOrder_DoesNotCallUpdateAsync
  name: UpdateAsync_WithNonExistentOrder_DoesNotCallUpdateAsync()
  href: api/MyApp.Orders.Application.Tests.Services.OrderServiceTests.html#MyApp_Orders_Application_Tests_Services_OrderServiceTests_UpdateAsync_WithNonExistentOrder_DoesNotCallUpdateAsync
  commentId: M:MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_WithNonExistentOrder_DoesNotCallUpdateAsync
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_WithNonExistentOrder_DoesNotCallUpdateAsync()
  nameWithType: OrderServiceTests.UpdateAsync_WithNonExistentOrder_DoesNotCallUpdateAsync()
- uid: MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_WithNonExistentOrder_DoesNotCallUpdateAsync*
  name: UpdateAsync_WithNonExistentOrder_DoesNotCallUpdateAsync
  href: api/MyApp.Orders.Application.Tests.Services.OrderServiceTests.html#MyApp_Orders_Application_Tests_Services_OrderServiceTests_UpdateAsync_WithNonExistentOrder_DoesNotCallUpdateAsync_
  commentId: Overload:MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_WithNonExistentOrder_DoesNotCallUpdateAsync
  isSpec: "True"
  fullName: MyApp.Orders.Application.Tests.Services.OrderServiceTests.UpdateAsync_WithNonExistentOrder_DoesNotCallUpdateAsync
  nameWithType: OrderServiceTests.UpdateAsync_WithNonExistentOrder_DoesNotCallUpdateAsync
- uid: MyApp.Orders.Domain
  name: MyApp.Orders.Domain
  href: api/MyApp.Orders.Domain.html
  commentId: N:MyApp.Orders.Domain
  fullName: MyApp.Orders.Domain
  nameWithType: MyApp.Orders.Domain
- uid: MyApp.Orders.Domain.Entities
  name: MyApp.Orders.Domain.Entities
  href: api/MyApp.Orders.Domain.Entities.html
  commentId: N:MyApp.Orders.Domain.Entities
  fullName: MyApp.Orders.Domain.Entities
  nameWithType: MyApp.Orders.Domain.Entities
- uid: MyApp.Orders.Domain.Entities.Order
  name: Order
  href: api/MyApp.Orders.Domain.Entities.Order.html
  commentId: T:MyApp.Orders.Domain.Entities.Order
  fullName: MyApp.Orders.Domain.Entities.Order
  nameWithType: Order
- uid: MyApp.Orders.Domain.Entities.Order.CustomerId
  name: CustomerId
  href: api/MyApp.Orders.Domain.Entities.Order.html#MyApp_Orders_Domain_Entities_Order_CustomerId
  commentId: P:MyApp.Orders.Domain.Entities.Order.CustomerId
  fullName: MyApp.Orders.Domain.Entities.Order.CustomerId
  nameWithType: Order.CustomerId
- uid: MyApp.Orders.Domain.Entities.Order.CustomerId*
  name: CustomerId
  href: api/MyApp.Orders.Domain.Entities.Order.html#MyApp_Orders_Domain_Entities_Order_CustomerId_
  commentId: Overload:MyApp.Orders.Domain.Entities.Order.CustomerId
  isSpec: "True"
  fullName: MyApp.Orders.Domain.Entities.Order.CustomerId
  nameWithType: Order.CustomerId
- uid: MyApp.Orders.Domain.Entities.Order.Lines
  name: Lines
  href: api/MyApp.Orders.Domain.Entities.Order.html#MyApp_Orders_Domain_Entities_Order_Lines
  commentId: P:MyApp.Orders.Domain.Entities.Order.Lines
  fullName: MyApp.Orders.Domain.Entities.Order.Lines
  nameWithType: Order.Lines
- uid: MyApp.Orders.Domain.Entities.Order.Lines*
  name: Lines
  href: api/MyApp.Orders.Domain.Entities.Order.html#MyApp_Orders_Domain_Entities_Order_Lines_
  commentId: Overload:MyApp.Orders.Domain.Entities.Order.Lines
  isSpec: "True"
  fullName: MyApp.Orders.Domain.Entities.Order.Lines
  nameWithType: Order.Lines
- uid: MyApp.Orders.Domain.Entities.Order.OrderDate
  name: OrderDate
  href: api/MyApp.Orders.Domain.Entities.Order.html#MyApp_Orders_Domain_Entities_Order_OrderDate
  commentId: P:MyApp.Orders.Domain.Entities.Order.OrderDate
  fullName: MyApp.Orders.Domain.Entities.Order.OrderDate
  nameWithType: Order.OrderDate
- uid: MyApp.Orders.Domain.Entities.Order.OrderDate*
  name: OrderDate
  href: api/MyApp.Orders.Domain.Entities.Order.html#MyApp_Orders_Domain_Entities_Order_OrderDate_
  commentId: Overload:MyApp.Orders.Domain.Entities.Order.OrderDate
  isSpec: "True"
  fullName: MyApp.Orders.Domain.Entities.Order.OrderDate
  nameWithType: Order.OrderDate
- uid: MyApp.Orders.Domain.Entities.Order.OrderNumber
  name: OrderNumber
  href: api/MyApp.Orders.Domain.Entities.Order.html#MyApp_Orders_Domain_Entities_Order_OrderNumber
  commentId: P:MyApp.Orders.Domain.Entities.Order.OrderNumber
  fullName: MyApp.Orders.Domain.Entities.Order.OrderNumber
  nameWithType: Order.OrderNumber
- uid: MyApp.Orders.Domain.Entities.Order.OrderNumber*
  name: OrderNumber
  href: api/MyApp.Orders.Domain.Entities.Order.html#MyApp_Orders_Domain_Entities_Order_OrderNumber_
  commentId: Overload:MyApp.Orders.Domain.Entities.Order.OrderNumber
  isSpec: "True"
  fullName: MyApp.Orders.Domain.Entities.Order.OrderNumber
  nameWithType: Order.OrderNumber
- uid: MyApp.Orders.Domain.Entities.Order.Status
  name: Status
  href: api/MyApp.Orders.Domain.Entities.Order.html#MyApp_Orders_Domain_Entities_Order_Status
  commentId: P:MyApp.Orders.Domain.Entities.Order.Status
  fullName: MyApp.Orders.Domain.Entities.Order.Status
  nameWithType: Order.Status
- uid: MyApp.Orders.Domain.Entities.Order.Status*
  name: Status
  href: api/MyApp.Orders.Domain.Entities.Order.html#MyApp_Orders_Domain_Entities_Order_Status_
  commentId: Overload:MyApp.Orders.Domain.Entities.Order.Status
  isSpec: "True"
  fullName: MyApp.Orders.Domain.Entities.Order.Status
  nameWithType: Order.Status
- uid: MyApp.Orders.Domain.Entities.Order.TotalAmount
  name: TotalAmount
  href: api/MyApp.Orders.Domain.Entities.Order.html#MyApp_Orders_Domain_Entities_Order_TotalAmount
  commentId: P:MyApp.Orders.Domain.Entities.Order.TotalAmount
  fullName: MyApp.Orders.Domain.Entities.Order.TotalAmount
  nameWithType: Order.TotalAmount
- uid: MyApp.Orders.Domain.Entities.Order.TotalAmount*
  name: TotalAmount
  href: api/MyApp.Orders.Domain.Entities.Order.html#MyApp_Orders_Domain_Entities_Order_TotalAmount_
  commentId: Overload:MyApp.Orders.Domain.Entities.Order.TotalAmount
  isSpec: "True"
  fullName: MyApp.Orders.Domain.Entities.Order.TotalAmount
  nameWithType: Order.TotalAmount
- uid: MyApp.Orders.Domain.Entities.OrderLine
  name: OrderLine
  href: api/MyApp.Orders.Domain.Entities.OrderLine.html
  commentId: T:MyApp.Orders.Domain.Entities.OrderLine
  fullName: MyApp.Orders.Domain.Entities.OrderLine
  nameWithType: OrderLine
- uid: MyApp.Orders.Domain.Entities.OrderLine.LineTotal
  name: LineTotal
  href: api/MyApp.Orders.Domain.Entities.OrderLine.html#MyApp_Orders_Domain_Entities_OrderLine_LineTotal
  commentId: P:MyApp.Orders.Domain.Entities.OrderLine.LineTotal
  fullName: MyApp.Orders.Domain.Entities.OrderLine.LineTotal
  nameWithType: OrderLine.LineTotal
- uid: MyApp.Orders.Domain.Entities.OrderLine.LineTotal*
  name: LineTotal
  href: api/MyApp.Orders.Domain.Entities.OrderLine.html#MyApp_Orders_Domain_Entities_OrderLine_LineTotal_
  commentId: Overload:MyApp.Orders.Domain.Entities.OrderLine.LineTotal
  isSpec: "True"
  fullName: MyApp.Orders.Domain.Entities.OrderLine.LineTotal
  nameWithType: OrderLine.LineTotal
- uid: MyApp.Orders.Domain.Entities.OrderLine.OrderId
  name: OrderId
  href: api/MyApp.Orders.Domain.Entities.OrderLine.html#MyApp_Orders_Domain_Entities_OrderLine_OrderId
  commentId: P:MyApp.Orders.Domain.Entities.OrderLine.OrderId
  fullName: MyApp.Orders.Domain.Entities.OrderLine.OrderId
  nameWithType: OrderLine.OrderId
- uid: MyApp.Orders.Domain.Entities.OrderLine.OrderId*
  name: OrderId
  href: api/MyApp.Orders.Domain.Entities.OrderLine.html#MyApp_Orders_Domain_Entities_OrderLine_OrderId_
  commentId: Overload:MyApp.Orders.Domain.Entities.OrderLine.OrderId
  isSpec: "True"
  fullName: MyApp.Orders.Domain.Entities.OrderLine.OrderId
  nameWithType: OrderLine.OrderId
- uid: MyApp.Orders.Domain.Entities.OrderLine.ProductId
  name: ProductId
  href: api/MyApp.Orders.Domain.Entities.OrderLine.html#MyApp_Orders_Domain_Entities_OrderLine_ProductId
  commentId: P:MyApp.Orders.Domain.Entities.OrderLine.ProductId
  fullName: MyApp.Orders.Domain.Entities.OrderLine.ProductId
  nameWithType: OrderLine.ProductId
- uid: MyApp.Orders.Domain.Entities.OrderLine.ProductId*
  name: ProductId
  href: api/MyApp.Orders.Domain.Entities.OrderLine.html#MyApp_Orders_Domain_Entities_OrderLine_ProductId_
  commentId: Overload:MyApp.Orders.Domain.Entities.OrderLine.ProductId
  isSpec: "True"
  fullName: MyApp.Orders.Domain.Entities.OrderLine.ProductId
  nameWithType: OrderLine.ProductId
- uid: MyApp.Orders.Domain.Entities.OrderLine.Quantity
  name: Quantity
  href: api/MyApp.Orders.Domain.Entities.OrderLine.html#MyApp_Orders_Domain_Entities_OrderLine_Quantity
  commentId: P:MyApp.Orders.Domain.Entities.OrderLine.Quantity
  fullName: MyApp.Orders.Domain.Entities.OrderLine.Quantity
  nameWithType: OrderLine.Quantity
- uid: MyApp.Orders.Domain.Entities.OrderLine.Quantity*
  name: Quantity
  href: api/MyApp.Orders.Domain.Entities.OrderLine.html#MyApp_Orders_Domain_Entities_OrderLine_Quantity_
  commentId: Overload:MyApp.Orders.Domain.Entities.OrderLine.Quantity
  isSpec: "True"
  fullName: MyApp.Orders.Domain.Entities.OrderLine.Quantity
  nameWithType: OrderLine.Quantity
- uid: MyApp.Orders.Domain.Entities.OrderLine.UnitPrice
  name: UnitPrice
  href: api/MyApp.Orders.Domain.Entities.OrderLine.html#MyApp_Orders_Domain_Entities_OrderLine_UnitPrice
  commentId: P:MyApp.Orders.Domain.Entities.OrderLine.UnitPrice
  fullName: MyApp.Orders.Domain.Entities.OrderLine.UnitPrice
  nameWithType: OrderLine.UnitPrice
- uid: MyApp.Orders.Domain.Entities.OrderLine.UnitPrice*
  name: UnitPrice
  href: api/MyApp.Orders.Domain.Entities.OrderLine.html#MyApp_Orders_Domain_Entities_OrderLine_UnitPrice_
  commentId: Overload:MyApp.Orders.Domain.Entities.OrderLine.UnitPrice
  isSpec: "True"
  fullName: MyApp.Orders.Domain.Entities.OrderLine.UnitPrice
  nameWithType: OrderLine.UnitPrice
- uid: MyApp.Orders.Domain.IOrderLineRepository
  name: IOrderLineRepository
  href: api/MyApp.Orders.Domain.IOrderLineRepository.html
  commentId: T:MyApp.Orders.Domain.IOrderLineRepository
  fullName: MyApp.Orders.Domain.IOrderLineRepository
  nameWithType: IOrderLineRepository
- uid: MyApp.Orders.Domain.IOrderRepository
  name: IOrderRepository
  href: api/MyApp.Orders.Domain.IOrderRepository.html
  commentId: T:MyApp.Orders.Domain.IOrderRepository
  fullName: MyApp.Orders.Domain.IOrderRepository
  nameWithType: IOrderRepository
- uid: MyApp.Orders.Domain.IRepository`2
  name: IRepository<TEntity, TKey>
  href: api/MyApp.Orders.Domain.IRepository-2.html
  commentId: T:MyApp.Orders.Domain.IRepository`2
  name.vb: IRepository(Of TEntity, TKey)
  fullName: MyApp.Orders.Domain.IRepository<TEntity, TKey>
  fullName.vb: MyApp.Orders.Domain.IRepository(Of TEntity, TKey)
  nameWithType: IRepository<TEntity, TKey>
  nameWithType.vb: IRepository(Of TEntity, TKey)
- uid: MyApp.Orders.Domain.IRepository`2.AddAsync(`0)
  name: AddAsync(TEntity)
  href: api/MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_AddAsync__0_
  commentId: M:MyApp.Orders.Domain.IRepository`2.AddAsync(`0)
  fullName: MyApp.Orders.Domain.IRepository<TEntity, TKey>.AddAsync(TEntity)
  fullName.vb: MyApp.Orders.Domain.IRepository(Of TEntity, TKey).AddAsync(TEntity)
  nameWithType: IRepository<TEntity, TKey>.AddAsync(TEntity)
  nameWithType.vb: IRepository(Of TEntity, TKey).AddAsync(TEntity)
- uid: MyApp.Orders.Domain.IRepository`2.AddAsync*
  name: AddAsync
  href: api/MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_AddAsync_
  commentId: Overload:MyApp.Orders.Domain.IRepository`2.AddAsync
  isSpec: "True"
  fullName: MyApp.Orders.Domain.IRepository<TEntity, TKey>.AddAsync
  fullName.vb: MyApp.Orders.Domain.IRepository(Of TEntity, TKey).AddAsync
  nameWithType: IRepository<TEntity, TKey>.AddAsync
  nameWithType.vb: IRepository(Of TEntity, TKey).AddAsync
- uid: MyApp.Orders.Domain.IRepository`2.DeleteAsync(`1)
  name: DeleteAsync(TKey)
  href: api/MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_DeleteAsync__1_
  commentId: M:MyApp.Orders.Domain.IRepository`2.DeleteAsync(`1)
  fullName: MyApp.Orders.Domain.IRepository<TEntity, TKey>.DeleteAsync(TKey)
  fullName.vb: MyApp.Orders.Domain.IRepository(Of TEntity, TKey).DeleteAsync(TKey)
  nameWithType: IRepository<TEntity, TKey>.DeleteAsync(TKey)
  nameWithType.vb: IRepository(Of TEntity, TKey).DeleteAsync(TKey)
- uid: MyApp.Orders.Domain.IRepository`2.DeleteAsync*
  name: DeleteAsync
  href: api/MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_DeleteAsync_
  commentId: Overload:MyApp.Orders.Domain.IRepository`2.DeleteAsync
  isSpec: "True"
  fullName: MyApp.Orders.Domain.IRepository<TEntity, TKey>.DeleteAsync
  fullName.vb: MyApp.Orders.Domain.IRepository(Of TEntity, TKey).DeleteAsync
  nameWithType: IRepository<TEntity, TKey>.DeleteAsync
  nameWithType.vb: IRepository(Of TEntity, TKey).DeleteAsync
- uid: MyApp.Orders.Domain.IRepository`2.GetByIdAsync(`1)
  name: GetByIdAsync(TKey)
  href: api/MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_GetByIdAsync__1_
  commentId: M:MyApp.Orders.Domain.IRepository`2.GetByIdAsync(`1)
  fullName: MyApp.Orders.Domain.IRepository<TEntity, TKey>.GetByIdAsync(TKey)
  fullName.vb: MyApp.Orders.Domain.IRepository(Of TEntity, TKey).GetByIdAsync(TKey)
  nameWithType: IRepository<TEntity, TKey>.GetByIdAsync(TKey)
  nameWithType.vb: IRepository(Of TEntity, TKey).GetByIdAsync(TKey)
- uid: MyApp.Orders.Domain.IRepository`2.GetByIdAsync*
  name: GetByIdAsync
  href: api/MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_GetByIdAsync_
  commentId: Overload:MyApp.Orders.Domain.IRepository`2.GetByIdAsync
  isSpec: "True"
  fullName: MyApp.Orders.Domain.IRepository<TEntity, TKey>.GetByIdAsync
  fullName.vb: MyApp.Orders.Domain.IRepository(Of TEntity, TKey).GetByIdAsync
  nameWithType: IRepository<TEntity, TKey>.GetByIdAsync
  nameWithType.vb: IRepository(Of TEntity, TKey).GetByIdAsync
- uid: MyApp.Orders.Domain.IRepository`2.ListAsync
  name: ListAsync()
  href: api/MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_ListAsync
  commentId: M:MyApp.Orders.Domain.IRepository`2.ListAsync
  fullName: MyApp.Orders.Domain.IRepository<TEntity, TKey>.ListAsync()
  fullName.vb: MyApp.Orders.Domain.IRepository(Of TEntity, TKey).ListAsync()
  nameWithType: IRepository<TEntity, TKey>.ListAsync()
  nameWithType.vb: IRepository(Of TEntity, TKey).ListAsync()
- uid: MyApp.Orders.Domain.IRepository`2.ListAsync*
  name: ListAsync
  href: api/MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_ListAsync_
  commentId: Overload:MyApp.Orders.Domain.IRepository`2.ListAsync
  isSpec: "True"
  fullName: MyApp.Orders.Domain.IRepository<TEntity, TKey>.ListAsync
  fullName.vb: MyApp.Orders.Domain.IRepository(Of TEntity, TKey).ListAsync
  nameWithType: IRepository<TEntity, TKey>.ListAsync
  nameWithType.vb: IRepository(Of TEntity, TKey).ListAsync
- uid: MyApp.Orders.Domain.IRepository`2.UpdateAsync(`0)
  name: UpdateAsync(TEntity)
  href: api/MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_UpdateAsync__0_
  commentId: M:MyApp.Orders.Domain.IRepository`2.UpdateAsync(`0)
  fullName: MyApp.Orders.Domain.IRepository<TEntity, TKey>.UpdateAsync(TEntity)
  fullName.vb: MyApp.Orders.Domain.IRepository(Of TEntity, TKey).UpdateAsync(TEntity)
  nameWithType: IRepository<TEntity, TKey>.UpdateAsync(TEntity)
  nameWithType.vb: IRepository(Of TEntity, TKey).UpdateAsync(TEntity)
- uid: MyApp.Orders.Domain.IRepository`2.UpdateAsync*
  name: UpdateAsync
  href: api/MyApp.Orders.Domain.IRepository-2.html#MyApp_Orders_Domain_IRepository_2_UpdateAsync_
  commentId: Overload:MyApp.Orders.Domain.IRepository`2.UpdateAsync
  isSpec: "True"
  fullName: MyApp.Orders.Domain.IRepository<TEntity, TKey>.UpdateAsync
  fullName.vb: MyApp.Orders.Domain.IRepository(Of TEntity, TKey).UpdateAsync
  nameWithType: IRepository<TEntity, TKey>.UpdateAsync
  nameWithType.vb: IRepository(Of TEntity, TKey).UpdateAsync
- uid: MyApp.Orders.Domain.OrderStatus
  name: OrderStatus
  href: api/MyApp.Orders.Domain.OrderStatus.html
  commentId: T:MyApp.Orders.Domain.OrderStatus
  fullName: MyApp.Orders.Domain.OrderStatus
  nameWithType: OrderStatus
- uid: MyApp.Orders.Domain.OrderStatus.Cancelled
  name: Cancelled
  href: api/MyApp.Orders.Domain.OrderStatus.html#MyApp_Orders_Domain_OrderStatus_Cancelled
  commentId: F:MyApp.Orders.Domain.OrderStatus.Cancelled
  fullName: MyApp.Orders.Domain.OrderStatus.Cancelled
  nameWithType: OrderStatus.Cancelled
- uid: MyApp.Orders.Domain.OrderStatus.Confirmed
  name: Confirmed
  href: api/MyApp.Orders.Domain.OrderStatus.html#MyApp_Orders_Domain_OrderStatus_Confirmed
  commentId: F:MyApp.Orders.Domain.OrderStatus.Confirmed
  fullName: MyApp.Orders.Domain.OrderStatus.Confirmed
  nameWithType: OrderStatus.Confirmed
- uid: MyApp.Orders.Domain.OrderStatus.Draft
  name: Draft
  href: api/MyApp.Orders.Domain.OrderStatus.html#MyApp_Orders_Domain_OrderStatus_Draft
  commentId: F:MyApp.Orders.Domain.OrderStatus.Draft
  fullName: MyApp.Orders.Domain.OrderStatus.Draft
  nameWithType: OrderStatus.Draft
- uid: MyApp.Orders.Domain.OrderStatus.Shipped
  name: Shipped
  href: api/MyApp.Orders.Domain.OrderStatus.html#MyApp_Orders_Domain_OrderStatus_Shipped
  commentId: F:MyApp.Orders.Domain.OrderStatus.Shipped
  fullName: MyApp.Orders.Domain.OrderStatus.Shipped
  nameWithType: OrderStatus.Shipped
- uid: MyApp.Orders.Infrastructure.Data
  name: MyApp.Orders.Infrastructure.Data
  href: api/MyApp.Orders.Infrastructure.Data.html
  commentId: N:MyApp.Orders.Infrastructure.Data
  fullName: MyApp.Orders.Infrastructure.Data
  nameWithType: MyApp.Orders.Infrastructure.Data
- uid: MyApp.Orders.Infrastructure.Data.Configurations
  name: MyApp.Orders.Infrastructure.Data.Configurations
  href: api/MyApp.Orders.Infrastructure.Data.Configurations.html
  commentId: N:MyApp.Orders.Infrastructure.Data.Configurations
  fullName: MyApp.Orders.Infrastructure.Data.Configurations
  nameWithType: MyApp.Orders.Infrastructure.Data.Configurations
- uid: MyApp.Orders.Infrastructure.Data.Configurations.OrderConfiguration
  name: OrderConfiguration
  href: api/MyApp.Orders.Infrastructure.Data.Configurations.OrderConfiguration.html
  commentId: T:MyApp.Orders.Infrastructure.Data.Configurations.OrderConfiguration
  fullName: MyApp.Orders.Infrastructure.Data.Configurations.OrderConfiguration
  nameWithType: OrderConfiguration
- uid: MyApp.Orders.Infrastructure.Data.Configurations.OrderConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{MyApp.Orders.Domain.Entities.Order})
  name: Configure(EntityTypeBuilder<Order>)
  href: api/MyApp.Orders.Infrastructure.Data.Configurations.OrderConfiguration.html#MyApp_Orders_Infrastructure_Data_Configurations_OrderConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_MyApp_Orders_Domain_Entities_Order__
  commentId: M:MyApp.Orders.Infrastructure.Data.Configurations.OrderConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{MyApp.Orders.Domain.Entities.Order})
  name.vb: Configure(EntityTypeBuilder(Of Order))
  fullName: MyApp.Orders.Infrastructure.Data.Configurations.OrderConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<MyApp.Orders.Domain.Entities.Order>)
  fullName.vb: MyApp.Orders.Infrastructure.Data.Configurations.OrderConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of MyApp.Orders.Domain.Entities.Order))
  nameWithType: OrderConfiguration.Configure(EntityTypeBuilder<Order>)
  nameWithType.vb: OrderConfiguration.Configure(EntityTypeBuilder(Of Order))
- uid: MyApp.Orders.Infrastructure.Data.Configurations.OrderConfiguration.Configure*
  name: Configure
  href: api/MyApp.Orders.Infrastructure.Data.Configurations.OrderConfiguration.html#MyApp_Orders_Infrastructure_Data_Configurations_OrderConfiguration_Configure_
  commentId: Overload:MyApp.Orders.Infrastructure.Data.Configurations.OrderConfiguration.Configure
  isSpec: "True"
  fullName: MyApp.Orders.Infrastructure.Data.Configurations.OrderConfiguration.Configure
  nameWithType: OrderConfiguration.Configure
- uid: MyApp.Orders.Infrastructure.Data.Configurations.OrderLineConfiguration
  name: OrderLineConfiguration
  href: api/MyApp.Orders.Infrastructure.Data.Configurations.OrderLineConfiguration.html
  commentId: T:MyApp.Orders.Infrastructure.Data.Configurations.OrderLineConfiguration
  fullName: MyApp.Orders.Infrastructure.Data.Configurations.OrderLineConfiguration
  nameWithType: OrderLineConfiguration
- uid: MyApp.Orders.Infrastructure.Data.Configurations.OrderLineConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{MyApp.Orders.Domain.Entities.OrderLine})
  name: Configure(EntityTypeBuilder<OrderLine>)
  href: api/MyApp.Orders.Infrastructure.Data.Configurations.OrderLineConfiguration.html#MyApp_Orders_Infrastructure_Data_Configurations_OrderLineConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_MyApp_Orders_Domain_Entities_OrderLine__
  commentId: M:MyApp.Orders.Infrastructure.Data.Configurations.OrderLineConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{MyApp.Orders.Domain.Entities.OrderLine})
  name.vb: Configure(EntityTypeBuilder(Of OrderLine))
  fullName: MyApp.Orders.Infrastructure.Data.Configurations.OrderLineConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<MyApp.Orders.Domain.Entities.OrderLine>)
  fullName.vb: MyApp.Orders.Infrastructure.Data.Configurations.OrderLineConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of MyApp.Orders.Domain.Entities.OrderLine))
  nameWithType: OrderLineConfiguration.Configure(EntityTypeBuilder<OrderLine>)
  nameWithType.vb: OrderLineConfiguration.Configure(EntityTypeBuilder(Of OrderLine))
- uid: MyApp.Orders.Infrastructure.Data.Configurations.OrderLineConfiguration.Configure*
  name: Configure
  href: api/MyApp.Orders.Infrastructure.Data.Configurations.OrderLineConfiguration.html#MyApp_Orders_Infrastructure_Data_Configurations_OrderLineConfiguration_Configure_
  commentId: Overload:MyApp.Orders.Infrastructure.Data.Configurations.OrderLineConfiguration.Configure
  isSpec: "True"
  fullName: MyApp.Orders.Infrastructure.Data.Configurations.OrderLineConfiguration.Configure
  nameWithType: OrderLineConfiguration.Configure
- uid: MyApp.Orders.Infrastructure.Data.OrdersDbContext
  name: OrdersDbContext
  href: api/MyApp.Orders.Infrastructure.Data.OrdersDbContext.html
  commentId: T:MyApp.Orders.Infrastructure.Data.OrdersDbContext
  fullName: MyApp.Orders.Infrastructure.Data.OrdersDbContext
  nameWithType: OrdersDbContext
- uid: MyApp.Orders.Infrastructure.Data.OrdersDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{MyApp.Orders.Infrastructure.Data.OrdersDbContext})
  name: OrdersDbContext(DbContextOptions<OrdersDbContext>)
  href: api/MyApp.Orders.Infrastructure.Data.OrdersDbContext.html#MyApp_Orders_Infrastructure_Data_OrdersDbContext__ctor_Microsoft_EntityFrameworkCore_DbContextOptions_MyApp_Orders_Infrastructure_Data_OrdersDbContext__
  commentId: M:MyApp.Orders.Infrastructure.Data.OrdersDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{MyApp.Orders.Infrastructure.Data.OrdersDbContext})
  name.vb: New(DbContextOptions(Of OrdersDbContext))
  fullName: MyApp.Orders.Infrastructure.Data.OrdersDbContext.OrdersDbContext(Microsoft.EntityFrameworkCore.DbContextOptions<MyApp.Orders.Infrastructure.Data.OrdersDbContext>)
  fullName.vb: MyApp.Orders.Infrastructure.Data.OrdersDbContext.New(Microsoft.EntityFrameworkCore.DbContextOptions(Of MyApp.Orders.Infrastructure.Data.OrdersDbContext))
  nameWithType: OrdersDbContext.OrdersDbContext(DbContextOptions<OrdersDbContext>)
  nameWithType.vb: OrdersDbContext.New(DbContextOptions(Of OrdersDbContext))
- uid: MyApp.Orders.Infrastructure.Data.OrdersDbContext.#ctor*
  name: OrdersDbContext
  href: api/MyApp.Orders.Infrastructure.Data.OrdersDbContext.html#MyApp_Orders_Infrastructure_Data_OrdersDbContext__ctor_
  commentId: Overload:MyApp.Orders.Infrastructure.Data.OrdersDbContext.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Orders.Infrastructure.Data.OrdersDbContext.OrdersDbContext
  fullName.vb: MyApp.Orders.Infrastructure.Data.OrdersDbContext.New
  nameWithType: OrdersDbContext.OrdersDbContext
  nameWithType.vb: OrdersDbContext.New
- uid: MyApp.Orders.Infrastructure.Data.OrdersDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: OnModelCreating(ModelBuilder)
  href: api/MyApp.Orders.Infrastructure.Data.OrdersDbContext.html#MyApp_Orders_Infrastructure_Data_OrdersDbContext_OnModelCreating_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:MyApp.Orders.Infrastructure.Data.OrdersDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: MyApp.Orders.Infrastructure.Data.OrdersDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: OrdersDbContext.OnModelCreating(ModelBuilder)
- uid: MyApp.Orders.Infrastructure.Data.OrdersDbContext.OnModelCreating*
  name: OnModelCreating
  href: api/MyApp.Orders.Infrastructure.Data.OrdersDbContext.html#MyApp_Orders_Infrastructure_Data_OrdersDbContext_OnModelCreating_
  commentId: Overload:MyApp.Orders.Infrastructure.Data.OrdersDbContext.OnModelCreating
  isSpec: "True"
  fullName: MyApp.Orders.Infrastructure.Data.OrdersDbContext.OnModelCreating
  nameWithType: OrdersDbContext.OnModelCreating
- uid: MyApp.Orders.Infrastructure.Data.OrdersDbContext.OrderLines
  name: OrderLines
  href: api/MyApp.Orders.Infrastructure.Data.OrdersDbContext.html#MyApp_Orders_Infrastructure_Data_OrdersDbContext_OrderLines
  commentId: P:MyApp.Orders.Infrastructure.Data.OrdersDbContext.OrderLines
  fullName: MyApp.Orders.Infrastructure.Data.OrdersDbContext.OrderLines
  nameWithType: OrdersDbContext.OrderLines
- uid: MyApp.Orders.Infrastructure.Data.OrdersDbContext.OrderLines*
  name: OrderLines
  href: api/MyApp.Orders.Infrastructure.Data.OrdersDbContext.html#MyApp_Orders_Infrastructure_Data_OrdersDbContext_OrderLines_
  commentId: Overload:MyApp.Orders.Infrastructure.Data.OrdersDbContext.OrderLines
  isSpec: "True"
  fullName: MyApp.Orders.Infrastructure.Data.OrdersDbContext.OrderLines
  nameWithType: OrdersDbContext.OrderLines
- uid: MyApp.Orders.Infrastructure.Data.OrdersDbContext.Orders
  name: Orders
  href: api/MyApp.Orders.Infrastructure.Data.OrdersDbContext.html#MyApp_Orders_Infrastructure_Data_OrdersDbContext_Orders
  commentId: P:MyApp.Orders.Infrastructure.Data.OrdersDbContext.Orders
  fullName: MyApp.Orders.Infrastructure.Data.OrdersDbContext.Orders
  nameWithType: OrdersDbContext.Orders
- uid: MyApp.Orders.Infrastructure.Data.OrdersDbContext.Orders*
  name: Orders
  href: api/MyApp.Orders.Infrastructure.Data.OrdersDbContext.html#MyApp_Orders_Infrastructure_Data_OrdersDbContext_Orders_
  commentId: Overload:MyApp.Orders.Infrastructure.Data.OrdersDbContext.Orders
  isSpec: "True"
  fullName: MyApp.Orders.Infrastructure.Data.OrdersDbContext.Orders
  nameWithType: OrdersDbContext.Orders
- uid: MyApp.Orders.Infrastructure.Data.OrdersDbContextFactory
  name: OrdersDbContextFactory
  href: api/MyApp.Orders.Infrastructure.Data.OrdersDbContextFactory.html
  commentId: T:MyApp.Orders.Infrastructure.Data.OrdersDbContextFactory
  fullName: MyApp.Orders.Infrastructure.Data.OrdersDbContextFactory
  nameWithType: OrdersDbContextFactory
- uid: MyApp.Orders.Infrastructure.Data.OrdersDbContextFactory.CreateDbContext(System.String[])
  name: CreateDbContext(string[])
  href: api/MyApp.Orders.Infrastructure.Data.OrdersDbContextFactory.html#MyApp_Orders_Infrastructure_Data_OrdersDbContextFactory_CreateDbContext_System_String___
  commentId: M:MyApp.Orders.Infrastructure.Data.OrdersDbContextFactory.CreateDbContext(System.String[])
  name.vb: CreateDbContext(String())
  fullName: MyApp.Orders.Infrastructure.Data.OrdersDbContextFactory.CreateDbContext(string[])
  fullName.vb: MyApp.Orders.Infrastructure.Data.OrdersDbContextFactory.CreateDbContext(String())
  nameWithType: OrdersDbContextFactory.CreateDbContext(string[])
  nameWithType.vb: OrdersDbContextFactory.CreateDbContext(String())
- uid: MyApp.Orders.Infrastructure.Data.OrdersDbContextFactory.CreateDbContext*
  name: CreateDbContext
  href: api/MyApp.Orders.Infrastructure.Data.OrdersDbContextFactory.html#MyApp_Orders_Infrastructure_Data_OrdersDbContextFactory_CreateDbContext_
  commentId: Overload:MyApp.Orders.Infrastructure.Data.OrdersDbContextFactory.CreateDbContext
  isSpec: "True"
  fullName: MyApp.Orders.Infrastructure.Data.OrdersDbContextFactory.CreateDbContext
  nameWithType: OrdersDbContextFactory.CreateDbContext
- uid: MyApp.Orders.Infrastructure.Migrations
  name: MyApp.Orders.Infrastructure.Migrations
  href: api/MyApp.Orders.Infrastructure.Migrations.html
  commentId: N:MyApp.Orders.Infrastructure.Migrations
  fullName: MyApp.Orders.Infrastructure.Migrations
  nameWithType: MyApp.Orders.Infrastructure.Migrations
- uid: MyApp.Orders.Infrastructure.Migrations.AuditableEntities
  name: AuditableEntities
  href: api/MyApp.Orders.Infrastructure.Migrations.AuditableEntities.html
  commentId: T:MyApp.Orders.Infrastructure.Migrations.AuditableEntities
  fullName: MyApp.Orders.Infrastructure.Migrations.AuditableEntities
  nameWithType: AuditableEntities
- uid: MyApp.Orders.Infrastructure.Migrations.AuditableEntities.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/MyApp.Orders.Infrastructure.Migrations.AuditableEntities.html#MyApp_Orders_Infrastructure_Migrations_AuditableEntities_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:MyApp.Orders.Infrastructure.Migrations.AuditableEntities.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: MyApp.Orders.Infrastructure.Migrations.AuditableEntities.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: AuditableEntities.BuildTargetModel(ModelBuilder)
- uid: MyApp.Orders.Infrastructure.Migrations.AuditableEntities.BuildTargetModel*
  name: BuildTargetModel
  href: api/MyApp.Orders.Infrastructure.Migrations.AuditableEntities.html#MyApp_Orders_Infrastructure_Migrations_AuditableEntities_BuildTargetModel_
  commentId: Overload:MyApp.Orders.Infrastructure.Migrations.AuditableEntities.BuildTargetModel
  isSpec: "True"
  fullName: MyApp.Orders.Infrastructure.Migrations.AuditableEntities.BuildTargetModel
  nameWithType: AuditableEntities.BuildTargetModel
- uid: MyApp.Orders.Infrastructure.Migrations.AuditableEntities.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/MyApp.Orders.Infrastructure.Migrations.AuditableEntities.html#MyApp_Orders_Infrastructure_Migrations_AuditableEntities_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MyApp.Orders.Infrastructure.Migrations.AuditableEntities.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MyApp.Orders.Infrastructure.Migrations.AuditableEntities.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: AuditableEntities.Down(MigrationBuilder)
- uid: MyApp.Orders.Infrastructure.Migrations.AuditableEntities.Down*
  name: Down
  href: api/MyApp.Orders.Infrastructure.Migrations.AuditableEntities.html#MyApp_Orders_Infrastructure_Migrations_AuditableEntities_Down_
  commentId: Overload:MyApp.Orders.Infrastructure.Migrations.AuditableEntities.Down
  isSpec: "True"
  fullName: MyApp.Orders.Infrastructure.Migrations.AuditableEntities.Down
  nameWithType: AuditableEntities.Down
- uid: MyApp.Orders.Infrastructure.Migrations.AuditableEntities.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/MyApp.Orders.Infrastructure.Migrations.AuditableEntities.html#MyApp_Orders_Infrastructure_Migrations_AuditableEntities_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MyApp.Orders.Infrastructure.Migrations.AuditableEntities.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MyApp.Orders.Infrastructure.Migrations.AuditableEntities.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: AuditableEntities.Up(MigrationBuilder)
- uid: MyApp.Orders.Infrastructure.Migrations.AuditableEntities.Up*
  name: Up
  href: api/MyApp.Orders.Infrastructure.Migrations.AuditableEntities.html#MyApp_Orders_Infrastructure_Migrations_AuditableEntities_Up_
  commentId: Overload:MyApp.Orders.Infrastructure.Migrations.AuditableEntities.Up
  isSpec: "True"
  fullName: MyApp.Orders.Infrastructure.Migrations.AuditableEntities.Up
  nameWithType: AuditableEntities.Up
- uid: MyApp.Orders.Infrastructure.Migrations.initialorders
  name: initialorders
  href: api/MyApp.Orders.Infrastructure.Migrations.initialorders.html
  commentId: T:MyApp.Orders.Infrastructure.Migrations.initialorders
  fullName: MyApp.Orders.Infrastructure.Migrations.initialorders
  nameWithType: initialorders
- uid: MyApp.Orders.Infrastructure.Migrations.initialorders.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/MyApp.Orders.Infrastructure.Migrations.initialorders.html#MyApp_Orders_Infrastructure_Migrations_initialorders_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:MyApp.Orders.Infrastructure.Migrations.initialorders.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: MyApp.Orders.Infrastructure.Migrations.initialorders.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: initialorders.BuildTargetModel(ModelBuilder)
- uid: MyApp.Orders.Infrastructure.Migrations.initialorders.BuildTargetModel*
  name: BuildTargetModel
  href: api/MyApp.Orders.Infrastructure.Migrations.initialorders.html#MyApp_Orders_Infrastructure_Migrations_initialorders_BuildTargetModel_
  commentId: Overload:MyApp.Orders.Infrastructure.Migrations.initialorders.BuildTargetModel
  isSpec: "True"
  fullName: MyApp.Orders.Infrastructure.Migrations.initialorders.BuildTargetModel
  nameWithType: initialorders.BuildTargetModel
- uid: MyApp.Orders.Infrastructure.Migrations.initialorders.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/MyApp.Orders.Infrastructure.Migrations.initialorders.html#MyApp_Orders_Infrastructure_Migrations_initialorders_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MyApp.Orders.Infrastructure.Migrations.initialorders.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MyApp.Orders.Infrastructure.Migrations.initialorders.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: initialorders.Down(MigrationBuilder)
- uid: MyApp.Orders.Infrastructure.Migrations.initialorders.Down*
  name: Down
  href: api/MyApp.Orders.Infrastructure.Migrations.initialorders.html#MyApp_Orders_Infrastructure_Migrations_initialorders_Down_
  commentId: Overload:MyApp.Orders.Infrastructure.Migrations.initialorders.Down
  isSpec: "True"
  fullName: MyApp.Orders.Infrastructure.Migrations.initialorders.Down
  nameWithType: initialorders.Down
- uid: MyApp.Orders.Infrastructure.Migrations.initialorders.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/MyApp.Orders.Infrastructure.Migrations.initialorders.html#MyApp_Orders_Infrastructure_Migrations_initialorders_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MyApp.Orders.Infrastructure.Migrations.initialorders.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MyApp.Orders.Infrastructure.Migrations.initialorders.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: initialorders.Up(MigrationBuilder)
- uid: MyApp.Orders.Infrastructure.Migrations.initialorders.Up*
  name: Up
  href: api/MyApp.Orders.Infrastructure.Migrations.initialorders.html#MyApp_Orders_Infrastructure_Migrations_initialorders_Up_
  commentId: Overload:MyApp.Orders.Infrastructure.Migrations.initialorders.Up
  isSpec: "True"
  fullName: MyApp.Orders.Infrastructure.Migrations.initialorders.Up
  nameWithType: initialorders.Up
- uid: MyApp.Orders.Infrastructure.Repositories
  name: MyApp.Orders.Infrastructure.Repositories
  href: api/MyApp.Orders.Infrastructure.Repositories.html
  commentId: N:MyApp.Orders.Infrastructure.Repositories
  fullName: MyApp.Orders.Infrastructure.Repositories
  nameWithType: MyApp.Orders.Infrastructure.Repositories
- uid: MyApp.Orders.Infrastructure.Repositories.OrderLineRepository
  name: OrderLineRepository
  href: api/MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.html
  commentId: T:MyApp.Orders.Infrastructure.Repositories.OrderLineRepository
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderLineRepository
  nameWithType: OrderLineRepository
- uid: MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.#ctor(MyApp.Orders.Infrastructure.Data.OrdersDbContext)
  name: OrderLineRepository(OrdersDbContext)
  href: api/MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.html#MyApp_Orders_Infrastructure_Repositories_OrderLineRepository__ctor_MyApp_Orders_Infrastructure_Data_OrdersDbContext_
  commentId: M:MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.#ctor(MyApp.Orders.Infrastructure.Data.OrdersDbContext)
  name.vb: New(OrdersDbContext)
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.OrderLineRepository(MyApp.Orders.Infrastructure.Data.OrdersDbContext)
  fullName.vb: MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.New(MyApp.Orders.Infrastructure.Data.OrdersDbContext)
  nameWithType: OrderLineRepository.OrderLineRepository(OrdersDbContext)
  nameWithType.vb: OrderLineRepository.New(OrdersDbContext)
- uid: MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.#ctor*
  name: OrderLineRepository
  href: api/MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.html#MyApp_Orders_Infrastructure_Repositories_OrderLineRepository__ctor_
  commentId: Overload:MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.OrderLineRepository
  fullName.vb: MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.New
  nameWithType: OrderLineRepository.OrderLineRepository
  nameWithType.vb: OrderLineRepository.New
- uid: MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.AddAsync(MyApp.Orders.Domain.Entities.OrderLine)
  name: AddAsync(OrderLine)
  href: api/MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.html#MyApp_Orders_Infrastructure_Repositories_OrderLineRepository_AddAsync_MyApp_Orders_Domain_Entities_OrderLine_
  commentId: M:MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.AddAsync(MyApp.Orders.Domain.Entities.OrderLine)
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.AddAsync(MyApp.Orders.Domain.Entities.OrderLine)
  nameWithType: OrderLineRepository.AddAsync(OrderLine)
- uid: MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.AddAsync*
  name: AddAsync
  href: api/MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.html#MyApp_Orders_Infrastructure_Repositories_OrderLineRepository_AddAsync_
  commentId: Overload:MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.AddAsync
  isSpec: "True"
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.AddAsync
  nameWithType: OrderLineRepository.AddAsync
- uid: MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.DeleteAsync(System.Guid)
  name: DeleteAsync(Guid)
  href: api/MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.html#MyApp_Orders_Infrastructure_Repositories_OrderLineRepository_DeleteAsync_System_Guid_
  commentId: M:MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.DeleteAsync(System.Guid)
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.DeleteAsync(System.Guid)
  nameWithType: OrderLineRepository.DeleteAsync(Guid)
- uid: MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.DeleteAsync*
  name: DeleteAsync
  href: api/MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.html#MyApp_Orders_Infrastructure_Repositories_OrderLineRepository_DeleteAsync_
  commentId: Overload:MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.DeleteAsync
  isSpec: "True"
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.DeleteAsync
  nameWithType: OrderLineRepository.DeleteAsync
- uid: MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.GetByIdAsync(System.Guid)
  name: GetByIdAsync(Guid)
  href: api/MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.html#MyApp_Orders_Infrastructure_Repositories_OrderLineRepository_GetByIdAsync_System_Guid_
  commentId: M:MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.GetByIdAsync(System.Guid)
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.GetByIdAsync(System.Guid)
  nameWithType: OrderLineRepository.GetByIdAsync(Guid)
- uid: MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.GetByIdAsync*
  name: GetByIdAsync
  href: api/MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.html#MyApp_Orders_Infrastructure_Repositories_OrderLineRepository_GetByIdAsync_
  commentId: Overload:MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.GetByIdAsync
  isSpec: "True"
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.GetByIdAsync
  nameWithType: OrderLineRepository.GetByIdAsync
- uid: MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.ListAsync
  name: ListAsync()
  href: api/MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.html#MyApp_Orders_Infrastructure_Repositories_OrderLineRepository_ListAsync
  commentId: M:MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.ListAsync
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.ListAsync()
  nameWithType: OrderLineRepository.ListAsync()
- uid: MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.ListAsync*
  name: ListAsync
  href: api/MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.html#MyApp_Orders_Infrastructure_Repositories_OrderLineRepository_ListAsync_
  commentId: Overload:MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.ListAsync
  isSpec: "True"
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.ListAsync
  nameWithType: OrderLineRepository.ListAsync
- uid: MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.UpdateAsync(MyApp.Orders.Domain.Entities.OrderLine)
  name: UpdateAsync(OrderLine)
  href: api/MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.html#MyApp_Orders_Infrastructure_Repositories_OrderLineRepository_UpdateAsync_MyApp_Orders_Domain_Entities_OrderLine_
  commentId: M:MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.UpdateAsync(MyApp.Orders.Domain.Entities.OrderLine)
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.UpdateAsync(MyApp.Orders.Domain.Entities.OrderLine)
  nameWithType: OrderLineRepository.UpdateAsync(OrderLine)
- uid: MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.UpdateAsync*
  name: UpdateAsync
  href: api/MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.html#MyApp_Orders_Infrastructure_Repositories_OrderLineRepository_UpdateAsync_
  commentId: Overload:MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.UpdateAsync
  isSpec: "True"
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderLineRepository.UpdateAsync
  nameWithType: OrderLineRepository.UpdateAsync
- uid: MyApp.Orders.Infrastructure.Repositories.OrderRepository
  name: OrderRepository
  href: api/MyApp.Orders.Infrastructure.Repositories.OrderRepository.html
  commentId: T:MyApp.Orders.Infrastructure.Repositories.OrderRepository
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderRepository
  nameWithType: OrderRepository
- uid: MyApp.Orders.Infrastructure.Repositories.OrderRepository.#ctor(MyApp.Orders.Infrastructure.Data.OrdersDbContext)
  name: OrderRepository(OrdersDbContext)
  href: api/MyApp.Orders.Infrastructure.Repositories.OrderRepository.html#MyApp_Orders_Infrastructure_Repositories_OrderRepository__ctor_MyApp_Orders_Infrastructure_Data_OrdersDbContext_
  commentId: M:MyApp.Orders.Infrastructure.Repositories.OrderRepository.#ctor(MyApp.Orders.Infrastructure.Data.OrdersDbContext)
  name.vb: New(OrdersDbContext)
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderRepository.OrderRepository(MyApp.Orders.Infrastructure.Data.OrdersDbContext)
  fullName.vb: MyApp.Orders.Infrastructure.Repositories.OrderRepository.New(MyApp.Orders.Infrastructure.Data.OrdersDbContext)
  nameWithType: OrderRepository.OrderRepository(OrdersDbContext)
  nameWithType.vb: OrderRepository.New(OrdersDbContext)
- uid: MyApp.Orders.Infrastructure.Repositories.OrderRepository.#ctor*
  name: OrderRepository
  href: api/MyApp.Orders.Infrastructure.Repositories.OrderRepository.html#MyApp_Orders_Infrastructure_Repositories_OrderRepository__ctor_
  commentId: Overload:MyApp.Orders.Infrastructure.Repositories.OrderRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderRepository.OrderRepository
  fullName.vb: MyApp.Orders.Infrastructure.Repositories.OrderRepository.New
  nameWithType: OrderRepository.OrderRepository
  nameWithType.vb: OrderRepository.New
- uid: MyApp.Orders.Infrastructure.Repositories.OrderRepository.AddAsync(MyApp.Orders.Domain.Entities.Order)
  name: AddAsync(Order)
  href: api/MyApp.Orders.Infrastructure.Repositories.OrderRepository.html#MyApp_Orders_Infrastructure_Repositories_OrderRepository_AddAsync_MyApp_Orders_Domain_Entities_Order_
  commentId: M:MyApp.Orders.Infrastructure.Repositories.OrderRepository.AddAsync(MyApp.Orders.Domain.Entities.Order)
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderRepository.AddAsync(MyApp.Orders.Domain.Entities.Order)
  nameWithType: OrderRepository.AddAsync(Order)
- uid: MyApp.Orders.Infrastructure.Repositories.OrderRepository.AddAsync*
  name: AddAsync
  href: api/MyApp.Orders.Infrastructure.Repositories.OrderRepository.html#MyApp_Orders_Infrastructure_Repositories_OrderRepository_AddAsync_
  commentId: Overload:MyApp.Orders.Infrastructure.Repositories.OrderRepository.AddAsync
  isSpec: "True"
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderRepository.AddAsync
  nameWithType: OrderRepository.AddAsync
- uid: MyApp.Orders.Infrastructure.Repositories.OrderRepository.DeleteAsync(System.Guid)
  name: DeleteAsync(Guid)
  href: api/MyApp.Orders.Infrastructure.Repositories.OrderRepository.html#MyApp_Orders_Infrastructure_Repositories_OrderRepository_DeleteAsync_System_Guid_
  commentId: M:MyApp.Orders.Infrastructure.Repositories.OrderRepository.DeleteAsync(System.Guid)
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderRepository.DeleteAsync(System.Guid)
  nameWithType: OrderRepository.DeleteAsync(Guid)
- uid: MyApp.Orders.Infrastructure.Repositories.OrderRepository.DeleteAsync*
  name: DeleteAsync
  href: api/MyApp.Orders.Infrastructure.Repositories.OrderRepository.html#MyApp_Orders_Infrastructure_Repositories_OrderRepository_DeleteAsync_
  commentId: Overload:MyApp.Orders.Infrastructure.Repositories.OrderRepository.DeleteAsync
  isSpec: "True"
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderRepository.DeleteAsync
  nameWithType: OrderRepository.DeleteAsync
- uid: MyApp.Orders.Infrastructure.Repositories.OrderRepository.GetByIdAsync(System.Guid)
  name: GetByIdAsync(Guid)
  href: api/MyApp.Orders.Infrastructure.Repositories.OrderRepository.html#MyApp_Orders_Infrastructure_Repositories_OrderRepository_GetByIdAsync_System_Guid_
  commentId: M:MyApp.Orders.Infrastructure.Repositories.OrderRepository.GetByIdAsync(System.Guid)
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderRepository.GetByIdAsync(System.Guid)
  nameWithType: OrderRepository.GetByIdAsync(Guid)
- uid: MyApp.Orders.Infrastructure.Repositories.OrderRepository.GetByIdAsync*
  name: GetByIdAsync
  href: api/MyApp.Orders.Infrastructure.Repositories.OrderRepository.html#MyApp_Orders_Infrastructure_Repositories_OrderRepository_GetByIdAsync_
  commentId: Overload:MyApp.Orders.Infrastructure.Repositories.OrderRepository.GetByIdAsync
  isSpec: "True"
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderRepository.GetByIdAsync
  nameWithType: OrderRepository.GetByIdAsync
- uid: MyApp.Orders.Infrastructure.Repositories.OrderRepository.ListAsync
  name: ListAsync()
  href: api/MyApp.Orders.Infrastructure.Repositories.OrderRepository.html#MyApp_Orders_Infrastructure_Repositories_OrderRepository_ListAsync
  commentId: M:MyApp.Orders.Infrastructure.Repositories.OrderRepository.ListAsync
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderRepository.ListAsync()
  nameWithType: OrderRepository.ListAsync()
- uid: MyApp.Orders.Infrastructure.Repositories.OrderRepository.ListAsync*
  name: ListAsync
  href: api/MyApp.Orders.Infrastructure.Repositories.OrderRepository.html#MyApp_Orders_Infrastructure_Repositories_OrderRepository_ListAsync_
  commentId: Overload:MyApp.Orders.Infrastructure.Repositories.OrderRepository.ListAsync
  isSpec: "True"
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderRepository.ListAsync
  nameWithType: OrderRepository.ListAsync
- uid: MyApp.Orders.Infrastructure.Repositories.OrderRepository.UpdateAsync(MyApp.Orders.Domain.Entities.Order)
  name: UpdateAsync(Order)
  href: api/MyApp.Orders.Infrastructure.Repositories.OrderRepository.html#MyApp_Orders_Infrastructure_Repositories_OrderRepository_UpdateAsync_MyApp_Orders_Domain_Entities_Order_
  commentId: M:MyApp.Orders.Infrastructure.Repositories.OrderRepository.UpdateAsync(MyApp.Orders.Domain.Entities.Order)
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderRepository.UpdateAsync(MyApp.Orders.Domain.Entities.Order)
  nameWithType: OrderRepository.UpdateAsync(Order)
- uid: MyApp.Orders.Infrastructure.Repositories.OrderRepository.UpdateAsync*
  name: UpdateAsync
  href: api/MyApp.Orders.Infrastructure.Repositories.OrderRepository.html#MyApp_Orders_Infrastructure_Repositories_OrderRepository_UpdateAsync_
  commentId: Overload:MyApp.Orders.Infrastructure.Repositories.OrderRepository.UpdateAsync
  isSpec: "True"
  fullName: MyApp.Orders.Infrastructure.Repositories.OrderRepository.UpdateAsync
  nameWithType: OrderRepository.UpdateAsync
- uid: MyApp.Orders.Tests.Helpers
  name: MyApp.Orders.Tests.Helpers
  href: api/MyApp.Orders.Tests.Helpers.html
  commentId: N:MyApp.Orders.Tests.Helpers
  fullName: MyApp.Orders.Tests.Helpers
  nameWithType: MyApp.Orders.Tests.Helpers
- uid: MyApp.Orders.Tests.Helpers.TestDbContextFactory
  name: TestDbContextFactory
  href: api/MyApp.Orders.Tests.Helpers.TestDbContextFactory.html
  commentId: T:MyApp.Orders.Tests.Helpers.TestDbContextFactory
  fullName: MyApp.Orders.Tests.Helpers.TestDbContextFactory
  nameWithType: TestDbContextFactory
- uid: MyApp.Orders.Tests.Helpers.TestDbContextFactory.CreateInMemoryContext
  name: CreateInMemoryContext()
  href: api/MyApp.Orders.Tests.Helpers.TestDbContextFactory.html#MyApp_Orders_Tests_Helpers_TestDbContextFactory_CreateInMemoryContext
  commentId: M:MyApp.Orders.Tests.Helpers.TestDbContextFactory.CreateInMemoryContext
  fullName: MyApp.Orders.Tests.Helpers.TestDbContextFactory.CreateInMemoryContext()
  nameWithType: TestDbContextFactory.CreateInMemoryContext()
- uid: MyApp.Orders.Tests.Helpers.TestDbContextFactory.CreateInMemoryContext*
  name: CreateInMemoryContext
  href: api/MyApp.Orders.Tests.Helpers.TestDbContextFactory.html#MyApp_Orders_Tests_Helpers_TestDbContextFactory_CreateInMemoryContext_
  commentId: Overload:MyApp.Orders.Tests.Helpers.TestDbContextFactory.CreateInMemoryContext
  isSpec: "True"
  fullName: MyApp.Orders.Tests.Helpers.TestDbContextFactory.CreateInMemoryContext
  nameWithType: TestDbContextFactory.CreateInMemoryContext
- uid: MyApp.Orders.Tests.Helpers.TestDbContextFactory.SeedTestData(MyApp.Orders.Infrastructure.Data.OrdersDbContext)
  name: SeedTestData(OrdersDbContext)
  href: api/MyApp.Orders.Tests.Helpers.TestDbContextFactory.html#MyApp_Orders_Tests_Helpers_TestDbContextFactory_SeedTestData_MyApp_Orders_Infrastructure_Data_OrdersDbContext_
  commentId: M:MyApp.Orders.Tests.Helpers.TestDbContextFactory.SeedTestData(MyApp.Orders.Infrastructure.Data.OrdersDbContext)
  fullName: MyApp.Orders.Tests.Helpers.TestDbContextFactory.SeedTestData(MyApp.Orders.Infrastructure.Data.OrdersDbContext)
  nameWithType: TestDbContextFactory.SeedTestData(OrdersDbContext)
- uid: MyApp.Orders.Tests.Helpers.TestDbContextFactory.SeedTestData*
  name: SeedTestData
  href: api/MyApp.Orders.Tests.Helpers.TestDbContextFactory.html#MyApp_Orders_Tests_Helpers_TestDbContextFactory_SeedTestData_
  commentId: Overload:MyApp.Orders.Tests.Helpers.TestDbContextFactory.SeedTestData
  isSpec: "True"
  fullName: MyApp.Orders.Tests.Helpers.TestDbContextFactory.SeedTestData
  nameWithType: TestDbContextFactory.SeedTestData
- uid: MyApp.Orders.Tests.Repositories
  name: MyApp.Orders.Tests.Repositories
  href: api/MyApp.Orders.Tests.Repositories.html
  commentId: N:MyApp.Orders.Tests.Repositories
  fullName: MyApp.Orders.Tests.Repositories
  nameWithType: MyApp.Orders.Tests.Repositories
- uid: MyApp.Orders.Tests.Repositories.OrderRepositoryTests
  name: OrderRepositoryTests
  href: api/MyApp.Orders.Tests.Repositories.OrderRepositoryTests.html
  commentId: T:MyApp.Orders.Tests.Repositories.OrderRepositoryTests
  fullName: MyApp.Orders.Tests.Repositories.OrderRepositoryTests
  nameWithType: OrderRepositoryTests
- uid: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.#ctor
  name: OrderRepositoryTests()
  href: api/MyApp.Orders.Tests.Repositories.OrderRepositoryTests.html#MyApp_Orders_Tests_Repositories_OrderRepositoryTests__ctor
  commentId: M:MyApp.Orders.Tests.Repositories.OrderRepositoryTests.#ctor
  name.vb: New()
  fullName: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.OrderRepositoryTests()
  fullName.vb: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.New()
  nameWithType: OrderRepositoryTests.OrderRepositoryTests()
  nameWithType.vb: OrderRepositoryTests.New()
- uid: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.#ctor*
  name: OrderRepositoryTests
  href: api/MyApp.Orders.Tests.Repositories.OrderRepositoryTests.html#MyApp_Orders_Tests_Repositories_OrderRepositoryTests__ctor_
  commentId: Overload:MyApp.Orders.Tests.Repositories.OrderRepositoryTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.OrderRepositoryTests
  fullName.vb: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.New
  nameWithType: OrderRepositoryTests.OrderRepositoryTests
  nameWithType.vb: OrderRepositoryTests.New
- uid: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.AddAsync_WithValidOrder_CreatesOrder
  name: AddAsync_WithValidOrder_CreatesOrder()
  href: api/MyApp.Orders.Tests.Repositories.OrderRepositoryTests.html#MyApp_Orders_Tests_Repositories_OrderRepositoryTests_AddAsync_WithValidOrder_CreatesOrder
  commentId: M:MyApp.Orders.Tests.Repositories.OrderRepositoryTests.AddAsync_WithValidOrder_CreatesOrder
  fullName: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.AddAsync_WithValidOrder_CreatesOrder()
  nameWithType: OrderRepositoryTests.AddAsync_WithValidOrder_CreatesOrder()
- uid: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.AddAsync_WithValidOrder_CreatesOrder*
  name: AddAsync_WithValidOrder_CreatesOrder
  href: api/MyApp.Orders.Tests.Repositories.OrderRepositoryTests.html#MyApp_Orders_Tests_Repositories_OrderRepositoryTests_AddAsync_WithValidOrder_CreatesOrder_
  commentId: Overload:MyApp.Orders.Tests.Repositories.OrderRepositoryTests.AddAsync_WithValidOrder_CreatesOrder
  isSpec: "True"
  fullName: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.AddAsync_WithValidOrder_CreatesOrder
  nameWithType: OrderRepositoryTests.AddAsync_WithValidOrder_CreatesOrder
- uid: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.DeleteAsync_WithNonExistentId_DoesNotThrowException
  name: DeleteAsync_WithNonExistentId_DoesNotThrowException()
  href: api/MyApp.Orders.Tests.Repositories.OrderRepositoryTests.html#MyApp_Orders_Tests_Repositories_OrderRepositoryTests_DeleteAsync_WithNonExistentId_DoesNotThrowException
  commentId: M:MyApp.Orders.Tests.Repositories.OrderRepositoryTests.DeleteAsync_WithNonExistentId_DoesNotThrowException
  fullName: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.DeleteAsync_WithNonExistentId_DoesNotThrowException()
  nameWithType: OrderRepositoryTests.DeleteAsync_WithNonExistentId_DoesNotThrowException()
- uid: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.DeleteAsync_WithNonExistentId_DoesNotThrowException*
  name: DeleteAsync_WithNonExistentId_DoesNotThrowException
  href: api/MyApp.Orders.Tests.Repositories.OrderRepositoryTests.html#MyApp_Orders_Tests_Repositories_OrderRepositoryTests_DeleteAsync_WithNonExistentId_DoesNotThrowException_
  commentId: Overload:MyApp.Orders.Tests.Repositories.OrderRepositoryTests.DeleteAsync_WithNonExistentId_DoesNotThrowException
  isSpec: "True"
  fullName: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.DeleteAsync_WithNonExistentId_DoesNotThrowException
  nameWithType: OrderRepositoryTests.DeleteAsync_WithNonExistentId_DoesNotThrowException
- uid: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.DeleteAsync_WithValidId_DeletesOrder
  name: DeleteAsync_WithValidId_DeletesOrder()
  href: api/MyApp.Orders.Tests.Repositories.OrderRepositoryTests.html#MyApp_Orders_Tests_Repositories_OrderRepositoryTests_DeleteAsync_WithValidId_DeletesOrder
  commentId: M:MyApp.Orders.Tests.Repositories.OrderRepositoryTests.DeleteAsync_WithValidId_DeletesOrder
  fullName: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.DeleteAsync_WithValidId_DeletesOrder()
  nameWithType: OrderRepositoryTests.DeleteAsync_WithValidId_DeletesOrder()
- uid: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.DeleteAsync_WithValidId_DeletesOrder*
  name: DeleteAsync_WithValidId_DeletesOrder
  href: api/MyApp.Orders.Tests.Repositories.OrderRepositoryTests.html#MyApp_Orders_Tests_Repositories_OrderRepositoryTests_DeleteAsync_WithValidId_DeletesOrder_
  commentId: Overload:MyApp.Orders.Tests.Repositories.OrderRepositoryTests.DeleteAsync_WithValidId_DeletesOrder
  isSpec: "True"
  fullName: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.DeleteAsync_WithValidId_DeletesOrder
  nameWithType: OrderRepositoryTests.DeleteAsync_WithValidId_DeletesOrder
- uid: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.GetByIdAsync_IncludesOrderLines
  name: GetByIdAsync_IncludesOrderLines()
  href: api/MyApp.Orders.Tests.Repositories.OrderRepositoryTests.html#MyApp_Orders_Tests_Repositories_OrderRepositoryTests_GetByIdAsync_IncludesOrderLines
  commentId: M:MyApp.Orders.Tests.Repositories.OrderRepositoryTests.GetByIdAsync_IncludesOrderLines
  fullName: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.GetByIdAsync_IncludesOrderLines()
  nameWithType: OrderRepositoryTests.GetByIdAsync_IncludesOrderLines()
- uid: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.GetByIdAsync_IncludesOrderLines*
  name: GetByIdAsync_IncludesOrderLines
  href: api/MyApp.Orders.Tests.Repositories.OrderRepositoryTests.html#MyApp_Orders_Tests_Repositories_OrderRepositoryTests_GetByIdAsync_IncludesOrderLines_
  commentId: Overload:MyApp.Orders.Tests.Repositories.OrderRepositoryTests.GetByIdAsync_IncludesOrderLines
  isSpec: "True"
  fullName: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.GetByIdAsync_IncludesOrderLines
  nameWithType: OrderRepositoryTests.GetByIdAsync_IncludesOrderLines
- uid: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull
  name: GetByIdAsync_WithNonExistentId_ReturnsNull()
  href: api/MyApp.Orders.Tests.Repositories.OrderRepositoryTests.html#MyApp_Orders_Tests_Repositories_OrderRepositoryTests_GetByIdAsync_WithNonExistentId_ReturnsNull
  commentId: M:MyApp.Orders.Tests.Repositories.OrderRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull
  fullName: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull()
  nameWithType: OrderRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull()
- uid: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull*
  name: GetByIdAsync_WithNonExistentId_ReturnsNull
  href: api/MyApp.Orders.Tests.Repositories.OrderRepositoryTests.html#MyApp_Orders_Tests_Repositories_OrderRepositoryTests_GetByIdAsync_WithNonExistentId_ReturnsNull_
  commentId: Overload:MyApp.Orders.Tests.Repositories.OrderRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull
  isSpec: "True"
  fullName: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull
  nameWithType: OrderRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull
- uid: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.GetByIdAsync_WithValidId_ReturnsOrder
  name: GetByIdAsync_WithValidId_ReturnsOrder()
  href: api/MyApp.Orders.Tests.Repositories.OrderRepositoryTests.html#MyApp_Orders_Tests_Repositories_OrderRepositoryTests_GetByIdAsync_WithValidId_ReturnsOrder
  commentId: M:MyApp.Orders.Tests.Repositories.OrderRepositoryTests.GetByIdAsync_WithValidId_ReturnsOrder
  fullName: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.GetByIdAsync_WithValidId_ReturnsOrder()
  nameWithType: OrderRepositoryTests.GetByIdAsync_WithValidId_ReturnsOrder()
- uid: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.GetByIdAsync_WithValidId_ReturnsOrder*
  name: GetByIdAsync_WithValidId_ReturnsOrder
  href: api/MyApp.Orders.Tests.Repositories.OrderRepositoryTests.html#MyApp_Orders_Tests_Repositories_OrderRepositoryTests_GetByIdAsync_WithValidId_ReturnsOrder_
  commentId: Overload:MyApp.Orders.Tests.Repositories.OrderRepositoryTests.GetByIdAsync_WithValidId_ReturnsOrder
  isSpec: "True"
  fullName: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.GetByIdAsync_WithValidId_ReturnsOrder
  nameWithType: OrderRepositoryTests.GetByIdAsync_WithValidId_ReturnsOrder
- uid: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.ListAsync_ReturnsAllOrders
  name: ListAsync_ReturnsAllOrders()
  href: api/MyApp.Orders.Tests.Repositories.OrderRepositoryTests.html#MyApp_Orders_Tests_Repositories_OrderRepositoryTests_ListAsync_ReturnsAllOrders
  commentId: M:MyApp.Orders.Tests.Repositories.OrderRepositoryTests.ListAsync_ReturnsAllOrders
  fullName: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.ListAsync_ReturnsAllOrders()
  nameWithType: OrderRepositoryTests.ListAsync_ReturnsAllOrders()
- uid: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.ListAsync_ReturnsAllOrders*
  name: ListAsync_ReturnsAllOrders
  href: api/MyApp.Orders.Tests.Repositories.OrderRepositoryTests.html#MyApp_Orders_Tests_Repositories_OrderRepositoryTests_ListAsync_ReturnsAllOrders_
  commentId: Overload:MyApp.Orders.Tests.Repositories.OrderRepositoryTests.ListAsync_ReturnsAllOrders
  isSpec: "True"
  fullName: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.ListAsync_ReturnsAllOrders
  nameWithType: OrderRepositoryTests.ListAsync_ReturnsAllOrders
- uid: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.ListAsync_ReturnsEmptyList_WhenNoOrders
  name: ListAsync_ReturnsEmptyList_WhenNoOrders()
  href: api/MyApp.Orders.Tests.Repositories.OrderRepositoryTests.html#MyApp_Orders_Tests_Repositories_OrderRepositoryTests_ListAsync_ReturnsEmptyList_WhenNoOrders
  commentId: M:MyApp.Orders.Tests.Repositories.OrderRepositoryTests.ListAsync_ReturnsEmptyList_WhenNoOrders
  fullName: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.ListAsync_ReturnsEmptyList_WhenNoOrders()
  nameWithType: OrderRepositoryTests.ListAsync_ReturnsEmptyList_WhenNoOrders()
- uid: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.ListAsync_ReturnsEmptyList_WhenNoOrders*
  name: ListAsync_ReturnsEmptyList_WhenNoOrders
  href: api/MyApp.Orders.Tests.Repositories.OrderRepositoryTests.html#MyApp_Orders_Tests_Repositories_OrderRepositoryTests_ListAsync_ReturnsEmptyList_WhenNoOrders_
  commentId: Overload:MyApp.Orders.Tests.Repositories.OrderRepositoryTests.ListAsync_ReturnsEmptyList_WhenNoOrders
  isSpec: "True"
  fullName: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.ListAsync_ReturnsEmptyList_WhenNoOrders
  nameWithType: OrderRepositoryTests.ListAsync_ReturnsEmptyList_WhenNoOrders
- uid: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.UpdateAsync_WithExistingOrder_UpdatesOrderData
  name: UpdateAsync_WithExistingOrder_UpdatesOrderData()
  href: api/MyApp.Orders.Tests.Repositories.OrderRepositoryTests.html#MyApp_Orders_Tests_Repositories_OrderRepositoryTests_UpdateAsync_WithExistingOrder_UpdatesOrderData
  commentId: M:MyApp.Orders.Tests.Repositories.OrderRepositoryTests.UpdateAsync_WithExistingOrder_UpdatesOrderData
  fullName: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.UpdateAsync_WithExistingOrder_UpdatesOrderData()
  nameWithType: OrderRepositoryTests.UpdateAsync_WithExistingOrder_UpdatesOrderData()
- uid: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.UpdateAsync_WithExistingOrder_UpdatesOrderData*
  name: UpdateAsync_WithExistingOrder_UpdatesOrderData
  href: api/MyApp.Orders.Tests.Repositories.OrderRepositoryTests.html#MyApp_Orders_Tests_Repositories_OrderRepositoryTests_UpdateAsync_WithExistingOrder_UpdatesOrderData_
  commentId: Overload:MyApp.Orders.Tests.Repositories.OrderRepositoryTests.UpdateAsync_WithExistingOrder_UpdatesOrderData
  isSpec: "True"
  fullName: MyApp.Orders.Tests.Repositories.OrderRepositoryTests.UpdateAsync_WithExistingOrder_UpdatesOrderData
  nameWithType: OrderRepositoryTests.UpdateAsync_WithExistingOrder_UpdatesOrderData
- uid: MyApp.Purchasing.API.Controllers
  name: MyApp.Purchasing.API.Controllers
  href: api/MyApp.Purchasing.API.Controllers.html
  commentId: N:MyApp.Purchasing.API.Controllers
  fullName: MyApp.Purchasing.API.Controllers
  nameWithType: MyApp.Purchasing.API.Controllers
- uid: MyApp.Purchasing.API.Controllers.PurchaseOrdersController
  name: PurchaseOrdersController
  href: api/MyApp.Purchasing.API.Controllers.PurchaseOrdersController.html
  commentId: T:MyApp.Purchasing.API.Controllers.PurchaseOrdersController
  fullName: MyApp.Purchasing.API.Controllers.PurchaseOrdersController
  nameWithType: PurchaseOrdersController
- uid: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.#ctor(MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService,MyApp.Shared.Domain.Caching.ICacheService,Microsoft.Extensions.Logging.ILogger{MyApp.Purchasing.API.Controllers.PurchaseOrdersController})
  name: PurchaseOrdersController(IPurchaseOrderService, ICacheService, ILogger<PurchaseOrdersController>)
  href: api/MyApp.Purchasing.API.Controllers.PurchaseOrdersController.html#MyApp_Purchasing_API_Controllers_PurchaseOrdersController__ctor_MyApp_Purchasing_Application_Contracts_Services_IPurchaseOrderService_MyApp_Shared_Domain_Caching_ICacheService_Microsoft_Extensions_Logging_ILogger_MyApp_Purchasing_API_Controllers_PurchaseOrdersController__
  commentId: M:MyApp.Purchasing.API.Controllers.PurchaseOrdersController.#ctor(MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService,MyApp.Shared.Domain.Caching.ICacheService,Microsoft.Extensions.Logging.ILogger{MyApp.Purchasing.API.Controllers.PurchaseOrdersController})
  name.vb: New(IPurchaseOrderService, ICacheService, ILogger(Of PurchaseOrdersController))
  fullName: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.PurchaseOrdersController(MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService, MyApp.Shared.Domain.Caching.ICacheService, Microsoft.Extensions.Logging.ILogger<MyApp.Purchasing.API.Controllers.PurchaseOrdersController>)
  fullName.vb: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.New(MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService, MyApp.Shared.Domain.Caching.ICacheService, Microsoft.Extensions.Logging.ILogger(Of MyApp.Purchasing.API.Controllers.PurchaseOrdersController))
  nameWithType: PurchaseOrdersController.PurchaseOrdersController(IPurchaseOrderService, ICacheService, ILogger<PurchaseOrdersController>)
  nameWithType.vb: PurchaseOrdersController.New(IPurchaseOrderService, ICacheService, ILogger(Of PurchaseOrdersController))
- uid: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.#ctor*
  name: PurchaseOrdersController
  href: api/MyApp.Purchasing.API.Controllers.PurchaseOrdersController.html#MyApp_Purchasing_API_Controllers_PurchaseOrdersController__ctor_
  commentId: Overload:MyApp.Purchasing.API.Controllers.PurchaseOrdersController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.PurchaseOrdersController
  fullName.vb: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.New
  nameWithType: PurchaseOrdersController.PurchaseOrdersController
  nameWithType.vb: PurchaseOrdersController.New
- uid: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.CreatePurchaseOrder(MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto)
  name: CreatePurchaseOrder(CreateUpdatePurchaseOrderDto)
  href: api/MyApp.Purchasing.API.Controllers.PurchaseOrdersController.html#MyApp_Purchasing_API_Controllers_PurchaseOrdersController_CreatePurchaseOrder_MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdatePurchaseOrderDto_
  commentId: M:MyApp.Purchasing.API.Controllers.PurchaseOrdersController.CreatePurchaseOrder(MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto)
  fullName: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.CreatePurchaseOrder(MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto)
  nameWithType: PurchaseOrdersController.CreatePurchaseOrder(CreateUpdatePurchaseOrderDto)
- uid: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.CreatePurchaseOrder*
  name: CreatePurchaseOrder
  href: api/MyApp.Purchasing.API.Controllers.PurchaseOrdersController.html#MyApp_Purchasing_API_Controllers_PurchaseOrdersController_CreatePurchaseOrder_
  commentId: Overload:MyApp.Purchasing.API.Controllers.PurchaseOrdersController.CreatePurchaseOrder
  isSpec: "True"
  fullName: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.CreatePurchaseOrder
  nameWithType: PurchaseOrdersController.CreatePurchaseOrder
- uid: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.DeletePurchaseOrder(System.Guid)
  name: DeletePurchaseOrder(Guid)
  href: api/MyApp.Purchasing.API.Controllers.PurchaseOrdersController.html#MyApp_Purchasing_API_Controllers_PurchaseOrdersController_DeletePurchaseOrder_System_Guid_
  commentId: M:MyApp.Purchasing.API.Controllers.PurchaseOrdersController.DeletePurchaseOrder(System.Guid)
  fullName: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.DeletePurchaseOrder(System.Guid)
  nameWithType: PurchaseOrdersController.DeletePurchaseOrder(Guid)
- uid: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.DeletePurchaseOrder*
  name: DeletePurchaseOrder
  href: api/MyApp.Purchasing.API.Controllers.PurchaseOrdersController.html#MyApp_Purchasing_API_Controllers_PurchaseOrdersController_DeletePurchaseOrder_
  commentId: Overload:MyApp.Purchasing.API.Controllers.PurchaseOrdersController.DeletePurchaseOrder
  isSpec: "True"
  fullName: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.DeletePurchaseOrder
  nameWithType: PurchaseOrdersController.DeletePurchaseOrder
- uid: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.GetAllPurchaseOrders
  name: GetAllPurchaseOrders()
  href: api/MyApp.Purchasing.API.Controllers.PurchaseOrdersController.html#MyApp_Purchasing_API_Controllers_PurchaseOrdersController_GetAllPurchaseOrders
  commentId: M:MyApp.Purchasing.API.Controllers.PurchaseOrdersController.GetAllPurchaseOrders
  fullName: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.GetAllPurchaseOrders()
  nameWithType: PurchaseOrdersController.GetAllPurchaseOrders()
- uid: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.GetAllPurchaseOrders*
  name: GetAllPurchaseOrders
  href: api/MyApp.Purchasing.API.Controllers.PurchaseOrdersController.html#MyApp_Purchasing_API_Controllers_PurchaseOrdersController_GetAllPurchaseOrders_
  commentId: Overload:MyApp.Purchasing.API.Controllers.PurchaseOrdersController.GetAllPurchaseOrders
  isSpec: "True"
  fullName: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.GetAllPurchaseOrders
  nameWithType: PurchaseOrdersController.GetAllPurchaseOrders
- uid: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.GetPurchaseOrderById(System.Guid)
  name: GetPurchaseOrderById(Guid)
  href: api/MyApp.Purchasing.API.Controllers.PurchaseOrdersController.html#MyApp_Purchasing_API_Controllers_PurchaseOrdersController_GetPurchaseOrderById_System_Guid_
  commentId: M:MyApp.Purchasing.API.Controllers.PurchaseOrdersController.GetPurchaseOrderById(System.Guid)
  fullName: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.GetPurchaseOrderById(System.Guid)
  nameWithType: PurchaseOrdersController.GetPurchaseOrderById(Guid)
- uid: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.GetPurchaseOrderById*
  name: GetPurchaseOrderById
  href: api/MyApp.Purchasing.API.Controllers.PurchaseOrdersController.html#MyApp_Purchasing_API_Controllers_PurchaseOrdersController_GetPurchaseOrderById_
  commentId: Overload:MyApp.Purchasing.API.Controllers.PurchaseOrdersController.GetPurchaseOrderById
  isSpec: "True"
  fullName: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.GetPurchaseOrderById
  nameWithType: PurchaseOrdersController.GetPurchaseOrderById
- uid: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.GetPurchaseOrdersByStatus(System.String)
  name: GetPurchaseOrdersByStatus(string)
  href: api/MyApp.Purchasing.API.Controllers.PurchaseOrdersController.html#MyApp_Purchasing_API_Controllers_PurchaseOrdersController_GetPurchaseOrdersByStatus_System_String_
  commentId: M:MyApp.Purchasing.API.Controllers.PurchaseOrdersController.GetPurchaseOrdersByStatus(System.String)
  name.vb: GetPurchaseOrdersByStatus(String)
  fullName: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.GetPurchaseOrdersByStatus(string)
  fullName.vb: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.GetPurchaseOrdersByStatus(String)
  nameWithType: PurchaseOrdersController.GetPurchaseOrdersByStatus(string)
  nameWithType.vb: PurchaseOrdersController.GetPurchaseOrdersByStatus(String)
- uid: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.GetPurchaseOrdersByStatus*
  name: GetPurchaseOrdersByStatus
  href: api/MyApp.Purchasing.API.Controllers.PurchaseOrdersController.html#MyApp_Purchasing_API_Controllers_PurchaseOrdersController_GetPurchaseOrdersByStatus_
  commentId: Overload:MyApp.Purchasing.API.Controllers.PurchaseOrdersController.GetPurchaseOrdersByStatus
  isSpec: "True"
  fullName: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.GetPurchaseOrdersByStatus
  nameWithType: PurchaseOrdersController.GetPurchaseOrdersByStatus
- uid: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.GetPurchaseOrdersBySupplier(System.Guid)
  name: GetPurchaseOrdersBySupplier(Guid)
  href: api/MyApp.Purchasing.API.Controllers.PurchaseOrdersController.html#MyApp_Purchasing_API_Controllers_PurchaseOrdersController_GetPurchaseOrdersBySupplier_System_Guid_
  commentId: M:MyApp.Purchasing.API.Controllers.PurchaseOrdersController.GetPurchaseOrdersBySupplier(System.Guid)
  fullName: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.GetPurchaseOrdersBySupplier(System.Guid)
  nameWithType: PurchaseOrdersController.GetPurchaseOrdersBySupplier(Guid)
- uid: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.GetPurchaseOrdersBySupplier*
  name: GetPurchaseOrdersBySupplier
  href: api/MyApp.Purchasing.API.Controllers.PurchaseOrdersController.html#MyApp_Purchasing_API_Controllers_PurchaseOrdersController_GetPurchaseOrdersBySupplier_
  commentId: Overload:MyApp.Purchasing.API.Controllers.PurchaseOrdersController.GetPurchaseOrdersBySupplier
  isSpec: "True"
  fullName: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.GetPurchaseOrdersBySupplier
  nameWithType: PurchaseOrdersController.GetPurchaseOrdersBySupplier
- uid: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.UpdatePurchaseOrder(System.Guid,MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto)
  name: UpdatePurchaseOrder(Guid, CreateUpdatePurchaseOrderDto)
  href: api/MyApp.Purchasing.API.Controllers.PurchaseOrdersController.html#MyApp_Purchasing_API_Controllers_PurchaseOrdersController_UpdatePurchaseOrder_System_Guid_MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdatePurchaseOrderDto_
  commentId: M:MyApp.Purchasing.API.Controllers.PurchaseOrdersController.UpdatePurchaseOrder(System.Guid,MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto)
  fullName: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.UpdatePurchaseOrder(System.Guid, MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto)
  nameWithType: PurchaseOrdersController.UpdatePurchaseOrder(Guid, CreateUpdatePurchaseOrderDto)
- uid: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.UpdatePurchaseOrder*
  name: UpdatePurchaseOrder
  href: api/MyApp.Purchasing.API.Controllers.PurchaseOrdersController.html#MyApp_Purchasing_API_Controllers_PurchaseOrdersController_UpdatePurchaseOrder_
  commentId: Overload:MyApp.Purchasing.API.Controllers.PurchaseOrdersController.UpdatePurchaseOrder
  isSpec: "True"
  fullName: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.UpdatePurchaseOrder
  nameWithType: PurchaseOrdersController.UpdatePurchaseOrder
- uid: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.UpdatePurchaseOrderStatus(System.Guid,System.String)
  name: UpdatePurchaseOrderStatus(Guid, string)
  href: api/MyApp.Purchasing.API.Controllers.PurchaseOrdersController.html#MyApp_Purchasing_API_Controllers_PurchaseOrdersController_UpdatePurchaseOrderStatus_System_Guid_System_String_
  commentId: M:MyApp.Purchasing.API.Controllers.PurchaseOrdersController.UpdatePurchaseOrderStatus(System.Guid,System.String)
  name.vb: UpdatePurchaseOrderStatus(Guid, String)
  fullName: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.UpdatePurchaseOrderStatus(System.Guid, string)
  fullName.vb: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.UpdatePurchaseOrderStatus(System.Guid, String)
  nameWithType: PurchaseOrdersController.UpdatePurchaseOrderStatus(Guid, string)
  nameWithType.vb: PurchaseOrdersController.UpdatePurchaseOrderStatus(Guid, String)
- uid: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.UpdatePurchaseOrderStatus*
  name: UpdatePurchaseOrderStatus
  href: api/MyApp.Purchasing.API.Controllers.PurchaseOrdersController.html#MyApp_Purchasing_API_Controllers_PurchaseOrdersController_UpdatePurchaseOrderStatus_
  commentId: Overload:MyApp.Purchasing.API.Controllers.PurchaseOrdersController.UpdatePurchaseOrderStatus
  isSpec: "True"
  fullName: MyApp.Purchasing.API.Controllers.PurchaseOrdersController.UpdatePurchaseOrderStatus
  nameWithType: PurchaseOrdersController.UpdatePurchaseOrderStatus
- uid: MyApp.Purchasing.API.Controllers.SuppliersController
  name: SuppliersController
  href: api/MyApp.Purchasing.API.Controllers.SuppliersController.html
  commentId: T:MyApp.Purchasing.API.Controllers.SuppliersController
  fullName: MyApp.Purchasing.API.Controllers.SuppliersController
  nameWithType: SuppliersController
- uid: MyApp.Purchasing.API.Controllers.SuppliersController.#ctor(MyApp.Purchasing.Application.Contracts.Services.ISupplierService,MyApp.Shared.Domain.Caching.ICacheService,Microsoft.Extensions.Logging.ILogger{MyApp.Purchasing.API.Controllers.SuppliersController})
  name: SuppliersController(ISupplierService, ICacheService, ILogger<SuppliersController>)
  href: api/MyApp.Purchasing.API.Controllers.SuppliersController.html#MyApp_Purchasing_API_Controllers_SuppliersController__ctor_MyApp_Purchasing_Application_Contracts_Services_ISupplierService_MyApp_Shared_Domain_Caching_ICacheService_Microsoft_Extensions_Logging_ILogger_MyApp_Purchasing_API_Controllers_SuppliersController__
  commentId: M:MyApp.Purchasing.API.Controllers.SuppliersController.#ctor(MyApp.Purchasing.Application.Contracts.Services.ISupplierService,MyApp.Shared.Domain.Caching.ICacheService,Microsoft.Extensions.Logging.ILogger{MyApp.Purchasing.API.Controllers.SuppliersController})
  name.vb: New(ISupplierService, ICacheService, ILogger(Of SuppliersController))
  fullName: MyApp.Purchasing.API.Controllers.SuppliersController.SuppliersController(MyApp.Purchasing.Application.Contracts.Services.ISupplierService, MyApp.Shared.Domain.Caching.ICacheService, Microsoft.Extensions.Logging.ILogger<MyApp.Purchasing.API.Controllers.SuppliersController>)
  fullName.vb: MyApp.Purchasing.API.Controllers.SuppliersController.New(MyApp.Purchasing.Application.Contracts.Services.ISupplierService, MyApp.Shared.Domain.Caching.ICacheService, Microsoft.Extensions.Logging.ILogger(Of MyApp.Purchasing.API.Controllers.SuppliersController))
  nameWithType: SuppliersController.SuppliersController(ISupplierService, ICacheService, ILogger<SuppliersController>)
  nameWithType.vb: SuppliersController.New(ISupplierService, ICacheService, ILogger(Of SuppliersController))
- uid: MyApp.Purchasing.API.Controllers.SuppliersController.#ctor*
  name: SuppliersController
  href: api/MyApp.Purchasing.API.Controllers.SuppliersController.html#MyApp_Purchasing_API_Controllers_SuppliersController__ctor_
  commentId: Overload:MyApp.Purchasing.API.Controllers.SuppliersController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Purchasing.API.Controllers.SuppliersController.SuppliersController
  fullName.vb: MyApp.Purchasing.API.Controllers.SuppliersController.New
  nameWithType: SuppliersController.SuppliersController
  nameWithType.vb: SuppliersController.New
- uid: MyApp.Purchasing.API.Controllers.SuppliersController.CreateSupplier(MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto)
  name: CreateSupplier(CreateUpdateSupplierDto)
  href: api/MyApp.Purchasing.API.Controllers.SuppliersController.html#MyApp_Purchasing_API_Controllers_SuppliersController_CreateSupplier_MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdateSupplierDto_
  commentId: M:MyApp.Purchasing.API.Controllers.SuppliersController.CreateSupplier(MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto)
  fullName: MyApp.Purchasing.API.Controllers.SuppliersController.CreateSupplier(MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto)
  nameWithType: SuppliersController.CreateSupplier(CreateUpdateSupplierDto)
- uid: MyApp.Purchasing.API.Controllers.SuppliersController.CreateSupplier*
  name: CreateSupplier
  href: api/MyApp.Purchasing.API.Controllers.SuppliersController.html#MyApp_Purchasing_API_Controllers_SuppliersController_CreateSupplier_
  commentId: Overload:MyApp.Purchasing.API.Controllers.SuppliersController.CreateSupplier
  isSpec: "True"
  fullName: MyApp.Purchasing.API.Controllers.SuppliersController.CreateSupplier
  nameWithType: SuppliersController.CreateSupplier
- uid: MyApp.Purchasing.API.Controllers.SuppliersController.DeleteSupplier(System.Guid)
  name: DeleteSupplier(Guid)
  href: api/MyApp.Purchasing.API.Controllers.SuppliersController.html#MyApp_Purchasing_API_Controllers_SuppliersController_DeleteSupplier_System_Guid_
  commentId: M:MyApp.Purchasing.API.Controllers.SuppliersController.DeleteSupplier(System.Guid)
  fullName: MyApp.Purchasing.API.Controllers.SuppliersController.DeleteSupplier(System.Guid)
  nameWithType: SuppliersController.DeleteSupplier(Guid)
- uid: MyApp.Purchasing.API.Controllers.SuppliersController.DeleteSupplier*
  name: DeleteSupplier
  href: api/MyApp.Purchasing.API.Controllers.SuppliersController.html#MyApp_Purchasing_API_Controllers_SuppliersController_DeleteSupplier_
  commentId: Overload:MyApp.Purchasing.API.Controllers.SuppliersController.DeleteSupplier
  isSpec: "True"
  fullName: MyApp.Purchasing.API.Controllers.SuppliersController.DeleteSupplier
  nameWithType: SuppliersController.DeleteSupplier
- uid: MyApp.Purchasing.API.Controllers.SuppliersController.GetAllSuppliers
  name: GetAllSuppliers()
  href: api/MyApp.Purchasing.API.Controllers.SuppliersController.html#MyApp_Purchasing_API_Controllers_SuppliersController_GetAllSuppliers
  commentId: M:MyApp.Purchasing.API.Controllers.SuppliersController.GetAllSuppliers
  fullName: MyApp.Purchasing.API.Controllers.SuppliersController.GetAllSuppliers()
  nameWithType: SuppliersController.GetAllSuppliers()
- uid: MyApp.Purchasing.API.Controllers.SuppliersController.GetAllSuppliers*
  name: GetAllSuppliers
  href: api/MyApp.Purchasing.API.Controllers.SuppliersController.html#MyApp_Purchasing_API_Controllers_SuppliersController_GetAllSuppliers_
  commentId: Overload:MyApp.Purchasing.API.Controllers.SuppliersController.GetAllSuppliers
  isSpec: "True"
  fullName: MyApp.Purchasing.API.Controllers.SuppliersController.GetAllSuppliers
  nameWithType: SuppliersController.GetAllSuppliers
- uid: MyApp.Purchasing.API.Controllers.SuppliersController.GetSupplierByEmail(System.String)
  name: GetSupplierByEmail(string)
  href: api/MyApp.Purchasing.API.Controllers.SuppliersController.html#MyApp_Purchasing_API_Controllers_SuppliersController_GetSupplierByEmail_System_String_
  commentId: M:MyApp.Purchasing.API.Controllers.SuppliersController.GetSupplierByEmail(System.String)
  name.vb: GetSupplierByEmail(String)
  fullName: MyApp.Purchasing.API.Controllers.SuppliersController.GetSupplierByEmail(string)
  fullName.vb: MyApp.Purchasing.API.Controllers.SuppliersController.GetSupplierByEmail(String)
  nameWithType: SuppliersController.GetSupplierByEmail(string)
  nameWithType.vb: SuppliersController.GetSupplierByEmail(String)
- uid: MyApp.Purchasing.API.Controllers.SuppliersController.GetSupplierByEmail*
  name: GetSupplierByEmail
  href: api/MyApp.Purchasing.API.Controllers.SuppliersController.html#MyApp_Purchasing_API_Controllers_SuppliersController_GetSupplierByEmail_
  commentId: Overload:MyApp.Purchasing.API.Controllers.SuppliersController.GetSupplierByEmail
  isSpec: "True"
  fullName: MyApp.Purchasing.API.Controllers.SuppliersController.GetSupplierByEmail
  nameWithType: SuppliersController.GetSupplierByEmail
- uid: MyApp.Purchasing.API.Controllers.SuppliersController.GetSupplierById(System.Guid)
  name: GetSupplierById(Guid)
  href: api/MyApp.Purchasing.API.Controllers.SuppliersController.html#MyApp_Purchasing_API_Controllers_SuppliersController_GetSupplierById_System_Guid_
  commentId: M:MyApp.Purchasing.API.Controllers.SuppliersController.GetSupplierById(System.Guid)
  fullName: MyApp.Purchasing.API.Controllers.SuppliersController.GetSupplierById(System.Guid)
  nameWithType: SuppliersController.GetSupplierById(Guid)
- uid: MyApp.Purchasing.API.Controllers.SuppliersController.GetSupplierById*
  name: GetSupplierById
  href: api/MyApp.Purchasing.API.Controllers.SuppliersController.html#MyApp_Purchasing_API_Controllers_SuppliersController_GetSupplierById_
  commentId: Overload:MyApp.Purchasing.API.Controllers.SuppliersController.GetSupplierById
  isSpec: "True"
  fullName: MyApp.Purchasing.API.Controllers.SuppliersController.GetSupplierById
  nameWithType: SuppliersController.GetSupplierById
- uid: MyApp.Purchasing.API.Controllers.SuppliersController.SearchSuppliersByName(System.String)
  name: SearchSuppliersByName(string)
  href: api/MyApp.Purchasing.API.Controllers.SuppliersController.html#MyApp_Purchasing_API_Controllers_SuppliersController_SearchSuppliersByName_System_String_
  commentId: M:MyApp.Purchasing.API.Controllers.SuppliersController.SearchSuppliersByName(System.String)
  name.vb: SearchSuppliersByName(String)
  fullName: MyApp.Purchasing.API.Controllers.SuppliersController.SearchSuppliersByName(string)
  fullName.vb: MyApp.Purchasing.API.Controllers.SuppliersController.SearchSuppliersByName(String)
  nameWithType: SuppliersController.SearchSuppliersByName(string)
  nameWithType.vb: SuppliersController.SearchSuppliersByName(String)
- uid: MyApp.Purchasing.API.Controllers.SuppliersController.SearchSuppliersByName*
  name: SearchSuppliersByName
  href: api/MyApp.Purchasing.API.Controllers.SuppliersController.html#MyApp_Purchasing_API_Controllers_SuppliersController_SearchSuppliersByName_
  commentId: Overload:MyApp.Purchasing.API.Controllers.SuppliersController.SearchSuppliersByName
  isSpec: "True"
  fullName: MyApp.Purchasing.API.Controllers.SuppliersController.SearchSuppliersByName
  nameWithType: SuppliersController.SearchSuppliersByName
- uid: MyApp.Purchasing.API.Controllers.SuppliersController.UpdateSupplier(System.Guid,MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto)
  name: UpdateSupplier(Guid, CreateUpdateSupplierDto)
  href: api/MyApp.Purchasing.API.Controllers.SuppliersController.html#MyApp_Purchasing_API_Controllers_SuppliersController_UpdateSupplier_System_Guid_MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdateSupplierDto_
  commentId: M:MyApp.Purchasing.API.Controllers.SuppliersController.UpdateSupplier(System.Guid,MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto)
  fullName: MyApp.Purchasing.API.Controllers.SuppliersController.UpdateSupplier(System.Guid, MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto)
  nameWithType: SuppliersController.UpdateSupplier(Guid, CreateUpdateSupplierDto)
- uid: MyApp.Purchasing.API.Controllers.SuppliersController.UpdateSupplier*
  name: UpdateSupplier
  href: api/MyApp.Purchasing.API.Controllers.SuppliersController.html#MyApp_Purchasing_API_Controllers_SuppliersController_UpdateSupplier_
  commentId: Overload:MyApp.Purchasing.API.Controllers.SuppliersController.UpdateSupplier
  isSpec: "True"
  fullName: MyApp.Purchasing.API.Controllers.SuppliersController.UpdateSupplier
  nameWithType: SuppliersController.UpdateSupplier
- uid: MyApp.Purchasing.Application.Contracts.DTOs
  name: MyApp.Purchasing.Application.Contracts.DTOs
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.html
  commentId: N:MyApp.Purchasing.Application.Contracts.DTOs
  fullName: MyApp.Purchasing.Application.Contracts.DTOs
  nameWithType: MyApp.Purchasing.Application.Contracts.DTOs
- uid: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto
  name: CreateUpdatePurchaseOrderDto
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.html
  commentId: T:MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto
  nameWithType: CreateUpdatePurchaseOrderDto
- uid: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.ExpectedDeliveryDate
  name: ExpectedDeliveryDate
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.html#MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdatePurchaseOrderDto_ExpectedDeliveryDate
  commentId: P:MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.ExpectedDeliveryDate
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.ExpectedDeliveryDate
  nameWithType: CreateUpdatePurchaseOrderDto.ExpectedDeliveryDate
- uid: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.ExpectedDeliveryDate*
  name: ExpectedDeliveryDate
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.html#MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdatePurchaseOrderDto_ExpectedDeliveryDate_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.ExpectedDeliveryDate
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.ExpectedDeliveryDate
  nameWithType: CreateUpdatePurchaseOrderDto.ExpectedDeliveryDate
- uid: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.Lines
  name: Lines
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.html#MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdatePurchaseOrderDto_Lines
  commentId: P:MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.Lines
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.Lines
  nameWithType: CreateUpdatePurchaseOrderDto.Lines
- uid: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.Lines*
  name: Lines
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.html#MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdatePurchaseOrderDto_Lines_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.Lines
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.Lines
  nameWithType: CreateUpdatePurchaseOrderDto.Lines
- uid: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.OrderDate
  name: OrderDate
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.html#MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdatePurchaseOrderDto_OrderDate
  commentId: P:MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.OrderDate
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.OrderDate
  nameWithType: CreateUpdatePurchaseOrderDto.OrderDate
- uid: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.OrderDate*
  name: OrderDate
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.html#MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdatePurchaseOrderDto_OrderDate_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.OrderDate
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.OrderDate
  nameWithType: CreateUpdatePurchaseOrderDto.OrderDate
- uid: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.OrderNumber
  name: OrderNumber
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.html#MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdatePurchaseOrderDto_OrderNumber
  commentId: P:MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.OrderNumber
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.OrderNumber
  nameWithType: CreateUpdatePurchaseOrderDto.OrderNumber
- uid: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.OrderNumber*
  name: OrderNumber
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.html#MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdatePurchaseOrderDto_OrderNumber_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.OrderNumber
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.OrderNumber
  nameWithType: CreateUpdatePurchaseOrderDto.OrderNumber
- uid: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.Status
  name: Status
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.html#MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdatePurchaseOrderDto_Status
  commentId: P:MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.Status
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.Status
  nameWithType: CreateUpdatePurchaseOrderDto.Status
- uid: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.Status*
  name: Status
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.html#MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdatePurchaseOrderDto_Status_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.Status
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.Status
  nameWithType: CreateUpdatePurchaseOrderDto.Status
- uid: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.SupplierId
  name: SupplierId
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.html#MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdatePurchaseOrderDto_SupplierId
  commentId: P:MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.SupplierId
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.SupplierId
  nameWithType: CreateUpdatePurchaseOrderDto.SupplierId
- uid: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.SupplierId*
  name: SupplierId
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.html#MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdatePurchaseOrderDto_SupplierId_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.SupplierId
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.SupplierId
  nameWithType: CreateUpdatePurchaseOrderDto.SupplierId
- uid: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.TotalAmount
  name: TotalAmount
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.html#MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdatePurchaseOrderDto_TotalAmount
  commentId: P:MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.TotalAmount
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.TotalAmount
  nameWithType: CreateUpdatePurchaseOrderDto.TotalAmount
- uid: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.TotalAmount*
  name: TotalAmount
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.html#MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdatePurchaseOrderDto_TotalAmount_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.TotalAmount
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto.TotalAmount
  nameWithType: CreateUpdatePurchaseOrderDto.TotalAmount
- uid: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderLineDto
  name: CreateUpdatePurchaseOrderLineDto
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderLineDto.html
  commentId: T:MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderLineDto
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderLineDto
  nameWithType: CreateUpdatePurchaseOrderLineDto
- uid: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderLineDto.ProductId
  name: ProductId
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderLineDto.html#MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdatePurchaseOrderLineDto_ProductId
  commentId: P:MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderLineDto.ProductId
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderLineDto.ProductId
  nameWithType: CreateUpdatePurchaseOrderLineDto.ProductId
- uid: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderLineDto.ProductId*
  name: ProductId
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderLineDto.html#MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdatePurchaseOrderLineDto_ProductId_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderLineDto.ProductId
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderLineDto.ProductId
  nameWithType: CreateUpdatePurchaseOrderLineDto.ProductId
- uid: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderLineDto.Quantity
  name: Quantity
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderLineDto.html#MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdatePurchaseOrderLineDto_Quantity
  commentId: P:MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderLineDto.Quantity
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderLineDto.Quantity
  nameWithType: CreateUpdatePurchaseOrderLineDto.Quantity
- uid: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderLineDto.Quantity*
  name: Quantity
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderLineDto.html#MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdatePurchaseOrderLineDto_Quantity_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderLineDto.Quantity
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderLineDto.Quantity
  nameWithType: CreateUpdatePurchaseOrderLineDto.Quantity
- uid: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderLineDto.UnitPrice
  name: UnitPrice
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderLineDto.html#MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdatePurchaseOrderLineDto_UnitPrice
  commentId: P:MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderLineDto.UnitPrice
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderLineDto.UnitPrice
  nameWithType: CreateUpdatePurchaseOrderLineDto.UnitPrice
- uid: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderLineDto.UnitPrice*
  name: UnitPrice
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderLineDto.html#MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdatePurchaseOrderLineDto_UnitPrice_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderLineDto.UnitPrice
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderLineDto.UnitPrice
  nameWithType: CreateUpdatePurchaseOrderLineDto.UnitPrice
- uid: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto
  name: CreateUpdateSupplierDto
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.html
  commentId: T:MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto
  nameWithType: CreateUpdateSupplierDto
- uid: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.Address
  name: Address
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.html#MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdateSupplierDto_Address
  commentId: P:MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.Address
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.Address
  nameWithType: CreateUpdateSupplierDto.Address
- uid: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.Address*
  name: Address
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.html#MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdateSupplierDto_Address_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.Address
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.Address
  nameWithType: CreateUpdateSupplierDto.Address
- uid: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.ContactName
  name: ContactName
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.html#MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdateSupplierDto_ContactName
  commentId: P:MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.ContactName
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.ContactName
  nameWithType: CreateUpdateSupplierDto.ContactName
- uid: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.ContactName*
  name: ContactName
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.html#MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdateSupplierDto_ContactName_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.ContactName
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.ContactName
  nameWithType: CreateUpdateSupplierDto.ContactName
- uid: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.Email
  name: Email
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.html#MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdateSupplierDto_Email
  commentId: P:MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.Email
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.Email
  nameWithType: CreateUpdateSupplierDto.Email
- uid: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.Email*
  name: Email
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.html#MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdateSupplierDto_Email_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.Email
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.Email
  nameWithType: CreateUpdateSupplierDto.Email
- uid: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.Name
  name: Name
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.html#MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdateSupplierDto_Name
  commentId: P:MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.Name
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.Name
  nameWithType: CreateUpdateSupplierDto.Name
- uid: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.Name*
  name: Name
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.html#MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdateSupplierDto_Name_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.Name
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.Name
  nameWithType: CreateUpdateSupplierDto.Name
- uid: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.PhoneNumber
  name: PhoneNumber
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.html#MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdateSupplierDto_PhoneNumber
  commentId: P:MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.PhoneNumber
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.PhoneNumber
  nameWithType: CreateUpdateSupplierDto.PhoneNumber
- uid: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.PhoneNumber*
  name: PhoneNumber
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.html#MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdateSupplierDto_PhoneNumber_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.PhoneNumber
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto.PhoneNumber
  nameWithType: CreateUpdateSupplierDto.PhoneNumber
- uid: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto
  name: PurchaseOrderDto
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.html
  commentId: T:MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto
  nameWithType: PurchaseOrderDto
- uid: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.ExpectedDeliveryDate
  name: ExpectedDeliveryDate
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.html#MyApp_Purchasing_Application_Contracts_DTOs_PurchaseOrderDto_ExpectedDeliveryDate
  commentId: P:MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.ExpectedDeliveryDate
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.ExpectedDeliveryDate
  nameWithType: PurchaseOrderDto.ExpectedDeliveryDate
- uid: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.ExpectedDeliveryDate*
  name: ExpectedDeliveryDate
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.html#MyApp_Purchasing_Application_Contracts_DTOs_PurchaseOrderDto_ExpectedDeliveryDate_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.ExpectedDeliveryDate
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.ExpectedDeliveryDate
  nameWithType: PurchaseOrderDto.ExpectedDeliveryDate
- uid: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.Id
  name: Id
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.html#MyApp_Purchasing_Application_Contracts_DTOs_PurchaseOrderDto_Id
  commentId: P:MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.Id
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.Id
  nameWithType: PurchaseOrderDto.Id
- uid: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.Id*
  name: Id
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.html#MyApp_Purchasing_Application_Contracts_DTOs_PurchaseOrderDto_Id_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.Id
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.Id
  nameWithType: PurchaseOrderDto.Id
- uid: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.Lines
  name: Lines
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.html#MyApp_Purchasing_Application_Contracts_DTOs_PurchaseOrderDto_Lines
  commentId: P:MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.Lines
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.Lines
  nameWithType: PurchaseOrderDto.Lines
- uid: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.Lines*
  name: Lines
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.html#MyApp_Purchasing_Application_Contracts_DTOs_PurchaseOrderDto_Lines_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.Lines
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.Lines
  nameWithType: PurchaseOrderDto.Lines
- uid: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.OrderDate
  name: OrderDate
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.html#MyApp_Purchasing_Application_Contracts_DTOs_PurchaseOrderDto_OrderDate
  commentId: P:MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.OrderDate
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.OrderDate
  nameWithType: PurchaseOrderDto.OrderDate
- uid: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.OrderDate*
  name: OrderDate
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.html#MyApp_Purchasing_Application_Contracts_DTOs_PurchaseOrderDto_OrderDate_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.OrderDate
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.OrderDate
  nameWithType: PurchaseOrderDto.OrderDate
- uid: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.OrderNumber
  name: OrderNumber
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.html#MyApp_Purchasing_Application_Contracts_DTOs_PurchaseOrderDto_OrderNumber
  commentId: P:MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.OrderNumber
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.OrderNumber
  nameWithType: PurchaseOrderDto.OrderNumber
- uid: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.OrderNumber*
  name: OrderNumber
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.html#MyApp_Purchasing_Application_Contracts_DTOs_PurchaseOrderDto_OrderNumber_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.OrderNumber
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.OrderNumber
  nameWithType: PurchaseOrderDto.OrderNumber
- uid: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.Status
  name: Status
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.html#MyApp_Purchasing_Application_Contracts_DTOs_PurchaseOrderDto_Status
  commentId: P:MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.Status
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.Status
  nameWithType: PurchaseOrderDto.Status
- uid: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.Status*
  name: Status
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.html#MyApp_Purchasing_Application_Contracts_DTOs_PurchaseOrderDto_Status_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.Status
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.Status
  nameWithType: PurchaseOrderDto.Status
- uid: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.Supplier
  name: Supplier
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.html#MyApp_Purchasing_Application_Contracts_DTOs_PurchaseOrderDto_Supplier
  commentId: P:MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.Supplier
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.Supplier
  nameWithType: PurchaseOrderDto.Supplier
- uid: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.Supplier*
  name: Supplier
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.html#MyApp_Purchasing_Application_Contracts_DTOs_PurchaseOrderDto_Supplier_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.Supplier
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.Supplier
  nameWithType: PurchaseOrderDto.Supplier
- uid: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.SupplierId
  name: SupplierId
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.html#MyApp_Purchasing_Application_Contracts_DTOs_PurchaseOrderDto_SupplierId
  commentId: P:MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.SupplierId
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.SupplierId
  nameWithType: PurchaseOrderDto.SupplierId
- uid: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.SupplierId*
  name: SupplierId
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.html#MyApp_Purchasing_Application_Contracts_DTOs_PurchaseOrderDto_SupplierId_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.SupplierId
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.SupplierId
  nameWithType: PurchaseOrderDto.SupplierId
- uid: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.TotalAmount
  name: TotalAmount
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.html#MyApp_Purchasing_Application_Contracts_DTOs_PurchaseOrderDto_TotalAmount
  commentId: P:MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.TotalAmount
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.TotalAmount
  nameWithType: PurchaseOrderDto.TotalAmount
- uid: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.TotalAmount*
  name: TotalAmount
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.html#MyApp_Purchasing_Application_Contracts_DTOs_PurchaseOrderDto_TotalAmount_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.TotalAmount
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderDto.TotalAmount
  nameWithType: PurchaseOrderDto.TotalAmount
- uid: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto
  name: PurchaseOrderLineDto
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.html
  commentId: T:MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto
  nameWithType: PurchaseOrderLineDto
- uid: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.Id
  name: Id
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.html#MyApp_Purchasing_Application_Contracts_DTOs_PurchaseOrderLineDto_Id
  commentId: P:MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.Id
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.Id
  nameWithType: PurchaseOrderLineDto.Id
- uid: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.Id*
  name: Id
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.html#MyApp_Purchasing_Application_Contracts_DTOs_PurchaseOrderLineDto_Id_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.Id
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.Id
  nameWithType: PurchaseOrderLineDto.Id
- uid: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.LineTotal
  name: LineTotal
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.html#MyApp_Purchasing_Application_Contracts_DTOs_PurchaseOrderLineDto_LineTotal
  commentId: P:MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.LineTotal
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.LineTotal
  nameWithType: PurchaseOrderLineDto.LineTotal
- uid: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.LineTotal*
  name: LineTotal
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.html#MyApp_Purchasing_Application_Contracts_DTOs_PurchaseOrderLineDto_LineTotal_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.LineTotal
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.LineTotal
  nameWithType: PurchaseOrderLineDto.LineTotal
- uid: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.ProductId
  name: ProductId
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.html#MyApp_Purchasing_Application_Contracts_DTOs_PurchaseOrderLineDto_ProductId
  commentId: P:MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.ProductId
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.ProductId
  nameWithType: PurchaseOrderLineDto.ProductId
- uid: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.ProductId*
  name: ProductId
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.html#MyApp_Purchasing_Application_Contracts_DTOs_PurchaseOrderLineDto_ProductId_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.ProductId
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.ProductId
  nameWithType: PurchaseOrderLineDto.ProductId
- uid: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.PurchaseOrderId
  name: PurchaseOrderId
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.html#MyApp_Purchasing_Application_Contracts_DTOs_PurchaseOrderLineDto_PurchaseOrderId
  commentId: P:MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.PurchaseOrderId
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.PurchaseOrderId
  nameWithType: PurchaseOrderLineDto.PurchaseOrderId
- uid: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.PurchaseOrderId*
  name: PurchaseOrderId
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.html#MyApp_Purchasing_Application_Contracts_DTOs_PurchaseOrderLineDto_PurchaseOrderId_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.PurchaseOrderId
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.PurchaseOrderId
  nameWithType: PurchaseOrderLineDto.PurchaseOrderId
- uid: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.Quantity
  name: Quantity
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.html#MyApp_Purchasing_Application_Contracts_DTOs_PurchaseOrderLineDto_Quantity
  commentId: P:MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.Quantity
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.Quantity
  nameWithType: PurchaseOrderLineDto.Quantity
- uid: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.Quantity*
  name: Quantity
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.html#MyApp_Purchasing_Application_Contracts_DTOs_PurchaseOrderLineDto_Quantity_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.Quantity
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.Quantity
  nameWithType: PurchaseOrderLineDto.Quantity
- uid: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.UnitPrice
  name: UnitPrice
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.html#MyApp_Purchasing_Application_Contracts_DTOs_PurchaseOrderLineDto_UnitPrice
  commentId: P:MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.UnitPrice
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.UnitPrice
  nameWithType: PurchaseOrderLineDto.UnitPrice
- uid: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.UnitPrice*
  name: UnitPrice
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.html#MyApp_Purchasing_Application_Contracts_DTOs_PurchaseOrderLineDto_UnitPrice_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.UnitPrice
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.PurchaseOrderLineDto.UnitPrice
  nameWithType: PurchaseOrderLineDto.UnitPrice
- uid: MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto
  name: SupplierDto
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.html
  commentId: T:MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto
  nameWithType: SupplierDto
- uid: MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.Address
  name: Address
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.html#MyApp_Purchasing_Application_Contracts_DTOs_SupplierDto_Address
  commentId: P:MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.Address
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.Address
  nameWithType: SupplierDto.Address
- uid: MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.Address*
  name: Address
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.html#MyApp_Purchasing_Application_Contracts_DTOs_SupplierDto_Address_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.Address
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.Address
  nameWithType: SupplierDto.Address
- uid: MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.ContactName
  name: ContactName
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.html#MyApp_Purchasing_Application_Contracts_DTOs_SupplierDto_ContactName
  commentId: P:MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.ContactName
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.ContactName
  nameWithType: SupplierDto.ContactName
- uid: MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.ContactName*
  name: ContactName
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.html#MyApp_Purchasing_Application_Contracts_DTOs_SupplierDto_ContactName_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.ContactName
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.ContactName
  nameWithType: SupplierDto.ContactName
- uid: MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.Email
  name: Email
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.html#MyApp_Purchasing_Application_Contracts_DTOs_SupplierDto_Email
  commentId: P:MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.Email
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.Email
  nameWithType: SupplierDto.Email
- uid: MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.Email*
  name: Email
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.html#MyApp_Purchasing_Application_Contracts_DTOs_SupplierDto_Email_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.Email
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.Email
  nameWithType: SupplierDto.Email
- uid: MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.Id
  name: Id
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.html#MyApp_Purchasing_Application_Contracts_DTOs_SupplierDto_Id
  commentId: P:MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.Id
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.Id
  nameWithType: SupplierDto.Id
- uid: MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.Id*
  name: Id
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.html#MyApp_Purchasing_Application_Contracts_DTOs_SupplierDto_Id_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.Id
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.Id
  nameWithType: SupplierDto.Id
- uid: MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.Name
  name: Name
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.html#MyApp_Purchasing_Application_Contracts_DTOs_SupplierDto_Name
  commentId: P:MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.Name
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.Name
  nameWithType: SupplierDto.Name
- uid: MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.Name*
  name: Name
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.html#MyApp_Purchasing_Application_Contracts_DTOs_SupplierDto_Name_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.Name
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.Name
  nameWithType: SupplierDto.Name
- uid: MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.PhoneNumber
  name: PhoneNumber
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.html#MyApp_Purchasing_Application_Contracts_DTOs_SupplierDto_PhoneNumber
  commentId: P:MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.PhoneNumber
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.PhoneNumber
  nameWithType: SupplierDto.PhoneNumber
- uid: MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.PhoneNumber*
  name: PhoneNumber
  href: api/MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.html#MyApp_Purchasing_Application_Contracts_DTOs_SupplierDto_PhoneNumber_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.PhoneNumber
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.DTOs.SupplierDto.PhoneNumber
  nameWithType: SupplierDto.PhoneNumber
- uid: MyApp.Purchasing.Application.Contracts.Services
  name: MyApp.Purchasing.Application.Contracts.Services
  href: api/MyApp.Purchasing.Application.Contracts.Services.html
  commentId: N:MyApp.Purchasing.Application.Contracts.Services
  fullName: MyApp.Purchasing.Application.Contracts.Services
  nameWithType: MyApp.Purchasing.Application.Contracts.Services
- uid: MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService
  name: IPurchaseOrderService
  href: api/MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.html
  commentId: T:MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService
  fullName: MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService
  nameWithType: IPurchaseOrderService
- uid: MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.CreatePurchaseOrderAsync(MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto)
  name: CreatePurchaseOrderAsync(CreateUpdatePurchaseOrderDto)
  href: api/MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.html#MyApp_Purchasing_Application_Contracts_Services_IPurchaseOrderService_CreatePurchaseOrderAsync_MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdatePurchaseOrderDto_
  commentId: M:MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.CreatePurchaseOrderAsync(MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto)
  fullName: MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.CreatePurchaseOrderAsync(MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto)
  nameWithType: IPurchaseOrderService.CreatePurchaseOrderAsync(CreateUpdatePurchaseOrderDto)
- uid: MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.CreatePurchaseOrderAsync*
  name: CreatePurchaseOrderAsync
  href: api/MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.html#MyApp_Purchasing_Application_Contracts_Services_IPurchaseOrderService_CreatePurchaseOrderAsync_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.CreatePurchaseOrderAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.CreatePurchaseOrderAsync
  nameWithType: IPurchaseOrderService.CreatePurchaseOrderAsync
- uid: MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.DeletePurchaseOrderAsync(System.Guid)
  name: DeletePurchaseOrderAsync(Guid)
  href: api/MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.html#MyApp_Purchasing_Application_Contracts_Services_IPurchaseOrderService_DeletePurchaseOrderAsync_System_Guid_
  commentId: M:MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.DeletePurchaseOrderAsync(System.Guid)
  fullName: MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.DeletePurchaseOrderAsync(System.Guid)
  nameWithType: IPurchaseOrderService.DeletePurchaseOrderAsync(Guid)
- uid: MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.DeletePurchaseOrderAsync*
  name: DeletePurchaseOrderAsync
  href: api/MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.html#MyApp_Purchasing_Application_Contracts_Services_IPurchaseOrderService_DeletePurchaseOrderAsync_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.DeletePurchaseOrderAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.DeletePurchaseOrderAsync
  nameWithType: IPurchaseOrderService.DeletePurchaseOrderAsync
- uid: MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.GetAllPurchaseOrdersAsync
  name: GetAllPurchaseOrdersAsync()
  href: api/MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.html#MyApp_Purchasing_Application_Contracts_Services_IPurchaseOrderService_GetAllPurchaseOrdersAsync
  commentId: M:MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.GetAllPurchaseOrdersAsync
  fullName: MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.GetAllPurchaseOrdersAsync()
  nameWithType: IPurchaseOrderService.GetAllPurchaseOrdersAsync()
- uid: MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.GetAllPurchaseOrdersAsync*
  name: GetAllPurchaseOrdersAsync
  href: api/MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.html#MyApp_Purchasing_Application_Contracts_Services_IPurchaseOrderService_GetAllPurchaseOrdersAsync_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.GetAllPurchaseOrdersAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.GetAllPurchaseOrdersAsync
  nameWithType: IPurchaseOrderService.GetAllPurchaseOrdersAsync
- uid: MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.GetPurchaseOrderByIdAsync(System.Guid)
  name: GetPurchaseOrderByIdAsync(Guid)
  href: api/MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.html#MyApp_Purchasing_Application_Contracts_Services_IPurchaseOrderService_GetPurchaseOrderByIdAsync_System_Guid_
  commentId: M:MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.GetPurchaseOrderByIdAsync(System.Guid)
  fullName: MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.GetPurchaseOrderByIdAsync(System.Guid)
  nameWithType: IPurchaseOrderService.GetPurchaseOrderByIdAsync(Guid)
- uid: MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.GetPurchaseOrderByIdAsync*
  name: GetPurchaseOrderByIdAsync
  href: api/MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.html#MyApp_Purchasing_Application_Contracts_Services_IPurchaseOrderService_GetPurchaseOrderByIdAsync_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.GetPurchaseOrderByIdAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.GetPurchaseOrderByIdAsync
  nameWithType: IPurchaseOrderService.GetPurchaseOrderByIdAsync
- uid: MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.GetPurchaseOrdersByStatusAsync(MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus)
  name: GetPurchaseOrdersByStatusAsync(PurchaseOrderStatus)
  href: api/MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.html#MyApp_Purchasing_Application_Contracts_Services_IPurchaseOrderService_GetPurchaseOrdersByStatusAsync_MyApp_Purchasing_Domain_Entities_PurchaseOrderStatus_
  commentId: M:MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.GetPurchaseOrdersByStatusAsync(MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus)
  fullName: MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.GetPurchaseOrdersByStatusAsync(MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus)
  nameWithType: IPurchaseOrderService.GetPurchaseOrdersByStatusAsync(PurchaseOrderStatus)
- uid: MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.GetPurchaseOrdersByStatusAsync*
  name: GetPurchaseOrdersByStatusAsync
  href: api/MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.html#MyApp_Purchasing_Application_Contracts_Services_IPurchaseOrderService_GetPurchaseOrdersByStatusAsync_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.GetPurchaseOrdersByStatusAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.GetPurchaseOrdersByStatusAsync
  nameWithType: IPurchaseOrderService.GetPurchaseOrdersByStatusAsync
- uid: MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.GetPurchaseOrdersBySupplierAsync(System.Guid)
  name: GetPurchaseOrdersBySupplierAsync(Guid)
  href: api/MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.html#MyApp_Purchasing_Application_Contracts_Services_IPurchaseOrderService_GetPurchaseOrdersBySupplierAsync_System_Guid_
  commentId: M:MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.GetPurchaseOrdersBySupplierAsync(System.Guid)
  fullName: MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.GetPurchaseOrdersBySupplierAsync(System.Guid)
  nameWithType: IPurchaseOrderService.GetPurchaseOrdersBySupplierAsync(Guid)
- uid: MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.GetPurchaseOrdersBySupplierAsync*
  name: GetPurchaseOrdersBySupplierAsync
  href: api/MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.html#MyApp_Purchasing_Application_Contracts_Services_IPurchaseOrderService_GetPurchaseOrdersBySupplierAsync_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.GetPurchaseOrdersBySupplierAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.GetPurchaseOrdersBySupplierAsync
  nameWithType: IPurchaseOrderService.GetPurchaseOrdersBySupplierAsync
- uid: MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.UpdatePurchaseOrderAsync(System.Guid,MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto)
  name: UpdatePurchaseOrderAsync(Guid, CreateUpdatePurchaseOrderDto)
  href: api/MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.html#MyApp_Purchasing_Application_Contracts_Services_IPurchaseOrderService_UpdatePurchaseOrderAsync_System_Guid_MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdatePurchaseOrderDto_
  commentId: M:MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.UpdatePurchaseOrderAsync(System.Guid,MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto)
  fullName: MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.UpdatePurchaseOrderAsync(System.Guid, MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto)
  nameWithType: IPurchaseOrderService.UpdatePurchaseOrderAsync(Guid, CreateUpdatePurchaseOrderDto)
- uid: MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.UpdatePurchaseOrderAsync*
  name: UpdatePurchaseOrderAsync
  href: api/MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.html#MyApp_Purchasing_Application_Contracts_Services_IPurchaseOrderService_UpdatePurchaseOrderAsync_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.UpdatePurchaseOrderAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.UpdatePurchaseOrderAsync
  nameWithType: IPurchaseOrderService.UpdatePurchaseOrderAsync
- uid: MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.UpdatePurchaseOrderStatusAsync(System.Guid,MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus)
  name: UpdatePurchaseOrderStatusAsync(Guid, PurchaseOrderStatus)
  href: api/MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.html#MyApp_Purchasing_Application_Contracts_Services_IPurchaseOrderService_UpdatePurchaseOrderStatusAsync_System_Guid_MyApp_Purchasing_Domain_Entities_PurchaseOrderStatus_
  commentId: M:MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.UpdatePurchaseOrderStatusAsync(System.Guid,MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus)
  fullName: MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.UpdatePurchaseOrderStatusAsync(System.Guid, MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus)
  nameWithType: IPurchaseOrderService.UpdatePurchaseOrderStatusAsync(Guid, PurchaseOrderStatus)
- uid: MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.UpdatePurchaseOrderStatusAsync*
  name: UpdatePurchaseOrderStatusAsync
  href: api/MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.html#MyApp_Purchasing_Application_Contracts_Services_IPurchaseOrderService_UpdatePurchaseOrderStatusAsync_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.UpdatePurchaseOrderStatusAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.Services.IPurchaseOrderService.UpdatePurchaseOrderStatusAsync
  nameWithType: IPurchaseOrderService.UpdatePurchaseOrderStatusAsync
- uid: MyApp.Purchasing.Application.Contracts.Services.ISupplierService
  name: ISupplierService
  href: api/MyApp.Purchasing.Application.Contracts.Services.ISupplierService.html
  commentId: T:MyApp.Purchasing.Application.Contracts.Services.ISupplierService
  fullName: MyApp.Purchasing.Application.Contracts.Services.ISupplierService
  nameWithType: ISupplierService
- uid: MyApp.Purchasing.Application.Contracts.Services.ISupplierService.CreateSupplierAsync(MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto)
  name: CreateSupplierAsync(CreateUpdateSupplierDto)
  href: api/MyApp.Purchasing.Application.Contracts.Services.ISupplierService.html#MyApp_Purchasing_Application_Contracts_Services_ISupplierService_CreateSupplierAsync_MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdateSupplierDto_
  commentId: M:MyApp.Purchasing.Application.Contracts.Services.ISupplierService.CreateSupplierAsync(MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto)
  fullName: MyApp.Purchasing.Application.Contracts.Services.ISupplierService.CreateSupplierAsync(MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto)
  nameWithType: ISupplierService.CreateSupplierAsync(CreateUpdateSupplierDto)
- uid: MyApp.Purchasing.Application.Contracts.Services.ISupplierService.CreateSupplierAsync*
  name: CreateSupplierAsync
  href: api/MyApp.Purchasing.Application.Contracts.Services.ISupplierService.html#MyApp_Purchasing_Application_Contracts_Services_ISupplierService_CreateSupplierAsync_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.Services.ISupplierService.CreateSupplierAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.Services.ISupplierService.CreateSupplierAsync
  nameWithType: ISupplierService.CreateSupplierAsync
- uid: MyApp.Purchasing.Application.Contracts.Services.ISupplierService.DeleteSupplierAsync(System.Guid)
  name: DeleteSupplierAsync(Guid)
  href: api/MyApp.Purchasing.Application.Contracts.Services.ISupplierService.html#MyApp_Purchasing_Application_Contracts_Services_ISupplierService_DeleteSupplierAsync_System_Guid_
  commentId: M:MyApp.Purchasing.Application.Contracts.Services.ISupplierService.DeleteSupplierAsync(System.Guid)
  fullName: MyApp.Purchasing.Application.Contracts.Services.ISupplierService.DeleteSupplierAsync(System.Guid)
  nameWithType: ISupplierService.DeleteSupplierAsync(Guid)
- uid: MyApp.Purchasing.Application.Contracts.Services.ISupplierService.DeleteSupplierAsync*
  name: DeleteSupplierAsync
  href: api/MyApp.Purchasing.Application.Contracts.Services.ISupplierService.html#MyApp_Purchasing_Application_Contracts_Services_ISupplierService_DeleteSupplierAsync_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.Services.ISupplierService.DeleteSupplierAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.Services.ISupplierService.DeleteSupplierAsync
  nameWithType: ISupplierService.DeleteSupplierAsync
- uid: MyApp.Purchasing.Application.Contracts.Services.ISupplierService.GetAllSuppliersAsync
  name: GetAllSuppliersAsync()
  href: api/MyApp.Purchasing.Application.Contracts.Services.ISupplierService.html#MyApp_Purchasing_Application_Contracts_Services_ISupplierService_GetAllSuppliersAsync
  commentId: M:MyApp.Purchasing.Application.Contracts.Services.ISupplierService.GetAllSuppliersAsync
  fullName: MyApp.Purchasing.Application.Contracts.Services.ISupplierService.GetAllSuppliersAsync()
  nameWithType: ISupplierService.GetAllSuppliersAsync()
- uid: MyApp.Purchasing.Application.Contracts.Services.ISupplierService.GetAllSuppliersAsync*
  name: GetAllSuppliersAsync
  href: api/MyApp.Purchasing.Application.Contracts.Services.ISupplierService.html#MyApp_Purchasing_Application_Contracts_Services_ISupplierService_GetAllSuppliersAsync_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.Services.ISupplierService.GetAllSuppliersAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.Services.ISupplierService.GetAllSuppliersAsync
  nameWithType: ISupplierService.GetAllSuppliersAsync
- uid: MyApp.Purchasing.Application.Contracts.Services.ISupplierService.GetSupplierByEmailAsync(System.String)
  name: GetSupplierByEmailAsync(string)
  href: api/MyApp.Purchasing.Application.Contracts.Services.ISupplierService.html#MyApp_Purchasing_Application_Contracts_Services_ISupplierService_GetSupplierByEmailAsync_System_String_
  commentId: M:MyApp.Purchasing.Application.Contracts.Services.ISupplierService.GetSupplierByEmailAsync(System.String)
  name.vb: GetSupplierByEmailAsync(String)
  fullName: MyApp.Purchasing.Application.Contracts.Services.ISupplierService.GetSupplierByEmailAsync(string)
  fullName.vb: MyApp.Purchasing.Application.Contracts.Services.ISupplierService.GetSupplierByEmailAsync(String)
  nameWithType: ISupplierService.GetSupplierByEmailAsync(string)
  nameWithType.vb: ISupplierService.GetSupplierByEmailAsync(String)
- uid: MyApp.Purchasing.Application.Contracts.Services.ISupplierService.GetSupplierByEmailAsync*
  name: GetSupplierByEmailAsync
  href: api/MyApp.Purchasing.Application.Contracts.Services.ISupplierService.html#MyApp_Purchasing_Application_Contracts_Services_ISupplierService_GetSupplierByEmailAsync_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.Services.ISupplierService.GetSupplierByEmailAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.Services.ISupplierService.GetSupplierByEmailAsync
  nameWithType: ISupplierService.GetSupplierByEmailAsync
- uid: MyApp.Purchasing.Application.Contracts.Services.ISupplierService.GetSupplierByIdAsync(System.Guid)
  name: GetSupplierByIdAsync(Guid)
  href: api/MyApp.Purchasing.Application.Contracts.Services.ISupplierService.html#MyApp_Purchasing_Application_Contracts_Services_ISupplierService_GetSupplierByIdAsync_System_Guid_
  commentId: M:MyApp.Purchasing.Application.Contracts.Services.ISupplierService.GetSupplierByIdAsync(System.Guid)
  fullName: MyApp.Purchasing.Application.Contracts.Services.ISupplierService.GetSupplierByIdAsync(System.Guid)
  nameWithType: ISupplierService.GetSupplierByIdAsync(Guid)
- uid: MyApp.Purchasing.Application.Contracts.Services.ISupplierService.GetSupplierByIdAsync*
  name: GetSupplierByIdAsync
  href: api/MyApp.Purchasing.Application.Contracts.Services.ISupplierService.html#MyApp_Purchasing_Application_Contracts_Services_ISupplierService_GetSupplierByIdAsync_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.Services.ISupplierService.GetSupplierByIdAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.Services.ISupplierService.GetSupplierByIdAsync
  nameWithType: ISupplierService.GetSupplierByIdAsync
- uid: MyApp.Purchasing.Application.Contracts.Services.ISupplierService.GetSuppliersByNameAsync(System.String)
  name: GetSuppliersByNameAsync(string)
  href: api/MyApp.Purchasing.Application.Contracts.Services.ISupplierService.html#MyApp_Purchasing_Application_Contracts_Services_ISupplierService_GetSuppliersByNameAsync_System_String_
  commentId: M:MyApp.Purchasing.Application.Contracts.Services.ISupplierService.GetSuppliersByNameAsync(System.String)
  name.vb: GetSuppliersByNameAsync(String)
  fullName: MyApp.Purchasing.Application.Contracts.Services.ISupplierService.GetSuppliersByNameAsync(string)
  fullName.vb: MyApp.Purchasing.Application.Contracts.Services.ISupplierService.GetSuppliersByNameAsync(String)
  nameWithType: ISupplierService.GetSuppliersByNameAsync(string)
  nameWithType.vb: ISupplierService.GetSuppliersByNameAsync(String)
- uid: MyApp.Purchasing.Application.Contracts.Services.ISupplierService.GetSuppliersByNameAsync*
  name: GetSuppliersByNameAsync
  href: api/MyApp.Purchasing.Application.Contracts.Services.ISupplierService.html#MyApp_Purchasing_Application_Contracts_Services_ISupplierService_GetSuppliersByNameAsync_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.Services.ISupplierService.GetSuppliersByNameAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.Services.ISupplierService.GetSuppliersByNameAsync
  nameWithType: ISupplierService.GetSuppliersByNameAsync
- uid: MyApp.Purchasing.Application.Contracts.Services.ISupplierService.UpdateSupplierAsync(System.Guid,MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto)
  name: UpdateSupplierAsync(Guid, CreateUpdateSupplierDto)
  href: api/MyApp.Purchasing.Application.Contracts.Services.ISupplierService.html#MyApp_Purchasing_Application_Contracts_Services_ISupplierService_UpdateSupplierAsync_System_Guid_MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdateSupplierDto_
  commentId: M:MyApp.Purchasing.Application.Contracts.Services.ISupplierService.UpdateSupplierAsync(System.Guid,MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto)
  fullName: MyApp.Purchasing.Application.Contracts.Services.ISupplierService.UpdateSupplierAsync(System.Guid, MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto)
  nameWithType: ISupplierService.UpdateSupplierAsync(Guid, CreateUpdateSupplierDto)
- uid: MyApp.Purchasing.Application.Contracts.Services.ISupplierService.UpdateSupplierAsync*
  name: UpdateSupplierAsync
  href: api/MyApp.Purchasing.Application.Contracts.Services.ISupplierService.html#MyApp_Purchasing_Application_Contracts_Services_ISupplierService_UpdateSupplierAsync_
  commentId: Overload:MyApp.Purchasing.Application.Contracts.Services.ISupplierService.UpdateSupplierAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Contracts.Services.ISupplierService.UpdateSupplierAsync
  nameWithType: ISupplierService.UpdateSupplierAsync
- uid: MyApp.Purchasing.Application.Mappings
  name: MyApp.Purchasing.Application.Mappings
  href: api/MyApp.Purchasing.Application.Mappings.html
  commentId: N:MyApp.Purchasing.Application.Mappings
  fullName: MyApp.Purchasing.Application.Mappings
  nameWithType: MyApp.Purchasing.Application.Mappings
- uid: MyApp.Purchasing.Application.Mappings.PurchasingMappingProfile
  name: PurchasingMappingProfile
  href: api/MyApp.Purchasing.Application.Mappings.PurchasingMappingProfile.html
  commentId: T:MyApp.Purchasing.Application.Mappings.PurchasingMappingProfile
  fullName: MyApp.Purchasing.Application.Mappings.PurchasingMappingProfile
  nameWithType: PurchasingMappingProfile
- uid: MyApp.Purchasing.Application.Mappings.PurchasingMappingProfile.#ctor
  name: PurchasingMappingProfile()
  href: api/MyApp.Purchasing.Application.Mappings.PurchasingMappingProfile.html#MyApp_Purchasing_Application_Mappings_PurchasingMappingProfile__ctor
  commentId: M:MyApp.Purchasing.Application.Mappings.PurchasingMappingProfile.#ctor
  name.vb: New()
  fullName: MyApp.Purchasing.Application.Mappings.PurchasingMappingProfile.PurchasingMappingProfile()
  fullName.vb: MyApp.Purchasing.Application.Mappings.PurchasingMappingProfile.New()
  nameWithType: PurchasingMappingProfile.PurchasingMappingProfile()
  nameWithType.vb: PurchasingMappingProfile.New()
- uid: MyApp.Purchasing.Application.Mappings.PurchasingMappingProfile.#ctor*
  name: PurchasingMappingProfile
  href: api/MyApp.Purchasing.Application.Mappings.PurchasingMappingProfile.html#MyApp_Purchasing_Application_Mappings_PurchasingMappingProfile__ctor_
  commentId: Overload:MyApp.Purchasing.Application.Mappings.PurchasingMappingProfile.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Purchasing.Application.Mappings.PurchasingMappingProfile.PurchasingMappingProfile
  fullName.vb: MyApp.Purchasing.Application.Mappings.PurchasingMappingProfile.New
  nameWithType: PurchasingMappingProfile.PurchasingMappingProfile
  nameWithType.vb: PurchasingMappingProfile.New
- uid: MyApp.Purchasing.Application.Services
  name: MyApp.Purchasing.Application.Services
  href: api/MyApp.Purchasing.Application.Services.html
  commentId: N:MyApp.Purchasing.Application.Services
  fullName: MyApp.Purchasing.Application.Services
  nameWithType: MyApp.Purchasing.Application.Services
- uid: MyApp.Purchasing.Application.Services.PurchaseOrderService
  name: PurchaseOrderService
  href: api/MyApp.Purchasing.Application.Services.PurchaseOrderService.html
  commentId: T:MyApp.Purchasing.Application.Services.PurchaseOrderService
  fullName: MyApp.Purchasing.Application.Services.PurchaseOrderService
  nameWithType: PurchaseOrderService
- uid: MyApp.Purchasing.Application.Services.PurchaseOrderService.#ctor(MyApp.Purchasing.Domain.Repositories.IPurchaseOrderRepository,MyApp.Purchasing.Domain.Repositories.IPurchaseOrderLineRepository,MyApp.Purchasing.Domain.Repositories.ISupplierRepository,AutoMapper.IMapper)
  name: PurchaseOrderService(IPurchaseOrderRepository, IPurchaseOrderLineRepository, ISupplierRepository, IMapper)
  href: api/MyApp.Purchasing.Application.Services.PurchaseOrderService.html#MyApp_Purchasing_Application_Services_PurchaseOrderService__ctor_MyApp_Purchasing_Domain_Repositories_IPurchaseOrderRepository_MyApp_Purchasing_Domain_Repositories_IPurchaseOrderLineRepository_MyApp_Purchasing_Domain_Repositories_ISupplierRepository_AutoMapper_IMapper_
  commentId: M:MyApp.Purchasing.Application.Services.PurchaseOrderService.#ctor(MyApp.Purchasing.Domain.Repositories.IPurchaseOrderRepository,MyApp.Purchasing.Domain.Repositories.IPurchaseOrderLineRepository,MyApp.Purchasing.Domain.Repositories.ISupplierRepository,AutoMapper.IMapper)
  name.vb: New(IPurchaseOrderRepository, IPurchaseOrderLineRepository, ISupplierRepository, IMapper)
  fullName: MyApp.Purchasing.Application.Services.PurchaseOrderService.PurchaseOrderService(MyApp.Purchasing.Domain.Repositories.IPurchaseOrderRepository, MyApp.Purchasing.Domain.Repositories.IPurchaseOrderLineRepository, MyApp.Purchasing.Domain.Repositories.ISupplierRepository, AutoMapper.IMapper)
  fullName.vb: MyApp.Purchasing.Application.Services.PurchaseOrderService.New(MyApp.Purchasing.Domain.Repositories.IPurchaseOrderRepository, MyApp.Purchasing.Domain.Repositories.IPurchaseOrderLineRepository, MyApp.Purchasing.Domain.Repositories.ISupplierRepository, AutoMapper.IMapper)
  nameWithType: PurchaseOrderService.PurchaseOrderService(IPurchaseOrderRepository, IPurchaseOrderLineRepository, ISupplierRepository, IMapper)
  nameWithType.vb: PurchaseOrderService.New(IPurchaseOrderRepository, IPurchaseOrderLineRepository, ISupplierRepository, IMapper)
- uid: MyApp.Purchasing.Application.Services.PurchaseOrderService.#ctor*
  name: PurchaseOrderService
  href: api/MyApp.Purchasing.Application.Services.PurchaseOrderService.html#MyApp_Purchasing_Application_Services_PurchaseOrderService__ctor_
  commentId: Overload:MyApp.Purchasing.Application.Services.PurchaseOrderService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Purchasing.Application.Services.PurchaseOrderService.PurchaseOrderService
  fullName.vb: MyApp.Purchasing.Application.Services.PurchaseOrderService.New
  nameWithType: PurchaseOrderService.PurchaseOrderService
  nameWithType.vb: PurchaseOrderService.New
- uid: MyApp.Purchasing.Application.Services.PurchaseOrderService.CreatePurchaseOrderAsync(MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto)
  name: CreatePurchaseOrderAsync(CreateUpdatePurchaseOrderDto)
  href: api/MyApp.Purchasing.Application.Services.PurchaseOrderService.html#MyApp_Purchasing_Application_Services_PurchaseOrderService_CreatePurchaseOrderAsync_MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdatePurchaseOrderDto_
  commentId: M:MyApp.Purchasing.Application.Services.PurchaseOrderService.CreatePurchaseOrderAsync(MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto)
  fullName: MyApp.Purchasing.Application.Services.PurchaseOrderService.CreatePurchaseOrderAsync(MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto)
  nameWithType: PurchaseOrderService.CreatePurchaseOrderAsync(CreateUpdatePurchaseOrderDto)
- uid: MyApp.Purchasing.Application.Services.PurchaseOrderService.CreatePurchaseOrderAsync*
  name: CreatePurchaseOrderAsync
  href: api/MyApp.Purchasing.Application.Services.PurchaseOrderService.html#MyApp_Purchasing_Application_Services_PurchaseOrderService_CreatePurchaseOrderAsync_
  commentId: Overload:MyApp.Purchasing.Application.Services.PurchaseOrderService.CreatePurchaseOrderAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Services.PurchaseOrderService.CreatePurchaseOrderAsync
  nameWithType: PurchaseOrderService.CreatePurchaseOrderAsync
- uid: MyApp.Purchasing.Application.Services.PurchaseOrderService.DeletePurchaseOrderAsync(System.Guid)
  name: DeletePurchaseOrderAsync(Guid)
  href: api/MyApp.Purchasing.Application.Services.PurchaseOrderService.html#MyApp_Purchasing_Application_Services_PurchaseOrderService_DeletePurchaseOrderAsync_System_Guid_
  commentId: M:MyApp.Purchasing.Application.Services.PurchaseOrderService.DeletePurchaseOrderAsync(System.Guid)
  fullName: MyApp.Purchasing.Application.Services.PurchaseOrderService.DeletePurchaseOrderAsync(System.Guid)
  nameWithType: PurchaseOrderService.DeletePurchaseOrderAsync(Guid)
- uid: MyApp.Purchasing.Application.Services.PurchaseOrderService.DeletePurchaseOrderAsync*
  name: DeletePurchaseOrderAsync
  href: api/MyApp.Purchasing.Application.Services.PurchaseOrderService.html#MyApp_Purchasing_Application_Services_PurchaseOrderService_DeletePurchaseOrderAsync_
  commentId: Overload:MyApp.Purchasing.Application.Services.PurchaseOrderService.DeletePurchaseOrderAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Services.PurchaseOrderService.DeletePurchaseOrderAsync
  nameWithType: PurchaseOrderService.DeletePurchaseOrderAsync
- uid: MyApp.Purchasing.Application.Services.PurchaseOrderService.GetAllPurchaseOrdersAsync
  name: GetAllPurchaseOrdersAsync()
  href: api/MyApp.Purchasing.Application.Services.PurchaseOrderService.html#MyApp_Purchasing_Application_Services_PurchaseOrderService_GetAllPurchaseOrdersAsync
  commentId: M:MyApp.Purchasing.Application.Services.PurchaseOrderService.GetAllPurchaseOrdersAsync
  fullName: MyApp.Purchasing.Application.Services.PurchaseOrderService.GetAllPurchaseOrdersAsync()
  nameWithType: PurchaseOrderService.GetAllPurchaseOrdersAsync()
- uid: MyApp.Purchasing.Application.Services.PurchaseOrderService.GetAllPurchaseOrdersAsync*
  name: GetAllPurchaseOrdersAsync
  href: api/MyApp.Purchasing.Application.Services.PurchaseOrderService.html#MyApp_Purchasing_Application_Services_PurchaseOrderService_GetAllPurchaseOrdersAsync_
  commentId: Overload:MyApp.Purchasing.Application.Services.PurchaseOrderService.GetAllPurchaseOrdersAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Services.PurchaseOrderService.GetAllPurchaseOrdersAsync
  nameWithType: PurchaseOrderService.GetAllPurchaseOrdersAsync
- uid: MyApp.Purchasing.Application.Services.PurchaseOrderService.GetPurchaseOrderByIdAsync(System.Guid)
  name: GetPurchaseOrderByIdAsync(Guid)
  href: api/MyApp.Purchasing.Application.Services.PurchaseOrderService.html#MyApp_Purchasing_Application_Services_PurchaseOrderService_GetPurchaseOrderByIdAsync_System_Guid_
  commentId: M:MyApp.Purchasing.Application.Services.PurchaseOrderService.GetPurchaseOrderByIdAsync(System.Guid)
  fullName: MyApp.Purchasing.Application.Services.PurchaseOrderService.GetPurchaseOrderByIdAsync(System.Guid)
  nameWithType: PurchaseOrderService.GetPurchaseOrderByIdAsync(Guid)
- uid: MyApp.Purchasing.Application.Services.PurchaseOrderService.GetPurchaseOrderByIdAsync*
  name: GetPurchaseOrderByIdAsync
  href: api/MyApp.Purchasing.Application.Services.PurchaseOrderService.html#MyApp_Purchasing_Application_Services_PurchaseOrderService_GetPurchaseOrderByIdAsync_
  commentId: Overload:MyApp.Purchasing.Application.Services.PurchaseOrderService.GetPurchaseOrderByIdAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Services.PurchaseOrderService.GetPurchaseOrderByIdAsync
  nameWithType: PurchaseOrderService.GetPurchaseOrderByIdAsync
- uid: MyApp.Purchasing.Application.Services.PurchaseOrderService.GetPurchaseOrdersByStatusAsync(MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus)
  name: GetPurchaseOrdersByStatusAsync(PurchaseOrderStatus)
  href: api/MyApp.Purchasing.Application.Services.PurchaseOrderService.html#MyApp_Purchasing_Application_Services_PurchaseOrderService_GetPurchaseOrdersByStatusAsync_MyApp_Purchasing_Domain_Entities_PurchaseOrderStatus_
  commentId: M:MyApp.Purchasing.Application.Services.PurchaseOrderService.GetPurchaseOrdersByStatusAsync(MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus)
  fullName: MyApp.Purchasing.Application.Services.PurchaseOrderService.GetPurchaseOrdersByStatusAsync(MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus)
  nameWithType: PurchaseOrderService.GetPurchaseOrdersByStatusAsync(PurchaseOrderStatus)
- uid: MyApp.Purchasing.Application.Services.PurchaseOrderService.GetPurchaseOrdersByStatusAsync*
  name: GetPurchaseOrdersByStatusAsync
  href: api/MyApp.Purchasing.Application.Services.PurchaseOrderService.html#MyApp_Purchasing_Application_Services_PurchaseOrderService_GetPurchaseOrdersByStatusAsync_
  commentId: Overload:MyApp.Purchasing.Application.Services.PurchaseOrderService.GetPurchaseOrdersByStatusAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Services.PurchaseOrderService.GetPurchaseOrdersByStatusAsync
  nameWithType: PurchaseOrderService.GetPurchaseOrdersByStatusAsync
- uid: MyApp.Purchasing.Application.Services.PurchaseOrderService.GetPurchaseOrdersBySupplierAsync(System.Guid)
  name: GetPurchaseOrdersBySupplierAsync(Guid)
  href: api/MyApp.Purchasing.Application.Services.PurchaseOrderService.html#MyApp_Purchasing_Application_Services_PurchaseOrderService_GetPurchaseOrdersBySupplierAsync_System_Guid_
  commentId: M:MyApp.Purchasing.Application.Services.PurchaseOrderService.GetPurchaseOrdersBySupplierAsync(System.Guid)
  fullName: MyApp.Purchasing.Application.Services.PurchaseOrderService.GetPurchaseOrdersBySupplierAsync(System.Guid)
  nameWithType: PurchaseOrderService.GetPurchaseOrdersBySupplierAsync(Guid)
- uid: MyApp.Purchasing.Application.Services.PurchaseOrderService.GetPurchaseOrdersBySupplierAsync*
  name: GetPurchaseOrdersBySupplierAsync
  href: api/MyApp.Purchasing.Application.Services.PurchaseOrderService.html#MyApp_Purchasing_Application_Services_PurchaseOrderService_GetPurchaseOrdersBySupplierAsync_
  commentId: Overload:MyApp.Purchasing.Application.Services.PurchaseOrderService.GetPurchaseOrdersBySupplierAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Services.PurchaseOrderService.GetPurchaseOrdersBySupplierAsync
  nameWithType: PurchaseOrderService.GetPurchaseOrdersBySupplierAsync
- uid: MyApp.Purchasing.Application.Services.PurchaseOrderService.UpdatePurchaseOrderAsync(System.Guid,MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto)
  name: UpdatePurchaseOrderAsync(Guid, CreateUpdatePurchaseOrderDto)
  href: api/MyApp.Purchasing.Application.Services.PurchaseOrderService.html#MyApp_Purchasing_Application_Services_PurchaseOrderService_UpdatePurchaseOrderAsync_System_Guid_MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdatePurchaseOrderDto_
  commentId: M:MyApp.Purchasing.Application.Services.PurchaseOrderService.UpdatePurchaseOrderAsync(System.Guid,MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto)
  fullName: MyApp.Purchasing.Application.Services.PurchaseOrderService.UpdatePurchaseOrderAsync(System.Guid, MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdatePurchaseOrderDto)
  nameWithType: PurchaseOrderService.UpdatePurchaseOrderAsync(Guid, CreateUpdatePurchaseOrderDto)
- uid: MyApp.Purchasing.Application.Services.PurchaseOrderService.UpdatePurchaseOrderAsync*
  name: UpdatePurchaseOrderAsync
  href: api/MyApp.Purchasing.Application.Services.PurchaseOrderService.html#MyApp_Purchasing_Application_Services_PurchaseOrderService_UpdatePurchaseOrderAsync_
  commentId: Overload:MyApp.Purchasing.Application.Services.PurchaseOrderService.UpdatePurchaseOrderAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Services.PurchaseOrderService.UpdatePurchaseOrderAsync
  nameWithType: PurchaseOrderService.UpdatePurchaseOrderAsync
- uid: MyApp.Purchasing.Application.Services.PurchaseOrderService.UpdatePurchaseOrderStatusAsync(System.Guid,MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus)
  name: UpdatePurchaseOrderStatusAsync(Guid, PurchaseOrderStatus)
  href: api/MyApp.Purchasing.Application.Services.PurchaseOrderService.html#MyApp_Purchasing_Application_Services_PurchaseOrderService_UpdatePurchaseOrderStatusAsync_System_Guid_MyApp_Purchasing_Domain_Entities_PurchaseOrderStatus_
  commentId: M:MyApp.Purchasing.Application.Services.PurchaseOrderService.UpdatePurchaseOrderStatusAsync(System.Guid,MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus)
  fullName: MyApp.Purchasing.Application.Services.PurchaseOrderService.UpdatePurchaseOrderStatusAsync(System.Guid, MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus)
  nameWithType: PurchaseOrderService.UpdatePurchaseOrderStatusAsync(Guid, PurchaseOrderStatus)
- uid: MyApp.Purchasing.Application.Services.PurchaseOrderService.UpdatePurchaseOrderStatusAsync*
  name: UpdatePurchaseOrderStatusAsync
  href: api/MyApp.Purchasing.Application.Services.PurchaseOrderService.html#MyApp_Purchasing_Application_Services_PurchaseOrderService_UpdatePurchaseOrderStatusAsync_
  commentId: Overload:MyApp.Purchasing.Application.Services.PurchaseOrderService.UpdatePurchaseOrderStatusAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Services.PurchaseOrderService.UpdatePurchaseOrderStatusAsync
  nameWithType: PurchaseOrderService.UpdatePurchaseOrderStatusAsync
- uid: MyApp.Purchasing.Application.Services.SupplierService
  name: SupplierService
  href: api/MyApp.Purchasing.Application.Services.SupplierService.html
  commentId: T:MyApp.Purchasing.Application.Services.SupplierService
  fullName: MyApp.Purchasing.Application.Services.SupplierService
  nameWithType: SupplierService
- uid: MyApp.Purchasing.Application.Services.SupplierService.#ctor(MyApp.Purchasing.Domain.Repositories.ISupplierRepository,AutoMapper.IMapper)
  name: SupplierService(ISupplierRepository, IMapper)
  href: api/MyApp.Purchasing.Application.Services.SupplierService.html#MyApp_Purchasing_Application_Services_SupplierService__ctor_MyApp_Purchasing_Domain_Repositories_ISupplierRepository_AutoMapper_IMapper_
  commentId: M:MyApp.Purchasing.Application.Services.SupplierService.#ctor(MyApp.Purchasing.Domain.Repositories.ISupplierRepository,AutoMapper.IMapper)
  name.vb: New(ISupplierRepository, IMapper)
  fullName: MyApp.Purchasing.Application.Services.SupplierService.SupplierService(MyApp.Purchasing.Domain.Repositories.ISupplierRepository, AutoMapper.IMapper)
  fullName.vb: MyApp.Purchasing.Application.Services.SupplierService.New(MyApp.Purchasing.Domain.Repositories.ISupplierRepository, AutoMapper.IMapper)
  nameWithType: SupplierService.SupplierService(ISupplierRepository, IMapper)
  nameWithType.vb: SupplierService.New(ISupplierRepository, IMapper)
- uid: MyApp.Purchasing.Application.Services.SupplierService.#ctor*
  name: SupplierService
  href: api/MyApp.Purchasing.Application.Services.SupplierService.html#MyApp_Purchasing_Application_Services_SupplierService__ctor_
  commentId: Overload:MyApp.Purchasing.Application.Services.SupplierService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Purchasing.Application.Services.SupplierService.SupplierService
  fullName.vb: MyApp.Purchasing.Application.Services.SupplierService.New
  nameWithType: SupplierService.SupplierService
  nameWithType.vb: SupplierService.New
- uid: MyApp.Purchasing.Application.Services.SupplierService.CreateSupplierAsync(MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto)
  name: CreateSupplierAsync(CreateUpdateSupplierDto)
  href: api/MyApp.Purchasing.Application.Services.SupplierService.html#MyApp_Purchasing_Application_Services_SupplierService_CreateSupplierAsync_MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdateSupplierDto_
  commentId: M:MyApp.Purchasing.Application.Services.SupplierService.CreateSupplierAsync(MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto)
  fullName: MyApp.Purchasing.Application.Services.SupplierService.CreateSupplierAsync(MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto)
  nameWithType: SupplierService.CreateSupplierAsync(CreateUpdateSupplierDto)
- uid: MyApp.Purchasing.Application.Services.SupplierService.CreateSupplierAsync*
  name: CreateSupplierAsync
  href: api/MyApp.Purchasing.Application.Services.SupplierService.html#MyApp_Purchasing_Application_Services_SupplierService_CreateSupplierAsync_
  commentId: Overload:MyApp.Purchasing.Application.Services.SupplierService.CreateSupplierAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Services.SupplierService.CreateSupplierAsync
  nameWithType: SupplierService.CreateSupplierAsync
- uid: MyApp.Purchasing.Application.Services.SupplierService.DeleteSupplierAsync(System.Guid)
  name: DeleteSupplierAsync(Guid)
  href: api/MyApp.Purchasing.Application.Services.SupplierService.html#MyApp_Purchasing_Application_Services_SupplierService_DeleteSupplierAsync_System_Guid_
  commentId: M:MyApp.Purchasing.Application.Services.SupplierService.DeleteSupplierAsync(System.Guid)
  fullName: MyApp.Purchasing.Application.Services.SupplierService.DeleteSupplierAsync(System.Guid)
  nameWithType: SupplierService.DeleteSupplierAsync(Guid)
- uid: MyApp.Purchasing.Application.Services.SupplierService.DeleteSupplierAsync*
  name: DeleteSupplierAsync
  href: api/MyApp.Purchasing.Application.Services.SupplierService.html#MyApp_Purchasing_Application_Services_SupplierService_DeleteSupplierAsync_
  commentId: Overload:MyApp.Purchasing.Application.Services.SupplierService.DeleteSupplierAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Services.SupplierService.DeleteSupplierAsync
  nameWithType: SupplierService.DeleteSupplierAsync
- uid: MyApp.Purchasing.Application.Services.SupplierService.GetAllSuppliersAsync
  name: GetAllSuppliersAsync()
  href: api/MyApp.Purchasing.Application.Services.SupplierService.html#MyApp_Purchasing_Application_Services_SupplierService_GetAllSuppliersAsync
  commentId: M:MyApp.Purchasing.Application.Services.SupplierService.GetAllSuppliersAsync
  fullName: MyApp.Purchasing.Application.Services.SupplierService.GetAllSuppliersAsync()
  nameWithType: SupplierService.GetAllSuppliersAsync()
- uid: MyApp.Purchasing.Application.Services.SupplierService.GetAllSuppliersAsync*
  name: GetAllSuppliersAsync
  href: api/MyApp.Purchasing.Application.Services.SupplierService.html#MyApp_Purchasing_Application_Services_SupplierService_GetAllSuppliersAsync_
  commentId: Overload:MyApp.Purchasing.Application.Services.SupplierService.GetAllSuppliersAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Services.SupplierService.GetAllSuppliersAsync
  nameWithType: SupplierService.GetAllSuppliersAsync
- uid: MyApp.Purchasing.Application.Services.SupplierService.GetSupplierByEmailAsync(System.String)
  name: GetSupplierByEmailAsync(string)
  href: api/MyApp.Purchasing.Application.Services.SupplierService.html#MyApp_Purchasing_Application_Services_SupplierService_GetSupplierByEmailAsync_System_String_
  commentId: M:MyApp.Purchasing.Application.Services.SupplierService.GetSupplierByEmailAsync(System.String)
  name.vb: GetSupplierByEmailAsync(String)
  fullName: MyApp.Purchasing.Application.Services.SupplierService.GetSupplierByEmailAsync(string)
  fullName.vb: MyApp.Purchasing.Application.Services.SupplierService.GetSupplierByEmailAsync(String)
  nameWithType: SupplierService.GetSupplierByEmailAsync(string)
  nameWithType.vb: SupplierService.GetSupplierByEmailAsync(String)
- uid: MyApp.Purchasing.Application.Services.SupplierService.GetSupplierByEmailAsync*
  name: GetSupplierByEmailAsync
  href: api/MyApp.Purchasing.Application.Services.SupplierService.html#MyApp_Purchasing_Application_Services_SupplierService_GetSupplierByEmailAsync_
  commentId: Overload:MyApp.Purchasing.Application.Services.SupplierService.GetSupplierByEmailAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Services.SupplierService.GetSupplierByEmailAsync
  nameWithType: SupplierService.GetSupplierByEmailAsync
- uid: MyApp.Purchasing.Application.Services.SupplierService.GetSupplierByIdAsync(System.Guid)
  name: GetSupplierByIdAsync(Guid)
  href: api/MyApp.Purchasing.Application.Services.SupplierService.html#MyApp_Purchasing_Application_Services_SupplierService_GetSupplierByIdAsync_System_Guid_
  commentId: M:MyApp.Purchasing.Application.Services.SupplierService.GetSupplierByIdAsync(System.Guid)
  fullName: MyApp.Purchasing.Application.Services.SupplierService.GetSupplierByIdAsync(System.Guid)
  nameWithType: SupplierService.GetSupplierByIdAsync(Guid)
- uid: MyApp.Purchasing.Application.Services.SupplierService.GetSupplierByIdAsync*
  name: GetSupplierByIdAsync
  href: api/MyApp.Purchasing.Application.Services.SupplierService.html#MyApp_Purchasing_Application_Services_SupplierService_GetSupplierByIdAsync_
  commentId: Overload:MyApp.Purchasing.Application.Services.SupplierService.GetSupplierByIdAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Services.SupplierService.GetSupplierByIdAsync
  nameWithType: SupplierService.GetSupplierByIdAsync
- uid: MyApp.Purchasing.Application.Services.SupplierService.GetSuppliersByNameAsync(System.String)
  name: GetSuppliersByNameAsync(string)
  href: api/MyApp.Purchasing.Application.Services.SupplierService.html#MyApp_Purchasing_Application_Services_SupplierService_GetSuppliersByNameAsync_System_String_
  commentId: M:MyApp.Purchasing.Application.Services.SupplierService.GetSuppliersByNameAsync(System.String)
  name.vb: GetSuppliersByNameAsync(String)
  fullName: MyApp.Purchasing.Application.Services.SupplierService.GetSuppliersByNameAsync(string)
  fullName.vb: MyApp.Purchasing.Application.Services.SupplierService.GetSuppliersByNameAsync(String)
  nameWithType: SupplierService.GetSuppliersByNameAsync(string)
  nameWithType.vb: SupplierService.GetSuppliersByNameAsync(String)
- uid: MyApp.Purchasing.Application.Services.SupplierService.GetSuppliersByNameAsync*
  name: GetSuppliersByNameAsync
  href: api/MyApp.Purchasing.Application.Services.SupplierService.html#MyApp_Purchasing_Application_Services_SupplierService_GetSuppliersByNameAsync_
  commentId: Overload:MyApp.Purchasing.Application.Services.SupplierService.GetSuppliersByNameAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Services.SupplierService.GetSuppliersByNameAsync
  nameWithType: SupplierService.GetSuppliersByNameAsync
- uid: MyApp.Purchasing.Application.Services.SupplierService.UpdateSupplierAsync(System.Guid,MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto)
  name: UpdateSupplierAsync(Guid, CreateUpdateSupplierDto)
  href: api/MyApp.Purchasing.Application.Services.SupplierService.html#MyApp_Purchasing_Application_Services_SupplierService_UpdateSupplierAsync_System_Guid_MyApp_Purchasing_Application_Contracts_DTOs_CreateUpdateSupplierDto_
  commentId: M:MyApp.Purchasing.Application.Services.SupplierService.UpdateSupplierAsync(System.Guid,MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto)
  fullName: MyApp.Purchasing.Application.Services.SupplierService.UpdateSupplierAsync(System.Guid, MyApp.Purchasing.Application.Contracts.DTOs.CreateUpdateSupplierDto)
  nameWithType: SupplierService.UpdateSupplierAsync(Guid, CreateUpdateSupplierDto)
- uid: MyApp.Purchasing.Application.Services.SupplierService.UpdateSupplierAsync*
  name: UpdateSupplierAsync
  href: api/MyApp.Purchasing.Application.Services.SupplierService.html#MyApp_Purchasing_Application_Services_SupplierService_UpdateSupplierAsync_
  commentId: Overload:MyApp.Purchasing.Application.Services.SupplierService.UpdateSupplierAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Services.SupplierService.UpdateSupplierAsync
  nameWithType: SupplierService.UpdateSupplierAsync
- uid: MyApp.Purchasing.Application.Tests.Services
  name: MyApp.Purchasing.Application.Tests.Services
  href: api/MyApp.Purchasing.Application.Tests.Services.html
  commentId: N:MyApp.Purchasing.Application.Tests.Services
  fullName: MyApp.Purchasing.Application.Tests.Services
  nameWithType: MyApp.Purchasing.Application.Tests.Services
- uid: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests
  name: PurchaseOrderServiceTests
  href: api/MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.html
  commentId: T:MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests
  fullName: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests
  nameWithType: PurchaseOrderServiceTests
- uid: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.#ctor
  name: PurchaseOrderServiceTests()
  href: api/MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.html#MyApp_Purchasing_Application_Tests_Services_PurchaseOrderServiceTests__ctor
  commentId: M:MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.#ctor
  name.vb: New()
  fullName: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.PurchaseOrderServiceTests()
  fullName.vb: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.New()
  nameWithType: PurchaseOrderServiceTests.PurchaseOrderServiceTests()
  nameWithType.vb: PurchaseOrderServiceTests.New()
- uid: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.#ctor*
  name: PurchaseOrderServiceTests
  href: api/MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.html#MyApp_Purchasing_Application_Tests_Services_PurchaseOrderServiceTests__ctor_
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.PurchaseOrderServiceTests
  fullName.vb: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.New
  nameWithType: PurchaseOrderServiceTests.PurchaseOrderServiceTests
  nameWithType.vb: PurchaseOrderServiceTests.New
- uid: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.CreatePurchaseOrderAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
  name: CreatePurchaseOrderAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException()
  href: api/MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.html#MyApp_Purchasing_Application_Tests_Services_PurchaseOrderServiceTests_CreatePurchaseOrderAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
  commentId: M:MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.CreatePurchaseOrderAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
  fullName: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.CreatePurchaseOrderAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException()
  nameWithType: PurchaseOrderServiceTests.CreatePurchaseOrderAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException()
- uid: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.CreatePurchaseOrderAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException*
  name: CreatePurchaseOrderAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
  href: api/MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.html#MyApp_Purchasing_Application_Tests_Services_PurchaseOrderServiceTests_CreatePurchaseOrderAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException_
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.CreatePurchaseOrderAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.CreatePurchaseOrderAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
  nameWithType: PurchaseOrderServiceTests.CreatePurchaseOrderAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
- uid: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.CreatePurchaseOrderAsync_WithValidSupplier_CreatesOrder
  name: CreatePurchaseOrderAsync_WithValidSupplier_CreatesOrder()
  href: api/MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.html#MyApp_Purchasing_Application_Tests_Services_PurchaseOrderServiceTests_CreatePurchaseOrderAsync_WithValidSupplier_CreatesOrder
  commentId: M:MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.CreatePurchaseOrderAsync_WithValidSupplier_CreatesOrder
  fullName: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.CreatePurchaseOrderAsync_WithValidSupplier_CreatesOrder()
  nameWithType: PurchaseOrderServiceTests.CreatePurchaseOrderAsync_WithValidSupplier_CreatesOrder()
- uid: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.CreatePurchaseOrderAsync_WithValidSupplier_CreatesOrder*
  name: CreatePurchaseOrderAsync_WithValidSupplier_CreatesOrder
  href: api/MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.html#MyApp_Purchasing_Application_Tests_Services_PurchaseOrderServiceTests_CreatePurchaseOrderAsync_WithValidSupplier_CreatesOrder_
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.CreatePurchaseOrderAsync_WithValidSupplier_CreatesOrder
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.CreatePurchaseOrderAsync_WithValidSupplier_CreatesOrder
  nameWithType: PurchaseOrderServiceTests.CreatePurchaseOrderAsync_WithValidSupplier_CreatesOrder
- uid: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.DeletePurchaseOrderAsync_WithExistingOrder_DeletesOrder
  name: DeletePurchaseOrderAsync_WithExistingOrder_DeletesOrder()
  href: api/MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.html#MyApp_Purchasing_Application_Tests_Services_PurchaseOrderServiceTests_DeletePurchaseOrderAsync_WithExistingOrder_DeletesOrder
  commentId: M:MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.DeletePurchaseOrderAsync_WithExistingOrder_DeletesOrder
  fullName: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.DeletePurchaseOrderAsync_WithExistingOrder_DeletesOrder()
  nameWithType: PurchaseOrderServiceTests.DeletePurchaseOrderAsync_WithExistingOrder_DeletesOrder()
- uid: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.DeletePurchaseOrderAsync_WithExistingOrder_DeletesOrder*
  name: DeletePurchaseOrderAsync_WithExistingOrder_DeletesOrder
  href: api/MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.html#MyApp_Purchasing_Application_Tests_Services_PurchaseOrderServiceTests_DeletePurchaseOrderAsync_WithExistingOrder_DeletesOrder_
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.DeletePurchaseOrderAsync_WithExistingOrder_DeletesOrder
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.DeletePurchaseOrderAsync_WithExistingOrder_DeletesOrder
  nameWithType: PurchaseOrderServiceTests.DeletePurchaseOrderAsync_WithExistingOrder_DeletesOrder
- uid: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.DeletePurchaseOrderAsync_WithNonExistentOrder_ThrowsKeyNotFoundException
  name: DeletePurchaseOrderAsync_WithNonExistentOrder_ThrowsKeyNotFoundException()
  href: api/MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.html#MyApp_Purchasing_Application_Tests_Services_PurchaseOrderServiceTests_DeletePurchaseOrderAsync_WithNonExistentOrder_ThrowsKeyNotFoundException
  commentId: M:MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.DeletePurchaseOrderAsync_WithNonExistentOrder_ThrowsKeyNotFoundException
  fullName: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.DeletePurchaseOrderAsync_WithNonExistentOrder_ThrowsKeyNotFoundException()
  nameWithType: PurchaseOrderServiceTests.DeletePurchaseOrderAsync_WithNonExistentOrder_ThrowsKeyNotFoundException()
- uid: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.DeletePurchaseOrderAsync_WithNonExistentOrder_ThrowsKeyNotFoundException*
  name: DeletePurchaseOrderAsync_WithNonExistentOrder_ThrowsKeyNotFoundException
  href: api/MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.html#MyApp_Purchasing_Application_Tests_Services_PurchaseOrderServiceTests_DeletePurchaseOrderAsync_WithNonExistentOrder_ThrowsKeyNotFoundException_
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.DeletePurchaseOrderAsync_WithNonExistentOrder_ThrowsKeyNotFoundException
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.DeletePurchaseOrderAsync_WithNonExistentOrder_ThrowsKeyNotFoundException
  nameWithType: PurchaseOrderServiceTests.DeletePurchaseOrderAsync_WithNonExistentOrder_ThrowsKeyNotFoundException
- uid: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.GetAllPurchaseOrdersAsync_ReturnsAllOrders
  name: GetAllPurchaseOrdersAsync_ReturnsAllOrders()
  href: api/MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.html#MyApp_Purchasing_Application_Tests_Services_PurchaseOrderServiceTests_GetAllPurchaseOrdersAsync_ReturnsAllOrders
  commentId: M:MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.GetAllPurchaseOrdersAsync_ReturnsAllOrders
  fullName: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.GetAllPurchaseOrdersAsync_ReturnsAllOrders()
  nameWithType: PurchaseOrderServiceTests.GetAllPurchaseOrdersAsync_ReturnsAllOrders()
- uid: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.GetAllPurchaseOrdersAsync_ReturnsAllOrders*
  name: GetAllPurchaseOrdersAsync_ReturnsAllOrders
  href: api/MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.html#MyApp_Purchasing_Application_Tests_Services_PurchaseOrderServiceTests_GetAllPurchaseOrdersAsync_ReturnsAllOrders_
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.GetAllPurchaseOrdersAsync_ReturnsAllOrders
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.GetAllPurchaseOrdersAsync_ReturnsAllOrders
  nameWithType: PurchaseOrderServiceTests.GetAllPurchaseOrdersAsync_ReturnsAllOrders
- uid: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.GetPurchaseOrderByIdAsync_WithExistingId_ReturnsOrderDto
  name: GetPurchaseOrderByIdAsync_WithExistingId_ReturnsOrderDto()
  href: api/MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.html#MyApp_Purchasing_Application_Tests_Services_PurchaseOrderServiceTests_GetPurchaseOrderByIdAsync_WithExistingId_ReturnsOrderDto
  commentId: M:MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.GetPurchaseOrderByIdAsync_WithExistingId_ReturnsOrderDto
  fullName: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.GetPurchaseOrderByIdAsync_WithExistingId_ReturnsOrderDto()
  nameWithType: PurchaseOrderServiceTests.GetPurchaseOrderByIdAsync_WithExistingId_ReturnsOrderDto()
- uid: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.GetPurchaseOrderByIdAsync_WithExistingId_ReturnsOrderDto*
  name: GetPurchaseOrderByIdAsync_WithExistingId_ReturnsOrderDto
  href: api/MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.html#MyApp_Purchasing_Application_Tests_Services_PurchaseOrderServiceTests_GetPurchaseOrderByIdAsync_WithExistingId_ReturnsOrderDto_
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.GetPurchaseOrderByIdAsync_WithExistingId_ReturnsOrderDto
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.GetPurchaseOrderByIdAsync_WithExistingId_ReturnsOrderDto
  nameWithType: PurchaseOrderServiceTests.GetPurchaseOrderByIdAsync_WithExistingId_ReturnsOrderDto
- uid: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.GetPurchaseOrderByIdAsync_WithNonExistentId_ReturnsNull
  name: GetPurchaseOrderByIdAsync_WithNonExistentId_ReturnsNull()
  href: api/MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.html#MyApp_Purchasing_Application_Tests_Services_PurchaseOrderServiceTests_GetPurchaseOrderByIdAsync_WithNonExistentId_ReturnsNull
  commentId: M:MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.GetPurchaseOrderByIdAsync_WithNonExistentId_ReturnsNull
  fullName: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.GetPurchaseOrderByIdAsync_WithNonExistentId_ReturnsNull()
  nameWithType: PurchaseOrderServiceTests.GetPurchaseOrderByIdAsync_WithNonExistentId_ReturnsNull()
- uid: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.GetPurchaseOrderByIdAsync_WithNonExistentId_ReturnsNull*
  name: GetPurchaseOrderByIdAsync_WithNonExistentId_ReturnsNull
  href: api/MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.html#MyApp_Purchasing_Application_Tests_Services_PurchaseOrderServiceTests_GetPurchaseOrderByIdAsync_WithNonExistentId_ReturnsNull_
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.GetPurchaseOrderByIdAsync_WithNonExistentId_ReturnsNull
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.GetPurchaseOrderByIdAsync_WithNonExistentId_ReturnsNull
  nameWithType: PurchaseOrderServiceTests.GetPurchaseOrderByIdAsync_WithNonExistentId_ReturnsNull
- uid: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.GetPurchaseOrdersByStatusAsync_ReturnsOrdersWithStatus
  name: GetPurchaseOrdersByStatusAsync_ReturnsOrdersWithStatus()
  href: api/MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.html#MyApp_Purchasing_Application_Tests_Services_PurchaseOrderServiceTests_GetPurchaseOrdersByStatusAsync_ReturnsOrdersWithStatus
  commentId: M:MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.GetPurchaseOrdersByStatusAsync_ReturnsOrdersWithStatus
  fullName: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.GetPurchaseOrdersByStatusAsync_ReturnsOrdersWithStatus()
  nameWithType: PurchaseOrderServiceTests.GetPurchaseOrdersByStatusAsync_ReturnsOrdersWithStatus()
- uid: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.GetPurchaseOrdersByStatusAsync_ReturnsOrdersWithStatus*
  name: GetPurchaseOrdersByStatusAsync_ReturnsOrdersWithStatus
  href: api/MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.html#MyApp_Purchasing_Application_Tests_Services_PurchaseOrderServiceTests_GetPurchaseOrdersByStatusAsync_ReturnsOrdersWithStatus_
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.GetPurchaseOrdersByStatusAsync_ReturnsOrdersWithStatus
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.GetPurchaseOrdersByStatusAsync_ReturnsOrdersWithStatus
  nameWithType: PurchaseOrderServiceTests.GetPurchaseOrdersByStatusAsync_ReturnsOrdersWithStatus
- uid: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.GetPurchaseOrdersBySupplierAsync_ReturnsSupplierOrders
  name: GetPurchaseOrdersBySupplierAsync_ReturnsSupplierOrders()
  href: api/MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.html#MyApp_Purchasing_Application_Tests_Services_PurchaseOrderServiceTests_GetPurchaseOrdersBySupplierAsync_ReturnsSupplierOrders
  commentId: M:MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.GetPurchaseOrdersBySupplierAsync_ReturnsSupplierOrders
  fullName: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.GetPurchaseOrdersBySupplierAsync_ReturnsSupplierOrders()
  nameWithType: PurchaseOrderServiceTests.GetPurchaseOrdersBySupplierAsync_ReturnsSupplierOrders()
- uid: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.GetPurchaseOrdersBySupplierAsync_ReturnsSupplierOrders*
  name: GetPurchaseOrdersBySupplierAsync_ReturnsSupplierOrders
  href: api/MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.html#MyApp_Purchasing_Application_Tests_Services_PurchaseOrderServiceTests_GetPurchaseOrdersBySupplierAsync_ReturnsSupplierOrders_
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.GetPurchaseOrdersBySupplierAsync_ReturnsSupplierOrders
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.GetPurchaseOrdersBySupplierAsync_ReturnsSupplierOrders
  nameWithType: PurchaseOrderServiceTests.GetPurchaseOrdersBySupplierAsync_ReturnsSupplierOrders
- uid: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.UpdatePurchaseOrderAsync_WithChangedSupplier_ValidatesNewSupplier
  name: UpdatePurchaseOrderAsync_WithChangedSupplier_ValidatesNewSupplier()
  href: api/MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.html#MyApp_Purchasing_Application_Tests_Services_PurchaseOrderServiceTests_UpdatePurchaseOrderAsync_WithChangedSupplier_ValidatesNewSupplier
  commentId: M:MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.UpdatePurchaseOrderAsync_WithChangedSupplier_ValidatesNewSupplier
  fullName: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.UpdatePurchaseOrderAsync_WithChangedSupplier_ValidatesNewSupplier()
  nameWithType: PurchaseOrderServiceTests.UpdatePurchaseOrderAsync_WithChangedSupplier_ValidatesNewSupplier()
- uid: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.UpdatePurchaseOrderAsync_WithChangedSupplier_ValidatesNewSupplier*
  name: UpdatePurchaseOrderAsync_WithChangedSupplier_ValidatesNewSupplier
  href: api/MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.html#MyApp_Purchasing_Application_Tests_Services_PurchaseOrderServiceTests_UpdatePurchaseOrderAsync_WithChangedSupplier_ValidatesNewSupplier_
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.UpdatePurchaseOrderAsync_WithChangedSupplier_ValidatesNewSupplier
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.UpdatePurchaseOrderAsync_WithChangedSupplier_ValidatesNewSupplier
  nameWithType: PurchaseOrderServiceTests.UpdatePurchaseOrderAsync_WithChangedSupplier_ValidatesNewSupplier
- uid: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.UpdatePurchaseOrderAsync_WithExistingOrder_UpdatesSuccessfully
  name: UpdatePurchaseOrderAsync_WithExistingOrder_UpdatesSuccessfully()
  href: api/MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.html#MyApp_Purchasing_Application_Tests_Services_PurchaseOrderServiceTests_UpdatePurchaseOrderAsync_WithExistingOrder_UpdatesSuccessfully
  commentId: M:MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.UpdatePurchaseOrderAsync_WithExistingOrder_UpdatesSuccessfully
  fullName: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.UpdatePurchaseOrderAsync_WithExistingOrder_UpdatesSuccessfully()
  nameWithType: PurchaseOrderServiceTests.UpdatePurchaseOrderAsync_WithExistingOrder_UpdatesSuccessfully()
- uid: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.UpdatePurchaseOrderAsync_WithExistingOrder_UpdatesSuccessfully*
  name: UpdatePurchaseOrderAsync_WithExistingOrder_UpdatesSuccessfully
  href: api/MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.html#MyApp_Purchasing_Application_Tests_Services_PurchaseOrderServiceTests_UpdatePurchaseOrderAsync_WithExistingOrder_UpdatesSuccessfully_
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.UpdatePurchaseOrderAsync_WithExistingOrder_UpdatesSuccessfully
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.UpdatePurchaseOrderAsync_WithExistingOrder_UpdatesSuccessfully
  nameWithType: PurchaseOrderServiceTests.UpdatePurchaseOrderAsync_WithExistingOrder_UpdatesSuccessfully
- uid: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.UpdatePurchaseOrderAsync_WithNonExistentOrder_ThrowsKeyNotFoundException
  name: UpdatePurchaseOrderAsync_WithNonExistentOrder_ThrowsKeyNotFoundException()
  href: api/MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.html#MyApp_Purchasing_Application_Tests_Services_PurchaseOrderServiceTests_UpdatePurchaseOrderAsync_WithNonExistentOrder_ThrowsKeyNotFoundException
  commentId: M:MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.UpdatePurchaseOrderAsync_WithNonExistentOrder_ThrowsKeyNotFoundException
  fullName: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.UpdatePurchaseOrderAsync_WithNonExistentOrder_ThrowsKeyNotFoundException()
  nameWithType: PurchaseOrderServiceTests.UpdatePurchaseOrderAsync_WithNonExistentOrder_ThrowsKeyNotFoundException()
- uid: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.UpdatePurchaseOrderAsync_WithNonExistentOrder_ThrowsKeyNotFoundException*
  name: UpdatePurchaseOrderAsync_WithNonExistentOrder_ThrowsKeyNotFoundException
  href: api/MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.html#MyApp_Purchasing_Application_Tests_Services_PurchaseOrderServiceTests_UpdatePurchaseOrderAsync_WithNonExistentOrder_ThrowsKeyNotFoundException_
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.UpdatePurchaseOrderAsync_WithNonExistentOrder_ThrowsKeyNotFoundException
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.UpdatePurchaseOrderAsync_WithNonExistentOrder_ThrowsKeyNotFoundException
  nameWithType: PurchaseOrderServiceTests.UpdatePurchaseOrderAsync_WithNonExistentOrder_ThrowsKeyNotFoundException
- uid: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.UpdatePurchaseOrderStatusAsync_WithExistingOrder_UpdatesStatus
  name: UpdatePurchaseOrderStatusAsync_WithExistingOrder_UpdatesStatus()
  href: api/MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.html#MyApp_Purchasing_Application_Tests_Services_PurchaseOrderServiceTests_UpdatePurchaseOrderStatusAsync_WithExistingOrder_UpdatesStatus
  commentId: M:MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.UpdatePurchaseOrderStatusAsync_WithExistingOrder_UpdatesStatus
  fullName: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.UpdatePurchaseOrderStatusAsync_WithExistingOrder_UpdatesStatus()
  nameWithType: PurchaseOrderServiceTests.UpdatePurchaseOrderStatusAsync_WithExistingOrder_UpdatesStatus()
- uid: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.UpdatePurchaseOrderStatusAsync_WithExistingOrder_UpdatesStatus*
  name: UpdatePurchaseOrderStatusAsync_WithExistingOrder_UpdatesStatus
  href: api/MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.html#MyApp_Purchasing_Application_Tests_Services_PurchaseOrderServiceTests_UpdatePurchaseOrderStatusAsync_WithExistingOrder_UpdatesStatus_
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.UpdatePurchaseOrderStatusAsync_WithExistingOrder_UpdatesStatus
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.UpdatePurchaseOrderStatusAsync_WithExistingOrder_UpdatesStatus
  nameWithType: PurchaseOrderServiceTests.UpdatePurchaseOrderStatusAsync_WithExistingOrder_UpdatesStatus
- uid: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.UpdatePurchaseOrderStatusAsync_WithNonExistentOrder_ThrowsKeyNotFoundException
  name: UpdatePurchaseOrderStatusAsync_WithNonExistentOrder_ThrowsKeyNotFoundException()
  href: api/MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.html#MyApp_Purchasing_Application_Tests_Services_PurchaseOrderServiceTests_UpdatePurchaseOrderStatusAsync_WithNonExistentOrder_ThrowsKeyNotFoundException
  commentId: M:MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.UpdatePurchaseOrderStatusAsync_WithNonExistentOrder_ThrowsKeyNotFoundException
  fullName: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.UpdatePurchaseOrderStatusAsync_WithNonExistentOrder_ThrowsKeyNotFoundException()
  nameWithType: PurchaseOrderServiceTests.UpdatePurchaseOrderStatusAsync_WithNonExistentOrder_ThrowsKeyNotFoundException()
- uid: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.UpdatePurchaseOrderStatusAsync_WithNonExistentOrder_ThrowsKeyNotFoundException*
  name: UpdatePurchaseOrderStatusAsync_WithNonExistentOrder_ThrowsKeyNotFoundException
  href: api/MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.html#MyApp_Purchasing_Application_Tests_Services_PurchaseOrderServiceTests_UpdatePurchaseOrderStatusAsync_WithNonExistentOrder_ThrowsKeyNotFoundException_
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.UpdatePurchaseOrderStatusAsync_WithNonExistentOrder_ThrowsKeyNotFoundException
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Tests.Services.PurchaseOrderServiceTests.UpdatePurchaseOrderStatusAsync_WithNonExistentOrder_ThrowsKeyNotFoundException
  nameWithType: PurchaseOrderServiceTests.UpdatePurchaseOrderStatusAsync_WithNonExistentOrder_ThrowsKeyNotFoundException
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests
  name: SupplierServiceTests
  href: api/MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html
  commentId: T:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests
  nameWithType: SupplierServiceTests
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.#ctor
  name: SupplierServiceTests()
  href: api/MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests__ctor
  commentId: M:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.#ctor
  name.vb: New()
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.SupplierServiceTests()
  fullName.vb: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.New()
  nameWithType: SupplierServiceTests.SupplierServiceTests()
  nameWithType.vb: SupplierServiceTests.New()
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.#ctor*
  name: SupplierServiceTests
  href: api/MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests__ctor_
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.SupplierServiceTests
  fullName.vb: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.New
  nameWithType: SupplierServiceTests.SupplierServiceTests
  nameWithType.vb: SupplierServiceTests.New
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.CreateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException
  name: CreateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException()
  href: api/MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_CreateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException
  commentId: M:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.CreateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.CreateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException()
  nameWithType: SupplierServiceTests.CreateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException()
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.CreateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException*
  name: CreateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException
  href: api/MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_CreateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException_
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.CreateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.CreateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException
  nameWithType: SupplierServiceTests.CreateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.CreateSupplierAsync_WithUniqueEmail_CreatesSupplier
  name: CreateSupplierAsync_WithUniqueEmail_CreatesSupplier()
  href: api/MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_CreateSupplierAsync_WithUniqueEmail_CreatesSupplier
  commentId: M:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.CreateSupplierAsync_WithUniqueEmail_CreatesSupplier
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.CreateSupplierAsync_WithUniqueEmail_CreatesSupplier()
  nameWithType: SupplierServiceTests.CreateSupplierAsync_WithUniqueEmail_CreatesSupplier()
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.CreateSupplierAsync_WithUniqueEmail_CreatesSupplier*
  name: CreateSupplierAsync_WithUniqueEmail_CreatesSupplier
  href: api/MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_CreateSupplierAsync_WithUniqueEmail_CreatesSupplier_
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.CreateSupplierAsync_WithUniqueEmail_CreatesSupplier
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.CreateSupplierAsync_WithUniqueEmail_CreatesSupplier
  nameWithType: SupplierServiceTests.CreateSupplierAsync_WithUniqueEmail_CreatesSupplier
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.DeleteSupplierAsync_WithExistingSupplier_DeletesSupplier
  name: DeleteSupplierAsync_WithExistingSupplier_DeletesSupplier()
  href: api/MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_DeleteSupplierAsync_WithExistingSupplier_DeletesSupplier
  commentId: M:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.DeleteSupplierAsync_WithExistingSupplier_DeletesSupplier
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.DeleteSupplierAsync_WithExistingSupplier_DeletesSupplier()
  nameWithType: SupplierServiceTests.DeleteSupplierAsync_WithExistingSupplier_DeletesSupplier()
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.DeleteSupplierAsync_WithExistingSupplier_DeletesSupplier*
  name: DeleteSupplierAsync_WithExistingSupplier_DeletesSupplier
  href: api/MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_DeleteSupplierAsync_WithExistingSupplier_DeletesSupplier_
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.DeleteSupplierAsync_WithExistingSupplier_DeletesSupplier
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.DeleteSupplierAsync_WithExistingSupplier_DeletesSupplier
  nameWithType: SupplierServiceTests.DeleteSupplierAsync_WithExistingSupplier_DeletesSupplier
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.DeleteSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
  name: DeleteSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException()
  href: api/MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_DeleteSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
  commentId: M:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.DeleteSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.DeleteSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException()
  nameWithType: SupplierServiceTests.DeleteSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException()
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.DeleteSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException*
  name: DeleteSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
  href: api/MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_DeleteSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException_
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.DeleteSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.DeleteSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
  nameWithType: SupplierServiceTests.DeleteSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetAllSuppliersAsync_ReturnsAllSuppliers
  name: GetAllSuppliersAsync_ReturnsAllSuppliers()
  href: api/MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_GetAllSuppliersAsync_ReturnsAllSuppliers
  commentId: M:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetAllSuppliersAsync_ReturnsAllSuppliers
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetAllSuppliersAsync_ReturnsAllSuppliers()
  nameWithType: SupplierServiceTests.GetAllSuppliersAsync_ReturnsAllSuppliers()
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetAllSuppliersAsync_ReturnsAllSuppliers*
  name: GetAllSuppliersAsync_ReturnsAllSuppliers
  href: api/MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_GetAllSuppliersAsync_ReturnsAllSuppliers_
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetAllSuppliersAsync_ReturnsAllSuppliers
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetAllSuppliersAsync_ReturnsAllSuppliers
  nameWithType: SupplierServiceTests.GetAllSuppliersAsync_ReturnsAllSuppliers
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByEmailAsync_WithExistingEmail_ReturnsSupplierDto
  name: GetSupplierByEmailAsync_WithExistingEmail_ReturnsSupplierDto()
  href: api/MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_GetSupplierByEmailAsync_WithExistingEmail_ReturnsSupplierDto
  commentId: M:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByEmailAsync_WithExistingEmail_ReturnsSupplierDto
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByEmailAsync_WithExistingEmail_ReturnsSupplierDto()
  nameWithType: SupplierServiceTests.GetSupplierByEmailAsync_WithExistingEmail_ReturnsSupplierDto()
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByEmailAsync_WithExistingEmail_ReturnsSupplierDto*
  name: GetSupplierByEmailAsync_WithExistingEmail_ReturnsSupplierDto
  href: api/MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_GetSupplierByEmailAsync_WithExistingEmail_ReturnsSupplierDto_
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByEmailAsync_WithExistingEmail_ReturnsSupplierDto
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByEmailAsync_WithExistingEmail_ReturnsSupplierDto
  nameWithType: SupplierServiceTests.GetSupplierByEmailAsync_WithExistingEmail_ReturnsSupplierDto
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByEmailAsync_WithNonExistentEmail_ReturnsNull
  name: GetSupplierByEmailAsync_WithNonExistentEmail_ReturnsNull()
  href: api/MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_GetSupplierByEmailAsync_WithNonExistentEmail_ReturnsNull
  commentId: M:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByEmailAsync_WithNonExistentEmail_ReturnsNull
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByEmailAsync_WithNonExistentEmail_ReturnsNull()
  nameWithType: SupplierServiceTests.GetSupplierByEmailAsync_WithNonExistentEmail_ReturnsNull()
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByEmailAsync_WithNonExistentEmail_ReturnsNull*
  name: GetSupplierByEmailAsync_WithNonExistentEmail_ReturnsNull
  href: api/MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_GetSupplierByEmailAsync_WithNonExistentEmail_ReturnsNull_
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByEmailAsync_WithNonExistentEmail_ReturnsNull
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByEmailAsync_WithNonExistentEmail_ReturnsNull
  nameWithType: SupplierServiceTests.GetSupplierByEmailAsync_WithNonExistentEmail_ReturnsNull
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByIdAsync_WithExistingId_ReturnsSupplierDto
  name: GetSupplierByIdAsync_WithExistingId_ReturnsSupplierDto()
  href: api/MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_GetSupplierByIdAsync_WithExistingId_ReturnsSupplierDto
  commentId: M:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByIdAsync_WithExistingId_ReturnsSupplierDto
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByIdAsync_WithExistingId_ReturnsSupplierDto()
  nameWithType: SupplierServiceTests.GetSupplierByIdAsync_WithExistingId_ReturnsSupplierDto()
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByIdAsync_WithExistingId_ReturnsSupplierDto*
  name: GetSupplierByIdAsync_WithExistingId_ReturnsSupplierDto
  href: api/MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_GetSupplierByIdAsync_WithExistingId_ReturnsSupplierDto_
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByIdAsync_WithExistingId_ReturnsSupplierDto
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByIdAsync_WithExistingId_ReturnsSupplierDto
  nameWithType: SupplierServiceTests.GetSupplierByIdAsync_WithExistingId_ReturnsSupplierDto
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByIdAsync_WithNonExistentId_ReturnsNull
  name: GetSupplierByIdAsync_WithNonExistentId_ReturnsNull()
  href: api/MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_GetSupplierByIdAsync_WithNonExistentId_ReturnsNull
  commentId: M:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByIdAsync_WithNonExistentId_ReturnsNull
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByIdAsync_WithNonExistentId_ReturnsNull()
  nameWithType: SupplierServiceTests.GetSupplierByIdAsync_WithNonExistentId_ReturnsNull()
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByIdAsync_WithNonExistentId_ReturnsNull*
  name: GetSupplierByIdAsync_WithNonExistentId_ReturnsNull
  href: api/MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_GetSupplierByIdAsync_WithNonExistentId_ReturnsNull_
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByIdAsync_WithNonExistentId_ReturnsNull
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSupplierByIdAsync_WithNonExistentId_ReturnsNull
  nameWithType: SupplierServiceTests.GetSupplierByIdAsync_WithNonExistentId_ReturnsNull
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSuppliersByNameAsync_ReturnsMatchingSuppliers
  name: GetSuppliersByNameAsync_ReturnsMatchingSuppliers()
  href: api/MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_GetSuppliersByNameAsync_ReturnsMatchingSuppliers
  commentId: M:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSuppliersByNameAsync_ReturnsMatchingSuppliers
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSuppliersByNameAsync_ReturnsMatchingSuppliers()
  nameWithType: SupplierServiceTests.GetSuppliersByNameAsync_ReturnsMatchingSuppliers()
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSuppliersByNameAsync_ReturnsMatchingSuppliers*
  name: GetSuppliersByNameAsync_ReturnsMatchingSuppliers
  href: api/MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_GetSuppliersByNameAsync_ReturnsMatchingSuppliers_
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSuppliersByNameAsync_ReturnsMatchingSuppliers
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.GetSuppliersByNameAsync_ReturnsMatchingSuppliers
  nameWithType: SupplierServiceTests.GetSuppliersByNameAsync_ReturnsMatchingSuppliers
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException
  name: UpdateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException()
  href: api/MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_UpdateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException
  commentId: M:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException()
  nameWithType: SupplierServiceTests.UpdateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException()
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException*
  name: UpdateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException
  href: api/MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_UpdateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException_
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException
  nameWithType: SupplierServiceTests.UpdateSupplierAsync_WithDuplicateEmail_ThrowsInvalidOperationException
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithExistingSupplier_UpdatesSuccessfully
  name: UpdateSupplierAsync_WithExistingSupplier_UpdatesSuccessfully()
  href: api/MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_UpdateSupplierAsync_WithExistingSupplier_UpdatesSuccessfully
  commentId: M:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithExistingSupplier_UpdatesSuccessfully
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithExistingSupplier_UpdatesSuccessfully()
  nameWithType: SupplierServiceTests.UpdateSupplierAsync_WithExistingSupplier_UpdatesSuccessfully()
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithExistingSupplier_UpdatesSuccessfully*
  name: UpdateSupplierAsync_WithExistingSupplier_UpdatesSuccessfully
  href: api/MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_UpdateSupplierAsync_WithExistingSupplier_UpdatesSuccessfully_
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithExistingSupplier_UpdatesSuccessfully
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithExistingSupplier_UpdatesSuccessfully
  nameWithType: SupplierServiceTests.UpdateSupplierAsync_WithExistingSupplier_UpdatesSuccessfully
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
  name: UpdateSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException()
  href: api/MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_UpdateSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
  commentId: M:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException()
  nameWithType: SupplierServiceTests.UpdateSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException()
- uid: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException*
  name: UpdateSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
  href: api/MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.html#MyApp_Purchasing_Application_Tests_Services_SupplierServiceTests_UpdateSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException_
  commentId: Overload:MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
  isSpec: "True"
  fullName: MyApp.Purchasing.Application.Tests.Services.SupplierServiceTests.UpdateSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
  nameWithType: SupplierServiceTests.UpdateSupplierAsync_WithNonExistentSupplier_ThrowsKeyNotFoundException
- uid: MyApp.Purchasing.Domain.Entities
  name: MyApp.Purchasing.Domain.Entities
  href: api/MyApp.Purchasing.Domain.Entities.html
  commentId: N:MyApp.Purchasing.Domain.Entities
  fullName: MyApp.Purchasing.Domain.Entities
  nameWithType: MyApp.Purchasing.Domain.Entities
- uid: MyApp.Purchasing.Domain.Entities.PurchaseOrder
  name: PurchaseOrder
  href: api/MyApp.Purchasing.Domain.Entities.PurchaseOrder.html
  commentId: T:MyApp.Purchasing.Domain.Entities.PurchaseOrder
  fullName: MyApp.Purchasing.Domain.Entities.PurchaseOrder
  nameWithType: PurchaseOrder
- uid: MyApp.Purchasing.Domain.Entities.PurchaseOrder.ExpectedDeliveryDate
  name: ExpectedDeliveryDate
  href: api/MyApp.Purchasing.Domain.Entities.PurchaseOrder.html#MyApp_Purchasing_Domain_Entities_PurchaseOrder_ExpectedDeliveryDate
  commentId: P:MyApp.Purchasing.Domain.Entities.PurchaseOrder.ExpectedDeliveryDate
  fullName: MyApp.Purchasing.Domain.Entities.PurchaseOrder.ExpectedDeliveryDate
  nameWithType: PurchaseOrder.ExpectedDeliveryDate
- uid: MyApp.Purchasing.Domain.Entities.PurchaseOrder.ExpectedDeliveryDate*
  name: ExpectedDeliveryDate
  href: api/MyApp.Purchasing.Domain.Entities.PurchaseOrder.html#MyApp_Purchasing_Domain_Entities_PurchaseOrder_ExpectedDeliveryDate_
  commentId: Overload:MyApp.Purchasing.Domain.Entities.PurchaseOrder.ExpectedDeliveryDate
  isSpec: "True"
  fullName: MyApp.Purchasing.Domain.Entities.PurchaseOrder.ExpectedDeliveryDate
  nameWithType: PurchaseOrder.ExpectedDeliveryDate
- uid: MyApp.Purchasing.Domain.Entities.PurchaseOrder.Lines
  name: Lines
  href: api/MyApp.Purchasing.Domain.Entities.PurchaseOrder.html#MyApp_Purchasing_Domain_Entities_PurchaseOrder_Lines
  commentId: P:MyApp.Purchasing.Domain.Entities.PurchaseOrder.Lines
  fullName: MyApp.Purchasing.Domain.Entities.PurchaseOrder.Lines
  nameWithType: PurchaseOrder.Lines
- uid: MyApp.Purchasing.Domain.Entities.PurchaseOrder.Lines*
  name: Lines
  href: api/MyApp.Purchasing.Domain.Entities.PurchaseOrder.html#MyApp_Purchasing_Domain_Entities_PurchaseOrder_Lines_
  commentId: Overload:MyApp.Purchasing.Domain.Entities.PurchaseOrder.Lines
  isSpec: "True"
  fullName: MyApp.Purchasing.Domain.Entities.PurchaseOrder.Lines
  nameWithType: PurchaseOrder.Lines
- uid: MyApp.Purchasing.Domain.Entities.PurchaseOrder.OrderDate
  name: OrderDate
  href: api/MyApp.Purchasing.Domain.Entities.PurchaseOrder.html#MyApp_Purchasing_Domain_Entities_PurchaseOrder_OrderDate
  commentId: P:MyApp.Purchasing.Domain.Entities.PurchaseOrder.OrderDate
  fullName: MyApp.Purchasing.Domain.Entities.PurchaseOrder.OrderDate
  nameWithType: PurchaseOrder.OrderDate
- uid: MyApp.Purchasing.Domain.Entities.PurchaseOrder.OrderDate*
  name: OrderDate
  href: api/MyApp.Purchasing.Domain.Entities.PurchaseOrder.html#MyApp_Purchasing_Domain_Entities_PurchaseOrder_OrderDate_
  commentId: Overload:MyApp.Purchasing.Domain.Entities.PurchaseOrder.OrderDate
  isSpec: "True"
  fullName: MyApp.Purchasing.Domain.Entities.PurchaseOrder.OrderDate
  nameWithType: PurchaseOrder.OrderDate
- uid: MyApp.Purchasing.Domain.Entities.PurchaseOrder.OrderNumber
  name: OrderNumber
  href: api/MyApp.Purchasing.Domain.Entities.PurchaseOrder.html#MyApp_Purchasing_Domain_Entities_PurchaseOrder_OrderNumber
  commentId: P:MyApp.Purchasing.Domain.Entities.PurchaseOrder.OrderNumber
  fullName: MyApp.Purchasing.Domain.Entities.PurchaseOrder.OrderNumber
  nameWithType: PurchaseOrder.OrderNumber
- uid: MyApp.Purchasing.Domain.Entities.PurchaseOrder.OrderNumber*
  name: OrderNumber
  href: api/MyApp.Purchasing.Domain.Entities.PurchaseOrder.html#MyApp_Purchasing_Domain_Entities_PurchaseOrder_OrderNumber_
  commentId: Overload:MyApp.Purchasing.Domain.Entities.PurchaseOrder.OrderNumber
  isSpec: "True"
  fullName: MyApp.Purchasing.Domain.Entities.PurchaseOrder.OrderNumber
  nameWithType: PurchaseOrder.OrderNumber
- uid: MyApp.Purchasing.Domain.Entities.PurchaseOrder.Status
  name: Status
  href: api/MyApp.Purchasing.Domain.Entities.PurchaseOrder.html#MyApp_Purchasing_Domain_Entities_PurchaseOrder_Status
  commentId: P:MyApp.Purchasing.Domain.Entities.PurchaseOrder.Status
  fullName: MyApp.Purchasing.Domain.Entities.PurchaseOrder.Status
  nameWithType: PurchaseOrder.Status
- uid: MyApp.Purchasing.Domain.Entities.PurchaseOrder.Status*
  name: Status
  href: api/MyApp.Purchasing.Domain.Entities.PurchaseOrder.html#MyApp_Purchasing_Domain_Entities_PurchaseOrder_Status_
  commentId: Overload:MyApp.Purchasing.Domain.Entities.PurchaseOrder.Status
  isSpec: "True"
  fullName: MyApp.Purchasing.Domain.Entities.PurchaseOrder.Status
  nameWithType: PurchaseOrder.Status
- uid: MyApp.Purchasing.Domain.Entities.PurchaseOrder.Supplier
  name: Supplier
  href: api/MyApp.Purchasing.Domain.Entities.PurchaseOrder.html#MyApp_Purchasing_Domain_Entities_PurchaseOrder_Supplier
  commentId: P:MyApp.Purchasing.Domain.Entities.PurchaseOrder.Supplier
  fullName: MyApp.Purchasing.Domain.Entities.PurchaseOrder.Supplier
  nameWithType: PurchaseOrder.Supplier
- uid: MyApp.Purchasing.Domain.Entities.PurchaseOrder.Supplier*
  name: Supplier
  href: api/MyApp.Purchasing.Domain.Entities.PurchaseOrder.html#MyApp_Purchasing_Domain_Entities_PurchaseOrder_Supplier_
  commentId: Overload:MyApp.Purchasing.Domain.Entities.PurchaseOrder.Supplier
  isSpec: "True"
  fullName: MyApp.Purchasing.Domain.Entities.PurchaseOrder.Supplier
  nameWithType: PurchaseOrder.Supplier
- uid: MyApp.Purchasing.Domain.Entities.PurchaseOrder.SupplierId
  name: SupplierId
  href: api/MyApp.Purchasing.Domain.Entities.PurchaseOrder.html#MyApp_Purchasing_Domain_Entities_PurchaseOrder_SupplierId
  commentId: P:MyApp.Purchasing.Domain.Entities.PurchaseOrder.SupplierId
  fullName: MyApp.Purchasing.Domain.Entities.PurchaseOrder.SupplierId
  nameWithType: PurchaseOrder.SupplierId
- uid: MyApp.Purchasing.Domain.Entities.PurchaseOrder.SupplierId*
  name: SupplierId
  href: api/MyApp.Purchasing.Domain.Entities.PurchaseOrder.html#MyApp_Purchasing_Domain_Entities_PurchaseOrder_SupplierId_
  commentId: Overload:MyApp.Purchasing.Domain.Entities.PurchaseOrder.SupplierId
  isSpec: "True"
  fullName: MyApp.Purchasing.Domain.Entities.PurchaseOrder.SupplierId
  nameWithType: PurchaseOrder.SupplierId
- uid: MyApp.Purchasing.Domain.Entities.PurchaseOrder.TotalAmount
  name: TotalAmount
  href: api/MyApp.Purchasing.Domain.Entities.PurchaseOrder.html#MyApp_Purchasing_Domain_Entities_PurchaseOrder_TotalAmount
  commentId: P:MyApp.Purchasing.Domain.Entities.PurchaseOrder.TotalAmount
  fullName: MyApp.Purchasing.Domain.Entities.PurchaseOrder.TotalAmount
  nameWithType: PurchaseOrder.TotalAmount
- uid: MyApp.Purchasing.Domain.Entities.PurchaseOrder.TotalAmount*
  name: TotalAmount
  href: api/MyApp.Purchasing.Domain.Entities.PurchaseOrder.html#MyApp_Purchasing_Domain_Entities_PurchaseOrder_TotalAmount_
  commentId: Overload:MyApp.Purchasing.Domain.Entities.PurchaseOrder.TotalAmount
  isSpec: "True"
  fullName: MyApp.Purchasing.Domain.Entities.PurchaseOrder.TotalAmount
  nameWithType: PurchaseOrder.TotalAmount
- uid: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine
  name: PurchaseOrderLine
  href: api/MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.html
  commentId: T:MyApp.Purchasing.Domain.Entities.PurchaseOrderLine
  fullName: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine
  nameWithType: PurchaseOrderLine
- uid: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.Id
  name: Id
  href: api/MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.html#MyApp_Purchasing_Domain_Entities_PurchaseOrderLine_Id
  commentId: P:MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.Id
  fullName: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.Id
  nameWithType: PurchaseOrderLine.Id
- uid: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.Id*
  name: Id
  href: api/MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.html#MyApp_Purchasing_Domain_Entities_PurchaseOrderLine_Id_
  commentId: Overload:MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.Id
  isSpec: "True"
  fullName: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.Id
  nameWithType: PurchaseOrderLine.Id
- uid: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.LineTotal
  name: LineTotal
  href: api/MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.html#MyApp_Purchasing_Domain_Entities_PurchaseOrderLine_LineTotal
  commentId: P:MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.LineTotal
  fullName: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.LineTotal
  nameWithType: PurchaseOrderLine.LineTotal
- uid: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.LineTotal*
  name: LineTotal
  href: api/MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.html#MyApp_Purchasing_Domain_Entities_PurchaseOrderLine_LineTotal_
  commentId: Overload:MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.LineTotal
  isSpec: "True"
  fullName: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.LineTotal
  nameWithType: PurchaseOrderLine.LineTotal
- uid: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.ProductId
  name: ProductId
  href: api/MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.html#MyApp_Purchasing_Domain_Entities_PurchaseOrderLine_ProductId
  commentId: P:MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.ProductId
  fullName: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.ProductId
  nameWithType: PurchaseOrderLine.ProductId
- uid: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.ProductId*
  name: ProductId
  href: api/MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.html#MyApp_Purchasing_Domain_Entities_PurchaseOrderLine_ProductId_
  commentId: Overload:MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.ProductId
  isSpec: "True"
  fullName: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.ProductId
  nameWithType: PurchaseOrderLine.ProductId
- uid: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.PurchaseOrder
  name: PurchaseOrder
  href: api/MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.html#MyApp_Purchasing_Domain_Entities_PurchaseOrderLine_PurchaseOrder
  commentId: P:MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.PurchaseOrder
  fullName: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.PurchaseOrder
  nameWithType: PurchaseOrderLine.PurchaseOrder
- uid: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.PurchaseOrder*
  name: PurchaseOrder
  href: api/MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.html#MyApp_Purchasing_Domain_Entities_PurchaseOrderLine_PurchaseOrder_
  commentId: Overload:MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.PurchaseOrder
  isSpec: "True"
  fullName: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.PurchaseOrder
  nameWithType: PurchaseOrderLine.PurchaseOrder
- uid: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.PurchaseOrderId
  name: PurchaseOrderId
  href: api/MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.html#MyApp_Purchasing_Domain_Entities_PurchaseOrderLine_PurchaseOrderId
  commentId: P:MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.PurchaseOrderId
  fullName: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.PurchaseOrderId
  nameWithType: PurchaseOrderLine.PurchaseOrderId
- uid: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.PurchaseOrderId*
  name: PurchaseOrderId
  href: api/MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.html#MyApp_Purchasing_Domain_Entities_PurchaseOrderLine_PurchaseOrderId_
  commentId: Overload:MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.PurchaseOrderId
  isSpec: "True"
  fullName: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.PurchaseOrderId
  nameWithType: PurchaseOrderLine.PurchaseOrderId
- uid: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.Quantity
  name: Quantity
  href: api/MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.html#MyApp_Purchasing_Domain_Entities_PurchaseOrderLine_Quantity
  commentId: P:MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.Quantity
  fullName: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.Quantity
  nameWithType: PurchaseOrderLine.Quantity
- uid: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.Quantity*
  name: Quantity
  href: api/MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.html#MyApp_Purchasing_Domain_Entities_PurchaseOrderLine_Quantity_
  commentId: Overload:MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.Quantity
  isSpec: "True"
  fullName: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.Quantity
  nameWithType: PurchaseOrderLine.Quantity
- uid: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.UnitPrice
  name: UnitPrice
  href: api/MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.html#MyApp_Purchasing_Domain_Entities_PurchaseOrderLine_UnitPrice
  commentId: P:MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.UnitPrice
  fullName: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.UnitPrice
  nameWithType: PurchaseOrderLine.UnitPrice
- uid: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.UnitPrice*
  name: UnitPrice
  href: api/MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.html#MyApp_Purchasing_Domain_Entities_PurchaseOrderLine_UnitPrice_
  commentId: Overload:MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.UnitPrice
  isSpec: "True"
  fullName: MyApp.Purchasing.Domain.Entities.PurchaseOrderLine.UnitPrice
  nameWithType: PurchaseOrderLine.UnitPrice
- uid: MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus
  name: PurchaseOrderStatus
  href: api/MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus.html
  commentId: T:MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus
  fullName: MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus
  nameWithType: PurchaseOrderStatus
- uid: MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus.Approved
  name: Approved
  href: api/MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus.html#MyApp_Purchasing_Domain_Entities_PurchaseOrderStatus_Approved
  commentId: F:MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus.Approved
  fullName: MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus.Approved
  nameWithType: PurchaseOrderStatus.Approved
- uid: MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus.Cancelled
  name: Cancelled
  href: api/MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus.html#MyApp_Purchasing_Domain_Entities_PurchaseOrderStatus_Cancelled
  commentId: F:MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus.Cancelled
  fullName: MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus.Cancelled
  nameWithType: PurchaseOrderStatus.Cancelled
- uid: MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus.Draft
  name: Draft
  href: api/MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus.html#MyApp_Purchasing_Domain_Entities_PurchaseOrderStatus_Draft
  commentId: F:MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus.Draft
  fullName: MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus.Draft
  nameWithType: PurchaseOrderStatus.Draft
- uid: MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus.Received
  name: Received
  href: api/MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus.html#MyApp_Purchasing_Domain_Entities_PurchaseOrderStatus_Received
  commentId: F:MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus.Received
  fullName: MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus.Received
  nameWithType: PurchaseOrderStatus.Received
- uid: MyApp.Purchasing.Domain.Entities.Supplier
  name: Supplier
  href: api/MyApp.Purchasing.Domain.Entities.Supplier.html
  commentId: T:MyApp.Purchasing.Domain.Entities.Supplier
  fullName: MyApp.Purchasing.Domain.Entities.Supplier
  nameWithType: Supplier
- uid: MyApp.Purchasing.Domain.Entities.Supplier.Address
  name: Address
  href: api/MyApp.Purchasing.Domain.Entities.Supplier.html#MyApp_Purchasing_Domain_Entities_Supplier_Address
  commentId: P:MyApp.Purchasing.Domain.Entities.Supplier.Address
  fullName: MyApp.Purchasing.Domain.Entities.Supplier.Address
  nameWithType: Supplier.Address
- uid: MyApp.Purchasing.Domain.Entities.Supplier.Address*
  name: Address
  href: api/MyApp.Purchasing.Domain.Entities.Supplier.html#MyApp_Purchasing_Domain_Entities_Supplier_Address_
  commentId: Overload:MyApp.Purchasing.Domain.Entities.Supplier.Address
  isSpec: "True"
  fullName: MyApp.Purchasing.Domain.Entities.Supplier.Address
  nameWithType: Supplier.Address
- uid: MyApp.Purchasing.Domain.Entities.Supplier.ContactName
  name: ContactName
  href: api/MyApp.Purchasing.Domain.Entities.Supplier.html#MyApp_Purchasing_Domain_Entities_Supplier_ContactName
  commentId: P:MyApp.Purchasing.Domain.Entities.Supplier.ContactName
  fullName: MyApp.Purchasing.Domain.Entities.Supplier.ContactName
  nameWithType: Supplier.ContactName
- uid: MyApp.Purchasing.Domain.Entities.Supplier.ContactName*
  name: ContactName
  href: api/MyApp.Purchasing.Domain.Entities.Supplier.html#MyApp_Purchasing_Domain_Entities_Supplier_ContactName_
  commentId: Overload:MyApp.Purchasing.Domain.Entities.Supplier.ContactName
  isSpec: "True"
  fullName: MyApp.Purchasing.Domain.Entities.Supplier.ContactName
  nameWithType: Supplier.ContactName
- uid: MyApp.Purchasing.Domain.Entities.Supplier.Email
  name: Email
  href: api/MyApp.Purchasing.Domain.Entities.Supplier.html#MyApp_Purchasing_Domain_Entities_Supplier_Email
  commentId: P:MyApp.Purchasing.Domain.Entities.Supplier.Email
  fullName: MyApp.Purchasing.Domain.Entities.Supplier.Email
  nameWithType: Supplier.Email
- uid: MyApp.Purchasing.Domain.Entities.Supplier.Email*
  name: Email
  href: api/MyApp.Purchasing.Domain.Entities.Supplier.html#MyApp_Purchasing_Domain_Entities_Supplier_Email_
  commentId: Overload:MyApp.Purchasing.Domain.Entities.Supplier.Email
  isSpec: "True"
  fullName: MyApp.Purchasing.Domain.Entities.Supplier.Email
  nameWithType: Supplier.Email
- uid: MyApp.Purchasing.Domain.Entities.Supplier.Name
  name: Name
  href: api/MyApp.Purchasing.Domain.Entities.Supplier.html#MyApp_Purchasing_Domain_Entities_Supplier_Name
  commentId: P:MyApp.Purchasing.Domain.Entities.Supplier.Name
  fullName: MyApp.Purchasing.Domain.Entities.Supplier.Name
  nameWithType: Supplier.Name
- uid: MyApp.Purchasing.Domain.Entities.Supplier.Name*
  name: Name
  href: api/MyApp.Purchasing.Domain.Entities.Supplier.html#MyApp_Purchasing_Domain_Entities_Supplier_Name_
  commentId: Overload:MyApp.Purchasing.Domain.Entities.Supplier.Name
  isSpec: "True"
  fullName: MyApp.Purchasing.Domain.Entities.Supplier.Name
  nameWithType: Supplier.Name
- uid: MyApp.Purchasing.Domain.Entities.Supplier.PhoneNumber
  name: PhoneNumber
  href: api/MyApp.Purchasing.Domain.Entities.Supplier.html#MyApp_Purchasing_Domain_Entities_Supplier_PhoneNumber
  commentId: P:MyApp.Purchasing.Domain.Entities.Supplier.PhoneNumber
  fullName: MyApp.Purchasing.Domain.Entities.Supplier.PhoneNumber
  nameWithType: Supplier.PhoneNumber
- uid: MyApp.Purchasing.Domain.Entities.Supplier.PhoneNumber*
  name: PhoneNumber
  href: api/MyApp.Purchasing.Domain.Entities.Supplier.html#MyApp_Purchasing_Domain_Entities_Supplier_PhoneNumber_
  commentId: Overload:MyApp.Purchasing.Domain.Entities.Supplier.PhoneNumber
  isSpec: "True"
  fullName: MyApp.Purchasing.Domain.Entities.Supplier.PhoneNumber
  nameWithType: Supplier.PhoneNumber
- uid: MyApp.Purchasing.Domain.Entities.Supplier.PurchaseOrders
  name: PurchaseOrders
  href: api/MyApp.Purchasing.Domain.Entities.Supplier.html#MyApp_Purchasing_Domain_Entities_Supplier_PurchaseOrders
  commentId: P:MyApp.Purchasing.Domain.Entities.Supplier.PurchaseOrders
  fullName: MyApp.Purchasing.Domain.Entities.Supplier.PurchaseOrders
  nameWithType: Supplier.PurchaseOrders
- uid: MyApp.Purchasing.Domain.Entities.Supplier.PurchaseOrders*
  name: PurchaseOrders
  href: api/MyApp.Purchasing.Domain.Entities.Supplier.html#MyApp_Purchasing_Domain_Entities_Supplier_PurchaseOrders_
  commentId: Overload:MyApp.Purchasing.Domain.Entities.Supplier.PurchaseOrders
  isSpec: "True"
  fullName: MyApp.Purchasing.Domain.Entities.Supplier.PurchaseOrders
  nameWithType: Supplier.PurchaseOrders
- uid: MyApp.Purchasing.Domain.Repositories
  name: MyApp.Purchasing.Domain.Repositories
  href: api/MyApp.Purchasing.Domain.Repositories.html
  commentId: N:MyApp.Purchasing.Domain.Repositories
  fullName: MyApp.Purchasing.Domain.Repositories
  nameWithType: MyApp.Purchasing.Domain.Repositories
- uid: MyApp.Purchasing.Domain.Repositories.IPurchaseOrderLineRepository
  name: IPurchaseOrderLineRepository
  href: api/MyApp.Purchasing.Domain.Repositories.IPurchaseOrderLineRepository.html
  commentId: T:MyApp.Purchasing.Domain.Repositories.IPurchaseOrderLineRepository
  fullName: MyApp.Purchasing.Domain.Repositories.IPurchaseOrderLineRepository
  nameWithType: IPurchaseOrderLineRepository
- uid: MyApp.Purchasing.Domain.Repositories.IPurchaseOrderLineRepository.GetByPurchaseOrderIdAsync(System.Guid)
  name: GetByPurchaseOrderIdAsync(Guid)
  href: api/MyApp.Purchasing.Domain.Repositories.IPurchaseOrderLineRepository.html#MyApp_Purchasing_Domain_Repositories_IPurchaseOrderLineRepository_GetByPurchaseOrderIdAsync_System_Guid_
  commentId: M:MyApp.Purchasing.Domain.Repositories.IPurchaseOrderLineRepository.GetByPurchaseOrderIdAsync(System.Guid)
  fullName: MyApp.Purchasing.Domain.Repositories.IPurchaseOrderLineRepository.GetByPurchaseOrderIdAsync(System.Guid)
  nameWithType: IPurchaseOrderLineRepository.GetByPurchaseOrderIdAsync(Guid)
- uid: MyApp.Purchasing.Domain.Repositories.IPurchaseOrderLineRepository.GetByPurchaseOrderIdAsync*
  name: GetByPurchaseOrderIdAsync
  href: api/MyApp.Purchasing.Domain.Repositories.IPurchaseOrderLineRepository.html#MyApp_Purchasing_Domain_Repositories_IPurchaseOrderLineRepository_GetByPurchaseOrderIdAsync_
  commentId: Overload:MyApp.Purchasing.Domain.Repositories.IPurchaseOrderLineRepository.GetByPurchaseOrderIdAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Domain.Repositories.IPurchaseOrderLineRepository.GetByPurchaseOrderIdAsync
  nameWithType: IPurchaseOrderLineRepository.GetByPurchaseOrderIdAsync
- uid: MyApp.Purchasing.Domain.Repositories.IPurchaseOrderRepository
  name: IPurchaseOrderRepository
  href: api/MyApp.Purchasing.Domain.Repositories.IPurchaseOrderRepository.html
  commentId: T:MyApp.Purchasing.Domain.Repositories.IPurchaseOrderRepository
  fullName: MyApp.Purchasing.Domain.Repositories.IPurchaseOrderRepository
  nameWithType: IPurchaseOrderRepository
- uid: MyApp.Purchasing.Domain.Repositories.IPurchaseOrderRepository.GetByStatusAsync(MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus)
  name: GetByStatusAsync(PurchaseOrderStatus)
  href: api/MyApp.Purchasing.Domain.Repositories.IPurchaseOrderRepository.html#MyApp_Purchasing_Domain_Repositories_IPurchaseOrderRepository_GetByStatusAsync_MyApp_Purchasing_Domain_Entities_PurchaseOrderStatus_
  commentId: M:MyApp.Purchasing.Domain.Repositories.IPurchaseOrderRepository.GetByStatusAsync(MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus)
  fullName: MyApp.Purchasing.Domain.Repositories.IPurchaseOrderRepository.GetByStatusAsync(MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus)
  nameWithType: IPurchaseOrderRepository.GetByStatusAsync(PurchaseOrderStatus)
- uid: MyApp.Purchasing.Domain.Repositories.IPurchaseOrderRepository.GetByStatusAsync*
  name: GetByStatusAsync
  href: api/MyApp.Purchasing.Domain.Repositories.IPurchaseOrderRepository.html#MyApp_Purchasing_Domain_Repositories_IPurchaseOrderRepository_GetByStatusAsync_
  commentId: Overload:MyApp.Purchasing.Domain.Repositories.IPurchaseOrderRepository.GetByStatusAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Domain.Repositories.IPurchaseOrderRepository.GetByStatusAsync
  nameWithType: IPurchaseOrderRepository.GetByStatusAsync
- uid: MyApp.Purchasing.Domain.Repositories.IPurchaseOrderRepository.GetBySuppliersIdAsync(System.Guid)
  name: GetBySuppliersIdAsync(Guid)
  href: api/MyApp.Purchasing.Domain.Repositories.IPurchaseOrderRepository.html#MyApp_Purchasing_Domain_Repositories_IPurchaseOrderRepository_GetBySuppliersIdAsync_System_Guid_
  commentId: M:MyApp.Purchasing.Domain.Repositories.IPurchaseOrderRepository.GetBySuppliersIdAsync(System.Guid)
  fullName: MyApp.Purchasing.Domain.Repositories.IPurchaseOrderRepository.GetBySuppliersIdAsync(System.Guid)
  nameWithType: IPurchaseOrderRepository.GetBySuppliersIdAsync(Guid)
- uid: MyApp.Purchasing.Domain.Repositories.IPurchaseOrderRepository.GetBySuppliersIdAsync*
  name: GetBySuppliersIdAsync
  href: api/MyApp.Purchasing.Domain.Repositories.IPurchaseOrderRepository.html#MyApp_Purchasing_Domain_Repositories_IPurchaseOrderRepository_GetBySuppliersIdAsync_
  commentId: Overload:MyApp.Purchasing.Domain.Repositories.IPurchaseOrderRepository.GetBySuppliersIdAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Domain.Repositories.IPurchaseOrderRepository.GetBySuppliersIdAsync
  nameWithType: IPurchaseOrderRepository.GetBySuppliersIdAsync
- uid: MyApp.Purchasing.Domain.Repositories.IPurchaseOrderRepository.GetWithLinesAsync(System.Guid)
  name: GetWithLinesAsync(Guid)
  href: api/MyApp.Purchasing.Domain.Repositories.IPurchaseOrderRepository.html#MyApp_Purchasing_Domain_Repositories_IPurchaseOrderRepository_GetWithLinesAsync_System_Guid_
  commentId: M:MyApp.Purchasing.Domain.Repositories.IPurchaseOrderRepository.GetWithLinesAsync(System.Guid)
  fullName: MyApp.Purchasing.Domain.Repositories.IPurchaseOrderRepository.GetWithLinesAsync(System.Guid)
  nameWithType: IPurchaseOrderRepository.GetWithLinesAsync(Guid)
- uid: MyApp.Purchasing.Domain.Repositories.IPurchaseOrderRepository.GetWithLinesAsync*
  name: GetWithLinesAsync
  href: api/MyApp.Purchasing.Domain.Repositories.IPurchaseOrderRepository.html#MyApp_Purchasing_Domain_Repositories_IPurchaseOrderRepository_GetWithLinesAsync_
  commentId: Overload:MyApp.Purchasing.Domain.Repositories.IPurchaseOrderRepository.GetWithLinesAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Domain.Repositories.IPurchaseOrderRepository.GetWithLinesAsync
  nameWithType: IPurchaseOrderRepository.GetWithLinesAsync
- uid: MyApp.Purchasing.Domain.Repositories.ISupplierRepository
  name: ISupplierRepository
  href: api/MyApp.Purchasing.Domain.Repositories.ISupplierRepository.html
  commentId: T:MyApp.Purchasing.Domain.Repositories.ISupplierRepository
  fullName: MyApp.Purchasing.Domain.Repositories.ISupplierRepository
  nameWithType: ISupplierRepository
- uid: MyApp.Purchasing.Domain.Repositories.ISupplierRepository.GetByEmailAsync(System.String)
  name: GetByEmailAsync(string)
  href: api/MyApp.Purchasing.Domain.Repositories.ISupplierRepository.html#MyApp_Purchasing_Domain_Repositories_ISupplierRepository_GetByEmailAsync_System_String_
  commentId: M:MyApp.Purchasing.Domain.Repositories.ISupplierRepository.GetByEmailAsync(System.String)
  name.vb: GetByEmailAsync(String)
  fullName: MyApp.Purchasing.Domain.Repositories.ISupplierRepository.GetByEmailAsync(string)
  fullName.vb: MyApp.Purchasing.Domain.Repositories.ISupplierRepository.GetByEmailAsync(String)
  nameWithType: ISupplierRepository.GetByEmailAsync(string)
  nameWithType.vb: ISupplierRepository.GetByEmailAsync(String)
- uid: MyApp.Purchasing.Domain.Repositories.ISupplierRepository.GetByEmailAsync*
  name: GetByEmailAsync
  href: api/MyApp.Purchasing.Domain.Repositories.ISupplierRepository.html#MyApp_Purchasing_Domain_Repositories_ISupplierRepository_GetByEmailAsync_
  commentId: Overload:MyApp.Purchasing.Domain.Repositories.ISupplierRepository.GetByEmailAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Domain.Repositories.ISupplierRepository.GetByEmailAsync
  nameWithType: ISupplierRepository.GetByEmailAsync
- uid: MyApp.Purchasing.Domain.Repositories.ISupplierRepository.GetByNameAsync(System.String)
  name: GetByNameAsync(string)
  href: api/MyApp.Purchasing.Domain.Repositories.ISupplierRepository.html#MyApp_Purchasing_Domain_Repositories_ISupplierRepository_GetByNameAsync_System_String_
  commentId: M:MyApp.Purchasing.Domain.Repositories.ISupplierRepository.GetByNameAsync(System.String)
  name.vb: GetByNameAsync(String)
  fullName: MyApp.Purchasing.Domain.Repositories.ISupplierRepository.GetByNameAsync(string)
  fullName.vb: MyApp.Purchasing.Domain.Repositories.ISupplierRepository.GetByNameAsync(String)
  nameWithType: ISupplierRepository.GetByNameAsync(string)
  nameWithType.vb: ISupplierRepository.GetByNameAsync(String)
- uid: MyApp.Purchasing.Domain.Repositories.ISupplierRepository.GetByNameAsync*
  name: GetByNameAsync
  href: api/MyApp.Purchasing.Domain.Repositories.ISupplierRepository.html#MyApp_Purchasing_Domain_Repositories_ISupplierRepository_GetByNameAsync_
  commentId: Overload:MyApp.Purchasing.Domain.Repositories.ISupplierRepository.GetByNameAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Domain.Repositories.ISupplierRepository.GetByNameAsync
  nameWithType: ISupplierRepository.GetByNameAsync
- uid: MyApp.Purchasing.Infrastructure.Data
  name: MyApp.Purchasing.Infrastructure.Data
  href: api/MyApp.Purchasing.Infrastructure.Data.html
  commentId: N:MyApp.Purchasing.Infrastructure.Data
  fullName: MyApp.Purchasing.Infrastructure.Data
  nameWithType: MyApp.Purchasing.Infrastructure.Data
- uid: MyApp.Purchasing.Infrastructure.Data.Configurations
  name: MyApp.Purchasing.Infrastructure.Data.Configurations
  href: api/MyApp.Purchasing.Infrastructure.Data.Configurations.html
  commentId: N:MyApp.Purchasing.Infrastructure.Data.Configurations
  fullName: MyApp.Purchasing.Infrastructure.Data.Configurations
  nameWithType: MyApp.Purchasing.Infrastructure.Data.Configurations
- uid: MyApp.Purchasing.Infrastructure.Data.Configurations.PurchaseOrderLineConfiguration
  name: PurchaseOrderLineConfiguration
  href: api/MyApp.Purchasing.Infrastructure.Data.Configurations.PurchaseOrderLineConfiguration.html
  commentId: T:MyApp.Purchasing.Infrastructure.Data.Configurations.PurchaseOrderLineConfiguration
  fullName: MyApp.Purchasing.Infrastructure.Data.Configurations.PurchaseOrderLineConfiguration
  nameWithType: PurchaseOrderLineConfiguration
- uid: MyApp.Purchasing.Infrastructure.Data.Configurations.PurchaseOrderLineConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine})
  name: Configure(EntityTypeBuilder<PurchaseOrderLine>)
  href: api/MyApp.Purchasing.Infrastructure.Data.Configurations.PurchaseOrderLineConfiguration.html#MyApp_Purchasing_Infrastructure_Data_Configurations_PurchaseOrderLineConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_MyApp_Purchasing_Domain_Entities_PurchaseOrderLine__
  commentId: M:MyApp.Purchasing.Infrastructure.Data.Configurations.PurchaseOrderLineConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{MyApp.Purchasing.Domain.Entities.PurchaseOrderLine})
  name.vb: Configure(EntityTypeBuilder(Of PurchaseOrderLine))
  fullName: MyApp.Purchasing.Infrastructure.Data.Configurations.PurchaseOrderLineConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<MyApp.Purchasing.Domain.Entities.PurchaseOrderLine>)
  fullName.vb: MyApp.Purchasing.Infrastructure.Data.Configurations.PurchaseOrderLineConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of MyApp.Purchasing.Domain.Entities.PurchaseOrderLine))
  nameWithType: PurchaseOrderLineConfiguration.Configure(EntityTypeBuilder<PurchaseOrderLine>)
  nameWithType.vb: PurchaseOrderLineConfiguration.Configure(EntityTypeBuilder(Of PurchaseOrderLine))
- uid: MyApp.Purchasing.Infrastructure.Data.Configurations.PurchaseOrderLineConfiguration.Configure*
  name: Configure
  href: api/MyApp.Purchasing.Infrastructure.Data.Configurations.PurchaseOrderLineConfiguration.html#MyApp_Purchasing_Infrastructure_Data_Configurations_PurchaseOrderLineConfiguration_Configure_
  commentId: Overload:MyApp.Purchasing.Infrastructure.Data.Configurations.PurchaseOrderLineConfiguration.Configure
  isSpec: "True"
  fullName: MyApp.Purchasing.Infrastructure.Data.Configurations.PurchaseOrderLineConfiguration.Configure
  nameWithType: PurchaseOrderLineConfiguration.Configure
- uid: MyApp.Purchasing.Infrastructure.Data.Configurations.SupplierConfiguration
  name: SupplierConfiguration
  href: api/MyApp.Purchasing.Infrastructure.Data.Configurations.SupplierConfiguration.html
  commentId: T:MyApp.Purchasing.Infrastructure.Data.Configurations.SupplierConfiguration
  fullName: MyApp.Purchasing.Infrastructure.Data.Configurations.SupplierConfiguration
  nameWithType: SupplierConfiguration
- uid: MyApp.Purchasing.Infrastructure.Data.Configurations.SupplierConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{MyApp.Purchasing.Domain.Entities.Supplier})
  name: Configure(EntityTypeBuilder<Supplier>)
  href: api/MyApp.Purchasing.Infrastructure.Data.Configurations.SupplierConfiguration.html#MyApp_Purchasing_Infrastructure_Data_Configurations_SupplierConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_MyApp_Purchasing_Domain_Entities_Supplier__
  commentId: M:MyApp.Purchasing.Infrastructure.Data.Configurations.SupplierConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{MyApp.Purchasing.Domain.Entities.Supplier})
  name.vb: Configure(EntityTypeBuilder(Of Supplier))
  fullName: MyApp.Purchasing.Infrastructure.Data.Configurations.SupplierConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<MyApp.Purchasing.Domain.Entities.Supplier>)
  fullName.vb: MyApp.Purchasing.Infrastructure.Data.Configurations.SupplierConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of MyApp.Purchasing.Domain.Entities.Supplier))
  nameWithType: SupplierConfiguration.Configure(EntityTypeBuilder<Supplier>)
  nameWithType.vb: SupplierConfiguration.Configure(EntityTypeBuilder(Of Supplier))
- uid: MyApp.Purchasing.Infrastructure.Data.Configurations.SupplierConfiguration.Configure*
  name: Configure
  href: api/MyApp.Purchasing.Infrastructure.Data.Configurations.SupplierConfiguration.html#MyApp_Purchasing_Infrastructure_Data_Configurations_SupplierConfiguration_Configure_
  commentId: Overload:MyApp.Purchasing.Infrastructure.Data.Configurations.SupplierConfiguration.Configure
  isSpec: "True"
  fullName: MyApp.Purchasing.Infrastructure.Data.Configurations.SupplierConfiguration.Configure
  nameWithType: SupplierConfiguration.Configure
- uid: MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext
  name: PurchasingDbContext
  href: api/MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.html
  commentId: T:MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext
  fullName: MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext
  nameWithType: PurchasingDbContext
- uid: MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext})
  name: PurchasingDbContext(DbContextOptions<PurchasingDbContext>)
  href: api/MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.html#MyApp_Purchasing_Infrastructure_Data_PurchasingDbContext__ctor_Microsoft_EntityFrameworkCore_DbContextOptions_MyApp_Purchasing_Infrastructure_Data_PurchasingDbContext__
  commentId: M:MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext})
  name.vb: New(DbContextOptions(Of PurchasingDbContext))
  fullName: MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.PurchasingDbContext(Microsoft.EntityFrameworkCore.DbContextOptions<MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext>)
  fullName.vb: MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.New(Microsoft.EntityFrameworkCore.DbContextOptions(Of MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext))
  nameWithType: PurchasingDbContext.PurchasingDbContext(DbContextOptions<PurchasingDbContext>)
  nameWithType.vb: PurchasingDbContext.New(DbContextOptions(Of PurchasingDbContext))
- uid: MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.#ctor*
  name: PurchasingDbContext
  href: api/MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.html#MyApp_Purchasing_Infrastructure_Data_PurchasingDbContext__ctor_
  commentId: Overload:MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.PurchasingDbContext
  fullName.vb: MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.New
  nameWithType: PurchasingDbContext.PurchasingDbContext
  nameWithType.vb: PurchasingDbContext.New
- uid: MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: OnModelCreating(ModelBuilder)
  href: api/MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.html#MyApp_Purchasing_Infrastructure_Data_PurchasingDbContext_OnModelCreating_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: PurchasingDbContext.OnModelCreating(ModelBuilder)
- uid: MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.OnModelCreating*
  name: OnModelCreating
  href: api/MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.html#MyApp_Purchasing_Infrastructure_Data_PurchasingDbContext_OnModelCreating_
  commentId: Overload:MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.OnModelCreating
  isSpec: "True"
  fullName: MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.OnModelCreating
  nameWithType: PurchasingDbContext.OnModelCreating
- uid: MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.PurchaseOrderLines
  name: PurchaseOrderLines
  href: api/MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.html#MyApp_Purchasing_Infrastructure_Data_PurchasingDbContext_PurchaseOrderLines
  commentId: P:MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.PurchaseOrderLines
  fullName: MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.PurchaseOrderLines
  nameWithType: PurchasingDbContext.PurchaseOrderLines
- uid: MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.PurchaseOrderLines*
  name: PurchaseOrderLines
  href: api/MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.html#MyApp_Purchasing_Infrastructure_Data_PurchasingDbContext_PurchaseOrderLines_
  commentId: Overload:MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.PurchaseOrderLines
  isSpec: "True"
  fullName: MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.PurchaseOrderLines
  nameWithType: PurchasingDbContext.PurchaseOrderLines
- uid: MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.PurchaseOrders
  name: PurchaseOrders
  href: api/MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.html#MyApp_Purchasing_Infrastructure_Data_PurchasingDbContext_PurchaseOrders
  commentId: P:MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.PurchaseOrders
  fullName: MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.PurchaseOrders
  nameWithType: PurchasingDbContext.PurchaseOrders
- uid: MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.PurchaseOrders*
  name: PurchaseOrders
  href: api/MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.html#MyApp_Purchasing_Infrastructure_Data_PurchasingDbContext_PurchaseOrders_
  commentId: Overload:MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.PurchaseOrders
  isSpec: "True"
  fullName: MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.PurchaseOrders
  nameWithType: PurchasingDbContext.PurchaseOrders
- uid: MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.Suppliers
  name: Suppliers
  href: api/MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.html#MyApp_Purchasing_Infrastructure_Data_PurchasingDbContext_Suppliers
  commentId: P:MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.Suppliers
  fullName: MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.Suppliers
  nameWithType: PurchasingDbContext.Suppliers
- uid: MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.Suppliers*
  name: Suppliers
  href: api/MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.html#MyApp_Purchasing_Infrastructure_Data_PurchasingDbContext_Suppliers_
  commentId: Overload:MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.Suppliers
  isSpec: "True"
  fullName: MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext.Suppliers
  nameWithType: PurchasingDbContext.Suppliers
- uid: MyApp.Purchasing.Infrastructure.Data.PurchasingDbContextFactory
  name: PurchasingDbContextFactory
  href: api/MyApp.Purchasing.Infrastructure.Data.PurchasingDbContextFactory.html
  commentId: T:MyApp.Purchasing.Infrastructure.Data.PurchasingDbContextFactory
  fullName: MyApp.Purchasing.Infrastructure.Data.PurchasingDbContextFactory
  nameWithType: PurchasingDbContextFactory
- uid: MyApp.Purchasing.Infrastructure.Data.PurchasingDbContextFactory.CreateDbContext(System.String[])
  name: CreateDbContext(string[])
  href: api/MyApp.Purchasing.Infrastructure.Data.PurchasingDbContextFactory.html#MyApp_Purchasing_Infrastructure_Data_PurchasingDbContextFactory_CreateDbContext_System_String___
  commentId: M:MyApp.Purchasing.Infrastructure.Data.PurchasingDbContextFactory.CreateDbContext(System.String[])
  name.vb: CreateDbContext(String())
  fullName: MyApp.Purchasing.Infrastructure.Data.PurchasingDbContextFactory.CreateDbContext(string[])
  fullName.vb: MyApp.Purchasing.Infrastructure.Data.PurchasingDbContextFactory.CreateDbContext(String())
  nameWithType: PurchasingDbContextFactory.CreateDbContext(string[])
  nameWithType.vb: PurchasingDbContextFactory.CreateDbContext(String())
- uid: MyApp.Purchasing.Infrastructure.Data.PurchasingDbContextFactory.CreateDbContext*
  name: CreateDbContext
  href: api/MyApp.Purchasing.Infrastructure.Data.PurchasingDbContextFactory.html#MyApp_Purchasing_Infrastructure_Data_PurchasingDbContextFactory_CreateDbContext_
  commentId: Overload:MyApp.Purchasing.Infrastructure.Data.PurchasingDbContextFactory.CreateDbContext
  isSpec: "True"
  fullName: MyApp.Purchasing.Infrastructure.Data.PurchasingDbContextFactory.CreateDbContext
  nameWithType: PurchasingDbContextFactory.CreateDbContext
- uid: MyApp.Purchasing.Infrastructure.Data.Repositories
  name: MyApp.Purchasing.Infrastructure.Data.Repositories
  href: api/MyApp.Purchasing.Infrastructure.Data.Repositories.html
  commentId: N:MyApp.Purchasing.Infrastructure.Data.Repositories
  fullName: MyApp.Purchasing.Infrastructure.Data.Repositories
  nameWithType: MyApp.Purchasing.Infrastructure.Data.Repositories
- uid: MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderLineRepository
  name: PurchaseOrderLineRepository
  href: api/MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderLineRepository.html
  commentId: T:MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderLineRepository
  fullName: MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderLineRepository
  nameWithType: PurchaseOrderLineRepository
- uid: MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderLineRepository.#ctor(MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext)
  name: PurchaseOrderLineRepository(PurchasingDbContext)
  href: api/MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderLineRepository.html#MyApp_Purchasing_Infrastructure_Data_Repositories_PurchaseOrderLineRepository__ctor_MyApp_Purchasing_Infrastructure_Data_PurchasingDbContext_
  commentId: M:MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderLineRepository.#ctor(MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext)
  name.vb: New(PurchasingDbContext)
  fullName: MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderLineRepository.PurchaseOrderLineRepository(MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext)
  fullName.vb: MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderLineRepository.New(MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext)
  nameWithType: PurchaseOrderLineRepository.PurchaseOrderLineRepository(PurchasingDbContext)
  nameWithType.vb: PurchaseOrderLineRepository.New(PurchasingDbContext)
- uid: MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderLineRepository.#ctor*
  name: PurchaseOrderLineRepository
  href: api/MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderLineRepository.html#MyApp_Purchasing_Infrastructure_Data_Repositories_PurchaseOrderLineRepository__ctor_
  commentId: Overload:MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderLineRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderLineRepository.PurchaseOrderLineRepository
  fullName.vb: MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderLineRepository.New
  nameWithType: PurchaseOrderLineRepository.PurchaseOrderLineRepository
  nameWithType.vb: PurchaseOrderLineRepository.New
- uid: MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderLineRepository.GetByPurchaseOrderIdAsync(System.Guid)
  name: GetByPurchaseOrderIdAsync(Guid)
  href: api/MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderLineRepository.html#MyApp_Purchasing_Infrastructure_Data_Repositories_PurchaseOrderLineRepository_GetByPurchaseOrderIdAsync_System_Guid_
  commentId: M:MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderLineRepository.GetByPurchaseOrderIdAsync(System.Guid)
  fullName: MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderLineRepository.GetByPurchaseOrderIdAsync(System.Guid)
  nameWithType: PurchaseOrderLineRepository.GetByPurchaseOrderIdAsync(Guid)
- uid: MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderLineRepository.GetByPurchaseOrderIdAsync*
  name: GetByPurchaseOrderIdAsync
  href: api/MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderLineRepository.html#MyApp_Purchasing_Infrastructure_Data_Repositories_PurchaseOrderLineRepository_GetByPurchaseOrderIdAsync_
  commentId: Overload:MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderLineRepository.GetByPurchaseOrderIdAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderLineRepository.GetByPurchaseOrderIdAsync
  nameWithType: PurchaseOrderLineRepository.GetByPurchaseOrderIdAsync
- uid: MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository
  name: PurchaseOrderRepository
  href: api/MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository.html
  commentId: T:MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository
  fullName: MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository
  nameWithType: PurchaseOrderRepository
- uid: MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository.#ctor(MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext)
  name: PurchaseOrderRepository(PurchasingDbContext)
  href: api/MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository.html#MyApp_Purchasing_Infrastructure_Data_Repositories_PurchaseOrderRepository__ctor_MyApp_Purchasing_Infrastructure_Data_PurchasingDbContext_
  commentId: M:MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository.#ctor(MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext)
  name.vb: New(PurchasingDbContext)
  fullName: MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository.PurchaseOrderRepository(MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext)
  fullName.vb: MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository.New(MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext)
  nameWithType: PurchaseOrderRepository.PurchaseOrderRepository(PurchasingDbContext)
  nameWithType.vb: PurchaseOrderRepository.New(PurchasingDbContext)
- uid: MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository.#ctor*
  name: PurchaseOrderRepository
  href: api/MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository.html#MyApp_Purchasing_Infrastructure_Data_Repositories_PurchaseOrderRepository__ctor_
  commentId: Overload:MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository.PurchaseOrderRepository
  fullName.vb: MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository.New
  nameWithType: PurchaseOrderRepository.PurchaseOrderRepository
  nameWithType.vb: PurchaseOrderRepository.New
- uid: MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository.GetByStatusAsync(MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus)
  name: GetByStatusAsync(PurchaseOrderStatus)
  href: api/MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository.html#MyApp_Purchasing_Infrastructure_Data_Repositories_PurchaseOrderRepository_GetByStatusAsync_MyApp_Purchasing_Domain_Entities_PurchaseOrderStatus_
  commentId: M:MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository.GetByStatusAsync(MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus)
  fullName: MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository.GetByStatusAsync(MyApp.Purchasing.Domain.Entities.PurchaseOrderStatus)
  nameWithType: PurchaseOrderRepository.GetByStatusAsync(PurchaseOrderStatus)
- uid: MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository.GetByStatusAsync*
  name: GetByStatusAsync
  href: api/MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository.html#MyApp_Purchasing_Infrastructure_Data_Repositories_PurchaseOrderRepository_GetByStatusAsync_
  commentId: Overload:MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository.GetByStatusAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository.GetByStatusAsync
  nameWithType: PurchaseOrderRepository.GetByStatusAsync
- uid: MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository.GetBySuppliersIdAsync(System.Guid)
  name: GetBySuppliersIdAsync(Guid)
  href: api/MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository.html#MyApp_Purchasing_Infrastructure_Data_Repositories_PurchaseOrderRepository_GetBySuppliersIdAsync_System_Guid_
  commentId: M:MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository.GetBySuppliersIdAsync(System.Guid)
  fullName: MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository.GetBySuppliersIdAsync(System.Guid)
  nameWithType: PurchaseOrderRepository.GetBySuppliersIdAsync(Guid)
- uid: MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository.GetBySuppliersIdAsync*
  name: GetBySuppliersIdAsync
  href: api/MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository.html#MyApp_Purchasing_Infrastructure_Data_Repositories_PurchaseOrderRepository_GetBySuppliersIdAsync_
  commentId: Overload:MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository.GetBySuppliersIdAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository.GetBySuppliersIdAsync
  nameWithType: PurchaseOrderRepository.GetBySuppliersIdAsync
- uid: MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository.GetWithLinesAsync(System.Guid)
  name: GetWithLinesAsync(Guid)
  href: api/MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository.html#MyApp_Purchasing_Infrastructure_Data_Repositories_PurchaseOrderRepository_GetWithLinesAsync_System_Guid_
  commentId: M:MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository.GetWithLinesAsync(System.Guid)
  fullName: MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository.GetWithLinesAsync(System.Guid)
  nameWithType: PurchaseOrderRepository.GetWithLinesAsync(Guid)
- uid: MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository.GetWithLinesAsync*
  name: GetWithLinesAsync
  href: api/MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository.html#MyApp_Purchasing_Infrastructure_Data_Repositories_PurchaseOrderRepository_GetWithLinesAsync_
  commentId: Overload:MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository.GetWithLinesAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Infrastructure.Data.Repositories.PurchaseOrderRepository.GetWithLinesAsync
  nameWithType: PurchaseOrderRepository.GetWithLinesAsync
- uid: MyApp.Purchasing.Infrastructure.Data.Repositories.SupplierRepository
  name: SupplierRepository
  href: api/MyApp.Purchasing.Infrastructure.Data.Repositories.SupplierRepository.html
  commentId: T:MyApp.Purchasing.Infrastructure.Data.Repositories.SupplierRepository
  fullName: MyApp.Purchasing.Infrastructure.Data.Repositories.SupplierRepository
  nameWithType: SupplierRepository
- uid: MyApp.Purchasing.Infrastructure.Data.Repositories.SupplierRepository.#ctor(MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext)
  name: SupplierRepository(PurchasingDbContext)
  href: api/MyApp.Purchasing.Infrastructure.Data.Repositories.SupplierRepository.html#MyApp_Purchasing_Infrastructure_Data_Repositories_SupplierRepository__ctor_MyApp_Purchasing_Infrastructure_Data_PurchasingDbContext_
  commentId: M:MyApp.Purchasing.Infrastructure.Data.Repositories.SupplierRepository.#ctor(MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext)
  name.vb: New(PurchasingDbContext)
  fullName: MyApp.Purchasing.Infrastructure.Data.Repositories.SupplierRepository.SupplierRepository(MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext)
  fullName.vb: MyApp.Purchasing.Infrastructure.Data.Repositories.SupplierRepository.New(MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext)
  nameWithType: SupplierRepository.SupplierRepository(PurchasingDbContext)
  nameWithType.vb: SupplierRepository.New(PurchasingDbContext)
- uid: MyApp.Purchasing.Infrastructure.Data.Repositories.SupplierRepository.#ctor*
  name: SupplierRepository
  href: api/MyApp.Purchasing.Infrastructure.Data.Repositories.SupplierRepository.html#MyApp_Purchasing_Infrastructure_Data_Repositories_SupplierRepository__ctor_
  commentId: Overload:MyApp.Purchasing.Infrastructure.Data.Repositories.SupplierRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Purchasing.Infrastructure.Data.Repositories.SupplierRepository.SupplierRepository
  fullName.vb: MyApp.Purchasing.Infrastructure.Data.Repositories.SupplierRepository.New
  nameWithType: SupplierRepository.SupplierRepository
  nameWithType.vb: SupplierRepository.New
- uid: MyApp.Purchasing.Infrastructure.Data.Repositories.SupplierRepository.GetByEmailAsync(System.String)
  name: GetByEmailAsync(string)
  href: api/MyApp.Purchasing.Infrastructure.Data.Repositories.SupplierRepository.html#MyApp_Purchasing_Infrastructure_Data_Repositories_SupplierRepository_GetByEmailAsync_System_String_
  commentId: M:MyApp.Purchasing.Infrastructure.Data.Repositories.SupplierRepository.GetByEmailAsync(System.String)
  name.vb: GetByEmailAsync(String)
  fullName: MyApp.Purchasing.Infrastructure.Data.Repositories.SupplierRepository.GetByEmailAsync(string)
  fullName.vb: MyApp.Purchasing.Infrastructure.Data.Repositories.SupplierRepository.GetByEmailAsync(String)
  nameWithType: SupplierRepository.GetByEmailAsync(string)
  nameWithType.vb: SupplierRepository.GetByEmailAsync(String)
- uid: MyApp.Purchasing.Infrastructure.Data.Repositories.SupplierRepository.GetByEmailAsync*
  name: GetByEmailAsync
  href: api/MyApp.Purchasing.Infrastructure.Data.Repositories.SupplierRepository.html#MyApp_Purchasing_Infrastructure_Data_Repositories_SupplierRepository_GetByEmailAsync_
  commentId: Overload:MyApp.Purchasing.Infrastructure.Data.Repositories.SupplierRepository.GetByEmailAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Infrastructure.Data.Repositories.SupplierRepository.GetByEmailAsync
  nameWithType: SupplierRepository.GetByEmailAsync
- uid: MyApp.Purchasing.Infrastructure.Data.Repositories.SupplierRepository.GetByNameAsync(System.String)
  name: GetByNameAsync(string)
  href: api/MyApp.Purchasing.Infrastructure.Data.Repositories.SupplierRepository.html#MyApp_Purchasing_Infrastructure_Data_Repositories_SupplierRepository_GetByNameAsync_System_String_
  commentId: M:MyApp.Purchasing.Infrastructure.Data.Repositories.SupplierRepository.GetByNameAsync(System.String)
  name.vb: GetByNameAsync(String)
  fullName: MyApp.Purchasing.Infrastructure.Data.Repositories.SupplierRepository.GetByNameAsync(string)
  fullName.vb: MyApp.Purchasing.Infrastructure.Data.Repositories.SupplierRepository.GetByNameAsync(String)
  nameWithType: SupplierRepository.GetByNameAsync(string)
  nameWithType.vb: SupplierRepository.GetByNameAsync(String)
- uid: MyApp.Purchasing.Infrastructure.Data.Repositories.SupplierRepository.GetByNameAsync*
  name: GetByNameAsync
  href: api/MyApp.Purchasing.Infrastructure.Data.Repositories.SupplierRepository.html#MyApp_Purchasing_Infrastructure_Data_Repositories_SupplierRepository_GetByNameAsync_
  commentId: Overload:MyApp.Purchasing.Infrastructure.Data.Repositories.SupplierRepository.GetByNameAsync
  isSpec: "True"
  fullName: MyApp.Purchasing.Infrastructure.Data.Repositories.SupplierRepository.GetByNameAsync
  nameWithType: SupplierRepository.GetByNameAsync
- uid: MyApp.Purchasing.Infrastructure.Migrations
  name: MyApp.Purchasing.Infrastructure.Migrations
  href: api/MyApp.Purchasing.Infrastructure.Migrations.html
  commentId: N:MyApp.Purchasing.Infrastructure.Migrations
  fullName: MyApp.Purchasing.Infrastructure.Migrations
  nameWithType: MyApp.Purchasing.Infrastructure.Migrations
- uid: MyApp.Purchasing.Infrastructure.Migrations.AuditableEntities
  name: AuditableEntities
  href: api/MyApp.Purchasing.Infrastructure.Migrations.AuditableEntities.html
  commentId: T:MyApp.Purchasing.Infrastructure.Migrations.AuditableEntities
  fullName: MyApp.Purchasing.Infrastructure.Migrations.AuditableEntities
  nameWithType: AuditableEntities
- uid: MyApp.Purchasing.Infrastructure.Migrations.AuditableEntities.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/MyApp.Purchasing.Infrastructure.Migrations.AuditableEntities.html#MyApp_Purchasing_Infrastructure_Migrations_AuditableEntities_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:MyApp.Purchasing.Infrastructure.Migrations.AuditableEntities.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: MyApp.Purchasing.Infrastructure.Migrations.AuditableEntities.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: AuditableEntities.BuildTargetModel(ModelBuilder)
- uid: MyApp.Purchasing.Infrastructure.Migrations.AuditableEntities.BuildTargetModel*
  name: BuildTargetModel
  href: api/MyApp.Purchasing.Infrastructure.Migrations.AuditableEntities.html#MyApp_Purchasing_Infrastructure_Migrations_AuditableEntities_BuildTargetModel_
  commentId: Overload:MyApp.Purchasing.Infrastructure.Migrations.AuditableEntities.BuildTargetModel
  isSpec: "True"
  fullName: MyApp.Purchasing.Infrastructure.Migrations.AuditableEntities.BuildTargetModel
  nameWithType: AuditableEntities.BuildTargetModel
- uid: MyApp.Purchasing.Infrastructure.Migrations.AuditableEntities.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/MyApp.Purchasing.Infrastructure.Migrations.AuditableEntities.html#MyApp_Purchasing_Infrastructure_Migrations_AuditableEntities_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MyApp.Purchasing.Infrastructure.Migrations.AuditableEntities.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MyApp.Purchasing.Infrastructure.Migrations.AuditableEntities.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: AuditableEntities.Down(MigrationBuilder)
- uid: MyApp.Purchasing.Infrastructure.Migrations.AuditableEntities.Down*
  name: Down
  href: api/MyApp.Purchasing.Infrastructure.Migrations.AuditableEntities.html#MyApp_Purchasing_Infrastructure_Migrations_AuditableEntities_Down_
  commentId: Overload:MyApp.Purchasing.Infrastructure.Migrations.AuditableEntities.Down
  isSpec: "True"
  fullName: MyApp.Purchasing.Infrastructure.Migrations.AuditableEntities.Down
  nameWithType: AuditableEntities.Down
- uid: MyApp.Purchasing.Infrastructure.Migrations.AuditableEntities.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/MyApp.Purchasing.Infrastructure.Migrations.AuditableEntities.html#MyApp_Purchasing_Infrastructure_Migrations_AuditableEntities_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MyApp.Purchasing.Infrastructure.Migrations.AuditableEntities.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MyApp.Purchasing.Infrastructure.Migrations.AuditableEntities.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: AuditableEntities.Up(MigrationBuilder)
- uid: MyApp.Purchasing.Infrastructure.Migrations.AuditableEntities.Up*
  name: Up
  href: api/MyApp.Purchasing.Infrastructure.Migrations.AuditableEntities.html#MyApp_Purchasing_Infrastructure_Migrations_AuditableEntities_Up_
  commentId: Overload:MyApp.Purchasing.Infrastructure.Migrations.AuditableEntities.Up
  isSpec: "True"
  fullName: MyApp.Purchasing.Infrastructure.Migrations.AuditableEntities.Up
  nameWithType: AuditableEntities.Up
- uid: MyApp.Purchasing.Infrastructure.Migrations.InitialPurchasing
  name: InitialPurchasing
  href: api/MyApp.Purchasing.Infrastructure.Migrations.InitialPurchasing.html
  commentId: T:MyApp.Purchasing.Infrastructure.Migrations.InitialPurchasing
  fullName: MyApp.Purchasing.Infrastructure.Migrations.InitialPurchasing
  nameWithType: InitialPurchasing
- uid: MyApp.Purchasing.Infrastructure.Migrations.InitialPurchasing.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/MyApp.Purchasing.Infrastructure.Migrations.InitialPurchasing.html#MyApp_Purchasing_Infrastructure_Migrations_InitialPurchasing_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:MyApp.Purchasing.Infrastructure.Migrations.InitialPurchasing.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: MyApp.Purchasing.Infrastructure.Migrations.InitialPurchasing.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: InitialPurchasing.BuildTargetModel(ModelBuilder)
- uid: MyApp.Purchasing.Infrastructure.Migrations.InitialPurchasing.BuildTargetModel*
  name: BuildTargetModel
  href: api/MyApp.Purchasing.Infrastructure.Migrations.InitialPurchasing.html#MyApp_Purchasing_Infrastructure_Migrations_InitialPurchasing_BuildTargetModel_
  commentId: Overload:MyApp.Purchasing.Infrastructure.Migrations.InitialPurchasing.BuildTargetModel
  isSpec: "True"
  fullName: MyApp.Purchasing.Infrastructure.Migrations.InitialPurchasing.BuildTargetModel
  nameWithType: InitialPurchasing.BuildTargetModel
- uid: MyApp.Purchasing.Infrastructure.Migrations.InitialPurchasing.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/MyApp.Purchasing.Infrastructure.Migrations.InitialPurchasing.html#MyApp_Purchasing_Infrastructure_Migrations_InitialPurchasing_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MyApp.Purchasing.Infrastructure.Migrations.InitialPurchasing.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MyApp.Purchasing.Infrastructure.Migrations.InitialPurchasing.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: InitialPurchasing.Down(MigrationBuilder)
- uid: MyApp.Purchasing.Infrastructure.Migrations.InitialPurchasing.Down*
  name: Down
  href: api/MyApp.Purchasing.Infrastructure.Migrations.InitialPurchasing.html#MyApp_Purchasing_Infrastructure_Migrations_InitialPurchasing_Down_
  commentId: Overload:MyApp.Purchasing.Infrastructure.Migrations.InitialPurchasing.Down
  isSpec: "True"
  fullName: MyApp.Purchasing.Infrastructure.Migrations.InitialPurchasing.Down
  nameWithType: InitialPurchasing.Down
- uid: MyApp.Purchasing.Infrastructure.Migrations.InitialPurchasing.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/MyApp.Purchasing.Infrastructure.Migrations.InitialPurchasing.html#MyApp_Purchasing_Infrastructure_Migrations_InitialPurchasing_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MyApp.Purchasing.Infrastructure.Migrations.InitialPurchasing.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MyApp.Purchasing.Infrastructure.Migrations.InitialPurchasing.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: InitialPurchasing.Up(MigrationBuilder)
- uid: MyApp.Purchasing.Infrastructure.Migrations.InitialPurchasing.Up*
  name: Up
  href: api/MyApp.Purchasing.Infrastructure.Migrations.InitialPurchasing.html#MyApp_Purchasing_Infrastructure_Migrations_InitialPurchasing_Up_
  commentId: Overload:MyApp.Purchasing.Infrastructure.Migrations.InitialPurchasing.Up
  isSpec: "True"
  fullName: MyApp.Purchasing.Infrastructure.Migrations.InitialPurchasing.Up
  nameWithType: InitialPurchasing.Up
- uid: MyApp.Purchasing.Tests.Helpers
  name: MyApp.Purchasing.Tests.Helpers
  href: api/MyApp.Purchasing.Tests.Helpers.html
  commentId: N:MyApp.Purchasing.Tests.Helpers
  fullName: MyApp.Purchasing.Tests.Helpers
  nameWithType: MyApp.Purchasing.Tests.Helpers
- uid: MyApp.Purchasing.Tests.Helpers.TestDbContextFactory
  name: TestDbContextFactory
  href: api/MyApp.Purchasing.Tests.Helpers.TestDbContextFactory.html
  commentId: T:MyApp.Purchasing.Tests.Helpers.TestDbContextFactory
  fullName: MyApp.Purchasing.Tests.Helpers.TestDbContextFactory
  nameWithType: TestDbContextFactory
- uid: MyApp.Purchasing.Tests.Helpers.TestDbContextFactory.CreateInMemoryContext
  name: CreateInMemoryContext()
  href: api/MyApp.Purchasing.Tests.Helpers.TestDbContextFactory.html#MyApp_Purchasing_Tests_Helpers_TestDbContextFactory_CreateInMemoryContext
  commentId: M:MyApp.Purchasing.Tests.Helpers.TestDbContextFactory.CreateInMemoryContext
  fullName: MyApp.Purchasing.Tests.Helpers.TestDbContextFactory.CreateInMemoryContext()
  nameWithType: TestDbContextFactory.CreateInMemoryContext()
- uid: MyApp.Purchasing.Tests.Helpers.TestDbContextFactory.CreateInMemoryContext*
  name: CreateInMemoryContext
  href: api/MyApp.Purchasing.Tests.Helpers.TestDbContextFactory.html#MyApp_Purchasing_Tests_Helpers_TestDbContextFactory_CreateInMemoryContext_
  commentId: Overload:MyApp.Purchasing.Tests.Helpers.TestDbContextFactory.CreateInMemoryContext
  isSpec: "True"
  fullName: MyApp.Purchasing.Tests.Helpers.TestDbContextFactory.CreateInMemoryContext
  nameWithType: TestDbContextFactory.CreateInMemoryContext
- uid: MyApp.Purchasing.Tests.Helpers.TestDbContextFactory.SeedTestData(MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext)
  name: SeedTestData(PurchasingDbContext)
  href: api/MyApp.Purchasing.Tests.Helpers.TestDbContextFactory.html#MyApp_Purchasing_Tests_Helpers_TestDbContextFactory_SeedTestData_MyApp_Purchasing_Infrastructure_Data_PurchasingDbContext_
  commentId: M:MyApp.Purchasing.Tests.Helpers.TestDbContextFactory.SeedTestData(MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext)
  fullName: MyApp.Purchasing.Tests.Helpers.TestDbContextFactory.SeedTestData(MyApp.Purchasing.Infrastructure.Data.PurchasingDbContext)
  nameWithType: TestDbContextFactory.SeedTestData(PurchasingDbContext)
- uid: MyApp.Purchasing.Tests.Helpers.TestDbContextFactory.SeedTestData*
  name: SeedTestData
  href: api/MyApp.Purchasing.Tests.Helpers.TestDbContextFactory.html#MyApp_Purchasing_Tests_Helpers_TestDbContextFactory_SeedTestData_
  commentId: Overload:MyApp.Purchasing.Tests.Helpers.TestDbContextFactory.SeedTestData
  isSpec: "True"
  fullName: MyApp.Purchasing.Tests.Helpers.TestDbContextFactory.SeedTestData
  nameWithType: TestDbContextFactory.SeedTestData
- uid: MyApp.Purchasing.Tests.Repositories
  name: MyApp.Purchasing.Tests.Repositories
  href: api/MyApp.Purchasing.Tests.Repositories.html
  commentId: N:MyApp.Purchasing.Tests.Repositories
  fullName: MyApp.Purchasing.Tests.Repositories
  nameWithType: MyApp.Purchasing.Tests.Repositories
- uid: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests
  name: SupplierRepositoryTests
  href: api/MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.html
  commentId: T:MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests
  fullName: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests
  nameWithType: SupplierRepositoryTests
- uid: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.#ctor
  name: SupplierRepositoryTests()
  href: api/MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.html#MyApp_Purchasing_Tests_Repositories_SupplierRepositoryTests__ctor
  commentId: M:MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.#ctor
  name.vb: New()
  fullName: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.SupplierRepositoryTests()
  fullName.vb: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.New()
  nameWithType: SupplierRepositoryTests.SupplierRepositoryTests()
  nameWithType.vb: SupplierRepositoryTests.New()
- uid: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.#ctor*
  name: SupplierRepositoryTests
  href: api/MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.html#MyApp_Purchasing_Tests_Repositories_SupplierRepositoryTests__ctor_
  commentId: Overload:MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.SupplierRepositoryTests
  fullName.vb: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.New
  nameWithType: SupplierRepositoryTests.SupplierRepositoryTests
  nameWithType.vb: SupplierRepositoryTests.New
- uid: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.AddAsync_WithValidSupplier_CreatesSupplier
  name: AddAsync_WithValidSupplier_CreatesSupplier()
  href: api/MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.html#MyApp_Purchasing_Tests_Repositories_SupplierRepositoryTests_AddAsync_WithValidSupplier_CreatesSupplier
  commentId: M:MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.AddAsync_WithValidSupplier_CreatesSupplier
  fullName: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.AddAsync_WithValidSupplier_CreatesSupplier()
  nameWithType: SupplierRepositoryTests.AddAsync_WithValidSupplier_CreatesSupplier()
- uid: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.AddAsync_WithValidSupplier_CreatesSupplier*
  name: AddAsync_WithValidSupplier_CreatesSupplier
  href: api/MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.html#MyApp_Purchasing_Tests_Repositories_SupplierRepositoryTests_AddAsync_WithValidSupplier_CreatesSupplier_
  commentId: Overload:MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.AddAsync_WithValidSupplier_CreatesSupplier
  isSpec: "True"
  fullName: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.AddAsync_WithValidSupplier_CreatesSupplier
  nameWithType: SupplierRepositoryTests.AddAsync_WithValidSupplier_CreatesSupplier
- uid: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.DeleteAsync_WithValidId_DeletesSupplier
  name: DeleteAsync_WithValidId_DeletesSupplier()
  href: api/MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.html#MyApp_Purchasing_Tests_Repositories_SupplierRepositoryTests_DeleteAsync_WithValidId_DeletesSupplier
  commentId: M:MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.DeleteAsync_WithValidId_DeletesSupplier
  fullName: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.DeleteAsync_WithValidId_DeletesSupplier()
  nameWithType: SupplierRepositoryTests.DeleteAsync_WithValidId_DeletesSupplier()
- uid: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.DeleteAsync_WithValidId_DeletesSupplier*
  name: DeleteAsync_WithValidId_DeletesSupplier
  href: api/MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.html#MyApp_Purchasing_Tests_Repositories_SupplierRepositoryTests_DeleteAsync_WithValidId_DeletesSupplier_
  commentId: Overload:MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.DeleteAsync_WithValidId_DeletesSupplier
  isSpec: "True"
  fullName: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.DeleteAsync_WithValidId_DeletesSupplier
  nameWithType: SupplierRepositoryTests.DeleteAsync_WithValidId_DeletesSupplier
- uid: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetAllAsync_ReturnsAllSuppliers
  name: GetAllAsync_ReturnsAllSuppliers()
  href: api/MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.html#MyApp_Purchasing_Tests_Repositories_SupplierRepositoryTests_GetAllAsync_ReturnsAllSuppliers
  commentId: M:MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetAllAsync_ReturnsAllSuppliers
  fullName: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetAllAsync_ReturnsAllSuppliers()
  nameWithType: SupplierRepositoryTests.GetAllAsync_ReturnsAllSuppliers()
- uid: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetAllAsync_ReturnsAllSuppliers*
  name: GetAllAsync_ReturnsAllSuppliers
  href: api/MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.html#MyApp_Purchasing_Tests_Repositories_SupplierRepositoryTests_GetAllAsync_ReturnsAllSuppliers_
  commentId: Overload:MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetAllAsync_ReturnsAllSuppliers
  isSpec: "True"
  fullName: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetAllAsync_ReturnsAllSuppliers
  nameWithType: SupplierRepositoryTests.GetAllAsync_ReturnsAllSuppliers
- uid: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetByEmailAsync_WithNonExistentEmail_ReturnsNull
  name: GetByEmailAsync_WithNonExistentEmail_ReturnsNull()
  href: api/MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.html#MyApp_Purchasing_Tests_Repositories_SupplierRepositoryTests_GetByEmailAsync_WithNonExistentEmail_ReturnsNull
  commentId: M:MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetByEmailAsync_WithNonExistentEmail_ReturnsNull
  fullName: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetByEmailAsync_WithNonExistentEmail_ReturnsNull()
  nameWithType: SupplierRepositoryTests.GetByEmailAsync_WithNonExistentEmail_ReturnsNull()
- uid: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetByEmailAsync_WithNonExistentEmail_ReturnsNull*
  name: GetByEmailAsync_WithNonExistentEmail_ReturnsNull
  href: api/MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.html#MyApp_Purchasing_Tests_Repositories_SupplierRepositoryTests_GetByEmailAsync_WithNonExistentEmail_ReturnsNull_
  commentId: Overload:MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetByEmailAsync_WithNonExistentEmail_ReturnsNull
  isSpec: "True"
  fullName: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetByEmailAsync_WithNonExistentEmail_ReturnsNull
  nameWithType: SupplierRepositoryTests.GetByEmailAsync_WithNonExistentEmail_ReturnsNull
- uid: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetByEmailAsync_WithValidEmail_ReturnsSupplier
  name: GetByEmailAsync_WithValidEmail_ReturnsSupplier()
  href: api/MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.html#MyApp_Purchasing_Tests_Repositories_SupplierRepositoryTests_GetByEmailAsync_WithValidEmail_ReturnsSupplier
  commentId: M:MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetByEmailAsync_WithValidEmail_ReturnsSupplier
  fullName: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetByEmailAsync_WithValidEmail_ReturnsSupplier()
  nameWithType: SupplierRepositoryTests.GetByEmailAsync_WithValidEmail_ReturnsSupplier()
- uid: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetByEmailAsync_WithValidEmail_ReturnsSupplier*
  name: GetByEmailAsync_WithValidEmail_ReturnsSupplier
  href: api/MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.html#MyApp_Purchasing_Tests_Repositories_SupplierRepositoryTests_GetByEmailAsync_WithValidEmail_ReturnsSupplier_
  commentId: Overload:MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetByEmailAsync_WithValidEmail_ReturnsSupplier
  isSpec: "True"
  fullName: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetByEmailAsync_WithValidEmail_ReturnsSupplier
  nameWithType: SupplierRepositoryTests.GetByEmailAsync_WithValidEmail_ReturnsSupplier
- uid: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull
  name: GetByIdAsync_WithNonExistentId_ReturnsNull()
  href: api/MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.html#MyApp_Purchasing_Tests_Repositories_SupplierRepositoryTests_GetByIdAsync_WithNonExistentId_ReturnsNull
  commentId: M:MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull
  fullName: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull()
  nameWithType: SupplierRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull()
- uid: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull*
  name: GetByIdAsync_WithNonExistentId_ReturnsNull
  href: api/MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.html#MyApp_Purchasing_Tests_Repositories_SupplierRepositoryTests_GetByIdAsync_WithNonExistentId_ReturnsNull_
  commentId: Overload:MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull
  isSpec: "True"
  fullName: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull
  nameWithType: SupplierRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull
- uid: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetByIdAsync_WithValidId_ReturnsSupplier
  name: GetByIdAsync_WithValidId_ReturnsSupplier()
  href: api/MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.html#MyApp_Purchasing_Tests_Repositories_SupplierRepositoryTests_GetByIdAsync_WithValidId_ReturnsSupplier
  commentId: M:MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetByIdAsync_WithValidId_ReturnsSupplier
  fullName: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetByIdAsync_WithValidId_ReturnsSupplier()
  nameWithType: SupplierRepositoryTests.GetByIdAsync_WithValidId_ReturnsSupplier()
- uid: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetByIdAsync_WithValidId_ReturnsSupplier*
  name: GetByIdAsync_WithValidId_ReturnsSupplier
  href: api/MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.html#MyApp_Purchasing_Tests_Repositories_SupplierRepositoryTests_GetByIdAsync_WithValidId_ReturnsSupplier_
  commentId: Overload:MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetByIdAsync_WithValidId_ReturnsSupplier
  isSpec: "True"
  fullName: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetByIdAsync_WithValidId_ReturnsSupplier
  nameWithType: SupplierRepositoryTests.GetByIdAsync_WithValidId_ReturnsSupplier
- uid: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetByNameAsync_WithNoMatches_ReturnsEmpty
  name: GetByNameAsync_WithNoMatches_ReturnsEmpty()
  href: api/MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.html#MyApp_Purchasing_Tests_Repositories_SupplierRepositoryTests_GetByNameAsync_WithNoMatches_ReturnsEmpty
  commentId: M:MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetByNameAsync_WithNoMatches_ReturnsEmpty
  fullName: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetByNameAsync_WithNoMatches_ReturnsEmpty()
  nameWithType: SupplierRepositoryTests.GetByNameAsync_WithNoMatches_ReturnsEmpty()
- uid: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetByNameAsync_WithNoMatches_ReturnsEmpty*
  name: GetByNameAsync_WithNoMatches_ReturnsEmpty
  href: api/MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.html#MyApp_Purchasing_Tests_Repositories_SupplierRepositoryTests_GetByNameAsync_WithNoMatches_ReturnsEmpty_
  commentId: Overload:MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetByNameAsync_WithNoMatches_ReturnsEmpty
  isSpec: "True"
  fullName: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetByNameAsync_WithNoMatches_ReturnsEmpty
  nameWithType: SupplierRepositoryTests.GetByNameAsync_WithNoMatches_ReturnsEmpty
- uid: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetByNameAsync_WithPartialName_ReturnsMatchingSuppliers
  name: GetByNameAsync_WithPartialName_ReturnsMatchingSuppliers()
  href: api/MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.html#MyApp_Purchasing_Tests_Repositories_SupplierRepositoryTests_GetByNameAsync_WithPartialName_ReturnsMatchingSuppliers
  commentId: M:MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetByNameAsync_WithPartialName_ReturnsMatchingSuppliers
  fullName: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetByNameAsync_WithPartialName_ReturnsMatchingSuppliers()
  nameWithType: SupplierRepositoryTests.GetByNameAsync_WithPartialName_ReturnsMatchingSuppliers()
- uid: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetByNameAsync_WithPartialName_ReturnsMatchingSuppliers*
  name: GetByNameAsync_WithPartialName_ReturnsMatchingSuppliers
  href: api/MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.html#MyApp_Purchasing_Tests_Repositories_SupplierRepositoryTests_GetByNameAsync_WithPartialName_ReturnsMatchingSuppliers_
  commentId: Overload:MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetByNameAsync_WithPartialName_ReturnsMatchingSuppliers
  isSpec: "True"
  fullName: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.GetByNameAsync_WithPartialName_ReturnsMatchingSuppliers
  nameWithType: SupplierRepositoryTests.GetByNameAsync_WithPartialName_ReturnsMatchingSuppliers
- uid: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.UpdateAsync_WithExistingSupplier_UpdatesSupplierData
  name: UpdateAsync_WithExistingSupplier_UpdatesSupplierData()
  href: api/MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.html#MyApp_Purchasing_Tests_Repositories_SupplierRepositoryTests_UpdateAsync_WithExistingSupplier_UpdatesSupplierData
  commentId: M:MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.UpdateAsync_WithExistingSupplier_UpdatesSupplierData
  fullName: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.UpdateAsync_WithExistingSupplier_UpdatesSupplierData()
  nameWithType: SupplierRepositoryTests.UpdateAsync_WithExistingSupplier_UpdatesSupplierData()
- uid: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.UpdateAsync_WithExistingSupplier_UpdatesSupplierData*
  name: UpdateAsync_WithExistingSupplier_UpdatesSupplierData
  href: api/MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.html#MyApp_Purchasing_Tests_Repositories_SupplierRepositoryTests_UpdateAsync_WithExistingSupplier_UpdatesSupplierData_
  commentId: Overload:MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.UpdateAsync_WithExistingSupplier_UpdatesSupplierData
  isSpec: "True"
  fullName: MyApp.Purchasing.Tests.Repositories.SupplierRepositoryTests.UpdateAsync_WithExistingSupplier_UpdatesSupplierData
  nameWithType: SupplierRepositoryTests.UpdateAsync_WithExistingSupplier_UpdatesSupplierData
- uid: MyApp.Sales.API.Controllers
  name: MyApp.Sales.API.Controllers
  href: api/MyApp.Sales.API.Controllers.html
  commentId: N:MyApp.Sales.API.Controllers
  fullName: MyApp.Sales.API.Controllers
  nameWithType: MyApp.Sales.API.Controllers
- uid: MyApp.Sales.API.Controllers.CustomersController
  name: CustomersController
  href: api/MyApp.Sales.API.Controllers.CustomersController.html
  commentId: T:MyApp.Sales.API.Controllers.CustomersController
  fullName: MyApp.Sales.API.Controllers.CustomersController
  nameWithType: CustomersController
- uid: MyApp.Sales.API.Controllers.CustomersController.#ctor(MyApp.Sales.Application.Contracts.Services.ICustomerService,MyApp.Shared.Domain.Caching.ICacheService,Microsoft.Extensions.Logging.ILogger{MyApp.Sales.API.Controllers.CustomersController})
  name: CustomersController(ICustomerService, ICacheService, ILogger<CustomersController>)
  href: api/MyApp.Sales.API.Controllers.CustomersController.html#MyApp_Sales_API_Controllers_CustomersController__ctor_MyApp_Sales_Application_Contracts_Services_ICustomerService_MyApp_Shared_Domain_Caching_ICacheService_Microsoft_Extensions_Logging_ILogger_MyApp_Sales_API_Controllers_CustomersController__
  commentId: M:MyApp.Sales.API.Controllers.CustomersController.#ctor(MyApp.Sales.Application.Contracts.Services.ICustomerService,MyApp.Shared.Domain.Caching.ICacheService,Microsoft.Extensions.Logging.ILogger{MyApp.Sales.API.Controllers.CustomersController})
  name.vb: New(ICustomerService, ICacheService, ILogger(Of CustomersController))
  fullName: MyApp.Sales.API.Controllers.CustomersController.CustomersController(MyApp.Sales.Application.Contracts.Services.ICustomerService, MyApp.Shared.Domain.Caching.ICacheService, Microsoft.Extensions.Logging.ILogger<MyApp.Sales.API.Controllers.CustomersController>)
  fullName.vb: MyApp.Sales.API.Controllers.CustomersController.New(MyApp.Sales.Application.Contracts.Services.ICustomerService, MyApp.Shared.Domain.Caching.ICacheService, Microsoft.Extensions.Logging.ILogger(Of MyApp.Sales.API.Controllers.CustomersController))
  nameWithType: CustomersController.CustomersController(ICustomerService, ICacheService, ILogger<CustomersController>)
  nameWithType.vb: CustomersController.New(ICustomerService, ICacheService, ILogger(Of CustomersController))
- uid: MyApp.Sales.API.Controllers.CustomersController.#ctor*
  name: CustomersController
  href: api/MyApp.Sales.API.Controllers.CustomersController.html#MyApp_Sales_API_Controllers_CustomersController__ctor_
  commentId: Overload:MyApp.Sales.API.Controllers.CustomersController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Sales.API.Controllers.CustomersController.CustomersController
  fullName.vb: MyApp.Sales.API.Controllers.CustomersController.New
  nameWithType: CustomersController.CustomersController
  nameWithType.vb: CustomersController.New
- uid: MyApp.Sales.API.Controllers.CustomersController.Create(MyApp.Sales.Application.Contracts.DTOs.CustomerDto)
  name: Create(CustomerDto)
  href: api/MyApp.Sales.API.Controllers.CustomersController.html#MyApp_Sales_API_Controllers_CustomersController_Create_MyApp_Sales_Application_Contracts_DTOs_CustomerDto_
  commentId: M:MyApp.Sales.API.Controllers.CustomersController.Create(MyApp.Sales.Application.Contracts.DTOs.CustomerDto)
  fullName: MyApp.Sales.API.Controllers.CustomersController.Create(MyApp.Sales.Application.Contracts.DTOs.CustomerDto)
  nameWithType: CustomersController.Create(CustomerDto)
- uid: MyApp.Sales.API.Controllers.CustomersController.Create*
  name: Create
  href: api/MyApp.Sales.API.Controllers.CustomersController.html#MyApp_Sales_API_Controllers_CustomersController_Create_
  commentId: Overload:MyApp.Sales.API.Controllers.CustomersController.Create
  isSpec: "True"
  fullName: MyApp.Sales.API.Controllers.CustomersController.Create
  nameWithType: CustomersController.Create
- uid: MyApp.Sales.API.Controllers.CustomersController.Delete(System.Guid)
  name: Delete(Guid)
  href: api/MyApp.Sales.API.Controllers.CustomersController.html#MyApp_Sales_API_Controllers_CustomersController_Delete_System_Guid_
  commentId: M:MyApp.Sales.API.Controllers.CustomersController.Delete(System.Guid)
  fullName: MyApp.Sales.API.Controllers.CustomersController.Delete(System.Guid)
  nameWithType: CustomersController.Delete(Guid)
- uid: MyApp.Sales.API.Controllers.CustomersController.Delete*
  name: Delete
  href: api/MyApp.Sales.API.Controllers.CustomersController.html#MyApp_Sales_API_Controllers_CustomersController_Delete_
  commentId: Overload:MyApp.Sales.API.Controllers.CustomersController.Delete
  isSpec: "True"
  fullName: MyApp.Sales.API.Controllers.CustomersController.Delete
  nameWithType: CustomersController.Delete
- uid: MyApp.Sales.API.Controllers.CustomersController.GetAll
  name: GetAll()
  href: api/MyApp.Sales.API.Controllers.CustomersController.html#MyApp_Sales_API_Controllers_CustomersController_GetAll
  commentId: M:MyApp.Sales.API.Controllers.CustomersController.GetAll
  fullName: MyApp.Sales.API.Controllers.CustomersController.GetAll()
  nameWithType: CustomersController.GetAll()
- uid: MyApp.Sales.API.Controllers.CustomersController.GetAll*
  name: GetAll
  href: api/MyApp.Sales.API.Controllers.CustomersController.html#MyApp_Sales_API_Controllers_CustomersController_GetAll_
  commentId: Overload:MyApp.Sales.API.Controllers.CustomersController.GetAll
  isSpec: "True"
  fullName: MyApp.Sales.API.Controllers.CustomersController.GetAll
  nameWithType: CustomersController.GetAll
- uid: MyApp.Sales.API.Controllers.CustomersController.GetById(System.Guid)
  name: GetById(Guid)
  href: api/MyApp.Sales.API.Controllers.CustomersController.html#MyApp_Sales_API_Controllers_CustomersController_GetById_System_Guid_
  commentId: M:MyApp.Sales.API.Controllers.CustomersController.GetById(System.Guid)
  fullName: MyApp.Sales.API.Controllers.CustomersController.GetById(System.Guid)
  nameWithType: CustomersController.GetById(Guid)
- uid: MyApp.Sales.API.Controllers.CustomersController.GetById*
  name: GetById
  href: api/MyApp.Sales.API.Controllers.CustomersController.html#MyApp_Sales_API_Controllers_CustomersController_GetById_
  commentId: Overload:MyApp.Sales.API.Controllers.CustomersController.GetById
  isSpec: "True"
  fullName: MyApp.Sales.API.Controllers.CustomersController.GetById
  nameWithType: CustomersController.GetById
- uid: MyApp.Sales.API.Controllers.CustomersController.Update(System.Guid,MyApp.Sales.Application.Contracts.DTOs.CustomerDto)
  name: Update(Guid, CustomerDto)
  href: api/MyApp.Sales.API.Controllers.CustomersController.html#MyApp_Sales_API_Controllers_CustomersController_Update_System_Guid_MyApp_Sales_Application_Contracts_DTOs_CustomerDto_
  commentId: M:MyApp.Sales.API.Controllers.CustomersController.Update(System.Guid,MyApp.Sales.Application.Contracts.DTOs.CustomerDto)
  fullName: MyApp.Sales.API.Controllers.CustomersController.Update(System.Guid, MyApp.Sales.Application.Contracts.DTOs.CustomerDto)
  nameWithType: CustomersController.Update(Guid, CustomerDto)
- uid: MyApp.Sales.API.Controllers.CustomersController.Update*
  name: Update
  href: api/MyApp.Sales.API.Controllers.CustomersController.html#MyApp_Sales_API_Controllers_CustomersController_Update_
  commentId: Overload:MyApp.Sales.API.Controllers.CustomersController.Update
  isSpec: "True"
  fullName: MyApp.Sales.API.Controllers.CustomersController.Update
  nameWithType: CustomersController.Update
- uid: MyApp.Sales.API.Controllers.SalesOrdersController
  name: SalesOrdersController
  href: api/MyApp.Sales.API.Controllers.SalesOrdersController.html
  commentId: T:MyApp.Sales.API.Controllers.SalesOrdersController
  fullName: MyApp.Sales.API.Controllers.SalesOrdersController
  nameWithType: SalesOrdersController
- uid: MyApp.Sales.API.Controllers.SalesOrdersController.#ctor(MyApp.Sales.Application.Contracts.Services.ISalesOrderService,MyApp.Shared.Domain.Caching.ICacheService,Microsoft.Extensions.Logging.ILogger{MyApp.Sales.API.Controllers.SalesOrdersController})
  name: SalesOrdersController(ISalesOrderService, ICacheService, ILogger<SalesOrdersController>)
  href: api/MyApp.Sales.API.Controllers.SalesOrdersController.html#MyApp_Sales_API_Controllers_SalesOrdersController__ctor_MyApp_Sales_Application_Contracts_Services_ISalesOrderService_MyApp_Shared_Domain_Caching_ICacheService_Microsoft_Extensions_Logging_ILogger_MyApp_Sales_API_Controllers_SalesOrdersController__
  commentId: M:MyApp.Sales.API.Controllers.SalesOrdersController.#ctor(MyApp.Sales.Application.Contracts.Services.ISalesOrderService,MyApp.Shared.Domain.Caching.ICacheService,Microsoft.Extensions.Logging.ILogger{MyApp.Sales.API.Controllers.SalesOrdersController})
  name.vb: New(ISalesOrderService, ICacheService, ILogger(Of SalesOrdersController))
  fullName: MyApp.Sales.API.Controllers.SalesOrdersController.SalesOrdersController(MyApp.Sales.Application.Contracts.Services.ISalesOrderService, MyApp.Shared.Domain.Caching.ICacheService, Microsoft.Extensions.Logging.ILogger<MyApp.Sales.API.Controllers.SalesOrdersController>)
  fullName.vb: MyApp.Sales.API.Controllers.SalesOrdersController.New(MyApp.Sales.Application.Contracts.Services.ISalesOrderService, MyApp.Shared.Domain.Caching.ICacheService, Microsoft.Extensions.Logging.ILogger(Of MyApp.Sales.API.Controllers.SalesOrdersController))
  nameWithType: SalesOrdersController.SalesOrdersController(ISalesOrderService, ICacheService, ILogger<SalesOrdersController>)
  nameWithType.vb: SalesOrdersController.New(ISalesOrderService, ICacheService, ILogger(Of SalesOrdersController))
- uid: MyApp.Sales.API.Controllers.SalesOrdersController.#ctor*
  name: SalesOrdersController
  href: api/MyApp.Sales.API.Controllers.SalesOrdersController.html#MyApp_Sales_API_Controllers_SalesOrdersController__ctor_
  commentId: Overload:MyApp.Sales.API.Controllers.SalesOrdersController.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Sales.API.Controllers.SalesOrdersController.SalesOrdersController
  fullName.vb: MyApp.Sales.API.Controllers.SalesOrdersController.New
  nameWithType: SalesOrdersController.SalesOrdersController
  nameWithType.vb: SalesOrdersController.New
- uid: MyApp.Sales.API.Controllers.SalesOrdersController.Create(MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto)
  name: Create(CreateUpdateSalesOrderDto)
  href: api/MyApp.Sales.API.Controllers.SalesOrdersController.html#MyApp_Sales_API_Controllers_SalesOrdersController_Create_MyApp_Sales_Application_Contracts_DTOs_CreateUpdateSalesOrderDto_
  commentId: M:MyApp.Sales.API.Controllers.SalesOrdersController.Create(MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto)
  fullName: MyApp.Sales.API.Controllers.SalesOrdersController.Create(MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto)
  nameWithType: SalesOrdersController.Create(CreateUpdateSalesOrderDto)
- uid: MyApp.Sales.API.Controllers.SalesOrdersController.Create*
  name: Create
  href: api/MyApp.Sales.API.Controllers.SalesOrdersController.html#MyApp_Sales_API_Controllers_SalesOrdersController_Create_
  commentId: Overload:MyApp.Sales.API.Controllers.SalesOrdersController.Create
  isSpec: "True"
  fullName: MyApp.Sales.API.Controllers.SalesOrdersController.Create
  nameWithType: SalesOrdersController.Create
- uid: MyApp.Sales.API.Controllers.SalesOrdersController.Delete(System.Guid)
  name: Delete(Guid)
  href: api/MyApp.Sales.API.Controllers.SalesOrdersController.html#MyApp_Sales_API_Controllers_SalesOrdersController_Delete_System_Guid_
  commentId: M:MyApp.Sales.API.Controllers.SalesOrdersController.Delete(System.Guid)
  fullName: MyApp.Sales.API.Controllers.SalesOrdersController.Delete(System.Guid)
  nameWithType: SalesOrdersController.Delete(Guid)
- uid: MyApp.Sales.API.Controllers.SalesOrdersController.Delete*
  name: Delete
  href: api/MyApp.Sales.API.Controllers.SalesOrdersController.html#MyApp_Sales_API_Controllers_SalesOrdersController_Delete_
  commentId: Overload:MyApp.Sales.API.Controllers.SalesOrdersController.Delete
  isSpec: "True"
  fullName: MyApp.Sales.API.Controllers.SalesOrdersController.Delete
  nameWithType: SalesOrdersController.Delete
- uid: MyApp.Sales.API.Controllers.SalesOrdersController.GetAll
  name: GetAll()
  href: api/MyApp.Sales.API.Controllers.SalesOrdersController.html#MyApp_Sales_API_Controllers_SalesOrdersController_GetAll
  commentId: M:MyApp.Sales.API.Controllers.SalesOrdersController.GetAll
  fullName: MyApp.Sales.API.Controllers.SalesOrdersController.GetAll()
  nameWithType: SalesOrdersController.GetAll()
- uid: MyApp.Sales.API.Controllers.SalesOrdersController.GetAll*
  name: GetAll
  href: api/MyApp.Sales.API.Controllers.SalesOrdersController.html#MyApp_Sales_API_Controllers_SalesOrdersController_GetAll_
  commentId: Overload:MyApp.Sales.API.Controllers.SalesOrdersController.GetAll
  isSpec: "True"
  fullName: MyApp.Sales.API.Controllers.SalesOrdersController.GetAll
  nameWithType: SalesOrdersController.GetAll
- uid: MyApp.Sales.API.Controllers.SalesOrdersController.GetById(System.Guid)
  name: GetById(Guid)
  href: api/MyApp.Sales.API.Controllers.SalesOrdersController.html#MyApp_Sales_API_Controllers_SalesOrdersController_GetById_System_Guid_
  commentId: M:MyApp.Sales.API.Controllers.SalesOrdersController.GetById(System.Guid)
  fullName: MyApp.Sales.API.Controllers.SalesOrdersController.GetById(System.Guid)
  nameWithType: SalesOrdersController.GetById(Guid)
- uid: MyApp.Sales.API.Controllers.SalesOrdersController.GetById*
  name: GetById
  href: api/MyApp.Sales.API.Controllers.SalesOrdersController.html#MyApp_Sales_API_Controllers_SalesOrdersController_GetById_
  commentId: Overload:MyApp.Sales.API.Controllers.SalesOrdersController.GetById
  isSpec: "True"
  fullName: MyApp.Sales.API.Controllers.SalesOrdersController.GetById
  nameWithType: SalesOrdersController.GetById
- uid: MyApp.Sales.API.Controllers.SalesOrdersController.Update(System.Guid,MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto)
  name: Update(Guid, CreateUpdateSalesOrderDto)
  href: api/MyApp.Sales.API.Controllers.SalesOrdersController.html#MyApp_Sales_API_Controllers_SalesOrdersController_Update_System_Guid_MyApp_Sales_Application_Contracts_DTOs_CreateUpdateSalesOrderDto_
  commentId: M:MyApp.Sales.API.Controllers.SalesOrdersController.Update(System.Guid,MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto)
  fullName: MyApp.Sales.API.Controllers.SalesOrdersController.Update(System.Guid, MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto)
  nameWithType: SalesOrdersController.Update(Guid, CreateUpdateSalesOrderDto)
- uid: MyApp.Sales.API.Controllers.SalesOrdersController.Update*
  name: Update
  href: api/MyApp.Sales.API.Controllers.SalesOrdersController.html#MyApp_Sales_API_Controllers_SalesOrdersController_Update_
  commentId: Overload:MyApp.Sales.API.Controllers.SalesOrdersController.Update
  isSpec: "True"
  fullName: MyApp.Sales.API.Controllers.SalesOrdersController.Update
  nameWithType: SalesOrdersController.Update
- uid: MyApp.Sales.Application.Contracts.DTOs
  name: MyApp.Sales.Application.Contracts.DTOs
  href: api/MyApp.Sales.Application.Contracts.DTOs.html
  commentId: N:MyApp.Sales.Application.Contracts.DTOs
  fullName: MyApp.Sales.Application.Contracts.DTOs
  nameWithType: MyApp.Sales.Application.Contracts.DTOs
- uid: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto
  name: CreateUpdateSalesOrderDto
  href: api/MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.html
  commentId: T:MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto
  fullName: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto
  nameWithType: CreateUpdateSalesOrderDto
- uid: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.CustomerId
  name: CustomerId
  href: api/MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.html#MyApp_Sales_Application_Contracts_DTOs_CreateUpdateSalesOrderDto_CustomerId
  commentId: P:MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.CustomerId
  fullName: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.CustomerId
  nameWithType: CreateUpdateSalesOrderDto.CustomerId
- uid: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.CustomerId*
  name: CustomerId
  href: api/MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.html#MyApp_Sales_Application_Contracts_DTOs_CreateUpdateSalesOrderDto_CustomerId_
  commentId: Overload:MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.CustomerId
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.CustomerId
  nameWithType: CreateUpdateSalesOrderDto.CustomerId
- uid: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.Lines
  name: Lines
  href: api/MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.html#MyApp_Sales_Application_Contracts_DTOs_CreateUpdateSalesOrderDto_Lines
  commentId: P:MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.Lines
  fullName: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.Lines
  nameWithType: CreateUpdateSalesOrderDto.Lines
- uid: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.Lines*
  name: Lines
  href: api/MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.html#MyApp_Sales_Application_Contracts_DTOs_CreateUpdateSalesOrderDto_Lines_
  commentId: Overload:MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.Lines
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.Lines
  nameWithType: CreateUpdateSalesOrderDto.Lines
- uid: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.OrderDate
  name: OrderDate
  href: api/MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.html#MyApp_Sales_Application_Contracts_DTOs_CreateUpdateSalesOrderDto_OrderDate
  commentId: P:MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.OrderDate
  fullName: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.OrderDate
  nameWithType: CreateUpdateSalesOrderDto.OrderDate
- uid: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.OrderDate*
  name: OrderDate
  href: api/MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.html#MyApp_Sales_Application_Contracts_DTOs_CreateUpdateSalesOrderDto_OrderDate_
  commentId: Overload:MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.OrderDate
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.OrderDate
  nameWithType: CreateUpdateSalesOrderDto.OrderDate
- uid: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.OrderNumber
  name: OrderNumber
  href: api/MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.html#MyApp_Sales_Application_Contracts_DTOs_CreateUpdateSalesOrderDto_OrderNumber
  commentId: P:MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.OrderNumber
  fullName: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.OrderNumber
  nameWithType: CreateUpdateSalesOrderDto.OrderNumber
- uid: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.OrderNumber*
  name: OrderNumber
  href: api/MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.html#MyApp_Sales_Application_Contracts_DTOs_CreateUpdateSalesOrderDto_OrderNumber_
  commentId: Overload:MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.OrderNumber
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.OrderNumber
  nameWithType: CreateUpdateSalesOrderDto.OrderNumber
- uid: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.Status
  name: Status
  href: api/MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.html#MyApp_Sales_Application_Contracts_DTOs_CreateUpdateSalesOrderDto_Status
  commentId: P:MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.Status
  fullName: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.Status
  nameWithType: CreateUpdateSalesOrderDto.Status
- uid: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.Status*
  name: Status
  href: api/MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.html#MyApp_Sales_Application_Contracts_DTOs_CreateUpdateSalesOrderDto_Status_
  commentId: Overload:MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.Status
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.Status
  nameWithType: CreateUpdateSalesOrderDto.Status
- uid: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.TotalAmount
  name: TotalAmount
  href: api/MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.html#MyApp_Sales_Application_Contracts_DTOs_CreateUpdateSalesOrderDto_TotalAmount
  commentId: P:MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.TotalAmount
  fullName: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.TotalAmount
  nameWithType: CreateUpdateSalesOrderDto.TotalAmount
- uid: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.TotalAmount*
  name: TotalAmount
  href: api/MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.html#MyApp_Sales_Application_Contracts_DTOs_CreateUpdateSalesOrderDto_TotalAmount_
  commentId: Overload:MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.TotalAmount
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto.TotalAmount
  nameWithType: CreateUpdateSalesOrderDto.TotalAmount
- uid: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderLineDto
  name: CreateUpdateSalesOrderLineDto
  href: api/MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderLineDto.html
  commentId: T:MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderLineDto
  fullName: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderLineDto
  nameWithType: CreateUpdateSalesOrderLineDto
- uid: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderLineDto.ProductId
  name: ProductId
  href: api/MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderLineDto.html#MyApp_Sales_Application_Contracts_DTOs_CreateUpdateSalesOrderLineDto_ProductId
  commentId: P:MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderLineDto.ProductId
  fullName: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderLineDto.ProductId
  nameWithType: CreateUpdateSalesOrderLineDto.ProductId
- uid: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderLineDto.ProductId*
  name: ProductId
  href: api/MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderLineDto.html#MyApp_Sales_Application_Contracts_DTOs_CreateUpdateSalesOrderLineDto_ProductId_
  commentId: Overload:MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderLineDto.ProductId
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderLineDto.ProductId
  nameWithType: CreateUpdateSalesOrderLineDto.ProductId
- uid: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderLineDto.Quantity
  name: Quantity
  href: api/MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderLineDto.html#MyApp_Sales_Application_Contracts_DTOs_CreateUpdateSalesOrderLineDto_Quantity
  commentId: P:MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderLineDto.Quantity
  fullName: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderLineDto.Quantity
  nameWithType: CreateUpdateSalesOrderLineDto.Quantity
- uid: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderLineDto.Quantity*
  name: Quantity
  href: api/MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderLineDto.html#MyApp_Sales_Application_Contracts_DTOs_CreateUpdateSalesOrderLineDto_Quantity_
  commentId: Overload:MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderLineDto.Quantity
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderLineDto.Quantity
  nameWithType: CreateUpdateSalesOrderLineDto.Quantity
- uid: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderLineDto.UnitPrice
  name: UnitPrice
  href: api/MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderLineDto.html#MyApp_Sales_Application_Contracts_DTOs_CreateUpdateSalesOrderLineDto_UnitPrice
  commentId: P:MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderLineDto.UnitPrice
  fullName: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderLineDto.UnitPrice
  nameWithType: CreateUpdateSalesOrderLineDto.UnitPrice
- uid: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderLineDto.UnitPrice*
  name: UnitPrice
  href: api/MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderLineDto.html#MyApp_Sales_Application_Contracts_DTOs_CreateUpdateSalesOrderLineDto_UnitPrice_
  commentId: Overload:MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderLineDto.UnitPrice
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderLineDto.UnitPrice
  nameWithType: CreateUpdateSalesOrderLineDto.UnitPrice
- uid: MyApp.Sales.Application.Contracts.DTOs.CustomerDto
  name: CustomerDto
  href: api/MyApp.Sales.Application.Contracts.DTOs.CustomerDto.html
  commentId: T:MyApp.Sales.Application.Contracts.DTOs.CustomerDto
  fullName: MyApp.Sales.Application.Contracts.DTOs.CustomerDto
  nameWithType: CustomerDto
- uid: MyApp.Sales.Application.Contracts.DTOs.CustomerDto.Address
  name: Address
  href: api/MyApp.Sales.Application.Contracts.DTOs.CustomerDto.html#MyApp_Sales_Application_Contracts_DTOs_CustomerDto_Address
  commentId: P:MyApp.Sales.Application.Contracts.DTOs.CustomerDto.Address
  fullName: MyApp.Sales.Application.Contracts.DTOs.CustomerDto.Address
  nameWithType: CustomerDto.Address
- uid: MyApp.Sales.Application.Contracts.DTOs.CustomerDto.Address*
  name: Address
  href: api/MyApp.Sales.Application.Contracts.DTOs.CustomerDto.html#MyApp_Sales_Application_Contracts_DTOs_CustomerDto_Address_
  commentId: Overload:MyApp.Sales.Application.Contracts.DTOs.CustomerDto.Address
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.DTOs.CustomerDto.Address
  nameWithType: CustomerDto.Address
- uid: MyApp.Sales.Application.Contracts.DTOs.CustomerDto.Email
  name: Email
  href: api/MyApp.Sales.Application.Contracts.DTOs.CustomerDto.html#MyApp_Sales_Application_Contracts_DTOs_CustomerDto_Email
  commentId: P:MyApp.Sales.Application.Contracts.DTOs.CustomerDto.Email
  fullName: MyApp.Sales.Application.Contracts.DTOs.CustomerDto.Email
  nameWithType: CustomerDto.Email
- uid: MyApp.Sales.Application.Contracts.DTOs.CustomerDto.Email*
  name: Email
  href: api/MyApp.Sales.Application.Contracts.DTOs.CustomerDto.html#MyApp_Sales_Application_Contracts_DTOs_CustomerDto_Email_
  commentId: Overload:MyApp.Sales.Application.Contracts.DTOs.CustomerDto.Email
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.DTOs.CustomerDto.Email
  nameWithType: CustomerDto.Email
- uid: MyApp.Sales.Application.Contracts.DTOs.CustomerDto.Id
  name: Id
  href: api/MyApp.Sales.Application.Contracts.DTOs.CustomerDto.html#MyApp_Sales_Application_Contracts_DTOs_CustomerDto_Id
  commentId: P:MyApp.Sales.Application.Contracts.DTOs.CustomerDto.Id
  fullName: MyApp.Sales.Application.Contracts.DTOs.CustomerDto.Id
  nameWithType: CustomerDto.Id
- uid: MyApp.Sales.Application.Contracts.DTOs.CustomerDto.Id*
  name: Id
  href: api/MyApp.Sales.Application.Contracts.DTOs.CustomerDto.html#MyApp_Sales_Application_Contracts_DTOs_CustomerDto_Id_
  commentId: Overload:MyApp.Sales.Application.Contracts.DTOs.CustomerDto.Id
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.DTOs.CustomerDto.Id
  nameWithType: CustomerDto.Id
- uid: MyApp.Sales.Application.Contracts.DTOs.CustomerDto.Name
  name: Name
  href: api/MyApp.Sales.Application.Contracts.DTOs.CustomerDto.html#MyApp_Sales_Application_Contracts_DTOs_CustomerDto_Name
  commentId: P:MyApp.Sales.Application.Contracts.DTOs.CustomerDto.Name
  fullName: MyApp.Sales.Application.Contracts.DTOs.CustomerDto.Name
  nameWithType: CustomerDto.Name
- uid: MyApp.Sales.Application.Contracts.DTOs.CustomerDto.Name*
  name: Name
  href: api/MyApp.Sales.Application.Contracts.DTOs.CustomerDto.html#MyApp_Sales_Application_Contracts_DTOs_CustomerDto_Name_
  commentId: Overload:MyApp.Sales.Application.Contracts.DTOs.CustomerDto.Name
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.DTOs.CustomerDto.Name
  nameWithType: CustomerDto.Name
- uid: MyApp.Sales.Application.Contracts.DTOs.CustomerDto.PhoneNumber
  name: PhoneNumber
  href: api/MyApp.Sales.Application.Contracts.DTOs.CustomerDto.html#MyApp_Sales_Application_Contracts_DTOs_CustomerDto_PhoneNumber
  commentId: P:MyApp.Sales.Application.Contracts.DTOs.CustomerDto.PhoneNumber
  fullName: MyApp.Sales.Application.Contracts.DTOs.CustomerDto.PhoneNumber
  nameWithType: CustomerDto.PhoneNumber
- uid: MyApp.Sales.Application.Contracts.DTOs.CustomerDto.PhoneNumber*
  name: PhoneNumber
  href: api/MyApp.Sales.Application.Contracts.DTOs.CustomerDto.html#MyApp_Sales_Application_Contracts_DTOs_CustomerDto_PhoneNumber_
  commentId: Overload:MyApp.Sales.Application.Contracts.DTOs.CustomerDto.PhoneNumber
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.DTOs.CustomerDto.PhoneNumber
  nameWithType: CustomerDto.PhoneNumber
- uid: MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto
  name: SalesOrderDto
  href: api/MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.html
  commentId: T:MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto
  fullName: MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto
  nameWithType: SalesOrderDto
- uid: MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.Customer
  name: Customer
  href: api/MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.html#MyApp_Sales_Application_Contracts_DTOs_SalesOrderDto_Customer
  commentId: P:MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.Customer
  fullName: MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.Customer
  nameWithType: SalesOrderDto.Customer
- uid: MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.Customer*
  name: Customer
  href: api/MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.html#MyApp_Sales_Application_Contracts_DTOs_SalesOrderDto_Customer_
  commentId: Overload:MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.Customer
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.Customer
  nameWithType: SalesOrderDto.Customer
- uid: MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.CustomerId
  name: CustomerId
  href: api/MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.html#MyApp_Sales_Application_Contracts_DTOs_SalesOrderDto_CustomerId
  commentId: P:MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.CustomerId
  fullName: MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.CustomerId
  nameWithType: SalesOrderDto.CustomerId
- uid: MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.CustomerId*
  name: CustomerId
  href: api/MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.html#MyApp_Sales_Application_Contracts_DTOs_SalesOrderDto_CustomerId_
  commentId: Overload:MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.CustomerId
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.CustomerId
  nameWithType: SalesOrderDto.CustomerId
- uid: MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.Id
  name: Id
  href: api/MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.html#MyApp_Sales_Application_Contracts_DTOs_SalesOrderDto_Id
  commentId: P:MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.Id
  fullName: MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.Id
  nameWithType: SalesOrderDto.Id
- uid: MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.Id*
  name: Id
  href: api/MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.html#MyApp_Sales_Application_Contracts_DTOs_SalesOrderDto_Id_
  commentId: Overload:MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.Id
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.Id
  nameWithType: SalesOrderDto.Id
- uid: MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.Lines
  name: Lines
  href: api/MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.html#MyApp_Sales_Application_Contracts_DTOs_SalesOrderDto_Lines
  commentId: P:MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.Lines
  fullName: MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.Lines
  nameWithType: SalesOrderDto.Lines
- uid: MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.Lines*
  name: Lines
  href: api/MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.html#MyApp_Sales_Application_Contracts_DTOs_SalesOrderDto_Lines_
  commentId: Overload:MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.Lines
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.Lines
  nameWithType: SalesOrderDto.Lines
- uid: MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.OrderDate
  name: OrderDate
  href: api/MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.html#MyApp_Sales_Application_Contracts_DTOs_SalesOrderDto_OrderDate
  commentId: P:MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.OrderDate
  fullName: MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.OrderDate
  nameWithType: SalesOrderDto.OrderDate
- uid: MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.OrderDate*
  name: OrderDate
  href: api/MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.html#MyApp_Sales_Application_Contracts_DTOs_SalesOrderDto_OrderDate_
  commentId: Overload:MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.OrderDate
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.OrderDate
  nameWithType: SalesOrderDto.OrderDate
- uid: MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.OrderNumber
  name: OrderNumber
  href: api/MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.html#MyApp_Sales_Application_Contracts_DTOs_SalesOrderDto_OrderNumber
  commentId: P:MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.OrderNumber
  fullName: MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.OrderNumber
  nameWithType: SalesOrderDto.OrderNumber
- uid: MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.OrderNumber*
  name: OrderNumber
  href: api/MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.html#MyApp_Sales_Application_Contracts_DTOs_SalesOrderDto_OrderNumber_
  commentId: Overload:MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.OrderNumber
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.OrderNumber
  nameWithType: SalesOrderDto.OrderNumber
- uid: MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.Status
  name: Status
  href: api/MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.html#MyApp_Sales_Application_Contracts_DTOs_SalesOrderDto_Status
  commentId: P:MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.Status
  fullName: MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.Status
  nameWithType: SalesOrderDto.Status
- uid: MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.Status*
  name: Status
  href: api/MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.html#MyApp_Sales_Application_Contracts_DTOs_SalesOrderDto_Status_
  commentId: Overload:MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.Status
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.Status
  nameWithType: SalesOrderDto.Status
- uid: MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.TotalAmount
  name: TotalAmount
  href: api/MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.html#MyApp_Sales_Application_Contracts_DTOs_SalesOrderDto_TotalAmount
  commentId: P:MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.TotalAmount
  fullName: MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.TotalAmount
  nameWithType: SalesOrderDto.TotalAmount
- uid: MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.TotalAmount*
  name: TotalAmount
  href: api/MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.html#MyApp_Sales_Application_Contracts_DTOs_SalesOrderDto_TotalAmount_
  commentId: Overload:MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.TotalAmount
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.DTOs.SalesOrderDto.TotalAmount
  nameWithType: SalesOrderDto.TotalAmount
- uid: MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto
  name: SalesOrderLineDto
  href: api/MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.html
  commentId: T:MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto
  fullName: MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto
  nameWithType: SalesOrderLineDto
- uid: MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.Id
  name: Id
  href: api/MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.html#MyApp_Sales_Application_Contracts_DTOs_SalesOrderLineDto_Id
  commentId: P:MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.Id
  fullName: MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.Id
  nameWithType: SalesOrderLineDto.Id
- uid: MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.Id*
  name: Id
  href: api/MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.html#MyApp_Sales_Application_Contracts_DTOs_SalesOrderLineDto_Id_
  commentId: Overload:MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.Id
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.Id
  nameWithType: SalesOrderLineDto.Id
- uid: MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.LineTotal
  name: LineTotal
  href: api/MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.html#MyApp_Sales_Application_Contracts_DTOs_SalesOrderLineDto_LineTotal
  commentId: P:MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.LineTotal
  fullName: MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.LineTotal
  nameWithType: SalesOrderLineDto.LineTotal
- uid: MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.LineTotal*
  name: LineTotal
  href: api/MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.html#MyApp_Sales_Application_Contracts_DTOs_SalesOrderLineDto_LineTotal_
  commentId: Overload:MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.LineTotal
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.LineTotal
  nameWithType: SalesOrderLineDto.LineTotal
- uid: MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.ProductId
  name: ProductId
  href: api/MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.html#MyApp_Sales_Application_Contracts_DTOs_SalesOrderLineDto_ProductId
  commentId: P:MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.ProductId
  fullName: MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.ProductId
  nameWithType: SalesOrderLineDto.ProductId
- uid: MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.ProductId*
  name: ProductId
  href: api/MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.html#MyApp_Sales_Application_Contracts_DTOs_SalesOrderLineDto_ProductId_
  commentId: Overload:MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.ProductId
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.ProductId
  nameWithType: SalesOrderLineDto.ProductId
- uid: MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.Quantity
  name: Quantity
  href: api/MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.html#MyApp_Sales_Application_Contracts_DTOs_SalesOrderLineDto_Quantity
  commentId: P:MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.Quantity
  fullName: MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.Quantity
  nameWithType: SalesOrderLineDto.Quantity
- uid: MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.Quantity*
  name: Quantity
  href: api/MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.html#MyApp_Sales_Application_Contracts_DTOs_SalesOrderLineDto_Quantity_
  commentId: Overload:MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.Quantity
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.Quantity
  nameWithType: SalesOrderLineDto.Quantity
- uid: MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.SalesOrderId
  name: SalesOrderId
  href: api/MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.html#MyApp_Sales_Application_Contracts_DTOs_SalesOrderLineDto_SalesOrderId
  commentId: P:MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.SalesOrderId
  fullName: MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.SalesOrderId
  nameWithType: SalesOrderLineDto.SalesOrderId
- uid: MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.SalesOrderId*
  name: SalesOrderId
  href: api/MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.html#MyApp_Sales_Application_Contracts_DTOs_SalesOrderLineDto_SalesOrderId_
  commentId: Overload:MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.SalesOrderId
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.SalesOrderId
  nameWithType: SalesOrderLineDto.SalesOrderId
- uid: MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.UnitPrice
  name: UnitPrice
  href: api/MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.html#MyApp_Sales_Application_Contracts_DTOs_SalesOrderLineDto_UnitPrice
  commentId: P:MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.UnitPrice
  fullName: MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.UnitPrice
  nameWithType: SalesOrderLineDto.UnitPrice
- uid: MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.UnitPrice*
  name: UnitPrice
  href: api/MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.html#MyApp_Sales_Application_Contracts_DTOs_SalesOrderLineDto_UnitPrice_
  commentId: Overload:MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.UnitPrice
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.DTOs.SalesOrderLineDto.UnitPrice
  nameWithType: SalesOrderLineDto.UnitPrice
- uid: MyApp.Sales.Application.Contracts.Services
  name: MyApp.Sales.Application.Contracts.Services
  href: api/MyApp.Sales.Application.Contracts.Services.html
  commentId: N:MyApp.Sales.Application.Contracts.Services
  fullName: MyApp.Sales.Application.Contracts.Services
  nameWithType: MyApp.Sales.Application.Contracts.Services
- uid: MyApp.Sales.Application.Contracts.Services.ICustomerService
  name: ICustomerService
  href: api/MyApp.Sales.Application.Contracts.Services.ICustomerService.html
  commentId: T:MyApp.Sales.Application.Contracts.Services.ICustomerService
  fullName: MyApp.Sales.Application.Contracts.Services.ICustomerService
  nameWithType: ICustomerService
- uid: MyApp.Sales.Application.Contracts.Services.ICustomerService.CreateCustomerAsync(MyApp.Sales.Application.Contracts.DTOs.CustomerDto)
  name: CreateCustomerAsync(CustomerDto)
  href: api/MyApp.Sales.Application.Contracts.Services.ICustomerService.html#MyApp_Sales_Application_Contracts_Services_ICustomerService_CreateCustomerAsync_MyApp_Sales_Application_Contracts_DTOs_CustomerDto_
  commentId: M:MyApp.Sales.Application.Contracts.Services.ICustomerService.CreateCustomerAsync(MyApp.Sales.Application.Contracts.DTOs.CustomerDto)
  fullName: MyApp.Sales.Application.Contracts.Services.ICustomerService.CreateCustomerAsync(MyApp.Sales.Application.Contracts.DTOs.CustomerDto)
  nameWithType: ICustomerService.CreateCustomerAsync(CustomerDto)
- uid: MyApp.Sales.Application.Contracts.Services.ICustomerService.CreateCustomerAsync*
  name: CreateCustomerAsync
  href: api/MyApp.Sales.Application.Contracts.Services.ICustomerService.html#MyApp_Sales_Application_Contracts_Services_ICustomerService_CreateCustomerAsync_
  commentId: Overload:MyApp.Sales.Application.Contracts.Services.ICustomerService.CreateCustomerAsync
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.Services.ICustomerService.CreateCustomerAsync
  nameWithType: ICustomerService.CreateCustomerAsync
- uid: MyApp.Sales.Application.Contracts.Services.ICustomerService.DeleteCustomerAsync(System.Guid)
  name: DeleteCustomerAsync(Guid)
  href: api/MyApp.Sales.Application.Contracts.Services.ICustomerService.html#MyApp_Sales_Application_Contracts_Services_ICustomerService_DeleteCustomerAsync_System_Guid_
  commentId: M:MyApp.Sales.Application.Contracts.Services.ICustomerService.DeleteCustomerAsync(System.Guid)
  fullName: MyApp.Sales.Application.Contracts.Services.ICustomerService.DeleteCustomerAsync(System.Guid)
  nameWithType: ICustomerService.DeleteCustomerAsync(Guid)
- uid: MyApp.Sales.Application.Contracts.Services.ICustomerService.DeleteCustomerAsync*
  name: DeleteCustomerAsync
  href: api/MyApp.Sales.Application.Contracts.Services.ICustomerService.html#MyApp_Sales_Application_Contracts_Services_ICustomerService_DeleteCustomerAsync_
  commentId: Overload:MyApp.Sales.Application.Contracts.Services.ICustomerService.DeleteCustomerAsync
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.Services.ICustomerService.DeleteCustomerAsync
  nameWithType: ICustomerService.DeleteCustomerAsync
- uid: MyApp.Sales.Application.Contracts.Services.ICustomerService.GetCustomerByIdAsync(System.Guid)
  name: GetCustomerByIdAsync(Guid)
  href: api/MyApp.Sales.Application.Contracts.Services.ICustomerService.html#MyApp_Sales_Application_Contracts_Services_ICustomerService_GetCustomerByIdAsync_System_Guid_
  commentId: M:MyApp.Sales.Application.Contracts.Services.ICustomerService.GetCustomerByIdAsync(System.Guid)
  fullName: MyApp.Sales.Application.Contracts.Services.ICustomerService.GetCustomerByIdAsync(System.Guid)
  nameWithType: ICustomerService.GetCustomerByIdAsync(Guid)
- uid: MyApp.Sales.Application.Contracts.Services.ICustomerService.GetCustomerByIdAsync*
  name: GetCustomerByIdAsync
  href: api/MyApp.Sales.Application.Contracts.Services.ICustomerService.html#MyApp_Sales_Application_Contracts_Services_ICustomerService_GetCustomerByIdAsync_
  commentId: Overload:MyApp.Sales.Application.Contracts.Services.ICustomerService.GetCustomerByIdAsync
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.Services.ICustomerService.GetCustomerByIdAsync
  nameWithType: ICustomerService.GetCustomerByIdAsync
- uid: MyApp.Sales.Application.Contracts.Services.ICustomerService.ListCustomersAsync
  name: ListCustomersAsync()
  href: api/MyApp.Sales.Application.Contracts.Services.ICustomerService.html#MyApp_Sales_Application_Contracts_Services_ICustomerService_ListCustomersAsync
  commentId: M:MyApp.Sales.Application.Contracts.Services.ICustomerService.ListCustomersAsync
  fullName: MyApp.Sales.Application.Contracts.Services.ICustomerService.ListCustomersAsync()
  nameWithType: ICustomerService.ListCustomersAsync()
- uid: MyApp.Sales.Application.Contracts.Services.ICustomerService.ListCustomersAsync*
  name: ListCustomersAsync
  href: api/MyApp.Sales.Application.Contracts.Services.ICustomerService.html#MyApp_Sales_Application_Contracts_Services_ICustomerService_ListCustomersAsync_
  commentId: Overload:MyApp.Sales.Application.Contracts.Services.ICustomerService.ListCustomersAsync
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.Services.ICustomerService.ListCustomersAsync
  nameWithType: ICustomerService.ListCustomersAsync
- uid: MyApp.Sales.Application.Contracts.Services.ICustomerService.ListCustomersPaginatedAsync(System.Int32,System.Int32)
  name: ListCustomersPaginatedAsync(int, int)
  href: api/MyApp.Sales.Application.Contracts.Services.ICustomerService.html#MyApp_Sales_Application_Contracts_Services_ICustomerService_ListCustomersPaginatedAsync_System_Int32_System_Int32_
  commentId: M:MyApp.Sales.Application.Contracts.Services.ICustomerService.ListCustomersPaginatedAsync(System.Int32,System.Int32)
  name.vb: ListCustomersPaginatedAsync(Integer, Integer)
  fullName: MyApp.Sales.Application.Contracts.Services.ICustomerService.ListCustomersPaginatedAsync(int, int)
  fullName.vb: MyApp.Sales.Application.Contracts.Services.ICustomerService.ListCustomersPaginatedAsync(Integer, Integer)
  nameWithType: ICustomerService.ListCustomersPaginatedAsync(int, int)
  nameWithType.vb: ICustomerService.ListCustomersPaginatedAsync(Integer, Integer)
- uid: MyApp.Sales.Application.Contracts.Services.ICustomerService.ListCustomersPaginatedAsync*
  name: ListCustomersPaginatedAsync
  href: api/MyApp.Sales.Application.Contracts.Services.ICustomerService.html#MyApp_Sales_Application_Contracts_Services_ICustomerService_ListCustomersPaginatedAsync_
  commentId: Overload:MyApp.Sales.Application.Contracts.Services.ICustomerService.ListCustomersPaginatedAsync
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.Services.ICustomerService.ListCustomersPaginatedAsync
  nameWithType: ICustomerService.ListCustomersPaginatedAsync
- uid: MyApp.Sales.Application.Contracts.Services.ICustomerService.UpdateCustomerAsync(System.Guid,MyApp.Sales.Application.Contracts.DTOs.CustomerDto)
  name: UpdateCustomerAsync(Guid, CustomerDto)
  href: api/MyApp.Sales.Application.Contracts.Services.ICustomerService.html#MyApp_Sales_Application_Contracts_Services_ICustomerService_UpdateCustomerAsync_System_Guid_MyApp_Sales_Application_Contracts_DTOs_CustomerDto_
  commentId: M:MyApp.Sales.Application.Contracts.Services.ICustomerService.UpdateCustomerAsync(System.Guid,MyApp.Sales.Application.Contracts.DTOs.CustomerDto)
  fullName: MyApp.Sales.Application.Contracts.Services.ICustomerService.UpdateCustomerAsync(System.Guid, MyApp.Sales.Application.Contracts.DTOs.CustomerDto)
  nameWithType: ICustomerService.UpdateCustomerAsync(Guid, CustomerDto)
- uid: MyApp.Sales.Application.Contracts.Services.ICustomerService.UpdateCustomerAsync*
  name: UpdateCustomerAsync
  href: api/MyApp.Sales.Application.Contracts.Services.ICustomerService.html#MyApp_Sales_Application_Contracts_Services_ICustomerService_UpdateCustomerAsync_
  commentId: Overload:MyApp.Sales.Application.Contracts.Services.ICustomerService.UpdateCustomerAsync
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.Services.ICustomerService.UpdateCustomerAsync
  nameWithType: ICustomerService.UpdateCustomerAsync
- uid: MyApp.Sales.Application.Contracts.Services.ISalesOrderService
  name: ISalesOrderService
  href: api/MyApp.Sales.Application.Contracts.Services.ISalesOrderService.html
  commentId: T:MyApp.Sales.Application.Contracts.Services.ISalesOrderService
  fullName: MyApp.Sales.Application.Contracts.Services.ISalesOrderService
  nameWithType: ISalesOrderService
- uid: MyApp.Sales.Application.Contracts.Services.ISalesOrderService.CreateSalesOrderAsync(MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto)
  name: CreateSalesOrderAsync(CreateUpdateSalesOrderDto)
  href: api/MyApp.Sales.Application.Contracts.Services.ISalesOrderService.html#MyApp_Sales_Application_Contracts_Services_ISalesOrderService_CreateSalesOrderAsync_MyApp_Sales_Application_Contracts_DTOs_CreateUpdateSalesOrderDto_
  commentId: M:MyApp.Sales.Application.Contracts.Services.ISalesOrderService.CreateSalesOrderAsync(MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto)
  fullName: MyApp.Sales.Application.Contracts.Services.ISalesOrderService.CreateSalesOrderAsync(MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto)
  nameWithType: ISalesOrderService.CreateSalesOrderAsync(CreateUpdateSalesOrderDto)
- uid: MyApp.Sales.Application.Contracts.Services.ISalesOrderService.CreateSalesOrderAsync*
  name: CreateSalesOrderAsync
  href: api/MyApp.Sales.Application.Contracts.Services.ISalesOrderService.html#MyApp_Sales_Application_Contracts_Services_ISalesOrderService_CreateSalesOrderAsync_
  commentId: Overload:MyApp.Sales.Application.Contracts.Services.ISalesOrderService.CreateSalesOrderAsync
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.Services.ISalesOrderService.CreateSalesOrderAsync
  nameWithType: ISalesOrderService.CreateSalesOrderAsync
- uid: MyApp.Sales.Application.Contracts.Services.ISalesOrderService.DeleteSalesOrderAsync(System.Guid)
  name: DeleteSalesOrderAsync(Guid)
  href: api/MyApp.Sales.Application.Contracts.Services.ISalesOrderService.html#MyApp_Sales_Application_Contracts_Services_ISalesOrderService_DeleteSalesOrderAsync_System_Guid_
  commentId: M:MyApp.Sales.Application.Contracts.Services.ISalesOrderService.DeleteSalesOrderAsync(System.Guid)
  fullName: MyApp.Sales.Application.Contracts.Services.ISalesOrderService.DeleteSalesOrderAsync(System.Guid)
  nameWithType: ISalesOrderService.DeleteSalesOrderAsync(Guid)
- uid: MyApp.Sales.Application.Contracts.Services.ISalesOrderService.DeleteSalesOrderAsync*
  name: DeleteSalesOrderAsync
  href: api/MyApp.Sales.Application.Contracts.Services.ISalesOrderService.html#MyApp_Sales_Application_Contracts_Services_ISalesOrderService_DeleteSalesOrderAsync_
  commentId: Overload:MyApp.Sales.Application.Contracts.Services.ISalesOrderService.DeleteSalesOrderAsync
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.Services.ISalesOrderService.DeleteSalesOrderAsync
  nameWithType: ISalesOrderService.DeleteSalesOrderAsync
- uid: MyApp.Sales.Application.Contracts.Services.ISalesOrderService.GetSalesOrderByIdAsync(System.Guid)
  name: GetSalesOrderByIdAsync(Guid)
  href: api/MyApp.Sales.Application.Contracts.Services.ISalesOrderService.html#MyApp_Sales_Application_Contracts_Services_ISalesOrderService_GetSalesOrderByIdAsync_System_Guid_
  commentId: M:MyApp.Sales.Application.Contracts.Services.ISalesOrderService.GetSalesOrderByIdAsync(System.Guid)
  fullName: MyApp.Sales.Application.Contracts.Services.ISalesOrderService.GetSalesOrderByIdAsync(System.Guid)
  nameWithType: ISalesOrderService.GetSalesOrderByIdAsync(Guid)
- uid: MyApp.Sales.Application.Contracts.Services.ISalesOrderService.GetSalesOrderByIdAsync*
  name: GetSalesOrderByIdAsync
  href: api/MyApp.Sales.Application.Contracts.Services.ISalesOrderService.html#MyApp_Sales_Application_Contracts_Services_ISalesOrderService_GetSalesOrderByIdAsync_
  commentId: Overload:MyApp.Sales.Application.Contracts.Services.ISalesOrderService.GetSalesOrderByIdAsync
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.Services.ISalesOrderService.GetSalesOrderByIdAsync
  nameWithType: ISalesOrderService.GetSalesOrderByIdAsync
- uid: MyApp.Sales.Application.Contracts.Services.ISalesOrderService.ListSalesOrdersAsync
  name: ListSalesOrdersAsync()
  href: api/MyApp.Sales.Application.Contracts.Services.ISalesOrderService.html#MyApp_Sales_Application_Contracts_Services_ISalesOrderService_ListSalesOrdersAsync
  commentId: M:MyApp.Sales.Application.Contracts.Services.ISalesOrderService.ListSalesOrdersAsync
  fullName: MyApp.Sales.Application.Contracts.Services.ISalesOrderService.ListSalesOrdersAsync()
  nameWithType: ISalesOrderService.ListSalesOrdersAsync()
- uid: MyApp.Sales.Application.Contracts.Services.ISalesOrderService.ListSalesOrdersAsync*
  name: ListSalesOrdersAsync
  href: api/MyApp.Sales.Application.Contracts.Services.ISalesOrderService.html#MyApp_Sales_Application_Contracts_Services_ISalesOrderService_ListSalesOrdersAsync_
  commentId: Overload:MyApp.Sales.Application.Contracts.Services.ISalesOrderService.ListSalesOrdersAsync
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.Services.ISalesOrderService.ListSalesOrdersAsync
  nameWithType: ISalesOrderService.ListSalesOrdersAsync
- uid: MyApp.Sales.Application.Contracts.Services.ISalesOrderService.ListSalesOrdersPaginatedAsync(System.Int32,System.Int32)
  name: ListSalesOrdersPaginatedAsync(int, int)
  href: api/MyApp.Sales.Application.Contracts.Services.ISalesOrderService.html#MyApp_Sales_Application_Contracts_Services_ISalesOrderService_ListSalesOrdersPaginatedAsync_System_Int32_System_Int32_
  commentId: M:MyApp.Sales.Application.Contracts.Services.ISalesOrderService.ListSalesOrdersPaginatedAsync(System.Int32,System.Int32)
  name.vb: ListSalesOrdersPaginatedAsync(Integer, Integer)
  fullName: MyApp.Sales.Application.Contracts.Services.ISalesOrderService.ListSalesOrdersPaginatedAsync(int, int)
  fullName.vb: MyApp.Sales.Application.Contracts.Services.ISalesOrderService.ListSalesOrdersPaginatedAsync(Integer, Integer)
  nameWithType: ISalesOrderService.ListSalesOrdersPaginatedAsync(int, int)
  nameWithType.vb: ISalesOrderService.ListSalesOrdersPaginatedAsync(Integer, Integer)
- uid: MyApp.Sales.Application.Contracts.Services.ISalesOrderService.ListSalesOrdersPaginatedAsync*
  name: ListSalesOrdersPaginatedAsync
  href: api/MyApp.Sales.Application.Contracts.Services.ISalesOrderService.html#MyApp_Sales_Application_Contracts_Services_ISalesOrderService_ListSalesOrdersPaginatedAsync_
  commentId: Overload:MyApp.Sales.Application.Contracts.Services.ISalesOrderService.ListSalesOrdersPaginatedAsync
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.Services.ISalesOrderService.ListSalesOrdersPaginatedAsync
  nameWithType: ISalesOrderService.ListSalesOrdersPaginatedAsync
- uid: MyApp.Sales.Application.Contracts.Services.ISalesOrderService.UpdateSalesOrderAsync(System.Guid,MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto)
  name: UpdateSalesOrderAsync(Guid, CreateUpdateSalesOrderDto)
  href: api/MyApp.Sales.Application.Contracts.Services.ISalesOrderService.html#MyApp_Sales_Application_Contracts_Services_ISalesOrderService_UpdateSalesOrderAsync_System_Guid_MyApp_Sales_Application_Contracts_DTOs_CreateUpdateSalesOrderDto_
  commentId: M:MyApp.Sales.Application.Contracts.Services.ISalesOrderService.UpdateSalesOrderAsync(System.Guid,MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto)
  fullName: MyApp.Sales.Application.Contracts.Services.ISalesOrderService.UpdateSalesOrderAsync(System.Guid, MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto)
  nameWithType: ISalesOrderService.UpdateSalesOrderAsync(Guid, CreateUpdateSalesOrderDto)
- uid: MyApp.Sales.Application.Contracts.Services.ISalesOrderService.UpdateSalesOrderAsync*
  name: UpdateSalesOrderAsync
  href: api/MyApp.Sales.Application.Contracts.Services.ISalesOrderService.html#MyApp_Sales_Application_Contracts_Services_ISalesOrderService_UpdateSalesOrderAsync_
  commentId: Overload:MyApp.Sales.Application.Contracts.Services.ISalesOrderService.UpdateSalesOrderAsync
  isSpec: "True"
  fullName: MyApp.Sales.Application.Contracts.Services.ISalesOrderService.UpdateSalesOrderAsync
  nameWithType: ISalesOrderService.UpdateSalesOrderAsync
- uid: MyApp.Sales.Application.Mapping
  name: MyApp.Sales.Application.Mapping
  href: api/MyApp.Sales.Application.Mapping.html
  commentId: N:MyApp.Sales.Application.Mapping
  fullName: MyApp.Sales.Application.Mapping
  nameWithType: MyApp.Sales.Application.Mapping
- uid: MyApp.Sales.Application.Mapping.SalesOrderMappingProfile
  name: SalesOrderMappingProfile
  href: api/MyApp.Sales.Application.Mapping.SalesOrderMappingProfile.html
  commentId: T:MyApp.Sales.Application.Mapping.SalesOrderMappingProfile
  fullName: MyApp.Sales.Application.Mapping.SalesOrderMappingProfile
  nameWithType: SalesOrderMappingProfile
- uid: MyApp.Sales.Application.Mapping.SalesOrderMappingProfile.#ctor
  name: SalesOrderMappingProfile()
  href: api/MyApp.Sales.Application.Mapping.SalesOrderMappingProfile.html#MyApp_Sales_Application_Mapping_SalesOrderMappingProfile__ctor
  commentId: M:MyApp.Sales.Application.Mapping.SalesOrderMappingProfile.#ctor
  name.vb: New()
  fullName: MyApp.Sales.Application.Mapping.SalesOrderMappingProfile.SalesOrderMappingProfile()
  fullName.vb: MyApp.Sales.Application.Mapping.SalesOrderMappingProfile.New()
  nameWithType: SalesOrderMappingProfile.SalesOrderMappingProfile()
  nameWithType.vb: SalesOrderMappingProfile.New()
- uid: MyApp.Sales.Application.Mapping.SalesOrderMappingProfile.#ctor*
  name: SalesOrderMappingProfile
  href: api/MyApp.Sales.Application.Mapping.SalesOrderMappingProfile.html#MyApp_Sales_Application_Mapping_SalesOrderMappingProfile__ctor_
  commentId: Overload:MyApp.Sales.Application.Mapping.SalesOrderMappingProfile.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Sales.Application.Mapping.SalesOrderMappingProfile.SalesOrderMappingProfile
  fullName.vb: MyApp.Sales.Application.Mapping.SalesOrderMappingProfile.New
  nameWithType: SalesOrderMappingProfile.SalesOrderMappingProfile
  nameWithType.vb: SalesOrderMappingProfile.New
- uid: MyApp.Sales.Application.Services
  name: MyApp.Sales.Application.Services
  href: api/MyApp.Sales.Application.Services.html
  commentId: N:MyApp.Sales.Application.Services
  fullName: MyApp.Sales.Application.Services
  nameWithType: MyApp.Sales.Application.Services
- uid: MyApp.Sales.Application.Services.CustomerService
  name: CustomerService
  href: api/MyApp.Sales.Application.Services.CustomerService.html
  commentId: T:MyApp.Sales.Application.Services.CustomerService
  fullName: MyApp.Sales.Application.Services.CustomerService
  nameWithType: CustomerService
- uid: MyApp.Sales.Application.Services.CustomerService.#ctor(MyApp.Sales.Domain.ICustomerRepository,AutoMapper.IMapper)
  name: CustomerService(ICustomerRepository, IMapper)
  href: api/MyApp.Sales.Application.Services.CustomerService.html#MyApp_Sales_Application_Services_CustomerService__ctor_MyApp_Sales_Domain_ICustomerRepository_AutoMapper_IMapper_
  commentId: M:MyApp.Sales.Application.Services.CustomerService.#ctor(MyApp.Sales.Domain.ICustomerRepository,AutoMapper.IMapper)
  name.vb: New(ICustomerRepository, IMapper)
  fullName: MyApp.Sales.Application.Services.CustomerService.CustomerService(MyApp.Sales.Domain.ICustomerRepository, AutoMapper.IMapper)
  fullName.vb: MyApp.Sales.Application.Services.CustomerService.New(MyApp.Sales.Domain.ICustomerRepository, AutoMapper.IMapper)
  nameWithType: CustomerService.CustomerService(ICustomerRepository, IMapper)
  nameWithType.vb: CustomerService.New(ICustomerRepository, IMapper)
- uid: MyApp.Sales.Application.Services.CustomerService.#ctor*
  name: CustomerService
  href: api/MyApp.Sales.Application.Services.CustomerService.html#MyApp_Sales_Application_Services_CustomerService__ctor_
  commentId: Overload:MyApp.Sales.Application.Services.CustomerService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Sales.Application.Services.CustomerService.CustomerService
  fullName.vb: MyApp.Sales.Application.Services.CustomerService.New
  nameWithType: CustomerService.CustomerService
  nameWithType.vb: CustomerService.New
- uid: MyApp.Sales.Application.Services.CustomerService.CreateCustomerAsync(MyApp.Sales.Application.Contracts.DTOs.CustomerDto)
  name: CreateCustomerAsync(CustomerDto)
  href: api/MyApp.Sales.Application.Services.CustomerService.html#MyApp_Sales_Application_Services_CustomerService_CreateCustomerAsync_MyApp_Sales_Application_Contracts_DTOs_CustomerDto_
  commentId: M:MyApp.Sales.Application.Services.CustomerService.CreateCustomerAsync(MyApp.Sales.Application.Contracts.DTOs.CustomerDto)
  fullName: MyApp.Sales.Application.Services.CustomerService.CreateCustomerAsync(MyApp.Sales.Application.Contracts.DTOs.CustomerDto)
  nameWithType: CustomerService.CreateCustomerAsync(CustomerDto)
- uid: MyApp.Sales.Application.Services.CustomerService.CreateCustomerAsync*
  name: CreateCustomerAsync
  href: api/MyApp.Sales.Application.Services.CustomerService.html#MyApp_Sales_Application_Services_CustomerService_CreateCustomerAsync_
  commentId: Overload:MyApp.Sales.Application.Services.CustomerService.CreateCustomerAsync
  isSpec: "True"
  fullName: MyApp.Sales.Application.Services.CustomerService.CreateCustomerAsync
  nameWithType: CustomerService.CreateCustomerAsync
- uid: MyApp.Sales.Application.Services.CustomerService.DeleteCustomerAsync(System.Guid)
  name: DeleteCustomerAsync(Guid)
  href: api/MyApp.Sales.Application.Services.CustomerService.html#MyApp_Sales_Application_Services_CustomerService_DeleteCustomerAsync_System_Guid_
  commentId: M:MyApp.Sales.Application.Services.CustomerService.DeleteCustomerAsync(System.Guid)
  fullName: MyApp.Sales.Application.Services.CustomerService.DeleteCustomerAsync(System.Guid)
  nameWithType: CustomerService.DeleteCustomerAsync(Guid)
- uid: MyApp.Sales.Application.Services.CustomerService.DeleteCustomerAsync*
  name: DeleteCustomerAsync
  href: api/MyApp.Sales.Application.Services.CustomerService.html#MyApp_Sales_Application_Services_CustomerService_DeleteCustomerAsync_
  commentId: Overload:MyApp.Sales.Application.Services.CustomerService.DeleteCustomerAsync
  isSpec: "True"
  fullName: MyApp.Sales.Application.Services.CustomerService.DeleteCustomerAsync
  nameWithType: CustomerService.DeleteCustomerAsync
- uid: MyApp.Sales.Application.Services.CustomerService.GetCustomerByIdAsync(System.Guid)
  name: GetCustomerByIdAsync(Guid)
  href: api/MyApp.Sales.Application.Services.CustomerService.html#MyApp_Sales_Application_Services_CustomerService_GetCustomerByIdAsync_System_Guid_
  commentId: M:MyApp.Sales.Application.Services.CustomerService.GetCustomerByIdAsync(System.Guid)
  fullName: MyApp.Sales.Application.Services.CustomerService.GetCustomerByIdAsync(System.Guid)
  nameWithType: CustomerService.GetCustomerByIdAsync(Guid)
- uid: MyApp.Sales.Application.Services.CustomerService.GetCustomerByIdAsync*
  name: GetCustomerByIdAsync
  href: api/MyApp.Sales.Application.Services.CustomerService.html#MyApp_Sales_Application_Services_CustomerService_GetCustomerByIdAsync_
  commentId: Overload:MyApp.Sales.Application.Services.CustomerService.GetCustomerByIdAsync
  isSpec: "True"
  fullName: MyApp.Sales.Application.Services.CustomerService.GetCustomerByIdAsync
  nameWithType: CustomerService.GetCustomerByIdAsync
- uid: MyApp.Sales.Application.Services.CustomerService.ListCustomersAsync
  name: ListCustomersAsync()
  href: api/MyApp.Sales.Application.Services.CustomerService.html#MyApp_Sales_Application_Services_CustomerService_ListCustomersAsync
  commentId: M:MyApp.Sales.Application.Services.CustomerService.ListCustomersAsync
  fullName: MyApp.Sales.Application.Services.CustomerService.ListCustomersAsync()
  nameWithType: CustomerService.ListCustomersAsync()
- uid: MyApp.Sales.Application.Services.CustomerService.ListCustomersAsync*
  name: ListCustomersAsync
  href: api/MyApp.Sales.Application.Services.CustomerService.html#MyApp_Sales_Application_Services_CustomerService_ListCustomersAsync_
  commentId: Overload:MyApp.Sales.Application.Services.CustomerService.ListCustomersAsync
  isSpec: "True"
  fullName: MyApp.Sales.Application.Services.CustomerService.ListCustomersAsync
  nameWithType: CustomerService.ListCustomersAsync
- uid: MyApp.Sales.Application.Services.CustomerService.ListCustomersPaginatedAsync(System.Int32,System.Int32)
  name: ListCustomersPaginatedAsync(int, int)
  href: api/MyApp.Sales.Application.Services.CustomerService.html#MyApp_Sales_Application_Services_CustomerService_ListCustomersPaginatedAsync_System_Int32_System_Int32_
  commentId: M:MyApp.Sales.Application.Services.CustomerService.ListCustomersPaginatedAsync(System.Int32,System.Int32)
  name.vb: ListCustomersPaginatedAsync(Integer, Integer)
  fullName: MyApp.Sales.Application.Services.CustomerService.ListCustomersPaginatedAsync(int, int)
  fullName.vb: MyApp.Sales.Application.Services.CustomerService.ListCustomersPaginatedAsync(Integer, Integer)
  nameWithType: CustomerService.ListCustomersPaginatedAsync(int, int)
  nameWithType.vb: CustomerService.ListCustomersPaginatedAsync(Integer, Integer)
- uid: MyApp.Sales.Application.Services.CustomerService.ListCustomersPaginatedAsync*
  name: ListCustomersPaginatedAsync
  href: api/MyApp.Sales.Application.Services.CustomerService.html#MyApp_Sales_Application_Services_CustomerService_ListCustomersPaginatedAsync_
  commentId: Overload:MyApp.Sales.Application.Services.CustomerService.ListCustomersPaginatedAsync
  isSpec: "True"
  fullName: MyApp.Sales.Application.Services.CustomerService.ListCustomersPaginatedAsync
  nameWithType: CustomerService.ListCustomersPaginatedAsync
- uid: MyApp.Sales.Application.Services.CustomerService.UpdateCustomerAsync(System.Guid,MyApp.Sales.Application.Contracts.DTOs.CustomerDto)
  name: UpdateCustomerAsync(Guid, CustomerDto)
  href: api/MyApp.Sales.Application.Services.CustomerService.html#MyApp_Sales_Application_Services_CustomerService_UpdateCustomerAsync_System_Guid_MyApp_Sales_Application_Contracts_DTOs_CustomerDto_
  commentId: M:MyApp.Sales.Application.Services.CustomerService.UpdateCustomerAsync(System.Guid,MyApp.Sales.Application.Contracts.DTOs.CustomerDto)
  fullName: MyApp.Sales.Application.Services.CustomerService.UpdateCustomerAsync(System.Guid, MyApp.Sales.Application.Contracts.DTOs.CustomerDto)
  nameWithType: CustomerService.UpdateCustomerAsync(Guid, CustomerDto)
- uid: MyApp.Sales.Application.Services.CustomerService.UpdateCustomerAsync*
  name: UpdateCustomerAsync
  href: api/MyApp.Sales.Application.Services.CustomerService.html#MyApp_Sales_Application_Services_CustomerService_UpdateCustomerAsync_
  commentId: Overload:MyApp.Sales.Application.Services.CustomerService.UpdateCustomerAsync
  isSpec: "True"
  fullName: MyApp.Sales.Application.Services.CustomerService.UpdateCustomerAsync
  nameWithType: CustomerService.UpdateCustomerAsync
- uid: MyApp.Sales.Application.Services.SalesOrderService
  name: SalesOrderService
  href: api/MyApp.Sales.Application.Services.SalesOrderService.html
  commentId: T:MyApp.Sales.Application.Services.SalesOrderService
  fullName: MyApp.Sales.Application.Services.SalesOrderService
  nameWithType: SalesOrderService
- uid: MyApp.Sales.Application.Services.SalesOrderService.#ctor(MyApp.Sales.Domain.ISalesOrderRepository,MyApp.Sales.Domain.ICustomerRepository,AutoMapper.IMapper)
  name: SalesOrderService(ISalesOrderRepository, ICustomerRepository, IMapper)
  href: api/MyApp.Sales.Application.Services.SalesOrderService.html#MyApp_Sales_Application_Services_SalesOrderService__ctor_MyApp_Sales_Domain_ISalesOrderRepository_MyApp_Sales_Domain_ICustomerRepository_AutoMapper_IMapper_
  commentId: M:MyApp.Sales.Application.Services.SalesOrderService.#ctor(MyApp.Sales.Domain.ISalesOrderRepository,MyApp.Sales.Domain.ICustomerRepository,AutoMapper.IMapper)
  name.vb: New(ISalesOrderRepository, ICustomerRepository, IMapper)
  fullName: MyApp.Sales.Application.Services.SalesOrderService.SalesOrderService(MyApp.Sales.Domain.ISalesOrderRepository, MyApp.Sales.Domain.ICustomerRepository, AutoMapper.IMapper)
  fullName.vb: MyApp.Sales.Application.Services.SalesOrderService.New(MyApp.Sales.Domain.ISalesOrderRepository, MyApp.Sales.Domain.ICustomerRepository, AutoMapper.IMapper)
  nameWithType: SalesOrderService.SalesOrderService(ISalesOrderRepository, ICustomerRepository, IMapper)
  nameWithType.vb: SalesOrderService.New(ISalesOrderRepository, ICustomerRepository, IMapper)
- uid: MyApp.Sales.Application.Services.SalesOrderService.#ctor*
  name: SalesOrderService
  href: api/MyApp.Sales.Application.Services.SalesOrderService.html#MyApp_Sales_Application_Services_SalesOrderService__ctor_
  commentId: Overload:MyApp.Sales.Application.Services.SalesOrderService.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Sales.Application.Services.SalesOrderService.SalesOrderService
  fullName.vb: MyApp.Sales.Application.Services.SalesOrderService.New
  nameWithType: SalesOrderService.SalesOrderService
  nameWithType.vb: SalesOrderService.New
- uid: MyApp.Sales.Application.Services.SalesOrderService.CreateSalesOrderAsync(MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto)
  name: CreateSalesOrderAsync(CreateUpdateSalesOrderDto)
  href: api/MyApp.Sales.Application.Services.SalesOrderService.html#MyApp_Sales_Application_Services_SalesOrderService_CreateSalesOrderAsync_MyApp_Sales_Application_Contracts_DTOs_CreateUpdateSalesOrderDto_
  commentId: M:MyApp.Sales.Application.Services.SalesOrderService.CreateSalesOrderAsync(MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto)
  fullName: MyApp.Sales.Application.Services.SalesOrderService.CreateSalesOrderAsync(MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto)
  nameWithType: SalesOrderService.CreateSalesOrderAsync(CreateUpdateSalesOrderDto)
- uid: MyApp.Sales.Application.Services.SalesOrderService.CreateSalesOrderAsync*
  name: CreateSalesOrderAsync
  href: api/MyApp.Sales.Application.Services.SalesOrderService.html#MyApp_Sales_Application_Services_SalesOrderService_CreateSalesOrderAsync_
  commentId: Overload:MyApp.Sales.Application.Services.SalesOrderService.CreateSalesOrderAsync
  isSpec: "True"
  fullName: MyApp.Sales.Application.Services.SalesOrderService.CreateSalesOrderAsync
  nameWithType: SalesOrderService.CreateSalesOrderAsync
- uid: MyApp.Sales.Application.Services.SalesOrderService.DeleteSalesOrderAsync(System.Guid)
  name: DeleteSalesOrderAsync(Guid)
  href: api/MyApp.Sales.Application.Services.SalesOrderService.html#MyApp_Sales_Application_Services_SalesOrderService_DeleteSalesOrderAsync_System_Guid_
  commentId: M:MyApp.Sales.Application.Services.SalesOrderService.DeleteSalesOrderAsync(System.Guid)
  fullName: MyApp.Sales.Application.Services.SalesOrderService.DeleteSalesOrderAsync(System.Guid)
  nameWithType: SalesOrderService.DeleteSalesOrderAsync(Guid)
- uid: MyApp.Sales.Application.Services.SalesOrderService.DeleteSalesOrderAsync*
  name: DeleteSalesOrderAsync
  href: api/MyApp.Sales.Application.Services.SalesOrderService.html#MyApp_Sales_Application_Services_SalesOrderService_DeleteSalesOrderAsync_
  commentId: Overload:MyApp.Sales.Application.Services.SalesOrderService.DeleteSalesOrderAsync
  isSpec: "True"
  fullName: MyApp.Sales.Application.Services.SalesOrderService.DeleteSalesOrderAsync
  nameWithType: SalesOrderService.DeleteSalesOrderAsync
- uid: MyApp.Sales.Application.Services.SalesOrderService.GetSalesOrderByIdAsync(System.Guid)
  name: GetSalesOrderByIdAsync(Guid)
  href: api/MyApp.Sales.Application.Services.SalesOrderService.html#MyApp_Sales_Application_Services_SalesOrderService_GetSalesOrderByIdAsync_System_Guid_
  commentId: M:MyApp.Sales.Application.Services.SalesOrderService.GetSalesOrderByIdAsync(System.Guid)
  fullName: MyApp.Sales.Application.Services.SalesOrderService.GetSalesOrderByIdAsync(System.Guid)
  nameWithType: SalesOrderService.GetSalesOrderByIdAsync(Guid)
- uid: MyApp.Sales.Application.Services.SalesOrderService.GetSalesOrderByIdAsync*
  name: GetSalesOrderByIdAsync
  href: api/MyApp.Sales.Application.Services.SalesOrderService.html#MyApp_Sales_Application_Services_SalesOrderService_GetSalesOrderByIdAsync_
  commentId: Overload:MyApp.Sales.Application.Services.SalesOrderService.GetSalesOrderByIdAsync
  isSpec: "True"
  fullName: MyApp.Sales.Application.Services.SalesOrderService.GetSalesOrderByIdAsync
  nameWithType: SalesOrderService.GetSalesOrderByIdAsync
- uid: MyApp.Sales.Application.Services.SalesOrderService.ListSalesOrdersAsync
  name: ListSalesOrdersAsync()
  href: api/MyApp.Sales.Application.Services.SalesOrderService.html#MyApp_Sales_Application_Services_SalesOrderService_ListSalesOrdersAsync
  commentId: M:MyApp.Sales.Application.Services.SalesOrderService.ListSalesOrdersAsync
  fullName: MyApp.Sales.Application.Services.SalesOrderService.ListSalesOrdersAsync()
  nameWithType: SalesOrderService.ListSalesOrdersAsync()
- uid: MyApp.Sales.Application.Services.SalesOrderService.ListSalesOrdersAsync*
  name: ListSalesOrdersAsync
  href: api/MyApp.Sales.Application.Services.SalesOrderService.html#MyApp_Sales_Application_Services_SalesOrderService_ListSalesOrdersAsync_
  commentId: Overload:MyApp.Sales.Application.Services.SalesOrderService.ListSalesOrdersAsync
  isSpec: "True"
  fullName: MyApp.Sales.Application.Services.SalesOrderService.ListSalesOrdersAsync
  nameWithType: SalesOrderService.ListSalesOrdersAsync
- uid: MyApp.Sales.Application.Services.SalesOrderService.ListSalesOrdersPaginatedAsync(System.Int32,System.Int32)
  name: ListSalesOrdersPaginatedAsync(int, int)
  href: api/MyApp.Sales.Application.Services.SalesOrderService.html#MyApp_Sales_Application_Services_SalesOrderService_ListSalesOrdersPaginatedAsync_System_Int32_System_Int32_
  commentId: M:MyApp.Sales.Application.Services.SalesOrderService.ListSalesOrdersPaginatedAsync(System.Int32,System.Int32)
  name.vb: ListSalesOrdersPaginatedAsync(Integer, Integer)
  fullName: MyApp.Sales.Application.Services.SalesOrderService.ListSalesOrdersPaginatedAsync(int, int)
  fullName.vb: MyApp.Sales.Application.Services.SalesOrderService.ListSalesOrdersPaginatedAsync(Integer, Integer)
  nameWithType: SalesOrderService.ListSalesOrdersPaginatedAsync(int, int)
  nameWithType.vb: SalesOrderService.ListSalesOrdersPaginatedAsync(Integer, Integer)
- uid: MyApp.Sales.Application.Services.SalesOrderService.ListSalesOrdersPaginatedAsync*
  name: ListSalesOrdersPaginatedAsync
  href: api/MyApp.Sales.Application.Services.SalesOrderService.html#MyApp_Sales_Application_Services_SalesOrderService_ListSalesOrdersPaginatedAsync_
  commentId: Overload:MyApp.Sales.Application.Services.SalesOrderService.ListSalesOrdersPaginatedAsync
  isSpec: "True"
  fullName: MyApp.Sales.Application.Services.SalesOrderService.ListSalesOrdersPaginatedAsync
  nameWithType: SalesOrderService.ListSalesOrdersPaginatedAsync
- uid: MyApp.Sales.Application.Services.SalesOrderService.UpdateSalesOrderAsync(System.Guid,MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto)
  name: UpdateSalesOrderAsync(Guid, CreateUpdateSalesOrderDto)
  href: api/MyApp.Sales.Application.Services.SalesOrderService.html#MyApp_Sales_Application_Services_SalesOrderService_UpdateSalesOrderAsync_System_Guid_MyApp_Sales_Application_Contracts_DTOs_CreateUpdateSalesOrderDto_
  commentId: M:MyApp.Sales.Application.Services.SalesOrderService.UpdateSalesOrderAsync(System.Guid,MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto)
  fullName: MyApp.Sales.Application.Services.SalesOrderService.UpdateSalesOrderAsync(System.Guid, MyApp.Sales.Application.Contracts.DTOs.CreateUpdateSalesOrderDto)
  nameWithType: SalesOrderService.UpdateSalesOrderAsync(Guid, CreateUpdateSalesOrderDto)
- uid: MyApp.Sales.Application.Services.SalesOrderService.UpdateSalesOrderAsync*
  name: UpdateSalesOrderAsync
  href: api/MyApp.Sales.Application.Services.SalesOrderService.html#MyApp_Sales_Application_Services_SalesOrderService_UpdateSalesOrderAsync_
  commentId: Overload:MyApp.Sales.Application.Services.SalesOrderService.UpdateSalesOrderAsync
  isSpec: "True"
  fullName: MyApp.Sales.Application.Services.SalesOrderService.UpdateSalesOrderAsync
  nameWithType: SalesOrderService.UpdateSalesOrderAsync
- uid: MyApp.Sales.Application.Tests.Services
  name: MyApp.Sales.Application.Tests.Services
  href: api/MyApp.Sales.Application.Tests.Services.html
  commentId: N:MyApp.Sales.Application.Tests.Services
  fullName: MyApp.Sales.Application.Tests.Services
  nameWithType: MyApp.Sales.Application.Tests.Services
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests
  name: CustomerServiceTests
  href: api/MyApp.Sales.Application.Tests.Services.CustomerServiceTests.html
  commentId: T:MyApp.Sales.Application.Tests.Services.CustomerServiceTests
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests
  nameWithType: CustomerServiceTests
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.#ctor
  name: CustomerServiceTests()
  href: api/MyApp.Sales.Application.Tests.Services.CustomerServiceTests.html#MyApp_Sales_Application_Tests_Services_CustomerServiceTests__ctor
  commentId: M:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.#ctor
  name.vb: New()
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.CustomerServiceTests()
  fullName.vb: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.New()
  nameWithType: CustomerServiceTests.CustomerServiceTests()
  nameWithType.vb: CustomerServiceTests.New()
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.#ctor*
  name: CustomerServiceTests
  href: api/MyApp.Sales.Application.Tests.Services.CustomerServiceTests.html#MyApp_Sales_Application_Tests_Services_CustomerServiceTests__ctor_
  commentId: Overload:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.CustomerServiceTests
  fullName.vb: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.New
  nameWithType: CustomerServiceTests.CustomerServiceTests
  nameWithType.vb: CustomerServiceTests.New
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.CreateCustomerAsync_AssignsNewGuid
  name: CreateCustomerAsync_AssignsNewGuid()
  href: api/MyApp.Sales.Application.Tests.Services.CustomerServiceTests.html#MyApp_Sales_Application_Tests_Services_CustomerServiceTests_CreateCustomerAsync_AssignsNewGuid
  commentId: M:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.CreateCustomerAsync_AssignsNewGuid
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.CreateCustomerAsync_AssignsNewGuid()
  nameWithType: CustomerServiceTests.CreateCustomerAsync_AssignsNewGuid()
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.CreateCustomerAsync_AssignsNewGuid*
  name: CreateCustomerAsync_AssignsNewGuid
  href: api/MyApp.Sales.Application.Tests.Services.CustomerServiceTests.html#MyApp_Sales_Application_Tests_Services_CustomerServiceTests_CreateCustomerAsync_AssignsNewGuid_
  commentId: Overload:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.CreateCustomerAsync_AssignsNewGuid
  isSpec: "True"
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.CreateCustomerAsync_AssignsNewGuid
  nameWithType: CustomerServiceTests.CreateCustomerAsync_AssignsNewGuid
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.CreateCustomerAsync_WithValidDto_CreatesCustomer
  name: CreateCustomerAsync_WithValidDto_CreatesCustomer()
  href: api/MyApp.Sales.Application.Tests.Services.CustomerServiceTests.html#MyApp_Sales_Application_Tests_Services_CustomerServiceTests_CreateCustomerAsync_WithValidDto_CreatesCustomer
  commentId: M:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.CreateCustomerAsync_WithValidDto_CreatesCustomer
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.CreateCustomerAsync_WithValidDto_CreatesCustomer()
  nameWithType: CustomerServiceTests.CreateCustomerAsync_WithValidDto_CreatesCustomer()
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.CreateCustomerAsync_WithValidDto_CreatesCustomer*
  name: CreateCustomerAsync_WithValidDto_CreatesCustomer
  href: api/MyApp.Sales.Application.Tests.Services.CustomerServiceTests.html#MyApp_Sales_Application_Tests_Services_CustomerServiceTests_CreateCustomerAsync_WithValidDto_CreatesCustomer_
  commentId: Overload:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.CreateCustomerAsync_WithValidDto_CreatesCustomer
  isSpec: "True"
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.CreateCustomerAsync_WithValidDto_CreatesCustomer
  nameWithType: CustomerServiceTests.CreateCustomerAsync_WithValidDto_CreatesCustomer
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.DeleteCustomerAsync_CallsRepositoryDeleteWithCorrectId
  name: DeleteCustomerAsync_CallsRepositoryDeleteWithCorrectId()
  href: api/MyApp.Sales.Application.Tests.Services.CustomerServiceTests.html#MyApp_Sales_Application_Tests_Services_CustomerServiceTests_DeleteCustomerAsync_CallsRepositoryDeleteWithCorrectId
  commentId: M:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.DeleteCustomerAsync_CallsRepositoryDeleteWithCorrectId
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.DeleteCustomerAsync_CallsRepositoryDeleteWithCorrectId()
  nameWithType: CustomerServiceTests.DeleteCustomerAsync_CallsRepositoryDeleteWithCorrectId()
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.DeleteCustomerAsync_CallsRepositoryDeleteWithCorrectId*
  name: DeleteCustomerAsync_CallsRepositoryDeleteWithCorrectId
  href: api/MyApp.Sales.Application.Tests.Services.CustomerServiceTests.html#MyApp_Sales_Application_Tests_Services_CustomerServiceTests_DeleteCustomerAsync_CallsRepositoryDeleteWithCorrectId_
  commentId: Overload:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.DeleteCustomerAsync_CallsRepositoryDeleteWithCorrectId
  isSpec: "True"
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.DeleteCustomerAsync_CallsRepositoryDeleteWithCorrectId
  nameWithType: CustomerServiceTests.DeleteCustomerAsync_CallsRepositoryDeleteWithCorrectId
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.GetCustomerByIdAsync_WithExistingId_ReturnsCustomerDto
  name: GetCustomerByIdAsync_WithExistingId_ReturnsCustomerDto()
  href: api/MyApp.Sales.Application.Tests.Services.CustomerServiceTests.html#MyApp_Sales_Application_Tests_Services_CustomerServiceTests_GetCustomerByIdAsync_WithExistingId_ReturnsCustomerDto
  commentId: M:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.GetCustomerByIdAsync_WithExistingId_ReturnsCustomerDto
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.GetCustomerByIdAsync_WithExistingId_ReturnsCustomerDto()
  nameWithType: CustomerServiceTests.GetCustomerByIdAsync_WithExistingId_ReturnsCustomerDto()
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.GetCustomerByIdAsync_WithExistingId_ReturnsCustomerDto*
  name: GetCustomerByIdAsync_WithExistingId_ReturnsCustomerDto
  href: api/MyApp.Sales.Application.Tests.Services.CustomerServiceTests.html#MyApp_Sales_Application_Tests_Services_CustomerServiceTests_GetCustomerByIdAsync_WithExistingId_ReturnsCustomerDto_
  commentId: Overload:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.GetCustomerByIdAsync_WithExistingId_ReturnsCustomerDto
  isSpec: "True"
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.GetCustomerByIdAsync_WithExistingId_ReturnsCustomerDto
  nameWithType: CustomerServiceTests.GetCustomerByIdAsync_WithExistingId_ReturnsCustomerDto
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.GetCustomerByIdAsync_WithNonExistentId_ReturnsNull
  name: GetCustomerByIdAsync_WithNonExistentId_ReturnsNull()
  href: api/MyApp.Sales.Application.Tests.Services.CustomerServiceTests.html#MyApp_Sales_Application_Tests_Services_CustomerServiceTests_GetCustomerByIdAsync_WithNonExistentId_ReturnsNull
  commentId: M:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.GetCustomerByIdAsync_WithNonExistentId_ReturnsNull
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.GetCustomerByIdAsync_WithNonExistentId_ReturnsNull()
  nameWithType: CustomerServiceTests.GetCustomerByIdAsync_WithNonExistentId_ReturnsNull()
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.GetCustomerByIdAsync_WithNonExistentId_ReturnsNull*
  name: GetCustomerByIdAsync_WithNonExistentId_ReturnsNull
  href: api/MyApp.Sales.Application.Tests.Services.CustomerServiceTests.html#MyApp_Sales_Application_Tests_Services_CustomerServiceTests_GetCustomerByIdAsync_WithNonExistentId_ReturnsNull_
  commentId: Overload:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.GetCustomerByIdAsync_WithNonExistentId_ReturnsNull
  isSpec: "True"
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.GetCustomerByIdAsync_WithNonExistentId_ReturnsNull
  nameWithType: CustomerServiceTests.GetCustomerByIdAsync_WithNonExistentId_ReturnsNull
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.ListCustomersAsync_ReturnsAllCustomers
  name: ListCustomersAsync_ReturnsAllCustomers()
  href: api/MyApp.Sales.Application.Tests.Services.CustomerServiceTests.html#MyApp_Sales_Application_Tests_Services_CustomerServiceTests_ListCustomersAsync_ReturnsAllCustomers
  commentId: M:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.ListCustomersAsync_ReturnsAllCustomers
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.ListCustomersAsync_ReturnsAllCustomers()
  nameWithType: CustomerServiceTests.ListCustomersAsync_ReturnsAllCustomers()
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.ListCustomersAsync_ReturnsAllCustomers*
  name: ListCustomersAsync_ReturnsAllCustomers
  href: api/MyApp.Sales.Application.Tests.Services.CustomerServiceTests.html#MyApp_Sales_Application_Tests_Services_CustomerServiceTests_ListCustomersAsync_ReturnsAllCustomers_
  commentId: Overload:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.ListCustomersAsync_ReturnsAllCustomers
  isSpec: "True"
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.ListCustomersAsync_ReturnsAllCustomers
  nameWithType: CustomerServiceTests.ListCustomersAsync_ReturnsAllCustomers
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.ListCustomersAsync_WithEmptyRepository_ReturnsEmptyList
  name: ListCustomersAsync_WithEmptyRepository_ReturnsEmptyList()
  href: api/MyApp.Sales.Application.Tests.Services.CustomerServiceTests.html#MyApp_Sales_Application_Tests_Services_CustomerServiceTests_ListCustomersAsync_WithEmptyRepository_ReturnsEmptyList
  commentId: M:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.ListCustomersAsync_WithEmptyRepository_ReturnsEmptyList
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.ListCustomersAsync_WithEmptyRepository_ReturnsEmptyList()
  nameWithType: CustomerServiceTests.ListCustomersAsync_WithEmptyRepository_ReturnsEmptyList()
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.ListCustomersAsync_WithEmptyRepository_ReturnsEmptyList*
  name: ListCustomersAsync_WithEmptyRepository_ReturnsEmptyList
  href: api/MyApp.Sales.Application.Tests.Services.CustomerServiceTests.html#MyApp_Sales_Application_Tests_Services_CustomerServiceTests_ListCustomersAsync_WithEmptyRepository_ReturnsEmptyList_
  commentId: Overload:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.ListCustomersAsync_WithEmptyRepository_ReturnsEmptyList
  isSpec: "True"
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.ListCustomersAsync_WithEmptyRepository_ReturnsEmptyList
  nameWithType: CustomerServiceTests.ListCustomersAsync_WithEmptyRepository_ReturnsEmptyList
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.UpdateCustomerAsync_WithExistingCustomer_UpdatesSuccessfully
  name: UpdateCustomerAsync_WithExistingCustomer_UpdatesSuccessfully()
  href: api/MyApp.Sales.Application.Tests.Services.CustomerServiceTests.html#MyApp_Sales_Application_Tests_Services_CustomerServiceTests_UpdateCustomerAsync_WithExistingCustomer_UpdatesSuccessfully
  commentId: M:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.UpdateCustomerAsync_WithExistingCustomer_UpdatesSuccessfully
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.UpdateCustomerAsync_WithExistingCustomer_UpdatesSuccessfully()
  nameWithType: CustomerServiceTests.UpdateCustomerAsync_WithExistingCustomer_UpdatesSuccessfully()
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.UpdateCustomerAsync_WithExistingCustomer_UpdatesSuccessfully*
  name: UpdateCustomerAsync_WithExistingCustomer_UpdatesSuccessfully
  href: api/MyApp.Sales.Application.Tests.Services.CustomerServiceTests.html#MyApp_Sales_Application_Tests_Services_CustomerServiceTests_UpdateCustomerAsync_WithExistingCustomer_UpdatesSuccessfully_
  commentId: Overload:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.UpdateCustomerAsync_WithExistingCustomer_UpdatesSuccessfully
  isSpec: "True"
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.UpdateCustomerAsync_WithExistingCustomer_UpdatesSuccessfully
  nameWithType: CustomerServiceTests.UpdateCustomerAsync_WithExistingCustomer_UpdatesSuccessfully
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.UpdateCustomerAsync_WithNonExistentCustomer_ThrowsInvalidOperationException
  name: UpdateCustomerAsync_WithNonExistentCustomer_ThrowsInvalidOperationException()
  href: api/MyApp.Sales.Application.Tests.Services.CustomerServiceTests.html#MyApp_Sales_Application_Tests_Services_CustomerServiceTests_UpdateCustomerAsync_WithNonExistentCustomer_ThrowsInvalidOperationException
  commentId: M:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.UpdateCustomerAsync_WithNonExistentCustomer_ThrowsInvalidOperationException
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.UpdateCustomerAsync_WithNonExistentCustomer_ThrowsInvalidOperationException()
  nameWithType: CustomerServiceTests.UpdateCustomerAsync_WithNonExistentCustomer_ThrowsInvalidOperationException()
- uid: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.UpdateCustomerAsync_WithNonExistentCustomer_ThrowsInvalidOperationException*
  name: UpdateCustomerAsync_WithNonExistentCustomer_ThrowsInvalidOperationException
  href: api/MyApp.Sales.Application.Tests.Services.CustomerServiceTests.html#MyApp_Sales_Application_Tests_Services_CustomerServiceTests_UpdateCustomerAsync_WithNonExistentCustomer_ThrowsInvalidOperationException_
  commentId: Overload:MyApp.Sales.Application.Tests.Services.CustomerServiceTests.UpdateCustomerAsync_WithNonExistentCustomer_ThrowsInvalidOperationException
  isSpec: "True"
  fullName: MyApp.Sales.Application.Tests.Services.CustomerServiceTests.UpdateCustomerAsync_WithNonExistentCustomer_ThrowsInvalidOperationException
  nameWithType: CustomerServiceTests.UpdateCustomerAsync_WithNonExistentCustomer_ThrowsInvalidOperationException
- uid: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests
  name: SalesOrderServiceTests
  href: api/MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.html
  commentId: T:MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests
  fullName: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests
  nameWithType: SalesOrderServiceTests
- uid: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.#ctor
  name: SalesOrderServiceTests()
  href: api/MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.html#MyApp_Sales_Application_Tests_Services_SalesOrderServiceTests__ctor
  commentId: M:MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.#ctor
  name.vb: New()
  fullName: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.SalesOrderServiceTests()
  fullName.vb: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.New()
  nameWithType: SalesOrderServiceTests.SalesOrderServiceTests()
  nameWithType.vb: SalesOrderServiceTests.New()
- uid: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.#ctor*
  name: SalesOrderServiceTests
  href: api/MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.html#MyApp_Sales_Application_Tests_Services_SalesOrderServiceTests__ctor_
  commentId: Overload:MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.SalesOrderServiceTests
  fullName.vb: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.New
  nameWithType: SalesOrderServiceTests.SalesOrderServiceTests
  nameWithType.vb: SalesOrderServiceTests.New
- uid: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.CreateSalesOrderAsync_CalculatesTotalFromLines
  name: CreateSalesOrderAsync_CalculatesTotalFromLines()
  href: api/MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.html#MyApp_Sales_Application_Tests_Services_SalesOrderServiceTests_CreateSalesOrderAsync_CalculatesTotalFromLines
  commentId: M:MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.CreateSalesOrderAsync_CalculatesTotalFromLines
  fullName: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.CreateSalesOrderAsync_CalculatesTotalFromLines()
  nameWithType: SalesOrderServiceTests.CreateSalesOrderAsync_CalculatesTotalFromLines()
- uid: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.CreateSalesOrderAsync_CalculatesTotalFromLines*
  name: CreateSalesOrderAsync_CalculatesTotalFromLines
  href: api/MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.html#MyApp_Sales_Application_Tests_Services_SalesOrderServiceTests_CreateSalesOrderAsync_CalculatesTotalFromLines_
  commentId: Overload:MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.CreateSalesOrderAsync_CalculatesTotalFromLines
  isSpec: "True"
  fullName: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.CreateSalesOrderAsync_CalculatesTotalFromLines
  nameWithType: SalesOrderServiceTests.CreateSalesOrderAsync_CalculatesTotalFromLines
- uid: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.CreateSalesOrderAsync_UsesUtcNowIfOrderDateIsDefault
  name: CreateSalesOrderAsync_UsesUtcNowIfOrderDateIsDefault()
  href: api/MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.html#MyApp_Sales_Application_Tests_Services_SalesOrderServiceTests_CreateSalesOrderAsync_UsesUtcNowIfOrderDateIsDefault
  commentId: M:MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.CreateSalesOrderAsync_UsesUtcNowIfOrderDateIsDefault
  fullName: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.CreateSalesOrderAsync_UsesUtcNowIfOrderDateIsDefault()
  nameWithType: SalesOrderServiceTests.CreateSalesOrderAsync_UsesUtcNowIfOrderDateIsDefault()
- uid: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.CreateSalesOrderAsync_UsesUtcNowIfOrderDateIsDefault*
  name: CreateSalesOrderAsync_UsesUtcNowIfOrderDateIsDefault
  href: api/MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.html#MyApp_Sales_Application_Tests_Services_SalesOrderServiceTests_CreateSalesOrderAsync_UsesUtcNowIfOrderDateIsDefault_
  commentId: Overload:MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.CreateSalesOrderAsync_UsesUtcNowIfOrderDateIsDefault
  isSpec: "True"
  fullName: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.CreateSalesOrderAsync_UsesUtcNowIfOrderDateIsDefault
  nameWithType: SalesOrderServiceTests.CreateSalesOrderAsync_UsesUtcNowIfOrderDateIsDefault
- uid: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.CreateSalesOrderAsync_WithNonExistentCustomer_ThrowsInvalidOperationException
  name: CreateSalesOrderAsync_WithNonExistentCustomer_ThrowsInvalidOperationException()
  href: api/MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.html#MyApp_Sales_Application_Tests_Services_SalesOrderServiceTests_CreateSalesOrderAsync_WithNonExistentCustomer_ThrowsInvalidOperationException
  commentId: M:MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.CreateSalesOrderAsync_WithNonExistentCustomer_ThrowsInvalidOperationException
  fullName: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.CreateSalesOrderAsync_WithNonExistentCustomer_ThrowsInvalidOperationException()
  nameWithType: SalesOrderServiceTests.CreateSalesOrderAsync_WithNonExistentCustomer_ThrowsInvalidOperationException()
- uid: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.CreateSalesOrderAsync_WithNonExistentCustomer_ThrowsInvalidOperationException*
  name: CreateSalesOrderAsync_WithNonExistentCustomer_ThrowsInvalidOperationException
  href: api/MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.html#MyApp_Sales_Application_Tests_Services_SalesOrderServiceTests_CreateSalesOrderAsync_WithNonExistentCustomer_ThrowsInvalidOperationException_
  commentId: Overload:MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.CreateSalesOrderAsync_WithNonExistentCustomer_ThrowsInvalidOperationException
  isSpec: "True"
  fullName: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.CreateSalesOrderAsync_WithNonExistentCustomer_ThrowsInvalidOperationException
  nameWithType: SalesOrderServiceTests.CreateSalesOrderAsync_WithNonExistentCustomer_ThrowsInvalidOperationException
- uid: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.CreateSalesOrderAsync_WithValidCustomer_CreatesOrder
  name: CreateSalesOrderAsync_WithValidCustomer_CreatesOrder()
  href: api/MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.html#MyApp_Sales_Application_Tests_Services_SalesOrderServiceTests_CreateSalesOrderAsync_WithValidCustomer_CreatesOrder
  commentId: M:MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.CreateSalesOrderAsync_WithValidCustomer_CreatesOrder
  fullName: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.CreateSalesOrderAsync_WithValidCustomer_CreatesOrder()
  nameWithType: SalesOrderServiceTests.CreateSalesOrderAsync_WithValidCustomer_CreatesOrder()
- uid: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.CreateSalesOrderAsync_WithValidCustomer_CreatesOrder*
  name: CreateSalesOrderAsync_WithValidCustomer_CreatesOrder
  href: api/MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.html#MyApp_Sales_Application_Tests_Services_SalesOrderServiceTests_CreateSalesOrderAsync_WithValidCustomer_CreatesOrder_
  commentId: Overload:MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.CreateSalesOrderAsync_WithValidCustomer_CreatesOrder
  isSpec: "True"
  fullName: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.CreateSalesOrderAsync_WithValidCustomer_CreatesOrder
  nameWithType: SalesOrderServiceTests.CreateSalesOrderAsync_WithValidCustomer_CreatesOrder
- uid: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.DeleteSalesOrderAsync_CallsRepositoryDeleteWithCorrectId
  name: DeleteSalesOrderAsync_CallsRepositoryDeleteWithCorrectId()
  href: api/MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.html#MyApp_Sales_Application_Tests_Services_SalesOrderServiceTests_DeleteSalesOrderAsync_CallsRepositoryDeleteWithCorrectId
  commentId: M:MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.DeleteSalesOrderAsync_CallsRepositoryDeleteWithCorrectId
  fullName: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.DeleteSalesOrderAsync_CallsRepositoryDeleteWithCorrectId()
  nameWithType: SalesOrderServiceTests.DeleteSalesOrderAsync_CallsRepositoryDeleteWithCorrectId()
- uid: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.DeleteSalesOrderAsync_CallsRepositoryDeleteWithCorrectId*
  name: DeleteSalesOrderAsync_CallsRepositoryDeleteWithCorrectId
  href: api/MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.html#MyApp_Sales_Application_Tests_Services_SalesOrderServiceTests_DeleteSalesOrderAsync_CallsRepositoryDeleteWithCorrectId_
  commentId: Overload:MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.DeleteSalesOrderAsync_CallsRepositoryDeleteWithCorrectId
  isSpec: "True"
  fullName: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.DeleteSalesOrderAsync_CallsRepositoryDeleteWithCorrectId
  nameWithType: SalesOrderServiceTests.DeleteSalesOrderAsync_CallsRepositoryDeleteWithCorrectId
- uid: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.GetSalesOrderByIdAsync_WithExistingId_ReturnsOrderDto
  name: GetSalesOrderByIdAsync_WithExistingId_ReturnsOrderDto()
  href: api/MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.html#MyApp_Sales_Application_Tests_Services_SalesOrderServiceTests_GetSalesOrderByIdAsync_WithExistingId_ReturnsOrderDto
  commentId: M:MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.GetSalesOrderByIdAsync_WithExistingId_ReturnsOrderDto
  fullName: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.GetSalesOrderByIdAsync_WithExistingId_ReturnsOrderDto()
  nameWithType: SalesOrderServiceTests.GetSalesOrderByIdAsync_WithExistingId_ReturnsOrderDto()
- uid: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.GetSalesOrderByIdAsync_WithExistingId_ReturnsOrderDto*
  name: GetSalesOrderByIdAsync_WithExistingId_ReturnsOrderDto
  href: api/MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.html#MyApp_Sales_Application_Tests_Services_SalesOrderServiceTests_GetSalesOrderByIdAsync_WithExistingId_ReturnsOrderDto_
  commentId: Overload:MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.GetSalesOrderByIdAsync_WithExistingId_ReturnsOrderDto
  isSpec: "True"
  fullName: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.GetSalesOrderByIdAsync_WithExistingId_ReturnsOrderDto
  nameWithType: SalesOrderServiceTests.GetSalesOrderByIdAsync_WithExistingId_ReturnsOrderDto
- uid: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.GetSalesOrderByIdAsync_WithNonExistentId_ReturnsNull
  name: GetSalesOrderByIdAsync_WithNonExistentId_ReturnsNull()
  href: api/MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.html#MyApp_Sales_Application_Tests_Services_SalesOrderServiceTests_GetSalesOrderByIdAsync_WithNonExistentId_ReturnsNull
  commentId: M:MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.GetSalesOrderByIdAsync_WithNonExistentId_ReturnsNull
  fullName: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.GetSalesOrderByIdAsync_WithNonExistentId_ReturnsNull()
  nameWithType: SalesOrderServiceTests.GetSalesOrderByIdAsync_WithNonExistentId_ReturnsNull()
- uid: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.GetSalesOrderByIdAsync_WithNonExistentId_ReturnsNull*
  name: GetSalesOrderByIdAsync_WithNonExistentId_ReturnsNull
  href: api/MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.html#MyApp_Sales_Application_Tests_Services_SalesOrderServiceTests_GetSalesOrderByIdAsync_WithNonExistentId_ReturnsNull_
  commentId: Overload:MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.GetSalesOrderByIdAsync_WithNonExistentId_ReturnsNull
  isSpec: "True"
  fullName: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.GetSalesOrderByIdAsync_WithNonExistentId_ReturnsNull
  nameWithType: SalesOrderServiceTests.GetSalesOrderByIdAsync_WithNonExistentId_ReturnsNull
- uid: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.ListSalesOrdersAsync_ReturnsAllOrders
  name: ListSalesOrdersAsync_ReturnsAllOrders()
  href: api/MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.html#MyApp_Sales_Application_Tests_Services_SalesOrderServiceTests_ListSalesOrdersAsync_ReturnsAllOrders
  commentId: M:MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.ListSalesOrdersAsync_ReturnsAllOrders
  fullName: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.ListSalesOrdersAsync_ReturnsAllOrders()
  nameWithType: SalesOrderServiceTests.ListSalesOrdersAsync_ReturnsAllOrders()
- uid: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.ListSalesOrdersAsync_ReturnsAllOrders*
  name: ListSalesOrdersAsync_ReturnsAllOrders
  href: api/MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.html#MyApp_Sales_Application_Tests_Services_SalesOrderServiceTests_ListSalesOrdersAsync_ReturnsAllOrders_
  commentId: Overload:MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.ListSalesOrdersAsync_ReturnsAllOrders
  isSpec: "True"
  fullName: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.ListSalesOrdersAsync_ReturnsAllOrders
  nameWithType: SalesOrderServiceTests.ListSalesOrdersAsync_ReturnsAllOrders
- uid: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.UpdateSalesOrderAsync_WithChangedCustomerNotFound_ThrowsInvalidOperationException
  name: UpdateSalesOrderAsync_WithChangedCustomerNotFound_ThrowsInvalidOperationException()
  href: api/MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.html#MyApp_Sales_Application_Tests_Services_SalesOrderServiceTests_UpdateSalesOrderAsync_WithChangedCustomerNotFound_ThrowsInvalidOperationException
  commentId: M:MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.UpdateSalesOrderAsync_WithChangedCustomerNotFound_ThrowsInvalidOperationException
  fullName: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.UpdateSalesOrderAsync_WithChangedCustomerNotFound_ThrowsInvalidOperationException()
  nameWithType: SalesOrderServiceTests.UpdateSalesOrderAsync_WithChangedCustomerNotFound_ThrowsInvalidOperationException()
- uid: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.UpdateSalesOrderAsync_WithChangedCustomerNotFound_ThrowsInvalidOperationException*
  name: UpdateSalesOrderAsync_WithChangedCustomerNotFound_ThrowsInvalidOperationException
  href: api/MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.html#MyApp_Sales_Application_Tests_Services_SalesOrderServiceTests_UpdateSalesOrderAsync_WithChangedCustomerNotFound_ThrowsInvalidOperationException_
  commentId: Overload:MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.UpdateSalesOrderAsync_WithChangedCustomerNotFound_ThrowsInvalidOperationException
  isSpec: "True"
  fullName: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.UpdateSalesOrderAsync_WithChangedCustomerNotFound_ThrowsInvalidOperationException
  nameWithType: SalesOrderServiceTests.UpdateSalesOrderAsync_WithChangedCustomerNotFound_ThrowsInvalidOperationException
- uid: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.UpdateSalesOrderAsync_WithChangedCustomer_ValidatesNewCustomer
  name: UpdateSalesOrderAsync_WithChangedCustomer_ValidatesNewCustomer()
  href: api/MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.html#MyApp_Sales_Application_Tests_Services_SalesOrderServiceTests_UpdateSalesOrderAsync_WithChangedCustomer_ValidatesNewCustomer
  commentId: M:MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.UpdateSalesOrderAsync_WithChangedCustomer_ValidatesNewCustomer
  fullName: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.UpdateSalesOrderAsync_WithChangedCustomer_ValidatesNewCustomer()
  nameWithType: SalesOrderServiceTests.UpdateSalesOrderAsync_WithChangedCustomer_ValidatesNewCustomer()
- uid: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.UpdateSalesOrderAsync_WithChangedCustomer_ValidatesNewCustomer*
  name: UpdateSalesOrderAsync_WithChangedCustomer_ValidatesNewCustomer
  href: api/MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.html#MyApp_Sales_Application_Tests_Services_SalesOrderServiceTests_UpdateSalesOrderAsync_WithChangedCustomer_ValidatesNewCustomer_
  commentId: Overload:MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.UpdateSalesOrderAsync_WithChangedCustomer_ValidatesNewCustomer
  isSpec: "True"
  fullName: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.UpdateSalesOrderAsync_WithChangedCustomer_ValidatesNewCustomer
  nameWithType: SalesOrderServiceTests.UpdateSalesOrderAsync_WithChangedCustomer_ValidatesNewCustomer
- uid: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.UpdateSalesOrderAsync_WithExistingOrder_UpdatesSuccessfully
  name: UpdateSalesOrderAsync_WithExistingOrder_UpdatesSuccessfully()
  href: api/MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.html#MyApp_Sales_Application_Tests_Services_SalesOrderServiceTests_UpdateSalesOrderAsync_WithExistingOrder_UpdatesSuccessfully
  commentId: M:MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.UpdateSalesOrderAsync_WithExistingOrder_UpdatesSuccessfully
  fullName: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.UpdateSalesOrderAsync_WithExistingOrder_UpdatesSuccessfully()
  nameWithType: SalesOrderServiceTests.UpdateSalesOrderAsync_WithExistingOrder_UpdatesSuccessfully()
- uid: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.UpdateSalesOrderAsync_WithExistingOrder_UpdatesSuccessfully*
  name: UpdateSalesOrderAsync_WithExistingOrder_UpdatesSuccessfully
  href: api/MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.html#MyApp_Sales_Application_Tests_Services_SalesOrderServiceTests_UpdateSalesOrderAsync_WithExistingOrder_UpdatesSuccessfully_
  commentId: Overload:MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.UpdateSalesOrderAsync_WithExistingOrder_UpdatesSuccessfully
  isSpec: "True"
  fullName: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.UpdateSalesOrderAsync_WithExistingOrder_UpdatesSuccessfully
  nameWithType: SalesOrderServiceTests.UpdateSalesOrderAsync_WithExistingOrder_UpdatesSuccessfully
- uid: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.UpdateSalesOrderAsync_WithNonExistentOrder_ThrowsInvalidOperationException
  name: UpdateSalesOrderAsync_WithNonExistentOrder_ThrowsInvalidOperationException()
  href: api/MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.html#MyApp_Sales_Application_Tests_Services_SalesOrderServiceTests_UpdateSalesOrderAsync_WithNonExistentOrder_ThrowsInvalidOperationException
  commentId: M:MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.UpdateSalesOrderAsync_WithNonExistentOrder_ThrowsInvalidOperationException
  fullName: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.UpdateSalesOrderAsync_WithNonExistentOrder_ThrowsInvalidOperationException()
  nameWithType: SalesOrderServiceTests.UpdateSalesOrderAsync_WithNonExistentOrder_ThrowsInvalidOperationException()
- uid: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.UpdateSalesOrderAsync_WithNonExistentOrder_ThrowsInvalidOperationException*
  name: UpdateSalesOrderAsync_WithNonExistentOrder_ThrowsInvalidOperationException
  href: api/MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.html#MyApp_Sales_Application_Tests_Services_SalesOrderServiceTests_UpdateSalesOrderAsync_WithNonExistentOrder_ThrowsInvalidOperationException_
  commentId: Overload:MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.UpdateSalesOrderAsync_WithNonExistentOrder_ThrowsInvalidOperationException
  isSpec: "True"
  fullName: MyApp.Sales.Application.Tests.Services.SalesOrderServiceTests.UpdateSalesOrderAsync_WithNonExistentOrder_ThrowsInvalidOperationException
  nameWithType: SalesOrderServiceTests.UpdateSalesOrderAsync_WithNonExistentOrder_ThrowsInvalidOperationException
- uid: MyApp.Sales.Domain
  name: MyApp.Sales.Domain
  href: api/MyApp.Sales.Domain.html
  commentId: N:MyApp.Sales.Domain
  fullName: MyApp.Sales.Domain
  nameWithType: MyApp.Sales.Domain
- uid: MyApp.Sales.Domain.Entities
  name: MyApp.Sales.Domain.Entities
  href: api/MyApp.Sales.Domain.Entities.html
  commentId: N:MyApp.Sales.Domain.Entities
  fullName: MyApp.Sales.Domain.Entities
  nameWithType: MyApp.Sales.Domain.Entities
- uid: MyApp.Sales.Domain.Entities.Customer
  name: Customer
  href: api/MyApp.Sales.Domain.Entities.Customer.html
  commentId: T:MyApp.Sales.Domain.Entities.Customer
  fullName: MyApp.Sales.Domain.Entities.Customer
  nameWithType: Customer
- uid: MyApp.Sales.Domain.Entities.Customer.Address
  name: Address
  href: api/MyApp.Sales.Domain.Entities.Customer.html#MyApp_Sales_Domain_Entities_Customer_Address
  commentId: P:MyApp.Sales.Domain.Entities.Customer.Address
  fullName: MyApp.Sales.Domain.Entities.Customer.Address
  nameWithType: Customer.Address
- uid: MyApp.Sales.Domain.Entities.Customer.Address*
  name: Address
  href: api/MyApp.Sales.Domain.Entities.Customer.html#MyApp_Sales_Domain_Entities_Customer_Address_
  commentId: Overload:MyApp.Sales.Domain.Entities.Customer.Address
  isSpec: "True"
  fullName: MyApp.Sales.Domain.Entities.Customer.Address
  nameWithType: Customer.Address
- uid: MyApp.Sales.Domain.Entities.Customer.Email
  name: Email
  href: api/MyApp.Sales.Domain.Entities.Customer.html#MyApp_Sales_Domain_Entities_Customer_Email
  commentId: P:MyApp.Sales.Domain.Entities.Customer.Email
  fullName: MyApp.Sales.Domain.Entities.Customer.Email
  nameWithType: Customer.Email
- uid: MyApp.Sales.Domain.Entities.Customer.Email*
  name: Email
  href: api/MyApp.Sales.Domain.Entities.Customer.html#MyApp_Sales_Domain_Entities_Customer_Email_
  commentId: Overload:MyApp.Sales.Domain.Entities.Customer.Email
  isSpec: "True"
  fullName: MyApp.Sales.Domain.Entities.Customer.Email
  nameWithType: Customer.Email
- uid: MyApp.Sales.Domain.Entities.Customer.Name
  name: Name
  href: api/MyApp.Sales.Domain.Entities.Customer.html#MyApp_Sales_Domain_Entities_Customer_Name
  commentId: P:MyApp.Sales.Domain.Entities.Customer.Name
  fullName: MyApp.Sales.Domain.Entities.Customer.Name
  nameWithType: Customer.Name
- uid: MyApp.Sales.Domain.Entities.Customer.Name*
  name: Name
  href: api/MyApp.Sales.Domain.Entities.Customer.html#MyApp_Sales_Domain_Entities_Customer_Name_
  commentId: Overload:MyApp.Sales.Domain.Entities.Customer.Name
  isSpec: "True"
  fullName: MyApp.Sales.Domain.Entities.Customer.Name
  nameWithType: Customer.Name
- uid: MyApp.Sales.Domain.Entities.Customer.Orders
  name: Orders
  href: api/MyApp.Sales.Domain.Entities.Customer.html#MyApp_Sales_Domain_Entities_Customer_Orders
  commentId: P:MyApp.Sales.Domain.Entities.Customer.Orders
  fullName: MyApp.Sales.Domain.Entities.Customer.Orders
  nameWithType: Customer.Orders
- uid: MyApp.Sales.Domain.Entities.Customer.Orders*
  name: Orders
  href: api/MyApp.Sales.Domain.Entities.Customer.html#MyApp_Sales_Domain_Entities_Customer_Orders_
  commentId: Overload:MyApp.Sales.Domain.Entities.Customer.Orders
  isSpec: "True"
  fullName: MyApp.Sales.Domain.Entities.Customer.Orders
  nameWithType: Customer.Orders
- uid: MyApp.Sales.Domain.Entities.Customer.PhoneNumber
  name: PhoneNumber
  href: api/MyApp.Sales.Domain.Entities.Customer.html#MyApp_Sales_Domain_Entities_Customer_PhoneNumber
  commentId: P:MyApp.Sales.Domain.Entities.Customer.PhoneNumber
  fullName: MyApp.Sales.Domain.Entities.Customer.PhoneNumber
  nameWithType: Customer.PhoneNumber
- uid: MyApp.Sales.Domain.Entities.Customer.PhoneNumber*
  name: PhoneNumber
  href: api/MyApp.Sales.Domain.Entities.Customer.html#MyApp_Sales_Domain_Entities_Customer_PhoneNumber_
  commentId: Overload:MyApp.Sales.Domain.Entities.Customer.PhoneNumber
  isSpec: "True"
  fullName: MyApp.Sales.Domain.Entities.Customer.PhoneNumber
  nameWithType: Customer.PhoneNumber
- uid: MyApp.Sales.Domain.Entities.SalesOrder
  name: SalesOrder
  href: api/MyApp.Sales.Domain.Entities.SalesOrder.html
  commentId: T:MyApp.Sales.Domain.Entities.SalesOrder
  fullName: MyApp.Sales.Domain.Entities.SalesOrder
  nameWithType: SalesOrder
- uid: MyApp.Sales.Domain.Entities.SalesOrder.Customer
  name: Customer
  href: api/MyApp.Sales.Domain.Entities.SalesOrder.html#MyApp_Sales_Domain_Entities_SalesOrder_Customer
  commentId: P:MyApp.Sales.Domain.Entities.SalesOrder.Customer
  fullName: MyApp.Sales.Domain.Entities.SalesOrder.Customer
  nameWithType: SalesOrder.Customer
- uid: MyApp.Sales.Domain.Entities.SalesOrder.Customer*
  name: Customer
  href: api/MyApp.Sales.Domain.Entities.SalesOrder.html#MyApp_Sales_Domain_Entities_SalesOrder_Customer_
  commentId: Overload:MyApp.Sales.Domain.Entities.SalesOrder.Customer
  isSpec: "True"
  fullName: MyApp.Sales.Domain.Entities.SalesOrder.Customer
  nameWithType: SalesOrder.Customer
- uid: MyApp.Sales.Domain.Entities.SalesOrder.CustomerId
  name: CustomerId
  href: api/MyApp.Sales.Domain.Entities.SalesOrder.html#MyApp_Sales_Domain_Entities_SalesOrder_CustomerId
  commentId: P:MyApp.Sales.Domain.Entities.SalesOrder.CustomerId
  fullName: MyApp.Sales.Domain.Entities.SalesOrder.CustomerId
  nameWithType: SalesOrder.CustomerId
- uid: MyApp.Sales.Domain.Entities.SalesOrder.CustomerId*
  name: CustomerId
  href: api/MyApp.Sales.Domain.Entities.SalesOrder.html#MyApp_Sales_Domain_Entities_SalesOrder_CustomerId_
  commentId: Overload:MyApp.Sales.Domain.Entities.SalesOrder.CustomerId
  isSpec: "True"
  fullName: MyApp.Sales.Domain.Entities.SalesOrder.CustomerId
  nameWithType: SalesOrder.CustomerId
- uid: MyApp.Sales.Domain.Entities.SalesOrder.Lines
  name: Lines
  href: api/MyApp.Sales.Domain.Entities.SalesOrder.html#MyApp_Sales_Domain_Entities_SalesOrder_Lines
  commentId: P:MyApp.Sales.Domain.Entities.SalesOrder.Lines
  fullName: MyApp.Sales.Domain.Entities.SalesOrder.Lines
  nameWithType: SalesOrder.Lines
- uid: MyApp.Sales.Domain.Entities.SalesOrder.Lines*
  name: Lines
  href: api/MyApp.Sales.Domain.Entities.SalesOrder.html#MyApp_Sales_Domain_Entities_SalesOrder_Lines_
  commentId: Overload:MyApp.Sales.Domain.Entities.SalesOrder.Lines
  isSpec: "True"
  fullName: MyApp.Sales.Domain.Entities.SalesOrder.Lines
  nameWithType: SalesOrder.Lines
- uid: MyApp.Sales.Domain.Entities.SalesOrder.OrderDate
  name: OrderDate
  href: api/MyApp.Sales.Domain.Entities.SalesOrder.html#MyApp_Sales_Domain_Entities_SalesOrder_OrderDate
  commentId: P:MyApp.Sales.Domain.Entities.SalesOrder.OrderDate
  fullName: MyApp.Sales.Domain.Entities.SalesOrder.OrderDate
  nameWithType: SalesOrder.OrderDate
- uid: MyApp.Sales.Domain.Entities.SalesOrder.OrderDate*
  name: OrderDate
  href: api/MyApp.Sales.Domain.Entities.SalesOrder.html#MyApp_Sales_Domain_Entities_SalesOrder_OrderDate_
  commentId: Overload:MyApp.Sales.Domain.Entities.SalesOrder.OrderDate
  isSpec: "True"
  fullName: MyApp.Sales.Domain.Entities.SalesOrder.OrderDate
  nameWithType: SalesOrder.OrderDate
- uid: MyApp.Sales.Domain.Entities.SalesOrder.OrderNumber
  name: OrderNumber
  href: api/MyApp.Sales.Domain.Entities.SalesOrder.html#MyApp_Sales_Domain_Entities_SalesOrder_OrderNumber
  commentId: P:MyApp.Sales.Domain.Entities.SalesOrder.OrderNumber
  fullName: MyApp.Sales.Domain.Entities.SalesOrder.OrderNumber
  nameWithType: SalesOrder.OrderNumber
- uid: MyApp.Sales.Domain.Entities.SalesOrder.OrderNumber*
  name: OrderNumber
  href: api/MyApp.Sales.Domain.Entities.SalesOrder.html#MyApp_Sales_Domain_Entities_SalesOrder_OrderNumber_
  commentId: Overload:MyApp.Sales.Domain.Entities.SalesOrder.OrderNumber
  isSpec: "True"
  fullName: MyApp.Sales.Domain.Entities.SalesOrder.OrderNumber
  nameWithType: SalesOrder.OrderNumber
- uid: MyApp.Sales.Domain.Entities.SalesOrder.Status
  name: Status
  href: api/MyApp.Sales.Domain.Entities.SalesOrder.html#MyApp_Sales_Domain_Entities_SalesOrder_Status
  commentId: P:MyApp.Sales.Domain.Entities.SalesOrder.Status
  fullName: MyApp.Sales.Domain.Entities.SalesOrder.Status
  nameWithType: SalesOrder.Status
- uid: MyApp.Sales.Domain.Entities.SalesOrder.Status*
  name: Status
  href: api/MyApp.Sales.Domain.Entities.SalesOrder.html#MyApp_Sales_Domain_Entities_SalesOrder_Status_
  commentId: Overload:MyApp.Sales.Domain.Entities.SalesOrder.Status
  isSpec: "True"
  fullName: MyApp.Sales.Domain.Entities.SalesOrder.Status
  nameWithType: SalesOrder.Status
- uid: MyApp.Sales.Domain.Entities.SalesOrder.TotalAmount
  name: TotalAmount
  href: api/MyApp.Sales.Domain.Entities.SalesOrder.html#MyApp_Sales_Domain_Entities_SalesOrder_TotalAmount
  commentId: P:MyApp.Sales.Domain.Entities.SalesOrder.TotalAmount
  fullName: MyApp.Sales.Domain.Entities.SalesOrder.TotalAmount
  nameWithType: SalesOrder.TotalAmount
- uid: MyApp.Sales.Domain.Entities.SalesOrder.TotalAmount*
  name: TotalAmount
  href: api/MyApp.Sales.Domain.Entities.SalesOrder.html#MyApp_Sales_Domain_Entities_SalesOrder_TotalAmount_
  commentId: Overload:MyApp.Sales.Domain.Entities.SalesOrder.TotalAmount
  isSpec: "True"
  fullName: MyApp.Sales.Domain.Entities.SalesOrder.TotalAmount
  nameWithType: SalesOrder.TotalAmount
- uid: MyApp.Sales.Domain.Entities.SalesOrderLine
  name: SalesOrderLine
  href: api/MyApp.Sales.Domain.Entities.SalesOrderLine.html
  commentId: T:MyApp.Sales.Domain.Entities.SalesOrderLine
  fullName: MyApp.Sales.Domain.Entities.SalesOrderLine
  nameWithType: SalesOrderLine
- uid: MyApp.Sales.Domain.Entities.SalesOrderLine.LineTotal
  name: LineTotal
  href: api/MyApp.Sales.Domain.Entities.SalesOrderLine.html#MyApp_Sales_Domain_Entities_SalesOrderLine_LineTotal
  commentId: P:MyApp.Sales.Domain.Entities.SalesOrderLine.LineTotal
  fullName: MyApp.Sales.Domain.Entities.SalesOrderLine.LineTotal
  nameWithType: SalesOrderLine.LineTotal
- uid: MyApp.Sales.Domain.Entities.SalesOrderLine.LineTotal*
  name: LineTotal
  href: api/MyApp.Sales.Domain.Entities.SalesOrderLine.html#MyApp_Sales_Domain_Entities_SalesOrderLine_LineTotal_
  commentId: Overload:MyApp.Sales.Domain.Entities.SalesOrderLine.LineTotal
  isSpec: "True"
  fullName: MyApp.Sales.Domain.Entities.SalesOrderLine.LineTotal
  nameWithType: SalesOrderLine.LineTotal
- uid: MyApp.Sales.Domain.Entities.SalesOrderLine.ProductId
  name: ProductId
  href: api/MyApp.Sales.Domain.Entities.SalesOrderLine.html#MyApp_Sales_Domain_Entities_SalesOrderLine_ProductId
  commentId: P:MyApp.Sales.Domain.Entities.SalesOrderLine.ProductId
  fullName: MyApp.Sales.Domain.Entities.SalesOrderLine.ProductId
  nameWithType: SalesOrderLine.ProductId
- uid: MyApp.Sales.Domain.Entities.SalesOrderLine.ProductId*
  name: ProductId
  href: api/MyApp.Sales.Domain.Entities.SalesOrderLine.html#MyApp_Sales_Domain_Entities_SalesOrderLine_ProductId_
  commentId: Overload:MyApp.Sales.Domain.Entities.SalesOrderLine.ProductId
  isSpec: "True"
  fullName: MyApp.Sales.Domain.Entities.SalesOrderLine.ProductId
  nameWithType: SalesOrderLine.ProductId
- uid: MyApp.Sales.Domain.Entities.SalesOrderLine.Quantity
  name: Quantity
  href: api/MyApp.Sales.Domain.Entities.SalesOrderLine.html#MyApp_Sales_Domain_Entities_SalesOrderLine_Quantity
  commentId: P:MyApp.Sales.Domain.Entities.SalesOrderLine.Quantity
  fullName: MyApp.Sales.Domain.Entities.SalesOrderLine.Quantity
  nameWithType: SalesOrderLine.Quantity
- uid: MyApp.Sales.Domain.Entities.SalesOrderLine.Quantity*
  name: Quantity
  href: api/MyApp.Sales.Domain.Entities.SalesOrderLine.html#MyApp_Sales_Domain_Entities_SalesOrderLine_Quantity_
  commentId: Overload:MyApp.Sales.Domain.Entities.SalesOrderLine.Quantity
  isSpec: "True"
  fullName: MyApp.Sales.Domain.Entities.SalesOrderLine.Quantity
  nameWithType: SalesOrderLine.Quantity
- uid: MyApp.Sales.Domain.Entities.SalesOrderLine.SalesOrderId
  name: SalesOrderId
  href: api/MyApp.Sales.Domain.Entities.SalesOrderLine.html#MyApp_Sales_Domain_Entities_SalesOrderLine_SalesOrderId
  commentId: P:MyApp.Sales.Domain.Entities.SalesOrderLine.SalesOrderId
  fullName: MyApp.Sales.Domain.Entities.SalesOrderLine.SalesOrderId
  nameWithType: SalesOrderLine.SalesOrderId
- uid: MyApp.Sales.Domain.Entities.SalesOrderLine.SalesOrderId*
  name: SalesOrderId
  href: api/MyApp.Sales.Domain.Entities.SalesOrderLine.html#MyApp_Sales_Domain_Entities_SalesOrderLine_SalesOrderId_
  commentId: Overload:MyApp.Sales.Domain.Entities.SalesOrderLine.SalesOrderId
  isSpec: "True"
  fullName: MyApp.Sales.Domain.Entities.SalesOrderLine.SalesOrderId
  nameWithType: SalesOrderLine.SalesOrderId
- uid: MyApp.Sales.Domain.Entities.SalesOrderLine.UnitPrice
  name: UnitPrice
  href: api/MyApp.Sales.Domain.Entities.SalesOrderLine.html#MyApp_Sales_Domain_Entities_SalesOrderLine_UnitPrice
  commentId: P:MyApp.Sales.Domain.Entities.SalesOrderLine.UnitPrice
  fullName: MyApp.Sales.Domain.Entities.SalesOrderLine.UnitPrice
  nameWithType: SalesOrderLine.UnitPrice
- uid: MyApp.Sales.Domain.Entities.SalesOrderLine.UnitPrice*
  name: UnitPrice
  href: api/MyApp.Sales.Domain.Entities.SalesOrderLine.html#MyApp_Sales_Domain_Entities_SalesOrderLine_UnitPrice_
  commentId: Overload:MyApp.Sales.Domain.Entities.SalesOrderLine.UnitPrice
  isSpec: "True"
  fullName: MyApp.Sales.Domain.Entities.SalesOrderLine.UnitPrice
  nameWithType: SalesOrderLine.UnitPrice
- uid: MyApp.Sales.Domain.Entities.SalesOrderStatus
  name: SalesOrderStatus
  href: api/MyApp.Sales.Domain.Entities.SalesOrderStatus.html
  commentId: T:MyApp.Sales.Domain.Entities.SalesOrderStatus
  fullName: MyApp.Sales.Domain.Entities.SalesOrderStatus
  nameWithType: SalesOrderStatus
- uid: MyApp.Sales.Domain.Entities.SalesOrderStatus.Cancelled
  name: Cancelled
  href: api/MyApp.Sales.Domain.Entities.SalesOrderStatus.html#MyApp_Sales_Domain_Entities_SalesOrderStatus_Cancelled
  commentId: F:MyApp.Sales.Domain.Entities.SalesOrderStatus.Cancelled
  fullName: MyApp.Sales.Domain.Entities.SalesOrderStatus.Cancelled
  nameWithType: SalesOrderStatus.Cancelled
- uid: MyApp.Sales.Domain.Entities.SalesOrderStatus.Confirmed
  name: Confirmed
  href: api/MyApp.Sales.Domain.Entities.SalesOrderStatus.html#MyApp_Sales_Domain_Entities_SalesOrderStatus_Confirmed
  commentId: F:MyApp.Sales.Domain.Entities.SalesOrderStatus.Confirmed
  fullName: MyApp.Sales.Domain.Entities.SalesOrderStatus.Confirmed
  nameWithType: SalesOrderStatus.Confirmed
- uid: MyApp.Sales.Domain.Entities.SalesOrderStatus.Draft
  name: Draft
  href: api/MyApp.Sales.Domain.Entities.SalesOrderStatus.html#MyApp_Sales_Domain_Entities_SalesOrderStatus_Draft
  commentId: F:MyApp.Sales.Domain.Entities.SalesOrderStatus.Draft
  fullName: MyApp.Sales.Domain.Entities.SalesOrderStatus.Draft
  nameWithType: SalesOrderStatus.Draft
- uid: MyApp.Sales.Domain.Entities.SalesOrderStatus.Invoiced
  name: Invoiced
  href: api/MyApp.Sales.Domain.Entities.SalesOrderStatus.html#MyApp_Sales_Domain_Entities_SalesOrderStatus_Invoiced
  commentId: F:MyApp.Sales.Domain.Entities.SalesOrderStatus.Invoiced
  fullName: MyApp.Sales.Domain.Entities.SalesOrderStatus.Invoiced
  nameWithType: SalesOrderStatus.Invoiced
- uid: MyApp.Sales.Domain.Entities.SalesOrderStatus.Shipped
  name: Shipped
  href: api/MyApp.Sales.Domain.Entities.SalesOrderStatus.html#MyApp_Sales_Domain_Entities_SalesOrderStatus_Shipped
  commentId: F:MyApp.Sales.Domain.Entities.SalesOrderStatus.Shipped
  fullName: MyApp.Sales.Domain.Entities.SalesOrderStatus.Shipped
  nameWithType: SalesOrderStatus.Shipped
- uid: MyApp.Sales.Domain.ICustomerRepository
  name: ICustomerRepository
  href: api/MyApp.Sales.Domain.ICustomerRepository.html
  commentId: T:MyApp.Sales.Domain.ICustomerRepository
  fullName: MyApp.Sales.Domain.ICustomerRepository
  nameWithType: ICustomerRepository
- uid: MyApp.Sales.Domain.IRepository`2
  name: IRepository<TEntity, TKey>
  href: api/MyApp.Sales.Domain.IRepository-2.html
  commentId: T:MyApp.Sales.Domain.IRepository`2
  name.vb: IRepository(Of TEntity, TKey)
  fullName: MyApp.Sales.Domain.IRepository<TEntity, TKey>
  fullName.vb: MyApp.Sales.Domain.IRepository(Of TEntity, TKey)
  nameWithType: IRepository<TEntity, TKey>
  nameWithType.vb: IRepository(Of TEntity, TKey)
- uid: MyApp.Sales.Domain.IRepository`2.AddAsync(`0)
  name: AddAsync(TEntity)
  href: api/MyApp.Sales.Domain.IRepository-2.html#MyApp_Sales_Domain_IRepository_2_AddAsync__0_
  commentId: M:MyApp.Sales.Domain.IRepository`2.AddAsync(`0)
  fullName: MyApp.Sales.Domain.IRepository<TEntity, TKey>.AddAsync(TEntity)
  fullName.vb: MyApp.Sales.Domain.IRepository(Of TEntity, TKey).AddAsync(TEntity)
  nameWithType: IRepository<TEntity, TKey>.AddAsync(TEntity)
  nameWithType.vb: IRepository(Of TEntity, TKey).AddAsync(TEntity)
- uid: MyApp.Sales.Domain.IRepository`2.AddAsync*
  name: AddAsync
  href: api/MyApp.Sales.Domain.IRepository-2.html#MyApp_Sales_Domain_IRepository_2_AddAsync_
  commentId: Overload:MyApp.Sales.Domain.IRepository`2.AddAsync
  isSpec: "True"
  fullName: MyApp.Sales.Domain.IRepository<TEntity, TKey>.AddAsync
  fullName.vb: MyApp.Sales.Domain.IRepository(Of TEntity, TKey).AddAsync
  nameWithType: IRepository<TEntity, TKey>.AddAsync
  nameWithType.vb: IRepository(Of TEntity, TKey).AddAsync
- uid: MyApp.Sales.Domain.IRepository`2.DeleteAsync(`0)
  name: DeleteAsync(TEntity)
  href: api/MyApp.Sales.Domain.IRepository-2.html#MyApp_Sales_Domain_IRepository_2_DeleteAsync__0_
  commentId: M:MyApp.Sales.Domain.IRepository`2.DeleteAsync(`0)
  fullName: MyApp.Sales.Domain.IRepository<TEntity, TKey>.DeleteAsync(TEntity)
  fullName.vb: MyApp.Sales.Domain.IRepository(Of TEntity, TKey).DeleteAsync(TEntity)
  nameWithType: IRepository<TEntity, TKey>.DeleteAsync(TEntity)
  nameWithType.vb: IRepository(Of TEntity, TKey).DeleteAsync(TEntity)
- uid: MyApp.Sales.Domain.IRepository`2.DeleteAsync(`1)
  name: DeleteAsync(TKey)
  href: api/MyApp.Sales.Domain.IRepository-2.html#MyApp_Sales_Domain_IRepository_2_DeleteAsync__1_
  commentId: M:MyApp.Sales.Domain.IRepository`2.DeleteAsync(`1)
  fullName: MyApp.Sales.Domain.IRepository<TEntity, TKey>.DeleteAsync(TKey)
  fullName.vb: MyApp.Sales.Domain.IRepository(Of TEntity, TKey).DeleteAsync(TKey)
  nameWithType: IRepository<TEntity, TKey>.DeleteAsync(TKey)
  nameWithType.vb: IRepository(Of TEntity, TKey).DeleteAsync(TKey)
- uid: MyApp.Sales.Domain.IRepository`2.DeleteAsync*
  name: DeleteAsync
  href: api/MyApp.Sales.Domain.IRepository-2.html#MyApp_Sales_Domain_IRepository_2_DeleteAsync_
  commentId: Overload:MyApp.Sales.Domain.IRepository`2.DeleteAsync
  isSpec: "True"
  fullName: MyApp.Sales.Domain.IRepository<TEntity, TKey>.DeleteAsync
  fullName.vb: MyApp.Sales.Domain.IRepository(Of TEntity, TKey).DeleteAsync
  nameWithType: IRepository<TEntity, TKey>.DeleteAsync
  nameWithType.vb: IRepository(Of TEntity, TKey).DeleteAsync
- uid: MyApp.Sales.Domain.IRepository`2.GetAllAsync
  name: GetAllAsync()
  href: api/MyApp.Sales.Domain.IRepository-2.html#MyApp_Sales_Domain_IRepository_2_GetAllAsync
  commentId: M:MyApp.Sales.Domain.IRepository`2.GetAllAsync
  fullName: MyApp.Sales.Domain.IRepository<TEntity, TKey>.GetAllAsync()
  fullName.vb: MyApp.Sales.Domain.IRepository(Of TEntity, TKey).GetAllAsync()
  nameWithType: IRepository<TEntity, TKey>.GetAllAsync()
  nameWithType.vb: IRepository(Of TEntity, TKey).GetAllAsync()
- uid: MyApp.Sales.Domain.IRepository`2.GetAllAsync*
  name: GetAllAsync
  href: api/MyApp.Sales.Domain.IRepository-2.html#MyApp_Sales_Domain_IRepository_2_GetAllAsync_
  commentId: Overload:MyApp.Sales.Domain.IRepository`2.GetAllAsync
  isSpec: "True"
  fullName: MyApp.Sales.Domain.IRepository<TEntity, TKey>.GetAllAsync
  fullName.vb: MyApp.Sales.Domain.IRepository(Of TEntity, TKey).GetAllAsync
  nameWithType: IRepository<TEntity, TKey>.GetAllAsync
  nameWithType.vb: IRepository(Of TEntity, TKey).GetAllAsync
- uid: MyApp.Sales.Domain.IRepository`2.GetAllPaginatedAsync(System.Int32,System.Int32)
  name: GetAllPaginatedAsync(int, int)
  href: api/MyApp.Sales.Domain.IRepository-2.html#MyApp_Sales_Domain_IRepository_2_GetAllPaginatedAsync_System_Int32_System_Int32_
  commentId: M:MyApp.Sales.Domain.IRepository`2.GetAllPaginatedAsync(System.Int32,System.Int32)
  name.vb: GetAllPaginatedAsync(Integer, Integer)
  fullName: MyApp.Sales.Domain.IRepository<TEntity, TKey>.GetAllPaginatedAsync(int, int)
  fullName.vb: MyApp.Sales.Domain.IRepository(Of TEntity, TKey).GetAllPaginatedAsync(Integer, Integer)
  nameWithType: IRepository<TEntity, TKey>.GetAllPaginatedAsync(int, int)
  nameWithType.vb: IRepository(Of TEntity, TKey).GetAllPaginatedAsync(Integer, Integer)
- uid: MyApp.Sales.Domain.IRepository`2.GetAllPaginatedAsync*
  name: GetAllPaginatedAsync
  href: api/MyApp.Sales.Domain.IRepository-2.html#MyApp_Sales_Domain_IRepository_2_GetAllPaginatedAsync_
  commentId: Overload:MyApp.Sales.Domain.IRepository`2.GetAllPaginatedAsync
  isSpec: "True"
  fullName: MyApp.Sales.Domain.IRepository<TEntity, TKey>.GetAllPaginatedAsync
  fullName.vb: MyApp.Sales.Domain.IRepository(Of TEntity, TKey).GetAllPaginatedAsync
  nameWithType: IRepository<TEntity, TKey>.GetAllPaginatedAsync
  nameWithType.vb: IRepository(Of TEntity, TKey).GetAllPaginatedAsync
- uid: MyApp.Sales.Domain.IRepository`2.GetByIdAsync(`1)
  name: GetByIdAsync(TKey)
  href: api/MyApp.Sales.Domain.IRepository-2.html#MyApp_Sales_Domain_IRepository_2_GetByIdAsync__1_
  commentId: M:MyApp.Sales.Domain.IRepository`2.GetByIdAsync(`1)
  fullName: MyApp.Sales.Domain.IRepository<TEntity, TKey>.GetByIdAsync(TKey)
  fullName.vb: MyApp.Sales.Domain.IRepository(Of TEntity, TKey).GetByIdAsync(TKey)
  nameWithType: IRepository<TEntity, TKey>.GetByIdAsync(TKey)
  nameWithType.vb: IRepository(Of TEntity, TKey).GetByIdAsync(TKey)
- uid: MyApp.Sales.Domain.IRepository`2.GetByIdAsync*
  name: GetByIdAsync
  href: api/MyApp.Sales.Domain.IRepository-2.html#MyApp_Sales_Domain_IRepository_2_GetByIdAsync_
  commentId: Overload:MyApp.Sales.Domain.IRepository`2.GetByIdAsync
  isSpec: "True"
  fullName: MyApp.Sales.Domain.IRepository<TEntity, TKey>.GetByIdAsync
  fullName.vb: MyApp.Sales.Domain.IRepository(Of TEntity, TKey).GetByIdAsync
  nameWithType: IRepository<TEntity, TKey>.GetByIdAsync
  nameWithType.vb: IRepository(Of TEntity, TKey).GetByIdAsync
- uid: MyApp.Sales.Domain.IRepository`2.ListAsync
  name: ListAsync()
  href: api/MyApp.Sales.Domain.IRepository-2.html#MyApp_Sales_Domain_IRepository_2_ListAsync
  commentId: M:MyApp.Sales.Domain.IRepository`2.ListAsync
  fullName: MyApp.Sales.Domain.IRepository<TEntity, TKey>.ListAsync()
  fullName.vb: MyApp.Sales.Domain.IRepository(Of TEntity, TKey).ListAsync()
  nameWithType: IRepository<TEntity, TKey>.ListAsync()
  nameWithType.vb: IRepository(Of TEntity, TKey).ListAsync()
- uid: MyApp.Sales.Domain.IRepository`2.ListAsync*
  name: ListAsync
  href: api/MyApp.Sales.Domain.IRepository-2.html#MyApp_Sales_Domain_IRepository_2_ListAsync_
  commentId: Overload:MyApp.Sales.Domain.IRepository`2.ListAsync
  isSpec: "True"
  fullName: MyApp.Sales.Domain.IRepository<TEntity, TKey>.ListAsync
  fullName.vb: MyApp.Sales.Domain.IRepository(Of TEntity, TKey).ListAsync
  nameWithType: IRepository<TEntity, TKey>.ListAsync
  nameWithType.vb: IRepository(Of TEntity, TKey).ListAsync
- uid: MyApp.Sales.Domain.IRepository`2.UpdateAsync(`0)
  name: UpdateAsync(TEntity)
  href: api/MyApp.Sales.Domain.IRepository-2.html#MyApp_Sales_Domain_IRepository_2_UpdateAsync__0_
  commentId: M:MyApp.Sales.Domain.IRepository`2.UpdateAsync(`0)
  fullName: MyApp.Sales.Domain.IRepository<TEntity, TKey>.UpdateAsync(TEntity)
  fullName.vb: MyApp.Sales.Domain.IRepository(Of TEntity, TKey).UpdateAsync(TEntity)
  nameWithType: IRepository<TEntity, TKey>.UpdateAsync(TEntity)
  nameWithType.vb: IRepository(Of TEntity, TKey).UpdateAsync(TEntity)
- uid: MyApp.Sales.Domain.IRepository`2.UpdateAsync*
  name: UpdateAsync
  href: api/MyApp.Sales.Domain.IRepository-2.html#MyApp_Sales_Domain_IRepository_2_UpdateAsync_
  commentId: Overload:MyApp.Sales.Domain.IRepository`2.UpdateAsync
  isSpec: "True"
  fullName: MyApp.Sales.Domain.IRepository<TEntity, TKey>.UpdateAsync
  fullName.vb: MyApp.Sales.Domain.IRepository(Of TEntity, TKey).UpdateAsync
  nameWithType: IRepository<TEntity, TKey>.UpdateAsync
  nameWithType.vb: IRepository(Of TEntity, TKey).UpdateAsync
- uid: MyApp.Sales.Domain.ISalesOrderLineRepository
  name: ISalesOrderLineRepository
  href: api/MyApp.Sales.Domain.ISalesOrderLineRepository.html
  commentId: T:MyApp.Sales.Domain.ISalesOrderLineRepository
  fullName: MyApp.Sales.Domain.ISalesOrderLineRepository
  nameWithType: ISalesOrderLineRepository
- uid: MyApp.Sales.Domain.ISalesOrderRepository
  name: ISalesOrderRepository
  href: api/MyApp.Sales.Domain.ISalesOrderRepository.html
  commentId: T:MyApp.Sales.Domain.ISalesOrderRepository
  fullName: MyApp.Sales.Domain.ISalesOrderRepository
  nameWithType: ISalesOrderRepository
- uid: MyApp.Sales.Infrastructure.Data
  name: MyApp.Sales.Infrastructure.Data
  href: api/MyApp.Sales.Infrastructure.Data.html
  commentId: N:MyApp.Sales.Infrastructure.Data
  fullName: MyApp.Sales.Infrastructure.Data
  nameWithType: MyApp.Sales.Infrastructure.Data
- uid: MyApp.Sales.Infrastructure.Data.Configurations
  name: MyApp.Sales.Infrastructure.Data.Configurations
  href: api/MyApp.Sales.Infrastructure.Data.Configurations.html
  commentId: N:MyApp.Sales.Infrastructure.Data.Configurations
  fullName: MyApp.Sales.Infrastructure.Data.Configurations
  nameWithType: MyApp.Sales.Infrastructure.Data.Configurations
- uid: MyApp.Sales.Infrastructure.Data.Configurations.CustomerConfiguration
  name: CustomerConfiguration
  href: api/MyApp.Sales.Infrastructure.Data.Configurations.CustomerConfiguration.html
  commentId: T:MyApp.Sales.Infrastructure.Data.Configurations.CustomerConfiguration
  fullName: MyApp.Sales.Infrastructure.Data.Configurations.CustomerConfiguration
  nameWithType: CustomerConfiguration
- uid: MyApp.Sales.Infrastructure.Data.Configurations.CustomerConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{MyApp.Sales.Domain.Entities.Customer})
  name: Configure(EntityTypeBuilder<Customer>)
  href: api/MyApp.Sales.Infrastructure.Data.Configurations.CustomerConfiguration.html#MyApp_Sales_Infrastructure_Data_Configurations_CustomerConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_MyApp_Sales_Domain_Entities_Customer__
  commentId: M:MyApp.Sales.Infrastructure.Data.Configurations.CustomerConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{MyApp.Sales.Domain.Entities.Customer})
  name.vb: Configure(EntityTypeBuilder(Of Customer))
  fullName: MyApp.Sales.Infrastructure.Data.Configurations.CustomerConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<MyApp.Sales.Domain.Entities.Customer>)
  fullName.vb: MyApp.Sales.Infrastructure.Data.Configurations.CustomerConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of MyApp.Sales.Domain.Entities.Customer))
  nameWithType: CustomerConfiguration.Configure(EntityTypeBuilder<Customer>)
  nameWithType.vb: CustomerConfiguration.Configure(EntityTypeBuilder(Of Customer))
- uid: MyApp.Sales.Infrastructure.Data.Configurations.CustomerConfiguration.Configure*
  name: Configure
  href: api/MyApp.Sales.Infrastructure.Data.Configurations.CustomerConfiguration.html#MyApp_Sales_Infrastructure_Data_Configurations_CustomerConfiguration_Configure_
  commentId: Overload:MyApp.Sales.Infrastructure.Data.Configurations.CustomerConfiguration.Configure
  isSpec: "True"
  fullName: MyApp.Sales.Infrastructure.Data.Configurations.CustomerConfiguration.Configure
  nameWithType: CustomerConfiguration.Configure
- uid: MyApp.Sales.Infrastructure.Data.Configurations.SalesOrderConfiguration
  name: SalesOrderConfiguration
  href: api/MyApp.Sales.Infrastructure.Data.Configurations.SalesOrderConfiguration.html
  commentId: T:MyApp.Sales.Infrastructure.Data.Configurations.SalesOrderConfiguration
  fullName: MyApp.Sales.Infrastructure.Data.Configurations.SalesOrderConfiguration
  nameWithType: SalesOrderConfiguration
- uid: MyApp.Sales.Infrastructure.Data.Configurations.SalesOrderConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{MyApp.Sales.Domain.Entities.SalesOrder})
  name: Configure(EntityTypeBuilder<SalesOrder>)
  href: api/MyApp.Sales.Infrastructure.Data.Configurations.SalesOrderConfiguration.html#MyApp_Sales_Infrastructure_Data_Configurations_SalesOrderConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_MyApp_Sales_Domain_Entities_SalesOrder__
  commentId: M:MyApp.Sales.Infrastructure.Data.Configurations.SalesOrderConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{MyApp.Sales.Domain.Entities.SalesOrder})
  name.vb: Configure(EntityTypeBuilder(Of SalesOrder))
  fullName: MyApp.Sales.Infrastructure.Data.Configurations.SalesOrderConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<MyApp.Sales.Domain.Entities.SalesOrder>)
  fullName.vb: MyApp.Sales.Infrastructure.Data.Configurations.SalesOrderConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of MyApp.Sales.Domain.Entities.SalesOrder))
  nameWithType: SalesOrderConfiguration.Configure(EntityTypeBuilder<SalesOrder>)
  nameWithType.vb: SalesOrderConfiguration.Configure(EntityTypeBuilder(Of SalesOrder))
- uid: MyApp.Sales.Infrastructure.Data.Configurations.SalesOrderConfiguration.Configure*
  name: Configure
  href: api/MyApp.Sales.Infrastructure.Data.Configurations.SalesOrderConfiguration.html#MyApp_Sales_Infrastructure_Data_Configurations_SalesOrderConfiguration_Configure_
  commentId: Overload:MyApp.Sales.Infrastructure.Data.Configurations.SalesOrderConfiguration.Configure
  isSpec: "True"
  fullName: MyApp.Sales.Infrastructure.Data.Configurations.SalesOrderConfiguration.Configure
  nameWithType: SalesOrderConfiguration.Configure
- uid: MyApp.Sales.Infrastructure.Data.Configurations.SalesOrderLineConfiguration
  name: SalesOrderLineConfiguration
  href: api/MyApp.Sales.Infrastructure.Data.Configurations.SalesOrderLineConfiguration.html
  commentId: T:MyApp.Sales.Infrastructure.Data.Configurations.SalesOrderLineConfiguration
  fullName: MyApp.Sales.Infrastructure.Data.Configurations.SalesOrderLineConfiguration
  nameWithType: SalesOrderLineConfiguration
- uid: MyApp.Sales.Infrastructure.Data.Configurations.SalesOrderLineConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{MyApp.Sales.Domain.Entities.SalesOrderLine})
  name: Configure(EntityTypeBuilder<SalesOrderLine>)
  href: api/MyApp.Sales.Infrastructure.Data.Configurations.SalesOrderLineConfiguration.html#MyApp_Sales_Infrastructure_Data_Configurations_SalesOrderLineConfiguration_Configure_Microsoft_EntityFrameworkCore_Metadata_Builders_EntityTypeBuilder_MyApp_Sales_Domain_Entities_SalesOrderLine__
  commentId: M:MyApp.Sales.Infrastructure.Data.Configurations.SalesOrderLineConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{MyApp.Sales.Domain.Entities.SalesOrderLine})
  name.vb: Configure(EntityTypeBuilder(Of SalesOrderLine))
  fullName: MyApp.Sales.Infrastructure.Data.Configurations.SalesOrderLineConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder<MyApp.Sales.Domain.Entities.SalesOrderLine>)
  fullName.vb: MyApp.Sales.Infrastructure.Data.Configurations.SalesOrderLineConfiguration.Configure(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder(Of MyApp.Sales.Domain.Entities.SalesOrderLine))
  nameWithType: SalesOrderLineConfiguration.Configure(EntityTypeBuilder<SalesOrderLine>)
  nameWithType.vb: SalesOrderLineConfiguration.Configure(EntityTypeBuilder(Of SalesOrderLine))
- uid: MyApp.Sales.Infrastructure.Data.Configurations.SalesOrderLineConfiguration.Configure*
  name: Configure
  href: api/MyApp.Sales.Infrastructure.Data.Configurations.SalesOrderLineConfiguration.html#MyApp_Sales_Infrastructure_Data_Configurations_SalesOrderLineConfiguration_Configure_
  commentId: Overload:MyApp.Sales.Infrastructure.Data.Configurations.SalesOrderLineConfiguration.Configure
  isSpec: "True"
  fullName: MyApp.Sales.Infrastructure.Data.Configurations.SalesOrderLineConfiguration.Configure
  nameWithType: SalesOrderLineConfiguration.Configure
- uid: MyApp.Sales.Infrastructure.Data.Repositories
  name: MyApp.Sales.Infrastructure.Data.Repositories
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.html
  commentId: N:MyApp.Sales.Infrastructure.Data.Repositories
  fullName: MyApp.Sales.Infrastructure.Data.Repositories
  nameWithType: MyApp.Sales.Infrastructure.Data.Repositories
- uid: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository
  name: CustomerRepository
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.html
  commentId: T:MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository
  nameWithType: CustomerRepository
- uid: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.#ctor(MyApp.Sales.Infrastructure.Data.SalesDbContext)
  name: CustomerRepository(SalesDbContext)
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_CustomerRepository__ctor_MyApp_Sales_Infrastructure_Data_SalesDbContext_
  commentId: M:MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.#ctor(MyApp.Sales.Infrastructure.Data.SalesDbContext)
  name.vb: New(SalesDbContext)
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.CustomerRepository(MyApp.Sales.Infrastructure.Data.SalesDbContext)
  fullName.vb: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.New(MyApp.Sales.Infrastructure.Data.SalesDbContext)
  nameWithType: CustomerRepository.CustomerRepository(SalesDbContext)
  nameWithType.vb: CustomerRepository.New(SalesDbContext)
- uid: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.#ctor*
  name: CustomerRepository
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_CustomerRepository__ctor_
  commentId: Overload:MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.CustomerRepository
  fullName.vb: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.New
  nameWithType: CustomerRepository.CustomerRepository
  nameWithType.vb: CustomerRepository.New
- uid: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.AddAsync(MyApp.Sales.Domain.Entities.Customer)
  name: AddAsync(Customer)
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_CustomerRepository_AddAsync_MyApp_Sales_Domain_Entities_Customer_
  commentId: M:MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.AddAsync(MyApp.Sales.Domain.Entities.Customer)
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.AddAsync(MyApp.Sales.Domain.Entities.Customer)
  nameWithType: CustomerRepository.AddAsync(Customer)
- uid: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.AddAsync*
  name: AddAsync
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_CustomerRepository_AddAsync_
  commentId: Overload:MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.AddAsync
  isSpec: "True"
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.AddAsync
  nameWithType: CustomerRepository.AddAsync
- uid: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.DeleteAsync(MyApp.Sales.Domain.Entities.Customer)
  name: DeleteAsync(Customer)
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_CustomerRepository_DeleteAsync_MyApp_Sales_Domain_Entities_Customer_
  commentId: M:MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.DeleteAsync(MyApp.Sales.Domain.Entities.Customer)
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.DeleteAsync(MyApp.Sales.Domain.Entities.Customer)
  nameWithType: CustomerRepository.DeleteAsync(Customer)
- uid: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.DeleteAsync(System.Guid)
  name: DeleteAsync(Guid)
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_CustomerRepository_DeleteAsync_System_Guid_
  commentId: M:MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.DeleteAsync(System.Guid)
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.DeleteAsync(System.Guid)
  nameWithType: CustomerRepository.DeleteAsync(Guid)
- uid: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.DeleteAsync*
  name: DeleteAsync
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_CustomerRepository_DeleteAsync_
  commentId: Overload:MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.DeleteAsync
  isSpec: "True"
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.DeleteAsync
  nameWithType: CustomerRepository.DeleteAsync
- uid: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.GetAllAsync
  name: GetAllAsync()
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_CustomerRepository_GetAllAsync
  commentId: M:MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.GetAllAsync
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.GetAllAsync()
  nameWithType: CustomerRepository.GetAllAsync()
- uid: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.GetAllAsync*
  name: GetAllAsync
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_CustomerRepository_GetAllAsync_
  commentId: Overload:MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.GetAllAsync
  isSpec: "True"
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.GetAllAsync
  nameWithType: CustomerRepository.GetAllAsync
- uid: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.GetAllPaginatedAsync(System.Int32,System.Int32)
  name: GetAllPaginatedAsync(int, int)
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_CustomerRepository_GetAllPaginatedAsync_System_Int32_System_Int32_
  commentId: M:MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.GetAllPaginatedAsync(System.Int32,System.Int32)
  name.vb: GetAllPaginatedAsync(Integer, Integer)
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.GetAllPaginatedAsync(int, int)
  fullName.vb: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.GetAllPaginatedAsync(Integer, Integer)
  nameWithType: CustomerRepository.GetAllPaginatedAsync(int, int)
  nameWithType.vb: CustomerRepository.GetAllPaginatedAsync(Integer, Integer)
- uid: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.GetAllPaginatedAsync*
  name: GetAllPaginatedAsync
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_CustomerRepository_GetAllPaginatedAsync_
  commentId: Overload:MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.GetAllPaginatedAsync
  isSpec: "True"
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.GetAllPaginatedAsync
  nameWithType: CustomerRepository.GetAllPaginatedAsync
- uid: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.GetByIdAsync(System.Guid)
  name: GetByIdAsync(Guid)
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_CustomerRepository_GetByIdAsync_System_Guid_
  commentId: M:MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.GetByIdAsync(System.Guid)
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.GetByIdAsync(System.Guid)
  nameWithType: CustomerRepository.GetByIdAsync(Guid)
- uid: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.GetByIdAsync*
  name: GetByIdAsync
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_CustomerRepository_GetByIdAsync_
  commentId: Overload:MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.GetByIdAsync
  isSpec: "True"
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.GetByIdAsync
  nameWithType: CustomerRepository.GetByIdAsync
- uid: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.ListAsync
  name: ListAsync()
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_CustomerRepository_ListAsync
  commentId: M:MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.ListAsync
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.ListAsync()
  nameWithType: CustomerRepository.ListAsync()
- uid: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.ListAsync*
  name: ListAsync
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_CustomerRepository_ListAsync_
  commentId: Overload:MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.ListAsync
  isSpec: "True"
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.ListAsync
  nameWithType: CustomerRepository.ListAsync
- uid: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.UpdateAsync(MyApp.Sales.Domain.Entities.Customer)
  name: UpdateAsync(Customer)
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_CustomerRepository_UpdateAsync_MyApp_Sales_Domain_Entities_Customer_
  commentId: M:MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.UpdateAsync(MyApp.Sales.Domain.Entities.Customer)
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.UpdateAsync(MyApp.Sales.Domain.Entities.Customer)
  nameWithType: CustomerRepository.UpdateAsync(Customer)
- uid: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.UpdateAsync*
  name: UpdateAsync
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_CustomerRepository_UpdateAsync_
  commentId: Overload:MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.UpdateAsync
  isSpec: "True"
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.CustomerRepository.UpdateAsync
  nameWithType: CustomerRepository.UpdateAsync
- uid: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository
  name: SalesOrderLineRepository
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.html
  commentId: T:MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository
  nameWithType: SalesOrderLineRepository
- uid: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.#ctor(MyApp.Sales.Infrastructure.Data.SalesDbContext)
  name: SalesOrderLineRepository(SalesDbContext)
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_SalesOrderLineRepository__ctor_MyApp_Sales_Infrastructure_Data_SalesDbContext_
  commentId: M:MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.#ctor(MyApp.Sales.Infrastructure.Data.SalesDbContext)
  name.vb: New(SalesDbContext)
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.SalesOrderLineRepository(MyApp.Sales.Infrastructure.Data.SalesDbContext)
  fullName.vb: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.New(MyApp.Sales.Infrastructure.Data.SalesDbContext)
  nameWithType: SalesOrderLineRepository.SalesOrderLineRepository(SalesDbContext)
  nameWithType.vb: SalesOrderLineRepository.New(SalesDbContext)
- uid: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.#ctor*
  name: SalesOrderLineRepository
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_SalesOrderLineRepository__ctor_
  commentId: Overload:MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.SalesOrderLineRepository
  fullName.vb: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.New
  nameWithType: SalesOrderLineRepository.SalesOrderLineRepository
  nameWithType.vb: SalesOrderLineRepository.New
- uid: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.AddAsync(MyApp.Sales.Domain.Entities.SalesOrderLine)
  name: AddAsync(SalesOrderLine)
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_SalesOrderLineRepository_AddAsync_MyApp_Sales_Domain_Entities_SalesOrderLine_
  commentId: M:MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.AddAsync(MyApp.Sales.Domain.Entities.SalesOrderLine)
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.AddAsync(MyApp.Sales.Domain.Entities.SalesOrderLine)
  nameWithType: SalesOrderLineRepository.AddAsync(SalesOrderLine)
- uid: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.AddAsync*
  name: AddAsync
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_SalesOrderLineRepository_AddAsync_
  commentId: Overload:MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.AddAsync
  isSpec: "True"
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.AddAsync
  nameWithType: SalesOrderLineRepository.AddAsync
- uid: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.DeleteAsync(MyApp.Sales.Domain.Entities.SalesOrderLine)
  name: DeleteAsync(SalesOrderLine)
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_SalesOrderLineRepository_DeleteAsync_MyApp_Sales_Domain_Entities_SalesOrderLine_
  commentId: M:MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.DeleteAsync(MyApp.Sales.Domain.Entities.SalesOrderLine)
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.DeleteAsync(MyApp.Sales.Domain.Entities.SalesOrderLine)
  nameWithType: SalesOrderLineRepository.DeleteAsync(SalesOrderLine)
- uid: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.DeleteAsync(System.Guid)
  name: DeleteAsync(Guid)
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_SalesOrderLineRepository_DeleteAsync_System_Guid_
  commentId: M:MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.DeleteAsync(System.Guid)
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.DeleteAsync(System.Guid)
  nameWithType: SalesOrderLineRepository.DeleteAsync(Guid)
- uid: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.DeleteAsync*
  name: DeleteAsync
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_SalesOrderLineRepository_DeleteAsync_
  commentId: Overload:MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.DeleteAsync
  isSpec: "True"
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.DeleteAsync
  nameWithType: SalesOrderLineRepository.DeleteAsync
- uid: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.GetAllAsync
  name: GetAllAsync()
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_SalesOrderLineRepository_GetAllAsync
  commentId: M:MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.GetAllAsync
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.GetAllAsync()
  nameWithType: SalesOrderLineRepository.GetAllAsync()
- uid: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.GetAllAsync*
  name: GetAllAsync
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_SalesOrderLineRepository_GetAllAsync_
  commentId: Overload:MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.GetAllAsync
  isSpec: "True"
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.GetAllAsync
  nameWithType: SalesOrderLineRepository.GetAllAsync
- uid: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.GetAllPaginatedAsync(System.Int32,System.Int32)
  name: GetAllPaginatedAsync(int, int)
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_SalesOrderLineRepository_GetAllPaginatedAsync_System_Int32_System_Int32_
  commentId: M:MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.GetAllPaginatedAsync(System.Int32,System.Int32)
  name.vb: GetAllPaginatedAsync(Integer, Integer)
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.GetAllPaginatedAsync(int, int)
  fullName.vb: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.GetAllPaginatedAsync(Integer, Integer)
  nameWithType: SalesOrderLineRepository.GetAllPaginatedAsync(int, int)
  nameWithType.vb: SalesOrderLineRepository.GetAllPaginatedAsync(Integer, Integer)
- uid: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.GetAllPaginatedAsync*
  name: GetAllPaginatedAsync
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_SalesOrderLineRepository_GetAllPaginatedAsync_
  commentId: Overload:MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.GetAllPaginatedAsync
  isSpec: "True"
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.GetAllPaginatedAsync
  nameWithType: SalesOrderLineRepository.GetAllPaginatedAsync
- uid: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.GetByIdAsync(System.Guid)
  name: GetByIdAsync(Guid)
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_SalesOrderLineRepository_GetByIdAsync_System_Guid_
  commentId: M:MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.GetByIdAsync(System.Guid)
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.GetByIdAsync(System.Guid)
  nameWithType: SalesOrderLineRepository.GetByIdAsync(Guid)
- uid: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.GetByIdAsync*
  name: GetByIdAsync
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_SalesOrderLineRepository_GetByIdAsync_
  commentId: Overload:MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.GetByIdAsync
  isSpec: "True"
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.GetByIdAsync
  nameWithType: SalesOrderLineRepository.GetByIdAsync
- uid: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.ListAsync
  name: ListAsync()
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_SalesOrderLineRepository_ListAsync
  commentId: M:MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.ListAsync
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.ListAsync()
  nameWithType: SalesOrderLineRepository.ListAsync()
- uid: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.ListAsync*
  name: ListAsync
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_SalesOrderLineRepository_ListAsync_
  commentId: Overload:MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.ListAsync
  isSpec: "True"
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.ListAsync
  nameWithType: SalesOrderLineRepository.ListAsync
- uid: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.UpdateAsync(MyApp.Sales.Domain.Entities.SalesOrderLine)
  name: UpdateAsync(SalesOrderLine)
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_SalesOrderLineRepository_UpdateAsync_MyApp_Sales_Domain_Entities_SalesOrderLine_
  commentId: M:MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.UpdateAsync(MyApp.Sales.Domain.Entities.SalesOrderLine)
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.UpdateAsync(MyApp.Sales.Domain.Entities.SalesOrderLine)
  nameWithType: SalesOrderLineRepository.UpdateAsync(SalesOrderLine)
- uid: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.UpdateAsync*
  name: UpdateAsync
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_SalesOrderLineRepository_UpdateAsync_
  commentId: Overload:MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.UpdateAsync
  isSpec: "True"
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderLineRepository.UpdateAsync
  nameWithType: SalesOrderLineRepository.UpdateAsync
- uid: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository
  name: SalesOrderRepository
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.html
  commentId: T:MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository
  nameWithType: SalesOrderRepository
- uid: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.#ctor(MyApp.Sales.Infrastructure.Data.SalesDbContext)
  name: SalesOrderRepository(SalesDbContext)
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_SalesOrderRepository__ctor_MyApp_Sales_Infrastructure_Data_SalesDbContext_
  commentId: M:MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.#ctor(MyApp.Sales.Infrastructure.Data.SalesDbContext)
  name.vb: New(SalesDbContext)
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.SalesOrderRepository(MyApp.Sales.Infrastructure.Data.SalesDbContext)
  fullName.vb: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.New(MyApp.Sales.Infrastructure.Data.SalesDbContext)
  nameWithType: SalesOrderRepository.SalesOrderRepository(SalesDbContext)
  nameWithType.vb: SalesOrderRepository.New(SalesDbContext)
- uid: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.#ctor*
  name: SalesOrderRepository
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_SalesOrderRepository__ctor_
  commentId: Overload:MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.SalesOrderRepository
  fullName.vb: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.New
  nameWithType: SalesOrderRepository.SalesOrderRepository
  nameWithType.vb: SalesOrderRepository.New
- uid: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.AddAsync(MyApp.Sales.Domain.Entities.SalesOrder)
  name: AddAsync(SalesOrder)
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_SalesOrderRepository_AddAsync_MyApp_Sales_Domain_Entities_SalesOrder_
  commentId: M:MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.AddAsync(MyApp.Sales.Domain.Entities.SalesOrder)
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.AddAsync(MyApp.Sales.Domain.Entities.SalesOrder)
  nameWithType: SalesOrderRepository.AddAsync(SalesOrder)
- uid: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.AddAsync*
  name: AddAsync
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_SalesOrderRepository_AddAsync_
  commentId: Overload:MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.AddAsync
  isSpec: "True"
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.AddAsync
  nameWithType: SalesOrderRepository.AddAsync
- uid: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.DeleteAsync(MyApp.Sales.Domain.Entities.SalesOrder)
  name: DeleteAsync(SalesOrder)
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_SalesOrderRepository_DeleteAsync_MyApp_Sales_Domain_Entities_SalesOrder_
  commentId: M:MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.DeleteAsync(MyApp.Sales.Domain.Entities.SalesOrder)
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.DeleteAsync(MyApp.Sales.Domain.Entities.SalesOrder)
  nameWithType: SalesOrderRepository.DeleteAsync(SalesOrder)
- uid: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.DeleteAsync(System.Guid)
  name: DeleteAsync(Guid)
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_SalesOrderRepository_DeleteAsync_System_Guid_
  commentId: M:MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.DeleteAsync(System.Guid)
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.DeleteAsync(System.Guid)
  nameWithType: SalesOrderRepository.DeleteAsync(Guid)
- uid: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.DeleteAsync*
  name: DeleteAsync
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_SalesOrderRepository_DeleteAsync_
  commentId: Overload:MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.DeleteAsync
  isSpec: "True"
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.DeleteAsync
  nameWithType: SalesOrderRepository.DeleteAsync
- uid: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.GetAllAsync
  name: GetAllAsync()
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_SalesOrderRepository_GetAllAsync
  commentId: M:MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.GetAllAsync
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.GetAllAsync()
  nameWithType: SalesOrderRepository.GetAllAsync()
- uid: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.GetAllAsync*
  name: GetAllAsync
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_SalesOrderRepository_GetAllAsync_
  commentId: Overload:MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.GetAllAsync
  isSpec: "True"
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.GetAllAsync
  nameWithType: SalesOrderRepository.GetAllAsync
- uid: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.GetAllPaginatedAsync(System.Int32,System.Int32)
  name: GetAllPaginatedAsync(int, int)
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_SalesOrderRepository_GetAllPaginatedAsync_System_Int32_System_Int32_
  commentId: M:MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.GetAllPaginatedAsync(System.Int32,System.Int32)
  name.vb: GetAllPaginatedAsync(Integer, Integer)
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.GetAllPaginatedAsync(int, int)
  fullName.vb: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.GetAllPaginatedAsync(Integer, Integer)
  nameWithType: SalesOrderRepository.GetAllPaginatedAsync(int, int)
  nameWithType.vb: SalesOrderRepository.GetAllPaginatedAsync(Integer, Integer)
- uid: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.GetAllPaginatedAsync*
  name: GetAllPaginatedAsync
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_SalesOrderRepository_GetAllPaginatedAsync_
  commentId: Overload:MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.GetAllPaginatedAsync
  isSpec: "True"
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.GetAllPaginatedAsync
  nameWithType: SalesOrderRepository.GetAllPaginatedAsync
- uid: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.GetByIdAsync(System.Guid)
  name: GetByIdAsync(Guid)
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_SalesOrderRepository_GetByIdAsync_System_Guid_
  commentId: M:MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.GetByIdAsync(System.Guid)
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.GetByIdAsync(System.Guid)
  nameWithType: SalesOrderRepository.GetByIdAsync(Guid)
- uid: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.GetByIdAsync*
  name: GetByIdAsync
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_SalesOrderRepository_GetByIdAsync_
  commentId: Overload:MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.GetByIdAsync
  isSpec: "True"
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.GetByIdAsync
  nameWithType: SalesOrderRepository.GetByIdAsync
- uid: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.ListAsync
  name: ListAsync()
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_SalesOrderRepository_ListAsync
  commentId: M:MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.ListAsync
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.ListAsync()
  nameWithType: SalesOrderRepository.ListAsync()
- uid: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.ListAsync*
  name: ListAsync
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_SalesOrderRepository_ListAsync_
  commentId: Overload:MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.ListAsync
  isSpec: "True"
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.ListAsync
  nameWithType: SalesOrderRepository.ListAsync
- uid: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.UpdateAsync(MyApp.Sales.Domain.Entities.SalesOrder)
  name: UpdateAsync(SalesOrder)
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_SalesOrderRepository_UpdateAsync_MyApp_Sales_Domain_Entities_SalesOrder_
  commentId: M:MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.UpdateAsync(MyApp.Sales.Domain.Entities.SalesOrder)
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.UpdateAsync(MyApp.Sales.Domain.Entities.SalesOrder)
  nameWithType: SalesOrderRepository.UpdateAsync(SalesOrder)
- uid: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.UpdateAsync*
  name: UpdateAsync
  href: api/MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.html#MyApp_Sales_Infrastructure_Data_Repositories_SalesOrderRepository_UpdateAsync_
  commentId: Overload:MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.UpdateAsync
  isSpec: "True"
  fullName: MyApp.Sales.Infrastructure.Data.Repositories.SalesOrderRepository.UpdateAsync
  nameWithType: SalesOrderRepository.UpdateAsync
- uid: MyApp.Sales.Infrastructure.Data.SalesDbContext
  name: SalesDbContext
  href: api/MyApp.Sales.Infrastructure.Data.SalesDbContext.html
  commentId: T:MyApp.Sales.Infrastructure.Data.SalesDbContext
  fullName: MyApp.Sales.Infrastructure.Data.SalesDbContext
  nameWithType: SalesDbContext
- uid: MyApp.Sales.Infrastructure.Data.SalesDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{MyApp.Sales.Infrastructure.Data.SalesDbContext})
  name: SalesDbContext(DbContextOptions<SalesDbContext>)
  href: api/MyApp.Sales.Infrastructure.Data.SalesDbContext.html#MyApp_Sales_Infrastructure_Data_SalesDbContext__ctor_Microsoft_EntityFrameworkCore_DbContextOptions_MyApp_Sales_Infrastructure_Data_SalesDbContext__
  commentId: M:MyApp.Sales.Infrastructure.Data.SalesDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{MyApp.Sales.Infrastructure.Data.SalesDbContext})
  name.vb: New(DbContextOptions(Of SalesDbContext))
  fullName: MyApp.Sales.Infrastructure.Data.SalesDbContext.SalesDbContext(Microsoft.EntityFrameworkCore.DbContextOptions<MyApp.Sales.Infrastructure.Data.SalesDbContext>)
  fullName.vb: MyApp.Sales.Infrastructure.Data.SalesDbContext.New(Microsoft.EntityFrameworkCore.DbContextOptions(Of MyApp.Sales.Infrastructure.Data.SalesDbContext))
  nameWithType: SalesDbContext.SalesDbContext(DbContextOptions<SalesDbContext>)
  nameWithType.vb: SalesDbContext.New(DbContextOptions(Of SalesDbContext))
- uid: MyApp.Sales.Infrastructure.Data.SalesDbContext.#ctor*
  name: SalesDbContext
  href: api/MyApp.Sales.Infrastructure.Data.SalesDbContext.html#MyApp_Sales_Infrastructure_Data_SalesDbContext__ctor_
  commentId: Overload:MyApp.Sales.Infrastructure.Data.SalesDbContext.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Sales.Infrastructure.Data.SalesDbContext.SalesDbContext
  fullName.vb: MyApp.Sales.Infrastructure.Data.SalesDbContext.New
  nameWithType: SalesDbContext.SalesDbContext
  nameWithType.vb: SalesDbContext.New
- uid: MyApp.Sales.Infrastructure.Data.SalesDbContext.Customers
  name: Customers
  href: api/MyApp.Sales.Infrastructure.Data.SalesDbContext.html#MyApp_Sales_Infrastructure_Data_SalesDbContext_Customers
  commentId: P:MyApp.Sales.Infrastructure.Data.SalesDbContext.Customers
  fullName: MyApp.Sales.Infrastructure.Data.SalesDbContext.Customers
  nameWithType: SalesDbContext.Customers
- uid: MyApp.Sales.Infrastructure.Data.SalesDbContext.Customers*
  name: Customers
  href: api/MyApp.Sales.Infrastructure.Data.SalesDbContext.html#MyApp_Sales_Infrastructure_Data_SalesDbContext_Customers_
  commentId: Overload:MyApp.Sales.Infrastructure.Data.SalesDbContext.Customers
  isSpec: "True"
  fullName: MyApp.Sales.Infrastructure.Data.SalesDbContext.Customers
  nameWithType: SalesDbContext.Customers
- uid: MyApp.Sales.Infrastructure.Data.SalesDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: OnModelCreating(ModelBuilder)
  href: api/MyApp.Sales.Infrastructure.Data.SalesDbContext.html#MyApp_Sales_Infrastructure_Data_SalesDbContext_OnModelCreating_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:MyApp.Sales.Infrastructure.Data.SalesDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: MyApp.Sales.Infrastructure.Data.SalesDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: SalesDbContext.OnModelCreating(ModelBuilder)
- uid: MyApp.Sales.Infrastructure.Data.SalesDbContext.OnModelCreating*
  name: OnModelCreating
  href: api/MyApp.Sales.Infrastructure.Data.SalesDbContext.html#MyApp_Sales_Infrastructure_Data_SalesDbContext_OnModelCreating_
  commentId: Overload:MyApp.Sales.Infrastructure.Data.SalesDbContext.OnModelCreating
  isSpec: "True"
  fullName: MyApp.Sales.Infrastructure.Data.SalesDbContext.OnModelCreating
  nameWithType: SalesDbContext.OnModelCreating
- uid: MyApp.Sales.Infrastructure.Data.SalesDbContext.SalesOrderLines
  name: SalesOrderLines
  href: api/MyApp.Sales.Infrastructure.Data.SalesDbContext.html#MyApp_Sales_Infrastructure_Data_SalesDbContext_SalesOrderLines
  commentId: P:MyApp.Sales.Infrastructure.Data.SalesDbContext.SalesOrderLines
  fullName: MyApp.Sales.Infrastructure.Data.SalesDbContext.SalesOrderLines
  nameWithType: SalesDbContext.SalesOrderLines
- uid: MyApp.Sales.Infrastructure.Data.SalesDbContext.SalesOrderLines*
  name: SalesOrderLines
  href: api/MyApp.Sales.Infrastructure.Data.SalesDbContext.html#MyApp_Sales_Infrastructure_Data_SalesDbContext_SalesOrderLines_
  commentId: Overload:MyApp.Sales.Infrastructure.Data.SalesDbContext.SalesOrderLines
  isSpec: "True"
  fullName: MyApp.Sales.Infrastructure.Data.SalesDbContext.SalesOrderLines
  nameWithType: SalesDbContext.SalesOrderLines
- uid: MyApp.Sales.Infrastructure.Data.SalesDbContext.SalesOrders
  name: SalesOrders
  href: api/MyApp.Sales.Infrastructure.Data.SalesDbContext.html#MyApp_Sales_Infrastructure_Data_SalesDbContext_SalesOrders
  commentId: P:MyApp.Sales.Infrastructure.Data.SalesDbContext.SalesOrders
  fullName: MyApp.Sales.Infrastructure.Data.SalesDbContext.SalesOrders
  nameWithType: SalesDbContext.SalesOrders
- uid: MyApp.Sales.Infrastructure.Data.SalesDbContext.SalesOrders*
  name: SalesOrders
  href: api/MyApp.Sales.Infrastructure.Data.SalesDbContext.html#MyApp_Sales_Infrastructure_Data_SalesDbContext_SalesOrders_
  commentId: Overload:MyApp.Sales.Infrastructure.Data.SalesDbContext.SalesOrders
  isSpec: "True"
  fullName: MyApp.Sales.Infrastructure.Data.SalesDbContext.SalesOrders
  nameWithType: SalesDbContext.SalesOrders
- uid: MyApp.Sales.Infrastructure.Data.SalesDbContextFactory
  name: SalesDbContextFactory
  href: api/MyApp.Sales.Infrastructure.Data.SalesDbContextFactory.html
  commentId: T:MyApp.Sales.Infrastructure.Data.SalesDbContextFactory
  fullName: MyApp.Sales.Infrastructure.Data.SalesDbContextFactory
  nameWithType: SalesDbContextFactory
- uid: MyApp.Sales.Infrastructure.Data.SalesDbContextFactory.CreateDbContext(System.String[])
  name: CreateDbContext(string[])
  href: api/MyApp.Sales.Infrastructure.Data.SalesDbContextFactory.html#MyApp_Sales_Infrastructure_Data_SalesDbContextFactory_CreateDbContext_System_String___
  commentId: M:MyApp.Sales.Infrastructure.Data.SalesDbContextFactory.CreateDbContext(System.String[])
  name.vb: CreateDbContext(String())
  fullName: MyApp.Sales.Infrastructure.Data.SalesDbContextFactory.CreateDbContext(string[])
  fullName.vb: MyApp.Sales.Infrastructure.Data.SalesDbContextFactory.CreateDbContext(String())
  nameWithType: SalesDbContextFactory.CreateDbContext(string[])
  nameWithType.vb: SalesDbContextFactory.CreateDbContext(String())
- uid: MyApp.Sales.Infrastructure.Data.SalesDbContextFactory.CreateDbContext*
  name: CreateDbContext
  href: api/MyApp.Sales.Infrastructure.Data.SalesDbContextFactory.html#MyApp_Sales_Infrastructure_Data_SalesDbContextFactory_CreateDbContext_
  commentId: Overload:MyApp.Sales.Infrastructure.Data.SalesDbContextFactory.CreateDbContext
  isSpec: "True"
  fullName: MyApp.Sales.Infrastructure.Data.SalesDbContextFactory.CreateDbContext
  nameWithType: SalesDbContextFactory.CreateDbContext
- uid: MyApp.Sales.Infrastructure.Migrations
  name: MyApp.Sales.Infrastructure.Migrations
  href: api/MyApp.Sales.Infrastructure.Migrations.html
  commentId: N:MyApp.Sales.Infrastructure.Migrations
  fullName: MyApp.Sales.Infrastructure.Migrations
  nameWithType: MyApp.Sales.Infrastructure.Migrations
- uid: MyApp.Sales.Infrastructure.Migrations.AuditableEntities
  name: AuditableEntities
  href: api/MyApp.Sales.Infrastructure.Migrations.AuditableEntities.html
  commentId: T:MyApp.Sales.Infrastructure.Migrations.AuditableEntities
  fullName: MyApp.Sales.Infrastructure.Migrations.AuditableEntities
  nameWithType: AuditableEntities
- uid: MyApp.Sales.Infrastructure.Migrations.AuditableEntities.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/MyApp.Sales.Infrastructure.Migrations.AuditableEntities.html#MyApp_Sales_Infrastructure_Migrations_AuditableEntities_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:MyApp.Sales.Infrastructure.Migrations.AuditableEntities.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: MyApp.Sales.Infrastructure.Migrations.AuditableEntities.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: AuditableEntities.BuildTargetModel(ModelBuilder)
- uid: MyApp.Sales.Infrastructure.Migrations.AuditableEntities.BuildTargetModel*
  name: BuildTargetModel
  href: api/MyApp.Sales.Infrastructure.Migrations.AuditableEntities.html#MyApp_Sales_Infrastructure_Migrations_AuditableEntities_BuildTargetModel_
  commentId: Overload:MyApp.Sales.Infrastructure.Migrations.AuditableEntities.BuildTargetModel
  isSpec: "True"
  fullName: MyApp.Sales.Infrastructure.Migrations.AuditableEntities.BuildTargetModel
  nameWithType: AuditableEntities.BuildTargetModel
- uid: MyApp.Sales.Infrastructure.Migrations.AuditableEntities.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/MyApp.Sales.Infrastructure.Migrations.AuditableEntities.html#MyApp_Sales_Infrastructure_Migrations_AuditableEntities_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MyApp.Sales.Infrastructure.Migrations.AuditableEntities.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MyApp.Sales.Infrastructure.Migrations.AuditableEntities.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: AuditableEntities.Down(MigrationBuilder)
- uid: MyApp.Sales.Infrastructure.Migrations.AuditableEntities.Down*
  name: Down
  href: api/MyApp.Sales.Infrastructure.Migrations.AuditableEntities.html#MyApp_Sales_Infrastructure_Migrations_AuditableEntities_Down_
  commentId: Overload:MyApp.Sales.Infrastructure.Migrations.AuditableEntities.Down
  isSpec: "True"
  fullName: MyApp.Sales.Infrastructure.Migrations.AuditableEntities.Down
  nameWithType: AuditableEntities.Down
- uid: MyApp.Sales.Infrastructure.Migrations.AuditableEntities.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/MyApp.Sales.Infrastructure.Migrations.AuditableEntities.html#MyApp_Sales_Infrastructure_Migrations_AuditableEntities_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MyApp.Sales.Infrastructure.Migrations.AuditableEntities.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MyApp.Sales.Infrastructure.Migrations.AuditableEntities.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: AuditableEntities.Up(MigrationBuilder)
- uid: MyApp.Sales.Infrastructure.Migrations.AuditableEntities.Up*
  name: Up
  href: api/MyApp.Sales.Infrastructure.Migrations.AuditableEntities.html#MyApp_Sales_Infrastructure_Migrations_AuditableEntities_Up_
  commentId: Overload:MyApp.Sales.Infrastructure.Migrations.AuditableEntities.Up
  isSpec: "True"
  fullName: MyApp.Sales.Infrastructure.Migrations.AuditableEntities.Up
  nameWithType: AuditableEntities.Up
- uid: MyApp.Sales.Infrastructure.Migrations.InitialSales
  name: InitialSales
  href: api/MyApp.Sales.Infrastructure.Migrations.InitialSales.html
  commentId: T:MyApp.Sales.Infrastructure.Migrations.InitialSales
  fullName: MyApp.Sales.Infrastructure.Migrations.InitialSales
  nameWithType: InitialSales
- uid: MyApp.Sales.Infrastructure.Migrations.InitialSales.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/MyApp.Sales.Infrastructure.Migrations.InitialSales.html#MyApp_Sales_Infrastructure_Migrations_InitialSales_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:MyApp.Sales.Infrastructure.Migrations.InitialSales.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: MyApp.Sales.Infrastructure.Migrations.InitialSales.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: InitialSales.BuildTargetModel(ModelBuilder)
- uid: MyApp.Sales.Infrastructure.Migrations.InitialSales.BuildTargetModel*
  name: BuildTargetModel
  href: api/MyApp.Sales.Infrastructure.Migrations.InitialSales.html#MyApp_Sales_Infrastructure_Migrations_InitialSales_BuildTargetModel_
  commentId: Overload:MyApp.Sales.Infrastructure.Migrations.InitialSales.BuildTargetModel
  isSpec: "True"
  fullName: MyApp.Sales.Infrastructure.Migrations.InitialSales.BuildTargetModel
  nameWithType: InitialSales.BuildTargetModel
- uid: MyApp.Sales.Infrastructure.Migrations.InitialSales.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/MyApp.Sales.Infrastructure.Migrations.InitialSales.html#MyApp_Sales_Infrastructure_Migrations_InitialSales_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MyApp.Sales.Infrastructure.Migrations.InitialSales.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MyApp.Sales.Infrastructure.Migrations.InitialSales.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: InitialSales.Down(MigrationBuilder)
- uid: MyApp.Sales.Infrastructure.Migrations.InitialSales.Down*
  name: Down
  href: api/MyApp.Sales.Infrastructure.Migrations.InitialSales.html#MyApp_Sales_Infrastructure_Migrations_InitialSales_Down_
  commentId: Overload:MyApp.Sales.Infrastructure.Migrations.InitialSales.Down
  isSpec: "True"
  fullName: MyApp.Sales.Infrastructure.Migrations.InitialSales.Down
  nameWithType: InitialSales.Down
- uid: MyApp.Sales.Infrastructure.Migrations.InitialSales.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/MyApp.Sales.Infrastructure.Migrations.InitialSales.html#MyApp_Sales_Infrastructure_Migrations_InitialSales_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:MyApp.Sales.Infrastructure.Migrations.InitialSales.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: MyApp.Sales.Infrastructure.Migrations.InitialSales.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: InitialSales.Up(MigrationBuilder)
- uid: MyApp.Sales.Infrastructure.Migrations.InitialSales.Up*
  name: Up
  href: api/MyApp.Sales.Infrastructure.Migrations.InitialSales.html#MyApp_Sales_Infrastructure_Migrations_InitialSales_Up_
  commentId: Overload:MyApp.Sales.Infrastructure.Migrations.InitialSales.Up
  isSpec: "True"
  fullName: MyApp.Sales.Infrastructure.Migrations.InitialSales.Up
  nameWithType: InitialSales.Up
- uid: MyApp.Sales.Tests.Helpers
  name: MyApp.Sales.Tests.Helpers
  href: api/MyApp.Sales.Tests.Helpers.html
  commentId: N:MyApp.Sales.Tests.Helpers
  fullName: MyApp.Sales.Tests.Helpers
  nameWithType: MyApp.Sales.Tests.Helpers
- uid: MyApp.Sales.Tests.Helpers.TestDbContextFactory
  name: TestDbContextFactory
  href: api/MyApp.Sales.Tests.Helpers.TestDbContextFactory.html
  commentId: T:MyApp.Sales.Tests.Helpers.TestDbContextFactory
  fullName: MyApp.Sales.Tests.Helpers.TestDbContextFactory
  nameWithType: TestDbContextFactory
- uid: MyApp.Sales.Tests.Helpers.TestDbContextFactory.CreateInMemoryContext
  name: CreateInMemoryContext()
  href: api/MyApp.Sales.Tests.Helpers.TestDbContextFactory.html#MyApp_Sales_Tests_Helpers_TestDbContextFactory_CreateInMemoryContext
  commentId: M:MyApp.Sales.Tests.Helpers.TestDbContextFactory.CreateInMemoryContext
  fullName: MyApp.Sales.Tests.Helpers.TestDbContextFactory.CreateInMemoryContext()
  nameWithType: TestDbContextFactory.CreateInMemoryContext()
- uid: MyApp.Sales.Tests.Helpers.TestDbContextFactory.CreateInMemoryContext*
  name: CreateInMemoryContext
  href: api/MyApp.Sales.Tests.Helpers.TestDbContextFactory.html#MyApp_Sales_Tests_Helpers_TestDbContextFactory_CreateInMemoryContext_
  commentId: Overload:MyApp.Sales.Tests.Helpers.TestDbContextFactory.CreateInMemoryContext
  isSpec: "True"
  fullName: MyApp.Sales.Tests.Helpers.TestDbContextFactory.CreateInMemoryContext
  nameWithType: TestDbContextFactory.CreateInMemoryContext
- uid: MyApp.Sales.Tests.Helpers.TestDbContextFactory.SeedTestData(MyApp.Sales.Infrastructure.Data.SalesDbContext)
  name: SeedTestData(SalesDbContext)
  href: api/MyApp.Sales.Tests.Helpers.TestDbContextFactory.html#MyApp_Sales_Tests_Helpers_TestDbContextFactory_SeedTestData_MyApp_Sales_Infrastructure_Data_SalesDbContext_
  commentId: M:MyApp.Sales.Tests.Helpers.TestDbContextFactory.SeedTestData(MyApp.Sales.Infrastructure.Data.SalesDbContext)
  fullName: MyApp.Sales.Tests.Helpers.TestDbContextFactory.SeedTestData(MyApp.Sales.Infrastructure.Data.SalesDbContext)
  nameWithType: TestDbContextFactory.SeedTestData(SalesDbContext)
- uid: MyApp.Sales.Tests.Helpers.TestDbContextFactory.SeedTestData*
  name: SeedTestData
  href: api/MyApp.Sales.Tests.Helpers.TestDbContextFactory.html#MyApp_Sales_Tests_Helpers_TestDbContextFactory_SeedTestData_
  commentId: Overload:MyApp.Sales.Tests.Helpers.TestDbContextFactory.SeedTestData
  isSpec: "True"
  fullName: MyApp.Sales.Tests.Helpers.TestDbContextFactory.SeedTestData
  nameWithType: TestDbContextFactory.SeedTestData
- uid: MyApp.Sales.Tests.Repositories
  name: MyApp.Sales.Tests.Repositories
  href: api/MyApp.Sales.Tests.Repositories.html
  commentId: N:MyApp.Sales.Tests.Repositories
  fullName: MyApp.Sales.Tests.Repositories
  nameWithType: MyApp.Sales.Tests.Repositories
- uid: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests
  name: CustomerRepositoryTests
  href: api/MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.html
  commentId: T:MyApp.Sales.Tests.Repositories.CustomerRepositoryTests
  fullName: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests
  nameWithType: CustomerRepositoryTests
- uid: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.#ctor
  name: CustomerRepositoryTests()
  href: api/MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.html#MyApp_Sales_Tests_Repositories_CustomerRepositoryTests__ctor
  commentId: M:MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.#ctor
  name.vb: New()
  fullName: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.CustomerRepositoryTests()
  fullName.vb: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.New()
  nameWithType: CustomerRepositoryTests.CustomerRepositoryTests()
  nameWithType.vb: CustomerRepositoryTests.New()
- uid: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.#ctor*
  name: CustomerRepositoryTests
  href: api/MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.html#MyApp_Sales_Tests_Repositories_CustomerRepositoryTests__ctor_
  commentId: Overload:MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.CustomerRepositoryTests
  fullName.vb: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.New
  nameWithType: CustomerRepositoryTests.CustomerRepositoryTests
  nameWithType.vb: CustomerRepositoryTests.New
- uid: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.AddAsync_WithValidCustomer_CreatesCustomer
  name: AddAsync_WithValidCustomer_CreatesCustomer()
  href: api/MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.html#MyApp_Sales_Tests_Repositories_CustomerRepositoryTests_AddAsync_WithValidCustomer_CreatesCustomer
  commentId: M:MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.AddAsync_WithValidCustomer_CreatesCustomer
  fullName: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.AddAsync_WithValidCustomer_CreatesCustomer()
  nameWithType: CustomerRepositoryTests.AddAsync_WithValidCustomer_CreatesCustomer()
- uid: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.AddAsync_WithValidCustomer_CreatesCustomer*
  name: AddAsync_WithValidCustomer_CreatesCustomer
  href: api/MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.html#MyApp_Sales_Tests_Repositories_CustomerRepositoryTests_AddAsync_WithValidCustomer_CreatesCustomer_
  commentId: Overload:MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.AddAsync_WithValidCustomer_CreatesCustomer
  isSpec: "True"
  fullName: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.AddAsync_WithValidCustomer_CreatesCustomer
  nameWithType: CustomerRepositoryTests.AddAsync_WithValidCustomer_CreatesCustomer
- uid: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.DeleteAsync_WithNonExistentId_DoesNotThrowException
  name: DeleteAsync_WithNonExistentId_DoesNotThrowException()
  href: api/MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.html#MyApp_Sales_Tests_Repositories_CustomerRepositoryTests_DeleteAsync_WithNonExistentId_DoesNotThrowException
  commentId: M:MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.DeleteAsync_WithNonExistentId_DoesNotThrowException
  fullName: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.DeleteAsync_WithNonExistentId_DoesNotThrowException()
  nameWithType: CustomerRepositoryTests.DeleteAsync_WithNonExistentId_DoesNotThrowException()
- uid: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.DeleteAsync_WithNonExistentId_DoesNotThrowException*
  name: DeleteAsync_WithNonExistentId_DoesNotThrowException
  href: api/MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.html#MyApp_Sales_Tests_Repositories_CustomerRepositoryTests_DeleteAsync_WithNonExistentId_DoesNotThrowException_
  commentId: Overload:MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.DeleteAsync_WithNonExistentId_DoesNotThrowException
  isSpec: "True"
  fullName: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.DeleteAsync_WithNonExistentId_DoesNotThrowException
  nameWithType: CustomerRepositoryTests.DeleteAsync_WithNonExistentId_DoesNotThrowException
- uid: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.DeleteAsync_WithValidId_DeletesCustomer
  name: DeleteAsync_WithValidId_DeletesCustomer()
  href: api/MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.html#MyApp_Sales_Tests_Repositories_CustomerRepositoryTests_DeleteAsync_WithValidId_DeletesCustomer
  commentId: M:MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.DeleteAsync_WithValidId_DeletesCustomer
  fullName: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.DeleteAsync_WithValidId_DeletesCustomer()
  nameWithType: CustomerRepositoryTests.DeleteAsync_WithValidId_DeletesCustomer()
- uid: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.DeleteAsync_WithValidId_DeletesCustomer*
  name: DeleteAsync_WithValidId_DeletesCustomer
  href: api/MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.html#MyApp_Sales_Tests_Repositories_CustomerRepositoryTests_DeleteAsync_WithValidId_DeletesCustomer_
  commentId: Overload:MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.DeleteAsync_WithValidId_DeletesCustomer
  isSpec: "True"
  fullName: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.DeleteAsync_WithValidId_DeletesCustomer
  nameWithType: CustomerRepositoryTests.DeleteAsync_WithValidId_DeletesCustomer
- uid: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.GetByIdAsync_IncludesOrders
  name: GetByIdAsync_IncludesOrders()
  href: api/MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.html#MyApp_Sales_Tests_Repositories_CustomerRepositoryTests_GetByIdAsync_IncludesOrders
  commentId: M:MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.GetByIdAsync_IncludesOrders
  fullName: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.GetByIdAsync_IncludesOrders()
  nameWithType: CustomerRepositoryTests.GetByIdAsync_IncludesOrders()
- uid: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.GetByIdAsync_IncludesOrders*
  name: GetByIdAsync_IncludesOrders
  href: api/MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.html#MyApp_Sales_Tests_Repositories_CustomerRepositoryTests_GetByIdAsync_IncludesOrders_
  commentId: Overload:MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.GetByIdAsync_IncludesOrders
  isSpec: "True"
  fullName: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.GetByIdAsync_IncludesOrders
  nameWithType: CustomerRepositoryTests.GetByIdAsync_IncludesOrders
- uid: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull
  name: GetByIdAsync_WithNonExistentId_ReturnsNull()
  href: api/MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.html#MyApp_Sales_Tests_Repositories_CustomerRepositoryTests_GetByIdAsync_WithNonExistentId_ReturnsNull
  commentId: M:MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull
  fullName: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull()
  nameWithType: CustomerRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull()
- uid: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull*
  name: GetByIdAsync_WithNonExistentId_ReturnsNull
  href: api/MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.html#MyApp_Sales_Tests_Repositories_CustomerRepositoryTests_GetByIdAsync_WithNonExistentId_ReturnsNull_
  commentId: Overload:MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull
  isSpec: "True"
  fullName: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull
  nameWithType: CustomerRepositoryTests.GetByIdAsync_WithNonExistentId_ReturnsNull
- uid: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.GetByIdAsync_WithValidId_ReturnsCustomer
  name: GetByIdAsync_WithValidId_ReturnsCustomer()
  href: api/MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.html#MyApp_Sales_Tests_Repositories_CustomerRepositoryTests_GetByIdAsync_WithValidId_ReturnsCustomer
  commentId: M:MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.GetByIdAsync_WithValidId_ReturnsCustomer
  fullName: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.GetByIdAsync_WithValidId_ReturnsCustomer()
  nameWithType: CustomerRepositoryTests.GetByIdAsync_WithValidId_ReturnsCustomer()
- uid: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.GetByIdAsync_WithValidId_ReturnsCustomer*
  name: GetByIdAsync_WithValidId_ReturnsCustomer
  href: api/MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.html#MyApp_Sales_Tests_Repositories_CustomerRepositoryTests_GetByIdAsync_WithValidId_ReturnsCustomer_
  commentId: Overload:MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.GetByIdAsync_WithValidId_ReturnsCustomer
  isSpec: "True"
  fullName: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.GetByIdAsync_WithValidId_ReturnsCustomer
  nameWithType: CustomerRepositoryTests.GetByIdAsync_WithValidId_ReturnsCustomer
- uid: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.ListAsync_ReturnsAllCustomers
  name: ListAsync_ReturnsAllCustomers()
  href: api/MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.html#MyApp_Sales_Tests_Repositories_CustomerRepositoryTests_ListAsync_ReturnsAllCustomers
  commentId: M:MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.ListAsync_ReturnsAllCustomers
  fullName: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.ListAsync_ReturnsAllCustomers()
  nameWithType: CustomerRepositoryTests.ListAsync_ReturnsAllCustomers()
- uid: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.ListAsync_ReturnsAllCustomers*
  name: ListAsync_ReturnsAllCustomers
  href: api/MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.html#MyApp_Sales_Tests_Repositories_CustomerRepositoryTests_ListAsync_ReturnsAllCustomers_
  commentId: Overload:MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.ListAsync_ReturnsAllCustomers
  isSpec: "True"
  fullName: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.ListAsync_ReturnsAllCustomers
  nameWithType: CustomerRepositoryTests.ListAsync_ReturnsAllCustomers
- uid: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.ListAsync_ReturnsEmptyList_WhenNoCustomers
  name: ListAsync_ReturnsEmptyList_WhenNoCustomers()
  href: api/MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.html#MyApp_Sales_Tests_Repositories_CustomerRepositoryTests_ListAsync_ReturnsEmptyList_WhenNoCustomers
  commentId: M:MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.ListAsync_ReturnsEmptyList_WhenNoCustomers
  fullName: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.ListAsync_ReturnsEmptyList_WhenNoCustomers()
  nameWithType: CustomerRepositoryTests.ListAsync_ReturnsEmptyList_WhenNoCustomers()
- uid: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.ListAsync_ReturnsEmptyList_WhenNoCustomers*
  name: ListAsync_ReturnsEmptyList_WhenNoCustomers
  href: api/MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.html#MyApp_Sales_Tests_Repositories_CustomerRepositoryTests_ListAsync_ReturnsEmptyList_WhenNoCustomers_
  commentId: Overload:MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.ListAsync_ReturnsEmptyList_WhenNoCustomers
  isSpec: "True"
  fullName: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.ListAsync_ReturnsEmptyList_WhenNoCustomers
  nameWithType: CustomerRepositoryTests.ListAsync_ReturnsEmptyList_WhenNoCustomers
- uid: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.UpdateAsync_WithExistingCustomer_UpdatesCustomerData
  name: UpdateAsync_WithExistingCustomer_UpdatesCustomerData()
  href: api/MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.html#MyApp_Sales_Tests_Repositories_CustomerRepositoryTests_UpdateAsync_WithExistingCustomer_UpdatesCustomerData
  commentId: M:MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.UpdateAsync_WithExistingCustomer_UpdatesCustomerData
  fullName: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.UpdateAsync_WithExistingCustomer_UpdatesCustomerData()
  nameWithType: CustomerRepositoryTests.UpdateAsync_WithExistingCustomer_UpdatesCustomerData()
- uid: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.UpdateAsync_WithExistingCustomer_UpdatesCustomerData*
  name: UpdateAsync_WithExistingCustomer_UpdatesCustomerData
  href: api/MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.html#MyApp_Sales_Tests_Repositories_CustomerRepositoryTests_UpdateAsync_WithExistingCustomer_UpdatesCustomerData_
  commentId: Overload:MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.UpdateAsync_WithExistingCustomer_UpdatesCustomerData
  isSpec: "True"
  fullName: MyApp.Sales.Tests.Repositories.CustomerRepositoryTests.UpdateAsync_WithExistingCustomer_UpdatesCustomerData
  nameWithType: CustomerRepositoryTests.UpdateAsync_WithExistingCustomer_UpdatesCustomerData
- uid: MyApp.Shared.Domain.Caching
  name: MyApp.Shared.Domain.Caching
  href: api/MyApp.Shared.Domain.Caching.html
  commentId: N:MyApp.Shared.Domain.Caching
  fullName: MyApp.Shared.Domain.Caching
  nameWithType: MyApp.Shared.Domain.Caching
- uid: MyApp.Shared.Domain.Caching.ICacheService
  name: ICacheService
  href: api/MyApp.Shared.Domain.Caching.ICacheService.html
  commentId: T:MyApp.Shared.Domain.Caching.ICacheService
  fullName: MyApp.Shared.Domain.Caching.ICacheService
  nameWithType: ICacheService
- uid: MyApp.Shared.Domain.Caching.ICacheService.GetStateAsync*
  name: GetStateAsync
  href: api/MyApp.Shared.Domain.Caching.ICacheService.html#MyApp_Shared_Domain_Caching_ICacheService_GetStateAsync_
  commentId: Overload:MyApp.Shared.Domain.Caching.ICacheService.GetStateAsync
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Caching.ICacheService.GetStateAsync
  nameWithType: ICacheService.GetStateAsync
- uid: MyApp.Shared.Domain.Caching.ICacheService.GetStateAsync``1(System.String)
  name: GetStateAsync<T>(string)
  href: api/MyApp.Shared.Domain.Caching.ICacheService.html#MyApp_Shared_Domain_Caching_ICacheService_GetStateAsync__1_System_String_
  commentId: M:MyApp.Shared.Domain.Caching.ICacheService.GetStateAsync``1(System.String)
  name.vb: GetStateAsync(Of T)(String)
  fullName: MyApp.Shared.Domain.Caching.ICacheService.GetStateAsync<T>(string)
  fullName.vb: MyApp.Shared.Domain.Caching.ICacheService.GetStateAsync(Of T)(String)
  nameWithType: ICacheService.GetStateAsync<T>(string)
  nameWithType.vb: ICacheService.GetStateAsync(Of T)(String)
- uid: MyApp.Shared.Domain.Caching.ICacheService.RemoveStateAsync(System.String)
  name: RemoveStateAsync(string)
  href: api/MyApp.Shared.Domain.Caching.ICacheService.html#MyApp_Shared_Domain_Caching_ICacheService_RemoveStateAsync_System_String_
  commentId: M:MyApp.Shared.Domain.Caching.ICacheService.RemoveStateAsync(System.String)
  name.vb: RemoveStateAsync(String)
  fullName: MyApp.Shared.Domain.Caching.ICacheService.RemoveStateAsync(string)
  fullName.vb: MyApp.Shared.Domain.Caching.ICacheService.RemoveStateAsync(String)
  nameWithType: ICacheService.RemoveStateAsync(string)
  nameWithType.vb: ICacheService.RemoveStateAsync(String)
- uid: MyApp.Shared.Domain.Caching.ICacheService.RemoveStateAsync*
  name: RemoveStateAsync
  href: api/MyApp.Shared.Domain.Caching.ICacheService.html#MyApp_Shared_Domain_Caching_ICacheService_RemoveStateAsync_
  commentId: Overload:MyApp.Shared.Domain.Caching.ICacheService.RemoveStateAsync
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Caching.ICacheService.RemoveStateAsync
  nameWithType: ICacheService.RemoveStateAsync
- uid: MyApp.Shared.Domain.Caching.ICacheService.SaveStateAsync*
  name: SaveStateAsync
  href: api/MyApp.Shared.Domain.Caching.ICacheService.html#MyApp_Shared_Domain_Caching_ICacheService_SaveStateAsync_
  commentId: Overload:MyApp.Shared.Domain.Caching.ICacheService.SaveStateAsync
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Caching.ICacheService.SaveStateAsync
  nameWithType: ICacheService.SaveStateAsync
- uid: MyApp.Shared.Domain.Caching.ICacheService.SaveStateAsync``1(System.String,``0,System.Nullable{System.TimeSpan})
  name: SaveStateAsync<T>(string, T, TimeSpan?)
  href: api/MyApp.Shared.Domain.Caching.ICacheService.html#MyApp_Shared_Domain_Caching_ICacheService_SaveStateAsync__1_System_String___0_System_Nullable_System_TimeSpan__
  commentId: M:MyApp.Shared.Domain.Caching.ICacheService.SaveStateAsync``1(System.String,``0,System.Nullable{System.TimeSpan})
  name.vb: SaveStateAsync(Of T)(String, T, TimeSpan?)
  fullName: MyApp.Shared.Domain.Caching.ICacheService.SaveStateAsync<T>(string, T, System.TimeSpan?)
  fullName.vb: MyApp.Shared.Domain.Caching.ICacheService.SaveStateAsync(Of T)(String, T, System.TimeSpan?)
  nameWithType: ICacheService.SaveStateAsync<T>(string, T, TimeSpan?)
  nameWithType.vb: ICacheService.SaveStateAsync(Of T)(String, T, TimeSpan?)
- uid: MyApp.Shared.Domain.Entities
  name: MyApp.Shared.Domain.Entities
  href: api/MyApp.Shared.Domain.Entities.html
  commentId: N:MyApp.Shared.Domain.Entities
  fullName: MyApp.Shared.Domain.Entities
  nameWithType: MyApp.Shared.Domain.Entities
- uid: MyApp.Shared.Domain.Entities.AuditableEntity`1
  name: AuditableEntity<T>
  href: api/MyApp.Shared.Domain.Entities.AuditableEntity-1.html
  commentId: T:MyApp.Shared.Domain.Entities.AuditableEntity`1
  name.vb: AuditableEntity(Of T)
  fullName: MyApp.Shared.Domain.Entities.AuditableEntity<T>
  fullName.vb: MyApp.Shared.Domain.Entities.AuditableEntity(Of T)
  nameWithType: AuditableEntity<T>
  nameWithType.vb: AuditableEntity(Of T)
- uid: MyApp.Shared.Domain.Entities.AuditableEntity`1.CreatedAt
  name: CreatedAt
  href: api/MyApp.Shared.Domain.Entities.AuditableEntity-1.html#MyApp_Shared_Domain_Entities_AuditableEntity_1_CreatedAt
  commentId: P:MyApp.Shared.Domain.Entities.AuditableEntity`1.CreatedAt
  fullName: MyApp.Shared.Domain.Entities.AuditableEntity<T>.CreatedAt
  fullName.vb: MyApp.Shared.Domain.Entities.AuditableEntity(Of T).CreatedAt
  nameWithType: AuditableEntity<T>.CreatedAt
  nameWithType.vb: AuditableEntity(Of T).CreatedAt
- uid: MyApp.Shared.Domain.Entities.AuditableEntity`1.CreatedAt*
  name: CreatedAt
  href: api/MyApp.Shared.Domain.Entities.AuditableEntity-1.html#MyApp_Shared_Domain_Entities_AuditableEntity_1_CreatedAt_
  commentId: Overload:MyApp.Shared.Domain.Entities.AuditableEntity`1.CreatedAt
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Entities.AuditableEntity<T>.CreatedAt
  fullName.vb: MyApp.Shared.Domain.Entities.AuditableEntity(Of T).CreatedAt
  nameWithType: AuditableEntity<T>.CreatedAt
  nameWithType.vb: AuditableEntity(Of T).CreatedAt
- uid: MyApp.Shared.Domain.Entities.AuditableEntity`1.CreatedBy
  name: CreatedBy
  href: api/MyApp.Shared.Domain.Entities.AuditableEntity-1.html#MyApp_Shared_Domain_Entities_AuditableEntity_1_CreatedBy
  commentId: P:MyApp.Shared.Domain.Entities.AuditableEntity`1.CreatedBy
  fullName: MyApp.Shared.Domain.Entities.AuditableEntity<T>.CreatedBy
  fullName.vb: MyApp.Shared.Domain.Entities.AuditableEntity(Of T).CreatedBy
  nameWithType: AuditableEntity<T>.CreatedBy
  nameWithType.vb: AuditableEntity(Of T).CreatedBy
- uid: MyApp.Shared.Domain.Entities.AuditableEntity`1.CreatedBy*
  name: CreatedBy
  href: api/MyApp.Shared.Domain.Entities.AuditableEntity-1.html#MyApp_Shared_Domain_Entities_AuditableEntity_1_CreatedBy_
  commentId: Overload:MyApp.Shared.Domain.Entities.AuditableEntity`1.CreatedBy
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Entities.AuditableEntity<T>.CreatedBy
  fullName.vb: MyApp.Shared.Domain.Entities.AuditableEntity(Of T).CreatedBy
  nameWithType: AuditableEntity<T>.CreatedBy
  nameWithType.vb: AuditableEntity(Of T).CreatedBy
- uid: MyApp.Shared.Domain.Entities.AuditableEntity`1.UpdatedAt
  name: UpdatedAt
  href: api/MyApp.Shared.Domain.Entities.AuditableEntity-1.html#MyApp_Shared_Domain_Entities_AuditableEntity_1_UpdatedAt
  commentId: P:MyApp.Shared.Domain.Entities.AuditableEntity`1.UpdatedAt
  fullName: MyApp.Shared.Domain.Entities.AuditableEntity<T>.UpdatedAt
  fullName.vb: MyApp.Shared.Domain.Entities.AuditableEntity(Of T).UpdatedAt
  nameWithType: AuditableEntity<T>.UpdatedAt
  nameWithType.vb: AuditableEntity(Of T).UpdatedAt
- uid: MyApp.Shared.Domain.Entities.AuditableEntity`1.UpdatedAt*
  name: UpdatedAt
  href: api/MyApp.Shared.Domain.Entities.AuditableEntity-1.html#MyApp_Shared_Domain_Entities_AuditableEntity_1_UpdatedAt_
  commentId: Overload:MyApp.Shared.Domain.Entities.AuditableEntity`1.UpdatedAt
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Entities.AuditableEntity<T>.UpdatedAt
  fullName.vb: MyApp.Shared.Domain.Entities.AuditableEntity(Of T).UpdatedAt
  nameWithType: AuditableEntity<T>.UpdatedAt
  nameWithType.vb: AuditableEntity(Of T).UpdatedAt
- uid: MyApp.Shared.Domain.Entities.AuditableEntity`1.UpdatedBy
  name: UpdatedBy
  href: api/MyApp.Shared.Domain.Entities.AuditableEntity-1.html#MyApp_Shared_Domain_Entities_AuditableEntity_1_UpdatedBy
  commentId: P:MyApp.Shared.Domain.Entities.AuditableEntity`1.UpdatedBy
  fullName: MyApp.Shared.Domain.Entities.AuditableEntity<T>.UpdatedBy
  fullName.vb: MyApp.Shared.Domain.Entities.AuditableEntity(Of T).UpdatedBy
  nameWithType: AuditableEntity<T>.UpdatedBy
  nameWithType.vb: AuditableEntity(Of T).UpdatedBy
- uid: MyApp.Shared.Domain.Entities.AuditableEntity`1.UpdatedBy*
  name: UpdatedBy
  href: api/MyApp.Shared.Domain.Entities.AuditableEntity-1.html#MyApp_Shared_Domain_Entities_AuditableEntity_1_UpdatedBy_
  commentId: Overload:MyApp.Shared.Domain.Entities.AuditableEntity`1.UpdatedBy
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Entities.AuditableEntity<T>.UpdatedBy
  fullName.vb: MyApp.Shared.Domain.Entities.AuditableEntity(Of T).UpdatedBy
  nameWithType: AuditableEntity<T>.UpdatedBy
  nameWithType.vb: AuditableEntity(Of T).UpdatedBy
- uid: MyApp.Shared.Domain.Entities.DomainEntity`1
  name: DomainEntity<T>
  href: api/MyApp.Shared.Domain.Entities.DomainEntity-1.html
  commentId: T:MyApp.Shared.Domain.Entities.DomainEntity`1
  name.vb: DomainEntity(Of T)
  fullName: MyApp.Shared.Domain.Entities.DomainEntity<T>
  fullName.vb: MyApp.Shared.Domain.Entities.DomainEntity(Of T)
  nameWithType: DomainEntity<T>
  nameWithType.vb: DomainEntity(Of T)
- uid: MyApp.Shared.Domain.Entities.DomainEntity`1.Id
  name: Id
  href: api/MyApp.Shared.Domain.Entities.DomainEntity-1.html#MyApp_Shared_Domain_Entities_DomainEntity_1_Id
  commentId: P:MyApp.Shared.Domain.Entities.DomainEntity`1.Id
  fullName: MyApp.Shared.Domain.Entities.DomainEntity<T>.Id
  fullName.vb: MyApp.Shared.Domain.Entities.DomainEntity(Of T).Id
  nameWithType: DomainEntity<T>.Id
  nameWithType.vb: DomainEntity(Of T).Id
- uid: MyApp.Shared.Domain.Entities.DomainEntity`1.Id*
  name: Id
  href: api/MyApp.Shared.Domain.Entities.DomainEntity-1.html#MyApp_Shared_Domain_Entities_DomainEntity_1_Id_
  commentId: Overload:MyApp.Shared.Domain.Entities.DomainEntity`1.Id
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Entities.DomainEntity<T>.Id
  fullName.vb: MyApp.Shared.Domain.Entities.DomainEntity(Of T).Id
  nameWithType: DomainEntity<T>.Id
  nameWithType.vb: DomainEntity(Of T).Id
- uid: MyApp.Shared.Domain.Entities.IAuditableEntity
  name: IAuditableEntity
  href: api/MyApp.Shared.Domain.Entities.IAuditableEntity.html
  commentId: T:MyApp.Shared.Domain.Entities.IAuditableEntity
  fullName: MyApp.Shared.Domain.Entities.IAuditableEntity
  nameWithType: IAuditableEntity
- uid: MyApp.Shared.Domain.Entities.IAuditableEntity.CreatedAt
  name: CreatedAt
  href: api/MyApp.Shared.Domain.Entities.IAuditableEntity.html#MyApp_Shared_Domain_Entities_IAuditableEntity_CreatedAt
  commentId: P:MyApp.Shared.Domain.Entities.IAuditableEntity.CreatedAt
  fullName: MyApp.Shared.Domain.Entities.IAuditableEntity.CreatedAt
  nameWithType: IAuditableEntity.CreatedAt
- uid: MyApp.Shared.Domain.Entities.IAuditableEntity.CreatedAt*
  name: CreatedAt
  href: api/MyApp.Shared.Domain.Entities.IAuditableEntity.html#MyApp_Shared_Domain_Entities_IAuditableEntity_CreatedAt_
  commentId: Overload:MyApp.Shared.Domain.Entities.IAuditableEntity.CreatedAt
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Entities.IAuditableEntity.CreatedAt
  nameWithType: IAuditableEntity.CreatedAt
- uid: MyApp.Shared.Domain.Entities.IAuditableEntity.CreatedBy
  name: CreatedBy
  href: api/MyApp.Shared.Domain.Entities.IAuditableEntity.html#MyApp_Shared_Domain_Entities_IAuditableEntity_CreatedBy
  commentId: P:MyApp.Shared.Domain.Entities.IAuditableEntity.CreatedBy
  fullName: MyApp.Shared.Domain.Entities.IAuditableEntity.CreatedBy
  nameWithType: IAuditableEntity.CreatedBy
- uid: MyApp.Shared.Domain.Entities.IAuditableEntity.CreatedBy*
  name: CreatedBy
  href: api/MyApp.Shared.Domain.Entities.IAuditableEntity.html#MyApp_Shared_Domain_Entities_IAuditableEntity_CreatedBy_
  commentId: Overload:MyApp.Shared.Domain.Entities.IAuditableEntity.CreatedBy
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Entities.IAuditableEntity.CreatedBy
  nameWithType: IAuditableEntity.CreatedBy
- uid: MyApp.Shared.Domain.Entities.IAuditableEntity.UpdatedAt
  name: UpdatedAt
  href: api/MyApp.Shared.Domain.Entities.IAuditableEntity.html#MyApp_Shared_Domain_Entities_IAuditableEntity_UpdatedAt
  commentId: P:MyApp.Shared.Domain.Entities.IAuditableEntity.UpdatedAt
  fullName: MyApp.Shared.Domain.Entities.IAuditableEntity.UpdatedAt
  nameWithType: IAuditableEntity.UpdatedAt
- uid: MyApp.Shared.Domain.Entities.IAuditableEntity.UpdatedAt*
  name: UpdatedAt
  href: api/MyApp.Shared.Domain.Entities.IAuditableEntity.html#MyApp_Shared_Domain_Entities_IAuditableEntity_UpdatedAt_
  commentId: Overload:MyApp.Shared.Domain.Entities.IAuditableEntity.UpdatedAt
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Entities.IAuditableEntity.UpdatedAt
  nameWithType: IAuditableEntity.UpdatedAt
- uid: MyApp.Shared.Domain.Entities.IAuditableEntity.UpdatedBy
  name: UpdatedBy
  href: api/MyApp.Shared.Domain.Entities.IAuditableEntity.html#MyApp_Shared_Domain_Entities_IAuditableEntity_UpdatedBy
  commentId: P:MyApp.Shared.Domain.Entities.IAuditableEntity.UpdatedBy
  fullName: MyApp.Shared.Domain.Entities.IAuditableEntity.UpdatedBy
  nameWithType: IAuditableEntity.UpdatedBy
- uid: MyApp.Shared.Domain.Entities.IAuditableEntity.UpdatedBy*
  name: UpdatedBy
  href: api/MyApp.Shared.Domain.Entities.IAuditableEntity.html#MyApp_Shared_Domain_Entities_IAuditableEntity_UpdatedBy_
  commentId: Overload:MyApp.Shared.Domain.Entities.IAuditableEntity.UpdatedBy
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Entities.IAuditableEntity.UpdatedBy
  nameWithType: IAuditableEntity.UpdatedBy
- uid: MyApp.Shared.Domain.Entities.IAuditableEntity`1
  name: IAuditableEntity<T>
  href: api/MyApp.Shared.Domain.Entities.IAuditableEntity-1.html
  commentId: T:MyApp.Shared.Domain.Entities.IAuditableEntity`1
  name.vb: IAuditableEntity(Of T)
  fullName: MyApp.Shared.Domain.Entities.IAuditableEntity<T>
  fullName.vb: MyApp.Shared.Domain.Entities.IAuditableEntity(Of T)
  nameWithType: IAuditableEntity<T>
  nameWithType.vb: IAuditableEntity(Of T)
- uid: MyApp.Shared.Domain.Entities.IEntity`1
  name: IEntity<T>
  href: api/MyApp.Shared.Domain.Entities.IEntity-1.html
  commentId: T:MyApp.Shared.Domain.Entities.IEntity`1
  name.vb: IEntity(Of T)
  fullName: MyApp.Shared.Domain.Entities.IEntity<T>
  fullName.vb: MyApp.Shared.Domain.Entities.IEntity(Of T)
  nameWithType: IEntity<T>
  nameWithType.vb: IEntity(Of T)
- uid: MyApp.Shared.Domain.Entities.IEntity`1.Id
  name: Id
  href: api/MyApp.Shared.Domain.Entities.IEntity-1.html#MyApp_Shared_Domain_Entities_IEntity_1_Id
  commentId: P:MyApp.Shared.Domain.Entities.IEntity`1.Id
  fullName: MyApp.Shared.Domain.Entities.IEntity<T>.Id
  fullName.vb: MyApp.Shared.Domain.Entities.IEntity(Of T).Id
  nameWithType: IEntity<T>.Id
  nameWithType.vb: IEntity(Of T).Id
- uid: MyApp.Shared.Domain.Entities.IEntity`1.Id*
  name: Id
  href: api/MyApp.Shared.Domain.Entities.IEntity-1.html#MyApp_Shared_Domain_Entities_IEntity_1_Id_
  commentId: Overload:MyApp.Shared.Domain.Entities.IEntity`1.Id
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Entities.IEntity<T>.Id
  fullName.vb: MyApp.Shared.Domain.Entities.IEntity(Of T).Id
  nameWithType: IEntity<T>.Id
  nameWithType.vb: IEntity(Of T).Id
- uid: MyApp.Shared.Domain.Pagination
  name: MyApp.Shared.Domain.Pagination
  href: api/MyApp.Shared.Domain.Pagination.html
  commentId: N:MyApp.Shared.Domain.Pagination
  fullName: MyApp.Shared.Domain.Pagination
  nameWithType: MyApp.Shared.Domain.Pagination
- uid: MyApp.Shared.Domain.Pagination.PaginatedResult`1
  name: PaginatedResult<T>
  href: api/MyApp.Shared.Domain.Pagination.PaginatedResult-1.html
  commentId: T:MyApp.Shared.Domain.Pagination.PaginatedResult`1
  name.vb: PaginatedResult(Of T)
  fullName: MyApp.Shared.Domain.Pagination.PaginatedResult<T>
  fullName.vb: MyApp.Shared.Domain.Pagination.PaginatedResult(Of T)
  nameWithType: PaginatedResult<T>
  nameWithType.vb: PaginatedResult(Of T)
- uid: MyApp.Shared.Domain.Pagination.PaginatedResult`1.#ctor
  name: PaginatedResult()
  href: api/MyApp.Shared.Domain.Pagination.PaginatedResult-1.html#MyApp_Shared_Domain_Pagination_PaginatedResult_1__ctor
  commentId: M:MyApp.Shared.Domain.Pagination.PaginatedResult`1.#ctor
  name.vb: New()
  fullName: MyApp.Shared.Domain.Pagination.PaginatedResult<T>.PaginatedResult()
  fullName.vb: MyApp.Shared.Domain.Pagination.PaginatedResult(Of T).New()
  nameWithType: PaginatedResult<T>.PaginatedResult()
  nameWithType.vb: PaginatedResult(Of T).New()
- uid: MyApp.Shared.Domain.Pagination.PaginatedResult`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Int32,System.Int32,System.Int32)
  name: PaginatedResult(IEnumerable<T>, int, int, int)
  href: api/MyApp.Shared.Domain.Pagination.PaginatedResult-1.html#MyApp_Shared_Domain_Pagination_PaginatedResult_1__ctor_System_Collections_Generic_IEnumerable__0__System_Int32_System_Int32_System_Int32_
  commentId: M:MyApp.Shared.Domain.Pagination.PaginatedResult`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Int32,System.Int32,System.Int32)
  name.vb: New(IEnumerable(Of T), Integer, Integer, Integer)
  fullName: MyApp.Shared.Domain.Pagination.PaginatedResult<T>.PaginatedResult(System.Collections.Generic.IEnumerable<T>, int, int, int)
  fullName.vb: MyApp.Shared.Domain.Pagination.PaginatedResult(Of T).New(System.Collections.Generic.IEnumerable(Of T), Integer, Integer, Integer)
  nameWithType: PaginatedResult<T>.PaginatedResult(IEnumerable<T>, int, int, int)
  nameWithType.vb: PaginatedResult(Of T).New(IEnumerable(Of T), Integer, Integer, Integer)
- uid: MyApp.Shared.Domain.Pagination.PaginatedResult`1.#ctor*
  name: PaginatedResult
  href: api/MyApp.Shared.Domain.Pagination.PaginatedResult-1.html#MyApp_Shared_Domain_Pagination_PaginatedResult_1__ctor_
  commentId: Overload:MyApp.Shared.Domain.Pagination.PaginatedResult`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Shared.Domain.Pagination.PaginatedResult<T>.PaginatedResult
  fullName.vb: MyApp.Shared.Domain.Pagination.PaginatedResult(Of T).New
  nameWithType: PaginatedResult<T>.PaginatedResult
  nameWithType.vb: PaginatedResult(Of T).New
- uid: MyApp.Shared.Domain.Pagination.PaginatedResult`1.HasNextPage
  name: HasNextPage
  href: api/MyApp.Shared.Domain.Pagination.PaginatedResult-1.html#MyApp_Shared_Domain_Pagination_PaginatedResult_1_HasNextPage
  commentId: P:MyApp.Shared.Domain.Pagination.PaginatedResult`1.HasNextPage
  fullName: MyApp.Shared.Domain.Pagination.PaginatedResult<T>.HasNextPage
  fullName.vb: MyApp.Shared.Domain.Pagination.PaginatedResult(Of T).HasNextPage
  nameWithType: PaginatedResult<T>.HasNextPage
  nameWithType.vb: PaginatedResult(Of T).HasNextPage
- uid: MyApp.Shared.Domain.Pagination.PaginatedResult`1.HasNextPage*
  name: HasNextPage
  href: api/MyApp.Shared.Domain.Pagination.PaginatedResult-1.html#MyApp_Shared_Domain_Pagination_PaginatedResult_1_HasNextPage_
  commentId: Overload:MyApp.Shared.Domain.Pagination.PaginatedResult`1.HasNextPage
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Pagination.PaginatedResult<T>.HasNextPage
  fullName.vb: MyApp.Shared.Domain.Pagination.PaginatedResult(Of T).HasNextPage
  nameWithType: PaginatedResult<T>.HasNextPage
  nameWithType.vb: PaginatedResult(Of T).HasNextPage
- uid: MyApp.Shared.Domain.Pagination.PaginatedResult`1.HasPreviousPage
  name: HasPreviousPage
  href: api/MyApp.Shared.Domain.Pagination.PaginatedResult-1.html#MyApp_Shared_Domain_Pagination_PaginatedResult_1_HasPreviousPage
  commentId: P:MyApp.Shared.Domain.Pagination.PaginatedResult`1.HasPreviousPage
  fullName: MyApp.Shared.Domain.Pagination.PaginatedResult<T>.HasPreviousPage
  fullName.vb: MyApp.Shared.Domain.Pagination.PaginatedResult(Of T).HasPreviousPage
  nameWithType: PaginatedResult<T>.HasPreviousPage
  nameWithType.vb: PaginatedResult(Of T).HasPreviousPage
- uid: MyApp.Shared.Domain.Pagination.PaginatedResult`1.HasPreviousPage*
  name: HasPreviousPage
  href: api/MyApp.Shared.Domain.Pagination.PaginatedResult-1.html#MyApp_Shared_Domain_Pagination_PaginatedResult_1_HasPreviousPage_
  commentId: Overload:MyApp.Shared.Domain.Pagination.PaginatedResult`1.HasPreviousPage
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Pagination.PaginatedResult<T>.HasPreviousPage
  fullName.vb: MyApp.Shared.Domain.Pagination.PaginatedResult(Of T).HasPreviousPage
  nameWithType: PaginatedResult<T>.HasPreviousPage
  nameWithType.vb: PaginatedResult(Of T).HasPreviousPage
- uid: MyApp.Shared.Domain.Pagination.PaginatedResult`1.Items
  name: Items
  href: api/MyApp.Shared.Domain.Pagination.PaginatedResult-1.html#MyApp_Shared_Domain_Pagination_PaginatedResult_1_Items
  commentId: P:MyApp.Shared.Domain.Pagination.PaginatedResult`1.Items
  fullName: MyApp.Shared.Domain.Pagination.PaginatedResult<T>.Items
  fullName.vb: MyApp.Shared.Domain.Pagination.PaginatedResult(Of T).Items
  nameWithType: PaginatedResult<T>.Items
  nameWithType.vb: PaginatedResult(Of T).Items
- uid: MyApp.Shared.Domain.Pagination.PaginatedResult`1.Items*
  name: Items
  href: api/MyApp.Shared.Domain.Pagination.PaginatedResult-1.html#MyApp_Shared_Domain_Pagination_PaginatedResult_1_Items_
  commentId: Overload:MyApp.Shared.Domain.Pagination.PaginatedResult`1.Items
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Pagination.PaginatedResult<T>.Items
  fullName.vb: MyApp.Shared.Domain.Pagination.PaginatedResult(Of T).Items
  nameWithType: PaginatedResult<T>.Items
  nameWithType.vb: PaginatedResult(Of T).Items
- uid: MyApp.Shared.Domain.Pagination.PaginatedResult`1.PageNumber
  name: PageNumber
  href: api/MyApp.Shared.Domain.Pagination.PaginatedResult-1.html#MyApp_Shared_Domain_Pagination_PaginatedResult_1_PageNumber
  commentId: P:MyApp.Shared.Domain.Pagination.PaginatedResult`1.PageNumber
  fullName: MyApp.Shared.Domain.Pagination.PaginatedResult<T>.PageNumber
  fullName.vb: MyApp.Shared.Domain.Pagination.PaginatedResult(Of T).PageNumber
  nameWithType: PaginatedResult<T>.PageNumber
  nameWithType.vb: PaginatedResult(Of T).PageNumber
- uid: MyApp.Shared.Domain.Pagination.PaginatedResult`1.PageNumber*
  name: PageNumber
  href: api/MyApp.Shared.Domain.Pagination.PaginatedResult-1.html#MyApp_Shared_Domain_Pagination_PaginatedResult_1_PageNumber_
  commentId: Overload:MyApp.Shared.Domain.Pagination.PaginatedResult`1.PageNumber
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Pagination.PaginatedResult<T>.PageNumber
  fullName.vb: MyApp.Shared.Domain.Pagination.PaginatedResult(Of T).PageNumber
  nameWithType: PaginatedResult<T>.PageNumber
  nameWithType.vb: PaginatedResult(Of T).PageNumber
- uid: MyApp.Shared.Domain.Pagination.PaginatedResult`1.PageSize
  name: PageSize
  href: api/MyApp.Shared.Domain.Pagination.PaginatedResult-1.html#MyApp_Shared_Domain_Pagination_PaginatedResult_1_PageSize
  commentId: P:MyApp.Shared.Domain.Pagination.PaginatedResult`1.PageSize
  fullName: MyApp.Shared.Domain.Pagination.PaginatedResult<T>.PageSize
  fullName.vb: MyApp.Shared.Domain.Pagination.PaginatedResult(Of T).PageSize
  nameWithType: PaginatedResult<T>.PageSize
  nameWithType.vb: PaginatedResult(Of T).PageSize
- uid: MyApp.Shared.Domain.Pagination.PaginatedResult`1.PageSize*
  name: PageSize
  href: api/MyApp.Shared.Domain.Pagination.PaginatedResult-1.html#MyApp_Shared_Domain_Pagination_PaginatedResult_1_PageSize_
  commentId: Overload:MyApp.Shared.Domain.Pagination.PaginatedResult`1.PageSize
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Pagination.PaginatedResult<T>.PageSize
  fullName.vb: MyApp.Shared.Domain.Pagination.PaginatedResult(Of T).PageSize
  nameWithType: PaginatedResult<T>.PageSize
  nameWithType.vb: PaginatedResult(Of T).PageSize
- uid: MyApp.Shared.Domain.Pagination.PaginatedResult`1.TotalCount
  name: TotalCount
  href: api/MyApp.Shared.Domain.Pagination.PaginatedResult-1.html#MyApp_Shared_Domain_Pagination_PaginatedResult_1_TotalCount
  commentId: P:MyApp.Shared.Domain.Pagination.PaginatedResult`1.TotalCount
  fullName: MyApp.Shared.Domain.Pagination.PaginatedResult<T>.TotalCount
  fullName.vb: MyApp.Shared.Domain.Pagination.PaginatedResult(Of T).TotalCount
  nameWithType: PaginatedResult<T>.TotalCount
  nameWithType.vb: PaginatedResult(Of T).TotalCount
- uid: MyApp.Shared.Domain.Pagination.PaginatedResult`1.TotalCount*
  name: TotalCount
  href: api/MyApp.Shared.Domain.Pagination.PaginatedResult-1.html#MyApp_Shared_Domain_Pagination_PaginatedResult_1_TotalCount_
  commentId: Overload:MyApp.Shared.Domain.Pagination.PaginatedResult`1.TotalCount
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Pagination.PaginatedResult<T>.TotalCount
  fullName.vb: MyApp.Shared.Domain.Pagination.PaginatedResult(Of T).TotalCount
  nameWithType: PaginatedResult<T>.TotalCount
  nameWithType.vb: PaginatedResult(Of T).TotalCount
- uid: MyApp.Shared.Domain.Pagination.PaginatedResult`1.TotalPages
  name: TotalPages
  href: api/MyApp.Shared.Domain.Pagination.PaginatedResult-1.html#MyApp_Shared_Domain_Pagination_PaginatedResult_1_TotalPages
  commentId: P:MyApp.Shared.Domain.Pagination.PaginatedResult`1.TotalPages
  fullName: MyApp.Shared.Domain.Pagination.PaginatedResult<T>.TotalPages
  fullName.vb: MyApp.Shared.Domain.Pagination.PaginatedResult(Of T).TotalPages
  nameWithType: PaginatedResult<T>.TotalPages
  nameWithType.vb: PaginatedResult(Of T).TotalPages
- uid: MyApp.Shared.Domain.Pagination.PaginatedResult`1.TotalPages*
  name: TotalPages
  href: api/MyApp.Shared.Domain.Pagination.PaginatedResult-1.html#MyApp_Shared_Domain_Pagination_PaginatedResult_1_TotalPages_
  commentId: Overload:MyApp.Shared.Domain.Pagination.PaginatedResult`1.TotalPages
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Pagination.PaginatedResult<T>.TotalPages
  fullName.vb: MyApp.Shared.Domain.Pagination.PaginatedResult(Of T).TotalPages
  nameWithType: PaginatedResult<T>.TotalPages
  nameWithType.vb: PaginatedResult(Of T).TotalPages
- uid: MyApp.Shared.Domain.Pagination.PaginationParams
  name: PaginationParams
  href: api/MyApp.Shared.Domain.Pagination.PaginationParams.html
  commentId: T:MyApp.Shared.Domain.Pagination.PaginationParams
  fullName: MyApp.Shared.Domain.Pagination.PaginationParams
  nameWithType: PaginationParams
- uid: MyApp.Shared.Domain.Pagination.PaginationParams.#ctor
  name: PaginationParams()
  href: api/MyApp.Shared.Domain.Pagination.PaginationParams.html#MyApp_Shared_Domain_Pagination_PaginationParams__ctor
  commentId: M:MyApp.Shared.Domain.Pagination.PaginationParams.#ctor
  name.vb: New()
  fullName: MyApp.Shared.Domain.Pagination.PaginationParams.PaginationParams()
  fullName.vb: MyApp.Shared.Domain.Pagination.PaginationParams.New()
  nameWithType: PaginationParams.PaginationParams()
  nameWithType.vb: PaginationParams.New()
- uid: MyApp.Shared.Domain.Pagination.PaginationParams.#ctor(System.Int32,System.Int32)
  name: PaginationParams(int, int)
  href: api/MyApp.Shared.Domain.Pagination.PaginationParams.html#MyApp_Shared_Domain_Pagination_PaginationParams__ctor_System_Int32_System_Int32_
  commentId: M:MyApp.Shared.Domain.Pagination.PaginationParams.#ctor(System.Int32,System.Int32)
  name.vb: New(Integer, Integer)
  fullName: MyApp.Shared.Domain.Pagination.PaginationParams.PaginationParams(int, int)
  fullName.vb: MyApp.Shared.Domain.Pagination.PaginationParams.New(Integer, Integer)
  nameWithType: PaginationParams.PaginationParams(int, int)
  nameWithType.vb: PaginationParams.New(Integer, Integer)
- uid: MyApp.Shared.Domain.Pagination.PaginationParams.#ctor*
  name: PaginationParams
  href: api/MyApp.Shared.Domain.Pagination.PaginationParams.html#MyApp_Shared_Domain_Pagination_PaginationParams__ctor_
  commentId: Overload:MyApp.Shared.Domain.Pagination.PaginationParams.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Shared.Domain.Pagination.PaginationParams.PaginationParams
  fullName.vb: MyApp.Shared.Domain.Pagination.PaginationParams.New
  nameWithType: PaginationParams.PaginationParams
  nameWithType.vb: PaginationParams.New
- uid: MyApp.Shared.Domain.Pagination.PaginationParams.PageNumber
  name: PageNumber
  href: api/MyApp.Shared.Domain.Pagination.PaginationParams.html#MyApp_Shared_Domain_Pagination_PaginationParams_PageNumber
  commentId: P:MyApp.Shared.Domain.Pagination.PaginationParams.PageNumber
  fullName: MyApp.Shared.Domain.Pagination.PaginationParams.PageNumber
  nameWithType: PaginationParams.PageNumber
- uid: MyApp.Shared.Domain.Pagination.PaginationParams.PageNumber*
  name: PageNumber
  href: api/MyApp.Shared.Domain.Pagination.PaginationParams.html#MyApp_Shared_Domain_Pagination_PaginationParams_PageNumber_
  commentId: Overload:MyApp.Shared.Domain.Pagination.PaginationParams.PageNumber
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Pagination.PaginationParams.PageNumber
  nameWithType: PaginationParams.PageNumber
- uid: MyApp.Shared.Domain.Pagination.PaginationParams.PageSize
  name: PageSize
  href: api/MyApp.Shared.Domain.Pagination.PaginationParams.html#MyApp_Shared_Domain_Pagination_PaginationParams_PageSize
  commentId: P:MyApp.Shared.Domain.Pagination.PaginationParams.PageSize
  fullName: MyApp.Shared.Domain.Pagination.PaginationParams.PageSize
  nameWithType: PaginationParams.PageSize
- uid: MyApp.Shared.Domain.Pagination.PaginationParams.PageSize*
  name: PageSize
  href: api/MyApp.Shared.Domain.Pagination.PaginationParams.html#MyApp_Shared_Domain_Pagination_PaginationParams_PageSize_
  commentId: Overload:MyApp.Shared.Domain.Pagination.PaginationParams.PageSize
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Pagination.PaginationParams.PageSize
  nameWithType: PaginationParams.PageSize
- uid: MyApp.Shared.Domain.Permissions
  name: MyApp.Shared.Domain.Permissions
  href: api/MyApp.Shared.Domain.Permissions.html
  commentId: N:MyApp.Shared.Domain.Permissions
  fullName: MyApp.Shared.Domain.Permissions
  nameWithType: MyApp.Shared.Domain.Permissions
- uid: MyApp.Shared.Domain.Permissions.ActionEnum
  name: ActionEnum
  href: api/MyApp.Shared.Domain.Permissions.ActionEnum.html
  commentId: T:MyApp.Shared.Domain.Permissions.ActionEnum
  fullName: MyApp.Shared.Domain.Permissions.ActionEnum
  nameWithType: ActionEnum
- uid: MyApp.Shared.Domain.Permissions.ActionEnum.Create
  name: Create
  href: api/MyApp.Shared.Domain.Permissions.ActionEnum.html#MyApp_Shared_Domain_Permissions_ActionEnum_Create
  commentId: F:MyApp.Shared.Domain.Permissions.ActionEnum.Create
  fullName: MyApp.Shared.Domain.Permissions.ActionEnum.Create
  nameWithType: ActionEnum.Create
- uid: MyApp.Shared.Domain.Permissions.ActionEnum.Delete
  name: Delete
  href: api/MyApp.Shared.Domain.Permissions.ActionEnum.html#MyApp_Shared_Domain_Permissions_ActionEnum_Delete
  commentId: F:MyApp.Shared.Domain.Permissions.ActionEnum.Delete
  fullName: MyApp.Shared.Domain.Permissions.ActionEnum.Delete
  nameWithType: ActionEnum.Delete
- uid: MyApp.Shared.Domain.Permissions.ActionEnum.Execute
  name: Execute
  href: api/MyApp.Shared.Domain.Permissions.ActionEnum.html#MyApp_Shared_Domain_Permissions_ActionEnum_Execute
  commentId: F:MyApp.Shared.Domain.Permissions.ActionEnum.Execute
  fullName: MyApp.Shared.Domain.Permissions.ActionEnum.Execute
  nameWithType: ActionEnum.Execute
- uid: MyApp.Shared.Domain.Permissions.ActionEnum.Export
  name: Export
  href: api/MyApp.Shared.Domain.Permissions.ActionEnum.html#MyApp_Shared_Domain_Permissions_ActionEnum_Export
  commentId: F:MyApp.Shared.Domain.Permissions.ActionEnum.Export
  fullName: MyApp.Shared.Domain.Permissions.ActionEnum.Export
  nameWithType: ActionEnum.Export
- uid: MyApp.Shared.Domain.Permissions.ActionEnum.Import
  name: Import
  href: api/MyApp.Shared.Domain.Permissions.ActionEnum.html#MyApp_Shared_Domain_Permissions_ActionEnum_Import
  commentId: F:MyApp.Shared.Domain.Permissions.ActionEnum.Import
  fullName: MyApp.Shared.Domain.Permissions.ActionEnum.Import
  nameWithType: ActionEnum.Import
- uid: MyApp.Shared.Domain.Permissions.ActionEnum.Read
  name: Read
  href: api/MyApp.Shared.Domain.Permissions.ActionEnum.html#MyApp_Shared_Domain_Permissions_ActionEnum_Read
  commentId: F:MyApp.Shared.Domain.Permissions.ActionEnum.Read
  fullName: MyApp.Shared.Domain.Permissions.ActionEnum.Read
  nameWithType: ActionEnum.Read
- uid: MyApp.Shared.Domain.Permissions.ActionEnum.Update
  name: Update
  href: api/MyApp.Shared.Domain.Permissions.ActionEnum.html#MyApp_Shared_Domain_Permissions_ActionEnum_Update
  commentId: F:MyApp.Shared.Domain.Permissions.ActionEnum.Update
  fullName: MyApp.Shared.Domain.Permissions.ActionEnum.Update
  nameWithType: ActionEnum.Update
- uid: MyApp.Shared.Domain.Permissions.ModuleEnum
  name: ModuleEnum
  href: api/MyApp.Shared.Domain.Permissions.ModuleEnum.html
  commentId: T:MyApp.Shared.Domain.Permissions.ModuleEnum
  fullName: MyApp.Shared.Domain.Permissions.ModuleEnum
  nameWithType: ModuleEnum
- uid: MyApp.Shared.Domain.Permissions.ModuleEnum.Auth
  name: Auth
  href: api/MyApp.Shared.Domain.Permissions.ModuleEnum.html#MyApp_Shared_Domain_Permissions_ModuleEnum_Auth
  commentId: F:MyApp.Shared.Domain.Permissions.ModuleEnum.Auth
  fullName: MyApp.Shared.Domain.Permissions.ModuleEnum.Auth
  nameWithType: ModuleEnum.Auth
- uid: MyApp.Shared.Domain.Permissions.ModuleEnum.Billing
  name: Billing
  href: api/MyApp.Shared.Domain.Permissions.ModuleEnum.html#MyApp_Shared_Domain_Permissions_ModuleEnum_Billing
  commentId: F:MyApp.Shared.Domain.Permissions.ModuleEnum.Billing
  fullName: MyApp.Shared.Domain.Permissions.ModuleEnum.Billing
  nameWithType: ModuleEnum.Billing
- uid: MyApp.Shared.Domain.Permissions.ModuleEnum.Inventory
  name: Inventory
  href: api/MyApp.Shared.Domain.Permissions.ModuleEnum.html#MyApp_Shared_Domain_Permissions_ModuleEnum_Inventory
  commentId: F:MyApp.Shared.Domain.Permissions.ModuleEnum.Inventory
  fullName: MyApp.Shared.Domain.Permissions.ModuleEnum.Inventory
  nameWithType: ModuleEnum.Inventory
- uid: MyApp.Shared.Domain.Permissions.ModuleEnum.Notification
  name: Notification
  href: api/MyApp.Shared.Domain.Permissions.ModuleEnum.html#MyApp_Shared_Domain_Permissions_ModuleEnum_Notification
  commentId: F:MyApp.Shared.Domain.Permissions.ModuleEnum.Notification
  fullName: MyApp.Shared.Domain.Permissions.ModuleEnum.Notification
  nameWithType: ModuleEnum.Notification
- uid: MyApp.Shared.Domain.Permissions.ModuleEnum.Orders
  name: Orders
  href: api/MyApp.Shared.Domain.Permissions.ModuleEnum.html#MyApp_Shared_Domain_Permissions_ModuleEnum_Orders
  commentId: F:MyApp.Shared.Domain.Permissions.ModuleEnum.Orders
  fullName: MyApp.Shared.Domain.Permissions.ModuleEnum.Orders
  nameWithType: ModuleEnum.Orders
- uid: MyApp.Shared.Domain.Permissions.ModuleEnum.Purchasing
  name: Purchasing
  href: api/MyApp.Shared.Domain.Permissions.ModuleEnum.html#MyApp_Shared_Domain_Permissions_ModuleEnum_Purchasing
  commentId: F:MyApp.Shared.Domain.Permissions.ModuleEnum.Purchasing
  fullName: MyApp.Shared.Domain.Permissions.ModuleEnum.Purchasing
  nameWithType: ModuleEnum.Purchasing
- uid: MyApp.Shared.Domain.Permissions.ModuleEnum.Sales
  name: Sales
  href: api/MyApp.Shared.Domain.Permissions.ModuleEnum.html#MyApp_Shared_Domain_Permissions_ModuleEnum_Sales
  commentId: F:MyApp.Shared.Domain.Permissions.ModuleEnum.Sales
  fullName: MyApp.Shared.Domain.Permissions.ModuleEnum.Sales
  nameWithType: ModuleEnum.Sales
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants
  name: PermissionConstants
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.html
  commentId: T:MyApp.Shared.Domain.Permissions.PermissionConstants
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants
  nameWithType: PermissionConstants
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Auth
  name: PermissionConstants.Auth
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Auth.html
  commentId: T:MyApp.Shared.Domain.Permissions.PermissionConstants.Auth
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Auth
  nameWithType: PermissionConstants.Auth
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Auth.All
  name: All
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Auth.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Auth_All
  commentId: P:MyApp.Shared.Domain.Permissions.PermissionConstants.Auth.All
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Auth.All
  nameWithType: PermissionConstants.Auth.All
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Auth.All*
  name: All
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Auth.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Auth_All_
  commentId: Overload:MyApp.Shared.Domain.Permissions.PermissionConstants.Auth.All
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Auth.All
  nameWithType: PermissionConstants.Auth.All
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Auth.Create
  name: Create
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Auth.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Auth_Create
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Auth.Create
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Auth.Create
  nameWithType: PermissionConstants.Auth.Create
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Auth.Delete
  name: Delete
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Auth.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Auth_Delete
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Auth.Delete
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Auth.Delete
  nameWithType: PermissionConstants.Auth.Delete
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Auth.Execute
  name: Execute
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Auth.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Auth_Execute
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Auth.Execute
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Auth.Execute
  nameWithType: PermissionConstants.Auth.Execute
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Auth.Export
  name: Export
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Auth.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Auth_Export
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Auth.Export
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Auth.Export
  nameWithType: PermissionConstants.Auth.Export
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Auth.Import
  name: Import
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Auth.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Auth_Import
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Auth.Import
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Auth.Import
  nameWithType: PermissionConstants.Auth.Import
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Auth.Read
  name: Read
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Auth.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Auth_Read
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Auth.Read
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Auth.Read
  nameWithType: PermissionConstants.Auth.Read
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Auth.Update
  name: Update
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Auth.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Auth_Update
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Auth.Update
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Auth.Update
  nameWithType: PermissionConstants.Auth.Update
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Billing
  name: PermissionConstants.Billing
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Billing.html
  commentId: T:MyApp.Shared.Domain.Permissions.PermissionConstants.Billing
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Billing
  nameWithType: PermissionConstants.Billing
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Billing.All
  name: All
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Billing.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Billing_All
  commentId: P:MyApp.Shared.Domain.Permissions.PermissionConstants.Billing.All
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Billing.All
  nameWithType: PermissionConstants.Billing.All
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Billing.All*
  name: All
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Billing.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Billing_All_
  commentId: Overload:MyApp.Shared.Domain.Permissions.PermissionConstants.Billing.All
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Billing.All
  nameWithType: PermissionConstants.Billing.All
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Billing.Create
  name: Create
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Billing.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Billing_Create
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Billing.Create
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Billing.Create
  nameWithType: PermissionConstants.Billing.Create
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Billing.Delete
  name: Delete
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Billing.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Billing_Delete
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Billing.Delete
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Billing.Delete
  nameWithType: PermissionConstants.Billing.Delete
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Billing.Execute
  name: Execute
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Billing.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Billing_Execute
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Billing.Execute
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Billing.Execute
  nameWithType: PermissionConstants.Billing.Execute
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Billing.Export
  name: Export
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Billing.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Billing_Export
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Billing.Export
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Billing.Export
  nameWithType: PermissionConstants.Billing.Export
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Billing.Import
  name: Import
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Billing.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Billing_Import
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Billing.Import
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Billing.Import
  nameWithType: PermissionConstants.Billing.Import
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Billing.Read
  name: Read
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Billing.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Billing_Read
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Billing.Read
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Billing.Read
  nameWithType: PermissionConstants.Billing.Read
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Billing.Update
  name: Update
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Billing.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Billing_Update
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Billing.Update
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Billing.Update
  nameWithType: PermissionConstants.Billing.Update
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Create(MyApp.Shared.Domain.Permissions.ModuleEnum,MyApp.Shared.Domain.Permissions.ActionEnum)
  name: Create(ModuleEnum, ActionEnum)
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Create_MyApp_Shared_Domain_Permissions_ModuleEnum_MyApp_Shared_Domain_Permissions_ActionEnum_
  commentId: M:MyApp.Shared.Domain.Permissions.PermissionConstants.Create(MyApp.Shared.Domain.Permissions.ModuleEnum,MyApp.Shared.Domain.Permissions.ActionEnum)
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Create(MyApp.Shared.Domain.Permissions.ModuleEnum, MyApp.Shared.Domain.Permissions.ActionEnum)
  nameWithType: PermissionConstants.Create(ModuleEnum, ActionEnum)
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Create*
  name: Create
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Create_
  commentId: Overload:MyApp.Shared.Domain.Permissions.PermissionConstants.Create
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Create
  nameWithType: PermissionConstants.Create
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.GetAction(System.String)
  name: GetAction(string)
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.html#MyApp_Shared_Domain_Permissions_PermissionConstants_GetAction_System_String_
  commentId: M:MyApp.Shared.Domain.Permissions.PermissionConstants.GetAction(System.String)
  name.vb: GetAction(String)
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.GetAction(string)
  fullName.vb: MyApp.Shared.Domain.Permissions.PermissionConstants.GetAction(String)
  nameWithType: PermissionConstants.GetAction(string)
  nameWithType.vb: PermissionConstants.GetAction(String)
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.GetAction*
  name: GetAction
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.html#MyApp_Shared_Domain_Permissions_PermissionConstants_GetAction_
  commentId: Overload:MyApp.Shared.Domain.Permissions.PermissionConstants.GetAction
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.GetAction
  nameWithType: PermissionConstants.GetAction
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.GetAllPermissions
  name: GetAllPermissions()
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.html#MyApp_Shared_Domain_Permissions_PermissionConstants_GetAllPermissions
  commentId: M:MyApp.Shared.Domain.Permissions.PermissionConstants.GetAllPermissions
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.GetAllPermissions()
  nameWithType: PermissionConstants.GetAllPermissions()
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.GetAllPermissions*
  name: GetAllPermissions
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.html#MyApp_Shared_Domain_Permissions_PermissionConstants_GetAllPermissions_
  commentId: Overload:MyApp.Shared.Domain.Permissions.PermissionConstants.GetAllPermissions
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.GetAllPermissions
  nameWithType: PermissionConstants.GetAllPermissions
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.GetModule(System.String)
  name: GetModule(string)
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.html#MyApp_Shared_Domain_Permissions_PermissionConstants_GetModule_System_String_
  commentId: M:MyApp.Shared.Domain.Permissions.PermissionConstants.GetModule(System.String)
  name.vb: GetModule(String)
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.GetModule(string)
  fullName.vb: MyApp.Shared.Domain.Permissions.PermissionConstants.GetModule(String)
  nameWithType: PermissionConstants.GetModule(string)
  nameWithType.vb: PermissionConstants.GetModule(String)
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.GetModule*
  name: GetModule
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.html#MyApp_Shared_Domain_Permissions_PermissionConstants_GetModule_
  commentId: Overload:MyApp.Shared.Domain.Permissions.PermissionConstants.GetModule
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.GetModule
  nameWithType: PermissionConstants.GetModule
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.GetModulePermissions(MyApp.Shared.Domain.Permissions.ModuleEnum)
  name: GetModulePermissions(ModuleEnum)
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.html#MyApp_Shared_Domain_Permissions_PermissionConstants_GetModulePermissions_MyApp_Shared_Domain_Permissions_ModuleEnum_
  commentId: M:MyApp.Shared.Domain.Permissions.PermissionConstants.GetModulePermissions(MyApp.Shared.Domain.Permissions.ModuleEnum)
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.GetModulePermissions(MyApp.Shared.Domain.Permissions.ModuleEnum)
  nameWithType: PermissionConstants.GetModulePermissions(ModuleEnum)
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.GetModulePermissions*
  name: GetModulePermissions
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.html#MyApp_Shared_Domain_Permissions_PermissionConstants_GetModulePermissions_
  commentId: Overload:MyApp.Shared.Domain.Permissions.PermissionConstants.GetModulePermissions
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.GetModulePermissions
  nameWithType: PermissionConstants.GetModulePermissions
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Inventory
  name: PermissionConstants.Inventory
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Inventory.html
  commentId: T:MyApp.Shared.Domain.Permissions.PermissionConstants.Inventory
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Inventory
  nameWithType: PermissionConstants.Inventory
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Inventory.All
  name: All
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Inventory.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Inventory_All
  commentId: P:MyApp.Shared.Domain.Permissions.PermissionConstants.Inventory.All
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Inventory.All
  nameWithType: PermissionConstants.Inventory.All
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Inventory.All*
  name: All
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Inventory.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Inventory_All_
  commentId: Overload:MyApp.Shared.Domain.Permissions.PermissionConstants.Inventory.All
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Inventory.All
  nameWithType: PermissionConstants.Inventory.All
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Inventory.Delete
  name: Delete
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Inventory.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Inventory_Delete
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Inventory.Delete
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Inventory.Delete
  nameWithType: PermissionConstants.Inventory.Delete
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Inventory.Execute
  name: Execute
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Inventory.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Inventory_Execute
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Inventory.Execute
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Inventory.Execute
  nameWithType: PermissionConstants.Inventory.Execute
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Inventory.Export
  name: Export
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Inventory.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Inventory_Export
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Inventory.Export
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Inventory.Export
  nameWithType: PermissionConstants.Inventory.Export
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Inventory.Import
  name: Import
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Inventory.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Inventory_Import
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Inventory.Import
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Inventory.Import
  nameWithType: PermissionConstants.Inventory.Import
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Inventory.Read
  name: Read
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Inventory.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Inventory_Read
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Inventory.Read
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Inventory.Read
  nameWithType: PermissionConstants.Inventory.Read
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Inventory.Write
  name: Write
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Inventory.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Inventory_Write
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Inventory.Write
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Inventory.Write
  nameWithType: PermissionConstants.Inventory.Write
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Notification
  name: PermissionConstants.Notification
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Notification.html
  commentId: T:MyApp.Shared.Domain.Permissions.PermissionConstants.Notification
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Notification
  nameWithType: PermissionConstants.Notification
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Notification.All
  name: All
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Notification.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Notification_All
  commentId: P:MyApp.Shared.Domain.Permissions.PermissionConstants.Notification.All
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Notification.All
  nameWithType: PermissionConstants.Notification.All
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Notification.All*
  name: All
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Notification.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Notification_All_
  commentId: Overload:MyApp.Shared.Domain.Permissions.PermissionConstants.Notification.All
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Notification.All
  nameWithType: PermissionConstants.Notification.All
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Notification.Create
  name: Create
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Notification.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Notification_Create
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Notification.Create
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Notification.Create
  nameWithType: PermissionConstants.Notification.Create
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Notification.Delete
  name: Delete
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Notification.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Notification_Delete
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Notification.Delete
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Notification.Delete
  nameWithType: PermissionConstants.Notification.Delete
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Notification.Execute
  name: Execute
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Notification.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Notification_Execute
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Notification.Execute
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Notification.Execute
  nameWithType: PermissionConstants.Notification.Execute
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Notification.Export
  name: Export
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Notification.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Notification_Export
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Notification.Export
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Notification.Export
  nameWithType: PermissionConstants.Notification.Export
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Notification.Import
  name: Import
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Notification.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Notification_Import
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Notification.Import
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Notification.Import
  nameWithType: PermissionConstants.Notification.Import
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Notification.Read
  name: Read
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Notification.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Notification_Read
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Notification.Read
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Notification.Read
  nameWithType: PermissionConstants.Notification.Read
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Notification.Update
  name: Update
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Notification.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Notification_Update
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Notification.Update
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Notification.Update
  nameWithType: PermissionConstants.Notification.Update
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Orders
  name: PermissionConstants.Orders
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Orders.html
  commentId: T:MyApp.Shared.Domain.Permissions.PermissionConstants.Orders
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Orders
  nameWithType: PermissionConstants.Orders
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Orders.All
  name: All
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Orders.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Orders_All
  commentId: P:MyApp.Shared.Domain.Permissions.PermissionConstants.Orders.All
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Orders.All
  nameWithType: PermissionConstants.Orders.All
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Orders.All*
  name: All
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Orders.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Orders_All_
  commentId: Overload:MyApp.Shared.Domain.Permissions.PermissionConstants.Orders.All
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Orders.All
  nameWithType: PermissionConstants.Orders.All
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Orders.Create
  name: Create
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Orders.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Orders_Create
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Orders.Create
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Orders.Create
  nameWithType: PermissionConstants.Orders.Create
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Orders.Delete
  name: Delete
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Orders.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Orders_Delete
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Orders.Delete
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Orders.Delete
  nameWithType: PermissionConstants.Orders.Delete
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Orders.Execute
  name: Execute
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Orders.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Orders_Execute
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Orders.Execute
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Orders.Execute
  nameWithType: PermissionConstants.Orders.Execute
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Orders.Export
  name: Export
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Orders.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Orders_Export
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Orders.Export
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Orders.Export
  nameWithType: PermissionConstants.Orders.Export
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Orders.Import
  name: Import
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Orders.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Orders_Import
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Orders.Import
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Orders.Import
  nameWithType: PermissionConstants.Orders.Import
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Orders.Read
  name: Read
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Orders.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Orders_Read
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Orders.Read
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Orders.Read
  nameWithType: PermissionConstants.Orders.Read
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Orders.Update
  name: Update
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Orders.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Orders_Update
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Orders.Update
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Orders.Update
  nameWithType: PermissionConstants.Orders.Update
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions
  name: PermissionConstants.Permissions
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions.html
  commentId: T:MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions
  nameWithType: PermissionConstants.Permissions
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions.All
  name: All
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Permissions_All
  commentId: P:MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions.All
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions.All
  nameWithType: PermissionConstants.Permissions.All
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions.All*
  name: All
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Permissions_All_
  commentId: Overload:MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions.All
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions.All
  nameWithType: PermissionConstants.Permissions.All
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions.Create
  name: Create
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Permissions_Create
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions.Create
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions.Create
  nameWithType: PermissionConstants.Permissions.Create
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions.Delete
  name: Delete
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Permissions_Delete
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions.Delete
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions.Delete
  nameWithType: PermissionConstants.Permissions.Delete
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions.Execute
  name: Execute
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Permissions_Execute
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions.Execute
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions.Execute
  nameWithType: PermissionConstants.Permissions.Execute
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions.Export
  name: Export
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Permissions_Export
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions.Export
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions.Export
  nameWithType: PermissionConstants.Permissions.Export
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions.Import
  name: Import
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Permissions_Import
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions.Import
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions.Import
  nameWithType: PermissionConstants.Permissions.Import
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions.Read
  name: Read
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Permissions_Read
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions.Read
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions.Read
  nameWithType: PermissionConstants.Permissions.Read
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions.Update
  name: Update
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Permissions_Update
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions.Update
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Permissions.Update
  nameWithType: PermissionConstants.Permissions.Update
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing
  name: PermissionConstants.Purchasing
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing.html
  commentId: T:MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing
  nameWithType: PermissionConstants.Purchasing
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing.All
  name: All
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Purchasing_All
  commentId: P:MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing.All
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing.All
  nameWithType: PermissionConstants.Purchasing.All
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing.All*
  name: All
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Purchasing_All_
  commentId: Overload:MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing.All
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing.All
  nameWithType: PermissionConstants.Purchasing.All
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing.Create
  name: Create
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Purchasing_Create
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing.Create
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing.Create
  nameWithType: PermissionConstants.Purchasing.Create
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing.Delete
  name: Delete
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Purchasing_Delete
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing.Delete
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing.Delete
  nameWithType: PermissionConstants.Purchasing.Delete
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing.Execute
  name: Execute
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Purchasing_Execute
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing.Execute
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing.Execute
  nameWithType: PermissionConstants.Purchasing.Execute
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing.Export
  name: Export
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Purchasing_Export
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing.Export
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing.Export
  nameWithType: PermissionConstants.Purchasing.Export
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing.Import
  name: Import
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Purchasing_Import
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing.Import
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing.Import
  nameWithType: PermissionConstants.Purchasing.Import
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing.Read
  name: Read
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Purchasing_Read
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing.Read
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing.Read
  nameWithType: PermissionConstants.Purchasing.Read
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing.Update
  name: Update
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Purchasing_Update
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing.Update
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Purchasing.Update
  nameWithType: PermissionConstants.Purchasing.Update
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Roles
  name: PermissionConstants.Roles
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Roles.html
  commentId: T:MyApp.Shared.Domain.Permissions.PermissionConstants.Roles
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Roles
  nameWithType: PermissionConstants.Roles
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Roles.All
  name: All
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Roles.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Roles_All
  commentId: P:MyApp.Shared.Domain.Permissions.PermissionConstants.Roles.All
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Roles.All
  nameWithType: PermissionConstants.Roles.All
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Roles.All*
  name: All
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Roles.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Roles_All_
  commentId: Overload:MyApp.Shared.Domain.Permissions.PermissionConstants.Roles.All
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Roles.All
  nameWithType: PermissionConstants.Roles.All
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Roles.Create
  name: Create
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Roles.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Roles_Create
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Roles.Create
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Roles.Create
  nameWithType: PermissionConstants.Roles.Create
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Roles.Delete
  name: Delete
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Roles.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Roles_Delete
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Roles.Delete
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Roles.Delete
  nameWithType: PermissionConstants.Roles.Delete
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Roles.Execute
  name: Execute
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Roles.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Roles_Execute
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Roles.Execute
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Roles.Execute
  nameWithType: PermissionConstants.Roles.Execute
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Roles.Export
  name: Export
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Roles.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Roles_Export
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Roles.Export
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Roles.Export
  nameWithType: PermissionConstants.Roles.Export
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Roles.Import
  name: Import
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Roles.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Roles_Import
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Roles.Import
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Roles.Import
  nameWithType: PermissionConstants.Roles.Import
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Roles.Read
  name: Read
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Roles.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Roles_Read
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Roles.Read
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Roles.Read
  nameWithType: PermissionConstants.Roles.Read
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Roles.Update
  name: Update
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Roles.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Roles_Update
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Roles.Update
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Roles.Update
  nameWithType: PermissionConstants.Roles.Update
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Sales
  name: PermissionConstants.Sales
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Sales.html
  commentId: T:MyApp.Shared.Domain.Permissions.PermissionConstants.Sales
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Sales
  nameWithType: PermissionConstants.Sales
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Sales.All
  name: All
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Sales.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Sales_All
  commentId: P:MyApp.Shared.Domain.Permissions.PermissionConstants.Sales.All
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Sales.All
  nameWithType: PermissionConstants.Sales.All
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Sales.All*
  name: All
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Sales.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Sales_All_
  commentId: Overload:MyApp.Shared.Domain.Permissions.PermissionConstants.Sales.All
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Sales.All
  nameWithType: PermissionConstants.Sales.All
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Sales.Create
  name: Create
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Sales.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Sales_Create
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Sales.Create
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Sales.Create
  nameWithType: PermissionConstants.Sales.Create
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Sales.Delete
  name: Delete
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Sales.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Sales_Delete
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Sales.Delete
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Sales.Delete
  nameWithType: PermissionConstants.Sales.Delete
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Sales.Execute
  name: Execute
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Sales.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Sales_Execute
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Sales.Execute
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Sales.Execute
  nameWithType: PermissionConstants.Sales.Execute
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Sales.Export
  name: Export
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Sales.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Sales_Export
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Sales.Export
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Sales.Export
  nameWithType: PermissionConstants.Sales.Export
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Sales.Import
  name: Import
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Sales.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Sales_Import
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Sales.Import
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Sales.Import
  nameWithType: PermissionConstants.Sales.Import
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Sales.Read
  name: Read
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Sales.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Sales_Read
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Sales.Read
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Sales.Read
  nameWithType: PermissionConstants.Sales.Read
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Sales.Update
  name: Update
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Sales.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Sales_Update
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Sales.Update
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Sales.Update
  nameWithType: PermissionConstants.Sales.Update
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Users
  name: PermissionConstants.Users
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Users.html
  commentId: T:MyApp.Shared.Domain.Permissions.PermissionConstants.Users
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Users
  nameWithType: PermissionConstants.Users
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Users.All
  name: All
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Users.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Users_All
  commentId: P:MyApp.Shared.Domain.Permissions.PermissionConstants.Users.All
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Users.All
  nameWithType: PermissionConstants.Users.All
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Users.All*
  name: All
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Users.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Users_All_
  commentId: Overload:MyApp.Shared.Domain.Permissions.PermissionConstants.Users.All
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Users.All
  nameWithType: PermissionConstants.Users.All
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Users.Create
  name: Create
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Users.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Users_Create
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Users.Create
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Users.Create
  nameWithType: PermissionConstants.Users.Create
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Users.Delete
  name: Delete
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Users.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Users_Delete
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Users.Delete
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Users.Delete
  nameWithType: PermissionConstants.Users.Delete
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Users.Execute
  name: Execute
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Users.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Users_Execute
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Users.Execute
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Users.Execute
  nameWithType: PermissionConstants.Users.Execute
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Users.Export
  name: Export
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Users.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Users_Export
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Users.Export
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Users.Export
  nameWithType: PermissionConstants.Users.Export
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Users.Import
  name: Import
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Users.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Users_Import
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Users.Import
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Users.Import
  nameWithType: PermissionConstants.Users.Import
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Users.Read
  name: Read
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Users.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Users_Read
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Users.Read
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Users.Read
  nameWithType: PermissionConstants.Users.Read
- uid: MyApp.Shared.Domain.Permissions.PermissionConstants.Users.Update
  name: Update
  href: api/MyApp.Shared.Domain.Permissions.PermissionConstants.Users.html#MyApp_Shared_Domain_Permissions_PermissionConstants_Users_Update
  commentId: F:MyApp.Shared.Domain.Permissions.PermissionConstants.Users.Update
  fullName: MyApp.Shared.Domain.Permissions.PermissionConstants.Users.Update
  nameWithType: PermissionConstants.Users.Update
- uid: MyApp.Shared.Domain.Permissions.PermissionEnum
  name: PermissionEnum
  href: api/MyApp.Shared.Domain.Permissions.PermissionEnum.html
  commentId: T:MyApp.Shared.Domain.Permissions.PermissionEnum
  fullName: MyApp.Shared.Domain.Permissions.PermissionEnum
  nameWithType: PermissionEnum
- uid: MyApp.Shared.Domain.Permissions.PermissionEnum.Action
  name: Action
  href: api/MyApp.Shared.Domain.Permissions.PermissionEnum.html#MyApp_Shared_Domain_Permissions_PermissionEnum_Action
  commentId: P:MyApp.Shared.Domain.Permissions.PermissionEnum.Action
  fullName: MyApp.Shared.Domain.Permissions.PermissionEnum.Action
  nameWithType: PermissionEnum.Action
- uid: MyApp.Shared.Domain.Permissions.PermissionEnum.Action*
  name: Action
  href: api/MyApp.Shared.Domain.Permissions.PermissionEnum.html#MyApp_Shared_Domain_Permissions_PermissionEnum_Action_
  commentId: Overload:MyApp.Shared.Domain.Permissions.PermissionEnum.Action
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Permissions.PermissionEnum.Action
  nameWithType: PermissionEnum.Action
- uid: MyApp.Shared.Domain.Permissions.PermissionEnum.Module
  name: Module
  href: api/MyApp.Shared.Domain.Permissions.PermissionEnum.html#MyApp_Shared_Domain_Permissions_PermissionEnum_Module
  commentId: P:MyApp.Shared.Domain.Permissions.PermissionEnum.Module
  fullName: MyApp.Shared.Domain.Permissions.PermissionEnum.Module
  nameWithType: PermissionEnum.Module
- uid: MyApp.Shared.Domain.Permissions.PermissionEnum.Module*
  name: Module
  href: api/MyApp.Shared.Domain.Permissions.PermissionEnum.html#MyApp_Shared_Domain_Permissions_PermissionEnum_Module_
  commentId: Overload:MyApp.Shared.Domain.Permissions.PermissionEnum.Module
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Permissions.PermissionEnum.Module
  nameWithType: PermissionEnum.Module
- uid: MyApp.Shared.Domain.Permissions.PermissionEnum.Parse(System.String)
  name: Parse(string)
  href: api/MyApp.Shared.Domain.Permissions.PermissionEnum.html#MyApp_Shared_Domain_Permissions_PermissionEnum_Parse_System_String_
  commentId: M:MyApp.Shared.Domain.Permissions.PermissionEnum.Parse(System.String)
  name.vb: Parse(String)
  fullName: MyApp.Shared.Domain.Permissions.PermissionEnum.Parse(string)
  fullName.vb: MyApp.Shared.Domain.Permissions.PermissionEnum.Parse(String)
  nameWithType: PermissionEnum.Parse(string)
  nameWithType.vb: PermissionEnum.Parse(String)
- uid: MyApp.Shared.Domain.Permissions.PermissionEnum.Parse*
  name: Parse
  href: api/MyApp.Shared.Domain.Permissions.PermissionEnum.html#MyApp_Shared_Domain_Permissions_PermissionEnum_Parse_
  commentId: Overload:MyApp.Shared.Domain.Permissions.PermissionEnum.Parse
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Permissions.PermissionEnum.Parse
  nameWithType: PermissionEnum.Parse
- uid: MyApp.Shared.Domain.Permissions.PermissionEnum.ToString
  name: ToString()
  href: api/MyApp.Shared.Domain.Permissions.PermissionEnum.html#MyApp_Shared_Domain_Permissions_PermissionEnum_ToString
  commentId: M:MyApp.Shared.Domain.Permissions.PermissionEnum.ToString
  fullName: MyApp.Shared.Domain.Permissions.PermissionEnum.ToString()
  nameWithType: PermissionEnum.ToString()
- uid: MyApp.Shared.Domain.Permissions.PermissionEnum.ToString*
  name: ToString
  href: api/MyApp.Shared.Domain.Permissions.PermissionEnum.html#MyApp_Shared_Domain_Permissions_PermissionEnum_ToString_
  commentId: Overload:MyApp.Shared.Domain.Permissions.PermissionEnum.ToString
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Permissions.PermissionEnum.ToString
  nameWithType: PermissionEnum.ToString
- uid: MyApp.Shared.Domain.Permissions.PermissionEnum.TryParse(System.String,MyApp.Shared.Domain.Permissions.PermissionEnum@)
  name: TryParse(string, out PermissionEnum?)
  href: api/MyApp.Shared.Domain.Permissions.PermissionEnum.html#MyApp_Shared_Domain_Permissions_PermissionEnum_TryParse_System_String_MyApp_Shared_Domain_Permissions_PermissionEnum__
  commentId: M:MyApp.Shared.Domain.Permissions.PermissionEnum.TryParse(System.String,MyApp.Shared.Domain.Permissions.PermissionEnum@)
  name.vb: TryParse(String, PermissionEnum)
  fullName: MyApp.Shared.Domain.Permissions.PermissionEnum.TryParse(string, out MyApp.Shared.Domain.Permissions.PermissionEnum?)
  fullName.vb: MyApp.Shared.Domain.Permissions.PermissionEnum.TryParse(String, MyApp.Shared.Domain.Permissions.PermissionEnum)
  nameWithType: PermissionEnum.TryParse(string, out PermissionEnum?)
  nameWithType.vb: PermissionEnum.TryParse(String, PermissionEnum)
- uid: MyApp.Shared.Domain.Permissions.PermissionEnum.TryParse*
  name: TryParse
  href: api/MyApp.Shared.Domain.Permissions.PermissionEnum.html#MyApp_Shared_Domain_Permissions_PermissionEnum_TryParse_
  commentId: Overload:MyApp.Shared.Domain.Permissions.PermissionEnum.TryParse
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Permissions.PermissionEnum.TryParse
  nameWithType: PermissionEnum.TryParse
- uid: MyApp.Shared.Domain.Repositories
  name: MyApp.Shared.Domain.Repositories
  href: api/MyApp.Shared.Domain.Repositories.html
  commentId: N:MyApp.Shared.Domain.Repositories
  fullName: MyApp.Shared.Domain.Repositories
  nameWithType: MyApp.Shared.Domain.Repositories
- uid: MyApp.Shared.Domain.Repositories.IRepository`2
  name: IRepository<TEntity, TKey>
  href: api/MyApp.Shared.Domain.Repositories.IRepository-2.html
  commentId: T:MyApp.Shared.Domain.Repositories.IRepository`2
  name.vb: IRepository(Of TEntity, TKey)
  fullName: MyApp.Shared.Domain.Repositories.IRepository<TEntity, TKey>
  fullName.vb: MyApp.Shared.Domain.Repositories.IRepository(Of TEntity, TKey)
  nameWithType: IRepository<TEntity, TKey>
  nameWithType.vb: IRepository(Of TEntity, TKey)
- uid: MyApp.Shared.Domain.Repositories.IRepository`2.AddAsync(`0)
  name: AddAsync(TEntity)
  href: api/MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_AddAsync__0_
  commentId: M:MyApp.Shared.Domain.Repositories.IRepository`2.AddAsync(`0)
  fullName: MyApp.Shared.Domain.Repositories.IRepository<TEntity, TKey>.AddAsync(TEntity)
  fullName.vb: MyApp.Shared.Domain.Repositories.IRepository(Of TEntity, TKey).AddAsync(TEntity)
  nameWithType: IRepository<TEntity, TKey>.AddAsync(TEntity)
  nameWithType.vb: IRepository(Of TEntity, TKey).AddAsync(TEntity)
- uid: MyApp.Shared.Domain.Repositories.IRepository`2.AddAsync*
  name: AddAsync
  href: api/MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_AddAsync_
  commentId: Overload:MyApp.Shared.Domain.Repositories.IRepository`2.AddAsync
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Repositories.IRepository<TEntity, TKey>.AddAsync
  fullName.vb: MyApp.Shared.Domain.Repositories.IRepository(Of TEntity, TKey).AddAsync
  nameWithType: IRepository<TEntity, TKey>.AddAsync
  nameWithType.vb: IRepository(Of TEntity, TKey).AddAsync
- uid: MyApp.Shared.Domain.Repositories.IRepository`2.DeleteAsync(`0)
  name: DeleteAsync(TEntity)
  href: api/MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_DeleteAsync__0_
  commentId: M:MyApp.Shared.Domain.Repositories.IRepository`2.DeleteAsync(`0)
  fullName: MyApp.Shared.Domain.Repositories.IRepository<TEntity, TKey>.DeleteAsync(TEntity)
  fullName.vb: MyApp.Shared.Domain.Repositories.IRepository(Of TEntity, TKey).DeleteAsync(TEntity)
  nameWithType: IRepository<TEntity, TKey>.DeleteAsync(TEntity)
  nameWithType.vb: IRepository(Of TEntity, TKey).DeleteAsync(TEntity)
- uid: MyApp.Shared.Domain.Repositories.IRepository`2.DeleteAsync*
  name: DeleteAsync
  href: api/MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_DeleteAsync_
  commentId: Overload:MyApp.Shared.Domain.Repositories.IRepository`2.DeleteAsync
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Repositories.IRepository<TEntity, TKey>.DeleteAsync
  fullName.vb: MyApp.Shared.Domain.Repositories.IRepository(Of TEntity, TKey).DeleteAsync
  nameWithType: IRepository<TEntity, TKey>.DeleteAsync
  nameWithType.vb: IRepository(Of TEntity, TKey).DeleteAsync
- uid: MyApp.Shared.Domain.Repositories.IRepository`2.GetAllAsync
  name: GetAllAsync()
  href: api/MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_GetAllAsync
  commentId: M:MyApp.Shared.Domain.Repositories.IRepository`2.GetAllAsync
  fullName: MyApp.Shared.Domain.Repositories.IRepository<TEntity, TKey>.GetAllAsync()
  fullName.vb: MyApp.Shared.Domain.Repositories.IRepository(Of TEntity, TKey).GetAllAsync()
  nameWithType: IRepository<TEntity, TKey>.GetAllAsync()
  nameWithType.vb: IRepository(Of TEntity, TKey).GetAllAsync()
- uid: MyApp.Shared.Domain.Repositories.IRepository`2.GetAllAsync*
  name: GetAllAsync
  href: api/MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_GetAllAsync_
  commentId: Overload:MyApp.Shared.Domain.Repositories.IRepository`2.GetAllAsync
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Repositories.IRepository<TEntity, TKey>.GetAllAsync
  fullName.vb: MyApp.Shared.Domain.Repositories.IRepository(Of TEntity, TKey).GetAllAsync
  nameWithType: IRepository<TEntity, TKey>.GetAllAsync
  nameWithType.vb: IRepository(Of TEntity, TKey).GetAllAsync
- uid: MyApp.Shared.Domain.Repositories.IRepository`2.GetAllPaginatedAsync(System.Int32,System.Int32)
  name: GetAllPaginatedAsync(int, int)
  href: api/MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_GetAllPaginatedAsync_System_Int32_System_Int32_
  commentId: M:MyApp.Shared.Domain.Repositories.IRepository`2.GetAllPaginatedAsync(System.Int32,System.Int32)
  name.vb: GetAllPaginatedAsync(Integer, Integer)
  fullName: MyApp.Shared.Domain.Repositories.IRepository<TEntity, TKey>.GetAllPaginatedAsync(int, int)
  fullName.vb: MyApp.Shared.Domain.Repositories.IRepository(Of TEntity, TKey).GetAllPaginatedAsync(Integer, Integer)
  nameWithType: IRepository<TEntity, TKey>.GetAllPaginatedAsync(int, int)
  nameWithType.vb: IRepository(Of TEntity, TKey).GetAllPaginatedAsync(Integer, Integer)
- uid: MyApp.Shared.Domain.Repositories.IRepository`2.GetAllPaginatedAsync*
  name: GetAllPaginatedAsync
  href: api/MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_GetAllPaginatedAsync_
  commentId: Overload:MyApp.Shared.Domain.Repositories.IRepository`2.GetAllPaginatedAsync
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Repositories.IRepository<TEntity, TKey>.GetAllPaginatedAsync
  fullName.vb: MyApp.Shared.Domain.Repositories.IRepository(Of TEntity, TKey).GetAllPaginatedAsync
  nameWithType: IRepository<TEntity, TKey>.GetAllPaginatedAsync
  nameWithType.vb: IRepository(Of TEntity, TKey).GetAllPaginatedAsync
- uid: MyApp.Shared.Domain.Repositories.IRepository`2.GetByIdAsync(`1)
  name: GetByIdAsync(TKey)
  href: api/MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_GetByIdAsync__1_
  commentId: M:MyApp.Shared.Domain.Repositories.IRepository`2.GetByIdAsync(`1)
  fullName: MyApp.Shared.Domain.Repositories.IRepository<TEntity, TKey>.GetByIdAsync(TKey)
  fullName.vb: MyApp.Shared.Domain.Repositories.IRepository(Of TEntity, TKey).GetByIdAsync(TKey)
  nameWithType: IRepository<TEntity, TKey>.GetByIdAsync(TKey)
  nameWithType.vb: IRepository(Of TEntity, TKey).GetByIdAsync(TKey)
- uid: MyApp.Shared.Domain.Repositories.IRepository`2.GetByIdAsync*
  name: GetByIdAsync
  href: api/MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_GetByIdAsync_
  commentId: Overload:MyApp.Shared.Domain.Repositories.IRepository`2.GetByIdAsync
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Repositories.IRepository<TEntity, TKey>.GetByIdAsync
  fullName.vb: MyApp.Shared.Domain.Repositories.IRepository(Of TEntity, TKey).GetByIdAsync
  nameWithType: IRepository<TEntity, TKey>.GetByIdAsync
  nameWithType.vb: IRepository(Of TEntity, TKey).GetByIdAsync
- uid: MyApp.Shared.Domain.Repositories.IRepository`2.UpdateAsync(`0)
  name: UpdateAsync(TEntity)
  href: api/MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_UpdateAsync__0_
  commentId: M:MyApp.Shared.Domain.Repositories.IRepository`2.UpdateAsync(`0)
  fullName: MyApp.Shared.Domain.Repositories.IRepository<TEntity, TKey>.UpdateAsync(TEntity)
  fullName.vb: MyApp.Shared.Domain.Repositories.IRepository(Of TEntity, TKey).UpdateAsync(TEntity)
  nameWithType: IRepository<TEntity, TKey>.UpdateAsync(TEntity)
  nameWithType.vb: IRepository(Of TEntity, TKey).UpdateAsync(TEntity)
- uid: MyApp.Shared.Domain.Repositories.IRepository`2.UpdateAsync*
  name: UpdateAsync
  href: api/MyApp.Shared.Domain.Repositories.IRepository-2.html#MyApp_Shared_Domain_Repositories_IRepository_2_UpdateAsync_
  commentId: Overload:MyApp.Shared.Domain.Repositories.IRepository`2.UpdateAsync
  isSpec: "True"
  fullName: MyApp.Shared.Domain.Repositories.IRepository<TEntity, TKey>.UpdateAsync
  fullName.vb: MyApp.Shared.Domain.Repositories.IRepository(Of TEntity, TKey).UpdateAsync
  nameWithType: IRepository<TEntity, TKey>.UpdateAsync
  nameWithType.vb: IRepository(Of TEntity, TKey).UpdateAsync
- uid: MyApp.Shared.Infrastructure.Caching
  name: MyApp.Shared.Infrastructure.Caching
  href: api/MyApp.Shared.Infrastructure.Caching.html
  commentId: N:MyApp.Shared.Infrastructure.Caching
  fullName: MyApp.Shared.Infrastructure.Caching
  nameWithType: MyApp.Shared.Infrastructure.Caching
- uid: MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper
  name: DistributedCacheWrapper
  href: api/MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.html
  commentId: T:MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper
  fullName: MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper
  nameWithType: DistributedCacheWrapper
- uid: MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.#ctor(Microsoft.Extensions.Caching.Distributed.IDistributedCache)
  name: DistributedCacheWrapper(IDistributedCache)
  href: api/MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.html#MyApp_Shared_Infrastructure_Caching_DistributedCacheWrapper__ctor_Microsoft_Extensions_Caching_Distributed_IDistributedCache_
  commentId: M:MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.#ctor(Microsoft.Extensions.Caching.Distributed.IDistributedCache)
  name.vb: New(IDistributedCache)
  fullName: MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.DistributedCacheWrapper(Microsoft.Extensions.Caching.Distributed.IDistributedCache)
  fullName.vb: MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.New(Microsoft.Extensions.Caching.Distributed.IDistributedCache)
  nameWithType: DistributedCacheWrapper.DistributedCacheWrapper(IDistributedCache)
  nameWithType.vb: DistributedCacheWrapper.New(IDistributedCache)
- uid: MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.#ctor*
  name: DistributedCacheWrapper
  href: api/MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.html#MyApp_Shared_Infrastructure_Caching_DistributedCacheWrapper__ctor_
  commentId: Overload:MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.DistributedCacheWrapper
  fullName.vb: MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.New
  nameWithType: DistributedCacheWrapper.DistributedCacheWrapper
  nameWithType.vb: DistributedCacheWrapper.New
- uid: MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.GetStateAsync*
  name: GetStateAsync
  href: api/MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.html#MyApp_Shared_Infrastructure_Caching_DistributedCacheWrapper_GetStateAsync_
  commentId: Overload:MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.GetStateAsync
  isSpec: "True"
  fullName: MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.GetStateAsync
  nameWithType: DistributedCacheWrapper.GetStateAsync
- uid: MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.GetStateAsync``1(System.String)
  name: GetStateAsync<T>(string)
  href: api/MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.html#MyApp_Shared_Infrastructure_Caching_DistributedCacheWrapper_GetStateAsync__1_System_String_
  commentId: M:MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.GetStateAsync``1(System.String)
  name.vb: GetStateAsync(Of T)(String)
  fullName: MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.GetStateAsync<T>(string)
  fullName.vb: MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.GetStateAsync(Of T)(String)
  nameWithType: DistributedCacheWrapper.GetStateAsync<T>(string)
  nameWithType.vb: DistributedCacheWrapper.GetStateAsync(Of T)(String)
- uid: MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.RemoveStateAsync(System.String)
  name: RemoveStateAsync(string)
  href: api/MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.html#MyApp_Shared_Infrastructure_Caching_DistributedCacheWrapper_RemoveStateAsync_System_String_
  commentId: M:MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.RemoveStateAsync(System.String)
  name.vb: RemoveStateAsync(String)
  fullName: MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.RemoveStateAsync(string)
  fullName.vb: MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.RemoveStateAsync(String)
  nameWithType: DistributedCacheWrapper.RemoveStateAsync(string)
  nameWithType.vb: DistributedCacheWrapper.RemoveStateAsync(String)
- uid: MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.RemoveStateAsync*
  name: RemoveStateAsync
  href: api/MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.html#MyApp_Shared_Infrastructure_Caching_DistributedCacheWrapper_RemoveStateAsync_
  commentId: Overload:MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.RemoveStateAsync
  isSpec: "True"
  fullName: MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.RemoveStateAsync
  nameWithType: DistributedCacheWrapper.RemoveStateAsync
- uid: MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.SaveStateAsync*
  name: SaveStateAsync
  href: api/MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.html#MyApp_Shared_Infrastructure_Caching_DistributedCacheWrapper_SaveStateAsync_
  commentId: Overload:MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.SaveStateAsync
  isSpec: "True"
  fullName: MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.SaveStateAsync
  nameWithType: DistributedCacheWrapper.SaveStateAsync
- uid: MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.SaveStateAsync``1(System.String,``0,System.Nullable{System.TimeSpan})
  name: SaveStateAsync<T>(string, T, TimeSpan?)
  href: api/MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.html#MyApp_Shared_Infrastructure_Caching_DistributedCacheWrapper_SaveStateAsync__1_System_String___0_System_Nullable_System_TimeSpan__
  commentId: M:MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.SaveStateAsync``1(System.String,``0,System.Nullable{System.TimeSpan})
  name.vb: SaveStateAsync(Of T)(String, T, TimeSpan?)
  fullName: MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.SaveStateAsync<T>(string, T, System.TimeSpan?)
  fullName.vb: MyApp.Shared.Infrastructure.Caching.DistributedCacheWrapper.SaveStateAsync(Of T)(String, T, System.TimeSpan?)
  nameWithType: DistributedCacheWrapper.SaveStateAsync<T>(string, T, TimeSpan?)
  nameWithType.vb: DistributedCacheWrapper.SaveStateAsync(Of T)(String, T, TimeSpan?)
- uid: MyApp.Shared.Infrastructure.Data
  name: MyApp.Shared.Infrastructure.Data
  href: api/MyApp.Shared.Infrastructure.Data.html
  commentId: N:MyApp.Shared.Infrastructure.Data
  fullName: MyApp.Shared.Infrastructure.Data
  nameWithType: MyApp.Shared.Infrastructure.Data
- uid: MyApp.Shared.Infrastructure.Data.AuditableDbContext
  name: AuditableDbContext
  href: api/MyApp.Shared.Infrastructure.Data.AuditableDbContext.html
  commentId: T:MyApp.Shared.Infrastructure.Data.AuditableDbContext
  fullName: MyApp.Shared.Infrastructure.Data.AuditableDbContext
  nameWithType: AuditableDbContext
- uid: MyApp.Shared.Infrastructure.Data.AuditableDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions)
  name: AuditableDbContext(DbContextOptions)
  href: api/MyApp.Shared.Infrastructure.Data.AuditableDbContext.html#MyApp_Shared_Infrastructure_Data_AuditableDbContext__ctor_Microsoft_EntityFrameworkCore_DbContextOptions_
  commentId: M:MyApp.Shared.Infrastructure.Data.AuditableDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions)
  name.vb: New(DbContextOptions)
  fullName: MyApp.Shared.Infrastructure.Data.AuditableDbContext.AuditableDbContext(Microsoft.EntityFrameworkCore.DbContextOptions)
  fullName.vb: MyApp.Shared.Infrastructure.Data.AuditableDbContext.New(Microsoft.EntityFrameworkCore.DbContextOptions)
  nameWithType: AuditableDbContext.AuditableDbContext(DbContextOptions)
  nameWithType.vb: AuditableDbContext.New(DbContextOptions)
- uid: MyApp.Shared.Infrastructure.Data.AuditableDbContext.#ctor*
  name: AuditableDbContext
  href: api/MyApp.Shared.Infrastructure.Data.AuditableDbContext.html#MyApp_Shared_Infrastructure_Data_AuditableDbContext__ctor_
  commentId: Overload:MyApp.Shared.Infrastructure.Data.AuditableDbContext.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Shared.Infrastructure.Data.AuditableDbContext.AuditableDbContext
  fullName.vb: MyApp.Shared.Infrastructure.Data.AuditableDbContext.New
  nameWithType: AuditableDbContext.AuditableDbContext
  nameWithType.vb: AuditableDbContext.New
- uid: MyApp.Shared.Infrastructure.Data.AuditableDbContext.SaveChangesAsync(System.Threading.CancellationToken)
  name: SaveChangesAsync(CancellationToken)
  href: api/MyApp.Shared.Infrastructure.Data.AuditableDbContext.html#MyApp_Shared_Infrastructure_Data_AuditableDbContext_SaveChangesAsync_System_Threading_CancellationToken_
  commentId: M:MyApp.Shared.Infrastructure.Data.AuditableDbContext.SaveChangesAsync(System.Threading.CancellationToken)
  fullName: MyApp.Shared.Infrastructure.Data.AuditableDbContext.SaveChangesAsync(System.Threading.CancellationToken)
  nameWithType: AuditableDbContext.SaveChangesAsync(CancellationToken)
- uid: MyApp.Shared.Infrastructure.Data.AuditableDbContext.SaveChangesAsync*
  name: SaveChangesAsync
  href: api/MyApp.Shared.Infrastructure.Data.AuditableDbContext.html#MyApp_Shared_Infrastructure_Data_AuditableDbContext_SaveChangesAsync_
  commentId: Overload:MyApp.Shared.Infrastructure.Data.AuditableDbContext.SaveChangesAsync
  isSpec: "True"
  fullName: MyApp.Shared.Infrastructure.Data.AuditableDbContext.SaveChangesAsync
  nameWithType: AuditableDbContext.SaveChangesAsync
- uid: MyApp.Shared.Infrastructure.Extensions
  name: MyApp.Shared.Infrastructure.Extensions
  href: api/MyApp.Shared.Infrastructure.Extensions.html
  commentId: N:MyApp.Shared.Infrastructure.Extensions
  fullName: MyApp.Shared.Infrastructure.Extensions
  nameWithType: MyApp.Shared.Infrastructure.Extensions
- uid: MyApp.Shared.Infrastructure.Extensions.HealthChecksExtensions
  name: HealthChecksExtensions
  href: api/MyApp.Shared.Infrastructure.Extensions.HealthChecksExtensions.html
  commentId: T:MyApp.Shared.Infrastructure.Extensions.HealthChecksExtensions
  fullName: MyApp.Shared.Infrastructure.Extensions.HealthChecksExtensions
  nameWithType: HealthChecksExtensions
- uid: MyApp.Shared.Infrastructure.Extensions.HealthChecksExtensions.AddCustomHealthChecks(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)
  name: AddCustomHealthChecks(IServiceCollection, string)
  href: api/MyApp.Shared.Infrastructure.Extensions.HealthChecksExtensions.html#MyApp_Shared_Infrastructure_Extensions_HealthChecksExtensions_AddCustomHealthChecks_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_String_
  commentId: M:MyApp.Shared.Infrastructure.Extensions.HealthChecksExtensions.AddCustomHealthChecks(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)
  name.vb: AddCustomHealthChecks(IServiceCollection, String)
  fullName: MyApp.Shared.Infrastructure.Extensions.HealthChecksExtensions.AddCustomHealthChecks(Microsoft.Extensions.DependencyInjection.IServiceCollection, string)
  fullName.vb: MyApp.Shared.Infrastructure.Extensions.HealthChecksExtensions.AddCustomHealthChecks(Microsoft.Extensions.DependencyInjection.IServiceCollection, String)
  nameWithType: HealthChecksExtensions.AddCustomHealthChecks(IServiceCollection, string)
  nameWithType.vb: HealthChecksExtensions.AddCustomHealthChecks(IServiceCollection, String)
- uid: MyApp.Shared.Infrastructure.Extensions.HealthChecksExtensions.AddCustomHealthChecks*
  name: AddCustomHealthChecks
  href: api/MyApp.Shared.Infrastructure.Extensions.HealthChecksExtensions.html#MyApp_Shared_Infrastructure_Extensions_HealthChecksExtensions_AddCustomHealthChecks_
  commentId: Overload:MyApp.Shared.Infrastructure.Extensions.HealthChecksExtensions.AddCustomHealthChecks
  isSpec: "True"
  fullName: MyApp.Shared.Infrastructure.Extensions.HealthChecksExtensions.AddCustomHealthChecks
  nameWithType: HealthChecksExtensions.AddCustomHealthChecks
- uid: MyApp.Shared.Infrastructure.Extensions.HealthChecksExtensions.UseCustomHealthChecks(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  name: UseCustomHealthChecks(IApplicationBuilder)
  href: api/MyApp.Shared.Infrastructure.Extensions.HealthChecksExtensions.html#MyApp_Shared_Infrastructure_Extensions_HealthChecksExtensions_UseCustomHealthChecks_Microsoft_AspNetCore_Builder_IApplicationBuilder_
  commentId: M:MyApp.Shared.Infrastructure.Extensions.HealthChecksExtensions.UseCustomHealthChecks(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  fullName: MyApp.Shared.Infrastructure.Extensions.HealthChecksExtensions.UseCustomHealthChecks(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  nameWithType: HealthChecksExtensions.UseCustomHealthChecks(IApplicationBuilder)
- uid: MyApp.Shared.Infrastructure.Extensions.HealthChecksExtensions.UseCustomHealthChecks*
  name: UseCustomHealthChecks
  href: api/MyApp.Shared.Infrastructure.Extensions.HealthChecksExtensions.html#MyApp_Shared_Infrastructure_Extensions_HealthChecksExtensions_UseCustomHealthChecks_
  commentId: Overload:MyApp.Shared.Infrastructure.Extensions.HealthChecksExtensions.UseCustomHealthChecks
  isSpec: "True"
  fullName: MyApp.Shared.Infrastructure.Extensions.HealthChecksExtensions.UseCustomHealthChecks
  nameWithType: HealthChecksExtensions.UseCustomHealthChecks
- uid: MyApp.Shared.Infrastructure.Extensions.JwtAuthenticationExtensions
  name: JwtAuthenticationExtensions
  href: api/MyApp.Shared.Infrastructure.Extensions.JwtAuthenticationExtensions.html
  commentId: T:MyApp.Shared.Infrastructure.Extensions.JwtAuthenticationExtensions
  fullName: MyApp.Shared.Infrastructure.Extensions.JwtAuthenticationExtensions
  nameWithType: JwtAuthenticationExtensions
- uid: MyApp.Shared.Infrastructure.Extensions.JwtAuthenticationExtensions.AddJwtAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  name: AddJwtAuthentication(IServiceCollection, IConfiguration)
  href: api/MyApp.Shared.Infrastructure.Extensions.JwtAuthenticationExtensions.html#MyApp_Shared_Infrastructure_Extensions_JwtAuthenticationExtensions_AddJwtAuthentication_Microsoft_Extensions_DependencyInjection_IServiceCollection_Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:MyApp.Shared.Infrastructure.Extensions.JwtAuthenticationExtensions.AddJwtAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  fullName: MyApp.Shared.Infrastructure.Extensions.JwtAuthenticationExtensions.AddJwtAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: JwtAuthenticationExtensions.AddJwtAuthentication(IServiceCollection, IConfiguration)
- uid: MyApp.Shared.Infrastructure.Extensions.JwtAuthenticationExtensions.AddJwtAuthentication*
  name: AddJwtAuthentication
  href: api/MyApp.Shared.Infrastructure.Extensions.JwtAuthenticationExtensions.html#MyApp_Shared_Infrastructure_Extensions_JwtAuthenticationExtensions_AddJwtAuthentication_
  commentId: Overload:MyApp.Shared.Infrastructure.Extensions.JwtAuthenticationExtensions.AddJwtAuthentication
  isSpec: "True"
  fullName: MyApp.Shared.Infrastructure.Extensions.JwtAuthenticationExtensions.AddJwtAuthentication
  nameWithType: JwtAuthenticationExtensions.AddJwtAuthentication
- uid: MyApp.Shared.Infrastructure.Repositories
  name: MyApp.Shared.Infrastructure.Repositories
  href: api/MyApp.Shared.Infrastructure.Repositories.html
  commentId: N:MyApp.Shared.Infrastructure.Repositories
  fullName: MyApp.Shared.Infrastructure.Repositories
  nameWithType: MyApp.Shared.Infrastructure.Repositories
- uid: MyApp.Shared.Infrastructure.Repositories.Repository`2
  name: Repository<TEntity, TKey>
  href: api/MyApp.Shared.Infrastructure.Repositories.Repository-2.html
  commentId: T:MyApp.Shared.Infrastructure.Repositories.Repository`2
  name.vb: Repository(Of TEntity, TKey)
  fullName: MyApp.Shared.Infrastructure.Repositories.Repository<TEntity, TKey>
  fullName.vb: MyApp.Shared.Infrastructure.Repositories.Repository(Of TEntity, TKey)
  nameWithType: Repository<TEntity, TKey>
  nameWithType.vb: Repository(Of TEntity, TKey)
- uid: MyApp.Shared.Infrastructure.Repositories.Repository`2.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  name: Repository(DbContext)
  href: api/MyApp.Shared.Infrastructure.Repositories.Repository-2.html#MyApp_Shared_Infrastructure_Repositories_Repository_2__ctor_Microsoft_EntityFrameworkCore_DbContext_
  commentId: M:MyApp.Shared.Infrastructure.Repositories.Repository`2.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  name.vb: New(DbContext)
  fullName: MyApp.Shared.Infrastructure.Repositories.Repository<TEntity, TKey>.Repository(Microsoft.EntityFrameworkCore.DbContext)
  fullName.vb: MyApp.Shared.Infrastructure.Repositories.Repository(Of TEntity, TKey).New(Microsoft.EntityFrameworkCore.DbContext)
  nameWithType: Repository<TEntity, TKey>.Repository(DbContext)
  nameWithType.vb: Repository(Of TEntity, TKey).New(DbContext)
- uid: MyApp.Shared.Infrastructure.Repositories.Repository`2.#ctor*
  name: Repository
  href: api/MyApp.Shared.Infrastructure.Repositories.Repository-2.html#MyApp_Shared_Infrastructure_Repositories_Repository_2__ctor_
  commentId: Overload:MyApp.Shared.Infrastructure.Repositories.Repository`2.#ctor
  isSpec: "True"
  name.vb: New
  fullName: MyApp.Shared.Infrastructure.Repositories.Repository<TEntity, TKey>.Repository
  fullName.vb: MyApp.Shared.Infrastructure.Repositories.Repository(Of TEntity, TKey).New
  nameWithType: Repository<TEntity, TKey>.Repository
  nameWithType.vb: Repository(Of TEntity, TKey).New
- uid: MyApp.Shared.Infrastructure.Repositories.Repository`2.AddAsync(`0)
  name: AddAsync(TEntity)
  href: api/MyApp.Shared.Infrastructure.Repositories.Repository-2.html#MyApp_Shared_Infrastructure_Repositories_Repository_2_AddAsync__0_
  commentId: M:MyApp.Shared.Infrastructure.Repositories.Repository`2.AddAsync(`0)
  fullName: MyApp.Shared.Infrastructure.Repositories.Repository<TEntity, TKey>.AddAsync(TEntity)
  fullName.vb: MyApp.Shared.Infrastructure.Repositories.Repository(Of TEntity, TKey).AddAsync(TEntity)
  nameWithType: Repository<TEntity, TKey>.AddAsync(TEntity)
  nameWithType.vb: Repository(Of TEntity, TKey).AddAsync(TEntity)
- uid: MyApp.Shared.Infrastructure.Repositories.Repository`2.AddAsync*
  name: AddAsync
  href: api/MyApp.Shared.Infrastructure.Repositories.Repository-2.html#MyApp_Shared_Infrastructure_Repositories_Repository_2_AddAsync_
  commentId: Overload:MyApp.Shared.Infrastructure.Repositories.Repository`2.AddAsync
  isSpec: "True"
  fullName: MyApp.Shared.Infrastructure.Repositories.Repository<TEntity, TKey>.AddAsync
  fullName.vb: MyApp.Shared.Infrastructure.Repositories.Repository(Of TEntity, TKey).AddAsync
  nameWithType: Repository<TEntity, TKey>.AddAsync
  nameWithType.vb: Repository(Of TEntity, TKey).AddAsync
- uid: MyApp.Shared.Infrastructure.Repositories.Repository`2.DeleteAsync(`0)
  name: DeleteAsync(TEntity)
  href: api/MyApp.Shared.Infrastructure.Repositories.Repository-2.html#MyApp_Shared_Infrastructure_Repositories_Repository_2_DeleteAsync__0_
  commentId: M:MyApp.Shared.Infrastructure.Repositories.Repository`2.DeleteAsync(`0)
  fullName: MyApp.Shared.Infrastructure.Repositories.Repository<TEntity, TKey>.DeleteAsync(TEntity)
  fullName.vb: MyApp.Shared.Infrastructure.Repositories.Repository(Of TEntity, TKey).DeleteAsync(TEntity)
  nameWithType: Repository<TEntity, TKey>.DeleteAsync(TEntity)
  nameWithType.vb: Repository(Of TEntity, TKey).DeleteAsync(TEntity)
- uid: MyApp.Shared.Infrastructure.Repositories.Repository`2.DeleteAsync*
  name: DeleteAsync
  href: api/MyApp.Shared.Infrastructure.Repositories.Repository-2.html#MyApp_Shared_Infrastructure_Repositories_Repository_2_DeleteAsync_
  commentId: Overload:MyApp.Shared.Infrastructure.Repositories.Repository`2.DeleteAsync
  isSpec: "True"
  fullName: MyApp.Shared.Infrastructure.Repositories.Repository<TEntity, TKey>.DeleteAsync
  fullName.vb: MyApp.Shared.Infrastructure.Repositories.Repository(Of TEntity, TKey).DeleteAsync
  nameWithType: Repository<TEntity, TKey>.DeleteAsync
  nameWithType.vb: Repository(Of TEntity, TKey).DeleteAsync
- uid: MyApp.Shared.Infrastructure.Repositories.Repository`2.GetAllAsync
  name: GetAllAsync()
  href: api/MyApp.Shared.Infrastructure.Repositories.Repository-2.html#MyApp_Shared_Infrastructure_Repositories_Repository_2_GetAllAsync
  commentId: M:MyApp.Shared.Infrastructure.Repositories.Repository`2.GetAllAsync
  fullName: MyApp.Shared.Infrastructure.Repositories.Repository<TEntity, TKey>.GetAllAsync()
  fullName.vb: MyApp.Shared.Infrastructure.Repositories.Repository(Of TEntity, TKey).GetAllAsync()
  nameWithType: Repository<TEntity, TKey>.GetAllAsync()
  nameWithType.vb: Repository(Of TEntity, TKey).GetAllAsync()
- uid: MyApp.Shared.Infrastructure.Repositories.Repository`2.GetAllAsync*
  name: GetAllAsync
  href: api/MyApp.Shared.Infrastructure.Repositories.Repository-2.html#MyApp_Shared_Infrastructure_Repositories_Repository_2_GetAllAsync_
  commentId: Overload:MyApp.Shared.Infrastructure.Repositories.Repository`2.GetAllAsync
  isSpec: "True"
  fullName: MyApp.Shared.Infrastructure.Repositories.Repository<TEntity, TKey>.GetAllAsync
  fullName.vb: MyApp.Shared.Infrastructure.Repositories.Repository(Of TEntity, TKey).GetAllAsync
  nameWithType: Repository<TEntity, TKey>.GetAllAsync
  nameWithType.vb: Repository(Of TEntity, TKey).GetAllAsync
- uid: MyApp.Shared.Infrastructure.Repositories.Repository`2.GetAllPaginatedAsync(System.Int32,System.Int32)
  name: GetAllPaginatedAsync(int, int)
  href: api/MyApp.Shared.Infrastructure.Repositories.Repository-2.html#MyApp_Shared_Infrastructure_Repositories_Repository_2_GetAllPaginatedAsync_System_Int32_System_Int32_
  commentId: M:MyApp.Shared.Infrastructure.Repositories.Repository`2.GetAllPaginatedAsync(System.Int32,System.Int32)
  name.vb: GetAllPaginatedAsync(Integer, Integer)
  fullName: MyApp.Shared.Infrastructure.Repositories.Repository<TEntity, TKey>.GetAllPaginatedAsync(int, int)
  fullName.vb: MyApp.Shared.Infrastructure.Repositories.Repository(Of TEntity, TKey).GetAllPaginatedAsync(Integer, Integer)
  nameWithType: Repository<TEntity, TKey>.GetAllPaginatedAsync(int, int)
  nameWithType.vb: Repository(Of TEntity, TKey).GetAllPaginatedAsync(Integer, Integer)
- uid: MyApp.Shared.Infrastructure.Repositories.Repository`2.GetAllPaginatedAsync*
  name: GetAllPaginatedAsync
  href: api/MyApp.Shared.Infrastructure.Repositories.Repository-2.html#MyApp_Shared_Infrastructure_Repositories_Repository_2_GetAllPaginatedAsync_
  commentId: Overload:MyApp.Shared.Infrastructure.Repositories.Repository`2.GetAllPaginatedAsync
  isSpec: "True"
  fullName: MyApp.Shared.Infrastructure.Repositories.Repository<TEntity, TKey>.GetAllPaginatedAsync
  fullName.vb: MyApp.Shared.Infrastructure.Repositories.Repository(Of TEntity, TKey).GetAllPaginatedAsync
  nameWithType: Repository<TEntity, TKey>.GetAllPaginatedAsync
  nameWithType.vb: Repository(Of TEntity, TKey).GetAllPaginatedAsync
- uid: MyApp.Shared.Infrastructure.Repositories.Repository`2.GetByIdAsync(`1)
  name: GetByIdAsync(TKey)
  href: api/MyApp.Shared.Infrastructure.Repositories.Repository-2.html#MyApp_Shared_Infrastructure_Repositories_Repository_2_GetByIdAsync__1_
  commentId: M:MyApp.Shared.Infrastructure.Repositories.Repository`2.GetByIdAsync(`1)
  fullName: MyApp.Shared.Infrastructure.Repositories.Repository<TEntity, TKey>.GetByIdAsync(TKey)
  fullName.vb: MyApp.Shared.Infrastructure.Repositories.Repository(Of TEntity, TKey).GetByIdAsync(TKey)
  nameWithType: Repository<TEntity, TKey>.GetByIdAsync(TKey)
  nameWithType.vb: Repository(Of TEntity, TKey).GetByIdAsync(TKey)
- uid: MyApp.Shared.Infrastructure.Repositories.Repository`2.GetByIdAsync*
  name: GetByIdAsync
  href: api/MyApp.Shared.Infrastructure.Repositories.Repository-2.html#MyApp_Shared_Infrastructure_Repositories_Repository_2_GetByIdAsync_
  commentId: Overload:MyApp.Shared.Infrastructure.Repositories.Repository`2.GetByIdAsync
  isSpec: "True"
  fullName: MyApp.Shared.Infrastructure.Repositories.Repository<TEntity, TKey>.GetByIdAsync
  fullName.vb: MyApp.Shared.Infrastructure.Repositories.Repository(Of TEntity, TKey).GetByIdAsync
  nameWithType: Repository<TEntity, TKey>.GetByIdAsync
  nameWithType.vb: Repository(Of TEntity, TKey).GetByIdAsync
- uid: MyApp.Shared.Infrastructure.Repositories.Repository`2.UpdateAsync(`0)
  name: UpdateAsync(TEntity)
  href: api/MyApp.Shared.Infrastructure.Repositories.Repository-2.html#MyApp_Shared_Infrastructure_Repositories_Repository_2_UpdateAsync__0_
  commentId: M:MyApp.Shared.Infrastructure.Repositories.Repository`2.UpdateAsync(`0)
  fullName: MyApp.Shared.Infrastructure.Repositories.Repository<TEntity, TKey>.UpdateAsync(TEntity)
  fullName.vb: MyApp.Shared.Infrastructure.Repositories.Repository(Of TEntity, TKey).UpdateAsync(TEntity)
  nameWithType: Repository<TEntity, TKey>.UpdateAsync(TEntity)
  nameWithType.vb: Repository(Of TEntity, TKey).UpdateAsync(TEntity)
- uid: MyApp.Shared.Infrastructure.Repositories.Repository`2.UpdateAsync*
  name: UpdateAsync
  href: api/MyApp.Shared.Infrastructure.Repositories.Repository-2.html#MyApp_Shared_Infrastructure_Repositories_Repository_2_UpdateAsync_
  commentId: Overload:MyApp.Shared.Infrastructure.Repositories.Repository`2.UpdateAsync
  isSpec: "True"
  fullName: MyApp.Shared.Infrastructure.Repositories.Repository<TEntity, TKey>.UpdateAsync
  fullName.vb: MyApp.Shared.Infrastructure.Repositories.Repository(Of TEntity, TKey).UpdateAsync
  nameWithType: Repository<TEntity, TKey>.UpdateAsync
  nameWithType.vb: Repository(Of TEntity, TKey).UpdateAsync
- uid: MyApp.Shared.Infrastructure.Repositories.Repository`2._dbContext
  name: _dbContext
  href: api/MyApp.Shared.Infrastructure.Repositories.Repository-2.html#MyApp_Shared_Infrastructure_Repositories_Repository_2__dbContext
  commentId: F:MyApp.Shared.Infrastructure.Repositories.Repository`2._dbContext
  fullName: MyApp.Shared.Infrastructure.Repositories.Repository<TEntity, TKey>._dbContext
  fullName.vb: MyApp.Shared.Infrastructure.Repositories.Repository(Of TEntity, TKey)._dbContext
  nameWithType: Repository<TEntity, TKey>._dbContext
  nameWithType.vb: Repository(Of TEntity, TKey)._dbContext
- uid: MyApp.Tests.Integration
  name: MyApp.Tests.Integration
  href: api/MyApp.Tests.Integration.html
  commentId: N:MyApp.Tests.Integration
  fullName: MyApp.Tests.Integration
  nameWithType: MyApp.Tests.Integration
- uid: MyApp.Tests.Integration.AuthIntegrationTests
  name: AuthIntegrationTests
  href: api/MyApp.Tests.Integration.AuthIntegrationTests.html
  commentId: T:MyApp.Tests.Integration.AuthIntegrationTests
  fullName: MyApp.Tests.Integration.AuthIntegrationTests
  nameWithType: AuthIntegrationTests
- uid: MyApp.Tests.Integration.AuthIntegrationTests.ExternalLoginCallback_WithoutAuthentication_ReturnsBadRequest
  name: ExternalLoginCallback_WithoutAuthentication_ReturnsBadRequest()
  href: api/MyApp.Tests.Integration.AuthIntegrationTests.html#MyApp_Tests_Integration_AuthIntegrationTests_ExternalLoginCallback_WithoutAuthentication_ReturnsBadRequest
  commentId: M:MyApp.Tests.Integration.AuthIntegrationTests.ExternalLoginCallback_WithoutAuthentication_ReturnsBadRequest
  fullName: MyApp.Tests.Integration.AuthIntegrationTests.ExternalLoginCallback_WithoutAuthentication_ReturnsBadRequest()
  nameWithType: AuthIntegrationTests.ExternalLoginCallback_WithoutAuthentication_ReturnsBadRequest()
- uid: MyApp.Tests.Integration.AuthIntegrationTests.ExternalLoginCallback_WithoutAuthentication_ReturnsBadRequest*
  name: ExternalLoginCallback_WithoutAuthentication_ReturnsBadRequest
  href: api/MyApp.Tests.Integration.AuthIntegrationTests.html#MyApp_Tests_Integration_AuthIntegrationTests_ExternalLoginCallback_WithoutAuthentication_ReturnsBadRequest_
  commentId: Overload:MyApp.Tests.Integration.AuthIntegrationTests.ExternalLoginCallback_WithoutAuthentication_ReturnsBadRequest
  isSpec: "True"
  fullName: MyApp.Tests.Integration.AuthIntegrationTests.ExternalLoginCallback_WithoutAuthentication_ReturnsBadRequest
  nameWithType: AuthIntegrationTests.ExternalLoginCallback_WithoutAuthentication_ReturnsBadRequest
- uid: MyApp.Tests.Integration.AuthIntegrationTests.ExternalLogin_WithInvalidProvider_ReturnsBadRequest
  name: ExternalLogin_WithInvalidProvider_ReturnsBadRequest()
  href: api/MyApp.Tests.Integration.AuthIntegrationTests.html#MyApp_Tests_Integration_AuthIntegrationTests_ExternalLogin_WithInvalidProvider_ReturnsBadRequest
  commentId: M:MyApp.Tests.Integration.AuthIntegrationTests.ExternalLogin_WithInvalidProvider_ReturnsBadRequest
  fullName: MyApp.Tests.Integration.AuthIntegrationTests.ExternalLogin_WithInvalidProvider_ReturnsBadRequest()
  nameWithType: AuthIntegrationTests.ExternalLogin_WithInvalidProvider_ReturnsBadRequest()
- uid: MyApp.Tests.Integration.AuthIntegrationTests.ExternalLogin_WithInvalidProvider_ReturnsBadRequest*
  name: ExternalLogin_WithInvalidProvider_ReturnsBadRequest
  href: api/MyApp.Tests.Integration.AuthIntegrationTests.html#MyApp_Tests_Integration_AuthIntegrationTests_ExternalLogin_WithInvalidProvider_ReturnsBadRequest_
  commentId: Overload:MyApp.Tests.Integration.AuthIntegrationTests.ExternalLogin_WithInvalidProvider_ReturnsBadRequest
  isSpec: "True"
  fullName: MyApp.Tests.Integration.AuthIntegrationTests.ExternalLogin_WithInvalidProvider_ReturnsBadRequest
  nameWithType: AuthIntegrationTests.ExternalLogin_WithInvalidProvider_ReturnsBadRequest
- uid: MyApp.Tests.Integration.AuthIntegrationTests.ExternalLogin_WithValidProvider_ReturnsRedirect
  name: ExternalLogin_WithValidProvider_ReturnsRedirect()
  href: api/MyApp.Tests.Integration.AuthIntegrationTests.html#MyApp_Tests_Integration_AuthIntegrationTests_ExternalLogin_WithValidProvider_ReturnsRedirect
  commentId: M:MyApp.Tests.Integration.AuthIntegrationTests.ExternalLogin_WithValidProvider_ReturnsRedirect
  fullName: MyApp.Tests.Integration.AuthIntegrationTests.ExternalLogin_WithValidProvider_ReturnsRedirect()
  nameWithType: AuthIntegrationTests.ExternalLogin_WithValidProvider_ReturnsRedirect()
- uid: MyApp.Tests.Integration.AuthIntegrationTests.ExternalLogin_WithValidProvider_ReturnsRedirect*
  name: ExternalLogin_WithValidProvider_ReturnsRedirect
  href: api/MyApp.Tests.Integration.AuthIntegrationTests.html#MyApp_Tests_Integration_AuthIntegrationTests_ExternalLogin_WithValidProvider_ReturnsRedirect_
  commentId: Overload:MyApp.Tests.Integration.AuthIntegrationTests.ExternalLogin_WithValidProvider_ReturnsRedirect
  isSpec: "True"
  fullName: MyApp.Tests.Integration.AuthIntegrationTests.ExternalLogin_WithValidProvider_ReturnsRedirect
  nameWithType: AuthIntegrationTests.ExternalLogin_WithValidProvider_ReturnsRedirect
- uid: MyApp.Tests.Integration.AuthIntegrationTests.Login_WithInvalidCredentials_ReturnsUnauthorized
  name: Login_WithInvalidCredentials_ReturnsUnauthorized()
  href: api/MyApp.Tests.Integration.AuthIntegrationTests.html#MyApp_Tests_Integration_AuthIntegrationTests_Login_WithInvalidCredentials_ReturnsUnauthorized
  commentId: M:MyApp.Tests.Integration.AuthIntegrationTests.Login_WithInvalidCredentials_ReturnsUnauthorized
  fullName: MyApp.Tests.Integration.AuthIntegrationTests.Login_WithInvalidCredentials_ReturnsUnauthorized()
  nameWithType: AuthIntegrationTests.Login_WithInvalidCredentials_ReturnsUnauthorized()
- uid: MyApp.Tests.Integration.AuthIntegrationTests.Login_WithInvalidCredentials_ReturnsUnauthorized*
  name: Login_WithInvalidCredentials_ReturnsUnauthorized
  href: api/MyApp.Tests.Integration.AuthIntegrationTests.html#MyApp_Tests_Integration_AuthIntegrationTests_Login_WithInvalidCredentials_ReturnsUnauthorized_
  commentId: Overload:MyApp.Tests.Integration.AuthIntegrationTests.Login_WithInvalidCredentials_ReturnsUnauthorized
  isSpec: "True"
  fullName: MyApp.Tests.Integration.AuthIntegrationTests.Login_WithInvalidCredentials_ReturnsUnauthorized
  nameWithType: AuthIntegrationTests.Login_WithInvalidCredentials_ReturnsUnauthorized
- uid: MyApp.Tests.Integration.AuthIntegrationTests.Login_WithInvalidModel_ReturnsBadRequest
  name: Login_WithInvalidModel_ReturnsBadRequest()
  href: api/MyApp.Tests.Integration.AuthIntegrationTests.html#MyApp_Tests_Integration_AuthIntegrationTests_Login_WithInvalidModel_ReturnsBadRequest
  commentId: M:MyApp.Tests.Integration.AuthIntegrationTests.Login_WithInvalidModel_ReturnsBadRequest
  fullName: MyApp.Tests.Integration.AuthIntegrationTests.Login_WithInvalidModel_ReturnsBadRequest()
  nameWithType: AuthIntegrationTests.Login_WithInvalidModel_ReturnsBadRequest()
- uid: MyApp.Tests.Integration.AuthIntegrationTests.Login_WithInvalidModel_ReturnsBadRequest*
  name: Login_WithInvalidModel_ReturnsBadRequest
  href: api/MyApp.Tests.Integration.AuthIntegrationTests.html#MyApp_Tests_Integration_AuthIntegrationTests_Login_WithInvalidModel_ReturnsBadRequest_
  commentId: Overload:MyApp.Tests.Integration.AuthIntegrationTests.Login_WithInvalidModel_ReturnsBadRequest
  isSpec: "True"
  fullName: MyApp.Tests.Integration.AuthIntegrationTests.Login_WithInvalidModel_ReturnsBadRequest
  nameWithType: AuthIntegrationTests.Login_WithInvalidModel_ReturnsBadRequest
- uid: MyApp.Tests.Integration.AuthIntegrationTests.Login_WithVInvalidCredentials_ReturnsUnauthorized
  name: Login_WithVInvalidCredentials_ReturnsUnauthorized()
  href: api/MyApp.Tests.Integration.AuthIntegrationTests.html#MyApp_Tests_Integration_AuthIntegrationTests_Login_WithVInvalidCredentials_ReturnsUnauthorized
  commentId: M:MyApp.Tests.Integration.AuthIntegrationTests.Login_WithVInvalidCredentials_ReturnsUnauthorized
  fullName: MyApp.Tests.Integration.AuthIntegrationTests.Login_WithVInvalidCredentials_ReturnsUnauthorized()
  nameWithType: AuthIntegrationTests.Login_WithVInvalidCredentials_ReturnsUnauthorized()
- uid: MyApp.Tests.Integration.AuthIntegrationTests.Login_WithVInvalidCredentials_ReturnsUnauthorized*
  name: Login_WithVInvalidCredentials_ReturnsUnauthorized
  href: api/MyApp.Tests.Integration.AuthIntegrationTests.html#MyApp_Tests_Integration_AuthIntegrationTests_Login_WithVInvalidCredentials_ReturnsUnauthorized_
  commentId: Overload:MyApp.Tests.Integration.AuthIntegrationTests.Login_WithVInvalidCredentials_ReturnsUnauthorized
  isSpec: "True"
  fullName: MyApp.Tests.Integration.AuthIntegrationTests.Login_WithVInvalidCredentials_ReturnsUnauthorized
  nameWithType: AuthIntegrationTests.Login_WithVInvalidCredentials_ReturnsUnauthorized
- uid: MyApp.Tests.Integration.AuthIntegrationTests.Login_WithValidCredentials_ReturnsOk
  name: Login_WithValidCredentials_ReturnsOk()
  href: api/MyApp.Tests.Integration.AuthIntegrationTests.html#MyApp_Tests_Integration_AuthIntegrationTests_Login_WithValidCredentials_ReturnsOk
  commentId: M:MyApp.Tests.Integration.AuthIntegrationTests.Login_WithValidCredentials_ReturnsOk
  fullName: MyApp.Tests.Integration.AuthIntegrationTests.Login_WithValidCredentials_ReturnsOk()
  nameWithType: AuthIntegrationTests.Login_WithValidCredentials_ReturnsOk()
- uid: MyApp.Tests.Integration.AuthIntegrationTests.Login_WithValidCredentials_ReturnsOk*
  name: Login_WithValidCredentials_ReturnsOk
  href: api/MyApp.Tests.Integration.AuthIntegrationTests.html#MyApp_Tests_Integration_AuthIntegrationTests_Login_WithValidCredentials_ReturnsOk_
  commentId: Overload:MyApp.Tests.Integration.AuthIntegrationTests.Login_WithValidCredentials_ReturnsOk
  isSpec: "True"
  fullName: MyApp.Tests.Integration.AuthIntegrationTests.Login_WithValidCredentials_ReturnsOk
  nameWithType: AuthIntegrationTests.Login_WithValidCredentials_ReturnsOk
- uid: MyApp.Tests.Integration.AuthIntegrationTests.Logout_WithValidToken_ReturnsNoContent
  name: Logout_WithValidToken_ReturnsNoContent()
  href: api/MyApp.Tests.Integration.AuthIntegrationTests.html#MyApp_Tests_Integration_AuthIntegrationTests_Logout_WithValidToken_ReturnsNoContent
  commentId: M:MyApp.Tests.Integration.AuthIntegrationTests.Logout_WithValidToken_ReturnsNoContent
  fullName: MyApp.Tests.Integration.AuthIntegrationTests.Logout_WithValidToken_ReturnsNoContent()
  nameWithType: AuthIntegrationTests.Logout_WithValidToken_ReturnsNoContent()
- uid: MyApp.Tests.Integration.AuthIntegrationTests.Logout_WithValidToken_ReturnsNoContent*
  name: Logout_WithValidToken_ReturnsNoContent
  href: api/MyApp.Tests.Integration.AuthIntegrationTests.html#MyApp_Tests_Integration_AuthIntegrationTests_Logout_WithValidToken_ReturnsNoContent_
  commentId: Overload:MyApp.Tests.Integration.AuthIntegrationTests.Logout_WithValidToken_ReturnsNoContent
  isSpec: "True"
  fullName: MyApp.Tests.Integration.AuthIntegrationTests.Logout_WithValidToken_ReturnsNoContent
  nameWithType: AuthIntegrationTests.Logout_WithValidToken_ReturnsNoContent
- uid: MyApp.Tests.Integration.AuthIntegrationTests.RefreshToken_WithInvalidModel_ReturnsBadRequest
  name: RefreshToken_WithInvalidModel_ReturnsBadRequest()
  href: api/MyApp.Tests.Integration.AuthIntegrationTests.html#MyApp_Tests_Integration_AuthIntegrationTests_RefreshToken_WithInvalidModel_ReturnsBadRequest
  commentId: M:MyApp.Tests.Integration.AuthIntegrationTests.RefreshToken_WithInvalidModel_ReturnsBadRequest
  fullName: MyApp.Tests.Integration.AuthIntegrationTests.RefreshToken_WithInvalidModel_ReturnsBadRequest()
  nameWithType: AuthIntegrationTests.RefreshToken_WithInvalidModel_ReturnsBadRequest()
- uid: MyApp.Tests.Integration.AuthIntegrationTests.RefreshToken_WithInvalidModel_ReturnsBadRequest*
  name: RefreshToken_WithInvalidModel_ReturnsBadRequest
  href: api/MyApp.Tests.Integration.AuthIntegrationTests.html#MyApp_Tests_Integration_AuthIntegrationTests_RefreshToken_WithInvalidModel_ReturnsBadRequest_
  commentId: Overload:MyApp.Tests.Integration.AuthIntegrationTests.RefreshToken_WithInvalidModel_ReturnsBadRequest
  isSpec: "True"
  fullName: MyApp.Tests.Integration.AuthIntegrationTests.RefreshToken_WithInvalidModel_ReturnsBadRequest
  nameWithType: AuthIntegrationTests.RefreshToken_WithInvalidModel_ReturnsBadRequest
- uid: MyApp.Tests.Integration.AuthIntegrationTests.RefreshToken_WithInvalidToken_ReturnsUnauthorized
  name: RefreshToken_WithInvalidToken_ReturnsUnauthorized()
  href: api/MyApp.Tests.Integration.AuthIntegrationTests.html#MyApp_Tests_Integration_AuthIntegrationTests_RefreshToken_WithInvalidToken_ReturnsUnauthorized
  commentId: M:MyApp.Tests.Integration.AuthIntegrationTests.RefreshToken_WithInvalidToken_ReturnsUnauthorized
  fullName: MyApp.Tests.Integration.AuthIntegrationTests.RefreshToken_WithInvalidToken_ReturnsUnauthorized()
  nameWithType: AuthIntegrationTests.RefreshToken_WithInvalidToken_ReturnsUnauthorized()
- uid: MyApp.Tests.Integration.AuthIntegrationTests.RefreshToken_WithInvalidToken_ReturnsUnauthorized*
  name: RefreshToken_WithInvalidToken_ReturnsUnauthorized
  href: api/MyApp.Tests.Integration.AuthIntegrationTests.html#MyApp_Tests_Integration_AuthIntegrationTests_RefreshToken_WithInvalidToken_ReturnsUnauthorized_
  commentId: Overload:MyApp.Tests.Integration.AuthIntegrationTests.RefreshToken_WithInvalidToken_ReturnsUnauthorized
  isSpec: "True"
  fullName: MyApp.Tests.Integration.AuthIntegrationTests.RefreshToken_WithInvalidToken_ReturnsUnauthorized
  nameWithType: AuthIntegrationTests.RefreshToken_WithInvalidToken_ReturnsUnauthorized
- uid: MyApp.Tests.Integration.AuthIntegrationTests.RefreshToken_WithValidToken_ReturnsOk
  name: RefreshToken_WithValidToken_ReturnsOk()
  href: api/MyApp.Tests.Integration.AuthIntegrationTests.html#MyApp_Tests_Integration_AuthIntegrationTests_RefreshToken_WithValidToken_ReturnsOk
  commentId: M:MyApp.Tests.Integration.AuthIntegrationTests.RefreshToken_WithValidToken_ReturnsOk
  fullName: MyApp.Tests.Integration.AuthIntegrationTests.RefreshToken_WithValidToken_ReturnsOk()
  nameWithType: AuthIntegrationTests.RefreshToken_WithValidToken_ReturnsOk()
- uid: MyApp.Tests.Integration.AuthIntegrationTests.RefreshToken_WithValidToken_ReturnsOk*
  name: RefreshToken_WithValidToken_ReturnsOk
  href: api/MyApp.Tests.Integration.AuthIntegrationTests.html#MyApp_Tests_Integration_AuthIntegrationTests_RefreshToken_WithValidToken_ReturnsOk_
  commentId: Overload:MyApp.Tests.Integration.AuthIntegrationTests.RefreshToken_WithValidToken_ReturnsOk
  isSpec: "True"
  fullName: MyApp.Tests.Integration.AuthIntegrationTests.RefreshToken_WithValidToken_ReturnsOk
  nameWithType: AuthIntegrationTests.RefreshToken_WithValidToken_ReturnsOk
- uid: MyApp.Tests.Integration.AuthIntegrationTests.Register_WithExistingEmail_ReturnsConflict
  name: Register_WithExistingEmail_ReturnsConflict()
  href: api/MyApp.Tests.Integration.AuthIntegrationTests.html#MyApp_Tests_Integration_AuthIntegrationTests_Register_WithExistingEmail_ReturnsConflict
  commentId: M:MyApp.Tests.Integration.AuthIntegrationTests.Register_WithExistingEmail_ReturnsConflict
  fullName: MyApp.Tests.Integration.AuthIntegrationTests.Register_WithExistingEmail_ReturnsConflict()
  nameWithType: AuthIntegrationTests.Register_WithExistingEmail_ReturnsConflict()
- uid: MyApp.Tests.Integration.AuthIntegrationTests.Register_WithExistingEmail_ReturnsConflict*
  name: Register_WithExistingEmail_ReturnsConflict
  href: api/MyApp.Tests.Integration.AuthIntegrationTests.html#MyApp_Tests_Integration_AuthIntegrationTests_Register_WithExistingEmail_ReturnsConflict_
  commentId: Overload:MyApp.Tests.Integration.AuthIntegrationTests.Register_WithExistingEmail_ReturnsConflict
  isSpec: "True"
  fullName: MyApp.Tests.Integration.AuthIntegrationTests.Register_WithExistingEmail_ReturnsConflict
  nameWithType: AuthIntegrationTests.Register_WithExistingEmail_ReturnsConflict
- uid: MyApp.Tests.Integration.AuthIntegrationTests.Register_WithInvalidModel_ReturnsBadRequest
  name: Register_WithInvalidModel_ReturnsBadRequest()
  href: api/MyApp.Tests.Integration.AuthIntegrationTests.html#MyApp_Tests_Integration_AuthIntegrationTests_Register_WithInvalidModel_ReturnsBadRequest
  commentId: M:MyApp.Tests.Integration.AuthIntegrationTests.Register_WithInvalidModel_ReturnsBadRequest
  fullName: MyApp.Tests.Integration.AuthIntegrationTests.Register_WithInvalidModel_ReturnsBadRequest()
  nameWithType: AuthIntegrationTests.Register_WithInvalidModel_ReturnsBadRequest()
- uid: MyApp.Tests.Integration.AuthIntegrationTests.Register_WithInvalidModel_ReturnsBadRequest*
  name: Register_WithInvalidModel_ReturnsBadRequest
  href: api/MyApp.Tests.Integration.AuthIntegrationTests.html#MyApp_Tests_Integration_AuthIntegrationTests_Register_WithInvalidModel_ReturnsBadRequest_
  commentId: Overload:MyApp.Tests.Integration.AuthIntegrationTests.Register_WithInvalidModel_ReturnsBadRequest
  isSpec: "True"
  fullName: MyApp.Tests.Integration.AuthIntegrationTests.Register_WithInvalidModel_ReturnsBadRequest
  nameWithType: AuthIntegrationTests.Register_WithInvalidModel_ReturnsBadRequest
- uid: MyApp.Tests.Integration.AuthIntegrationTests.Register_WithValidData_ReturnsCreated
  name: Register_WithValidData_ReturnsCreated()
  href: api/MyApp.Tests.Integration.AuthIntegrationTests.html#MyApp_Tests_Integration_AuthIntegrationTests_Register_WithValidData_ReturnsCreated
  commentId: M:MyApp.Tests.Integration.AuthIntegrationTests.Register_WithValidData_ReturnsCreated
  fullName: MyApp.Tests.Integration.AuthIntegrationTests.Register_WithValidData_ReturnsCreated()
  nameWithType: AuthIntegrationTests.Register_WithValidData_ReturnsCreated()
- uid: MyApp.Tests.Integration.AuthIntegrationTests.Register_WithValidData_ReturnsCreated*
  name: Register_WithValidData_ReturnsCreated
  href: api/MyApp.Tests.Integration.AuthIntegrationTests.html#MyApp_Tests_Integration_AuthIntegrationTests_Register_WithValidData_ReturnsCreated_
  commentId: Overload:MyApp.Tests.Integration.AuthIntegrationTests.Register_WithValidData_ReturnsCreated
  isSpec: "True"
  fullName: MyApp.Tests.Integration.AuthIntegrationTests.Register_WithValidData_ReturnsCreated
  nameWithType: AuthIntegrationTests.Register_WithValidData_ReturnsCreated
- uid: MyApp.Tests.Integration.IntegrationTest1
  name: IntegrationTest1
  href: api/MyApp.Tests.Integration.IntegrationTest1.html
  commentId: T:MyApp.Tests.Integration.IntegrationTest1
  fullName: MyApp.Tests.Integration.IntegrationTest1
  nameWithType: IntegrationTest1
- uid: MyApp.Tests.Integration.InventoryServiceTests
  name: InventoryServiceTests
  href: api/MyApp.Tests.Integration.InventoryServiceTests.html
  commentId: T:MyApp.Tests.Integration.InventoryServiceTests
  fullName: MyApp.Tests.Integration.InventoryServiceTests
  nameWithType: InventoryServiceTests
- uid: MyApp.Tests.Integration.InventoryServiceTests.CreateProduct_WithValidData_ReturnsCreatedStatusCode
  name: CreateProduct_WithValidData_ReturnsCreatedStatusCode()
  href: api/MyApp.Tests.Integration.InventoryServiceTests.html#MyApp_Tests_Integration_InventoryServiceTests_CreateProduct_WithValidData_ReturnsCreatedStatusCode
  commentId: M:MyApp.Tests.Integration.InventoryServiceTests.CreateProduct_WithValidData_ReturnsCreatedStatusCode
  fullName: MyApp.Tests.Integration.InventoryServiceTests.CreateProduct_WithValidData_ReturnsCreatedStatusCode()
  nameWithType: InventoryServiceTests.CreateProduct_WithValidData_ReturnsCreatedStatusCode()
- uid: MyApp.Tests.Integration.InventoryServiceTests.CreateProduct_WithValidData_ReturnsCreatedStatusCode*
  name: CreateProduct_WithValidData_ReturnsCreatedStatusCode
  href: api/MyApp.Tests.Integration.InventoryServiceTests.html#MyApp_Tests_Integration_InventoryServiceTests_CreateProduct_WithValidData_ReturnsCreatedStatusCode_
  commentId: Overload:MyApp.Tests.Integration.InventoryServiceTests.CreateProduct_WithValidData_ReturnsCreatedStatusCode
  isSpec: "True"
  fullName: MyApp.Tests.Integration.InventoryServiceTests.CreateProduct_WithValidData_ReturnsCreatedStatusCode
  nameWithType: InventoryServiceTests.CreateProduct_WithValidData_ReturnsCreatedStatusCode
- uid: MyApp.Tests.Integration.InventoryServiceTests.DeleteProduct_WithValidId_ReturnsNoContentStatusCode
  name: DeleteProduct_WithValidId_ReturnsNoContentStatusCode()
  href: api/MyApp.Tests.Integration.InventoryServiceTests.html#MyApp_Tests_Integration_InventoryServiceTests_DeleteProduct_WithValidId_ReturnsNoContentStatusCode
  commentId: M:MyApp.Tests.Integration.InventoryServiceTests.DeleteProduct_WithValidId_ReturnsNoContentStatusCode
  fullName: MyApp.Tests.Integration.InventoryServiceTests.DeleteProduct_WithValidId_ReturnsNoContentStatusCode()
  nameWithType: InventoryServiceTests.DeleteProduct_WithValidId_ReturnsNoContentStatusCode()
- uid: MyApp.Tests.Integration.InventoryServiceTests.DeleteProduct_WithValidId_ReturnsNoContentStatusCode*
  name: DeleteProduct_WithValidId_ReturnsNoContentStatusCode
  href: api/MyApp.Tests.Integration.InventoryServiceTests.html#MyApp_Tests_Integration_InventoryServiceTests_DeleteProduct_WithValidId_ReturnsNoContentStatusCode_
  commentId: Overload:MyApp.Tests.Integration.InventoryServiceTests.DeleteProduct_WithValidId_ReturnsNoContentStatusCode
  isSpec: "True"
  fullName: MyApp.Tests.Integration.InventoryServiceTests.DeleteProduct_WithValidId_ReturnsNoContentStatusCode
  nameWithType: InventoryServiceTests.DeleteProduct_WithValidId_ReturnsNoContentStatusCode
- uid: MyApp.Tests.Integration.InventoryServiceTests.GetProductById_WithValidId_ReturnsProduct
  name: GetProductById_WithValidId_ReturnsProduct()
  href: api/MyApp.Tests.Integration.InventoryServiceTests.html#MyApp_Tests_Integration_InventoryServiceTests_GetProductById_WithValidId_ReturnsProduct
  commentId: M:MyApp.Tests.Integration.InventoryServiceTests.GetProductById_WithValidId_ReturnsProduct
  fullName: MyApp.Tests.Integration.InventoryServiceTests.GetProductById_WithValidId_ReturnsProduct()
  nameWithType: InventoryServiceTests.GetProductById_WithValidId_ReturnsProduct()
- uid: MyApp.Tests.Integration.InventoryServiceTests.GetProductById_WithValidId_ReturnsProduct*
  name: GetProductById_WithValidId_ReturnsProduct
  href: api/MyApp.Tests.Integration.InventoryServiceTests.html#MyApp_Tests_Integration_InventoryServiceTests_GetProductById_WithValidId_ReturnsProduct_
  commentId: Overload:MyApp.Tests.Integration.InventoryServiceTests.GetProductById_WithValidId_ReturnsProduct
  isSpec: "True"
  fullName: MyApp.Tests.Integration.InventoryServiceTests.GetProductById_WithValidId_ReturnsProduct
  nameWithType: InventoryServiceTests.GetProductById_WithValidId_ReturnsProduct
- uid: MyApp.Tests.Integration.InventoryServiceTests.GetProducts_WithValidToken_ReturnsSuccessStatusCode
  name: GetProducts_WithValidToken_ReturnsSuccessStatusCode()
  href: api/MyApp.Tests.Integration.InventoryServiceTests.html#MyApp_Tests_Integration_InventoryServiceTests_GetProducts_WithValidToken_ReturnsSuccessStatusCode
  commentId: M:MyApp.Tests.Integration.InventoryServiceTests.GetProducts_WithValidToken_ReturnsSuccessStatusCode
  fullName: MyApp.Tests.Integration.InventoryServiceTests.GetProducts_WithValidToken_ReturnsSuccessStatusCode()
  nameWithType: InventoryServiceTests.GetProducts_WithValidToken_ReturnsSuccessStatusCode()
- uid: MyApp.Tests.Integration.InventoryServiceTests.GetProducts_WithValidToken_ReturnsSuccessStatusCode*
  name: GetProducts_WithValidToken_ReturnsSuccessStatusCode
  href: api/MyApp.Tests.Integration.InventoryServiceTests.html#MyApp_Tests_Integration_InventoryServiceTests_GetProducts_WithValidToken_ReturnsSuccessStatusCode_
  commentId: Overload:MyApp.Tests.Integration.InventoryServiceTests.GetProducts_WithValidToken_ReturnsSuccessStatusCode
  isSpec: "True"
  fullName: MyApp.Tests.Integration.InventoryServiceTests.GetProducts_WithValidToken_ReturnsSuccessStatusCode
  nameWithType: InventoryServiceTests.GetProducts_WithValidToken_ReturnsSuccessStatusCode
- uid: MyApp.Tests.Integration.InventoryServiceTests.UpdateProduct_WithValidData_ReturnsSuccessStatusCode
  name: UpdateProduct_WithValidData_ReturnsSuccessStatusCode()
  href: api/MyApp.Tests.Integration.InventoryServiceTests.html#MyApp_Tests_Integration_InventoryServiceTests_UpdateProduct_WithValidData_ReturnsSuccessStatusCode
  commentId: M:MyApp.Tests.Integration.InventoryServiceTests.UpdateProduct_WithValidData_ReturnsSuccessStatusCode
  fullName: MyApp.Tests.Integration.InventoryServiceTests.UpdateProduct_WithValidData_ReturnsSuccessStatusCode()
  nameWithType: InventoryServiceTests.UpdateProduct_WithValidData_ReturnsSuccessStatusCode()
- uid: MyApp.Tests.Integration.InventoryServiceTests.UpdateProduct_WithValidData_ReturnsSuccessStatusCode*
  name: UpdateProduct_WithValidData_ReturnsSuccessStatusCode
  href: api/MyApp.Tests.Integration.InventoryServiceTests.html#MyApp_Tests_Integration_InventoryServiceTests_UpdateProduct_WithValidData_ReturnsSuccessStatusCode_
  commentId: Overload:MyApp.Tests.Integration.InventoryServiceTests.UpdateProduct_WithValidData_ReturnsSuccessStatusCode
  isSpec: "True"
  fullName: MyApp.Tests.Integration.InventoryServiceTests.UpdateProduct_WithValidData_ReturnsSuccessStatusCode
  nameWithType: InventoryServiceTests.UpdateProduct_WithValidData_ReturnsSuccessStatusCode
- uid: MyApp.Tests.Integration.OrdersServiceTests
  name: OrdersServiceTests
  href: api/MyApp.Tests.Integration.OrdersServiceTests.html
  commentId: T:MyApp.Tests.Integration.OrdersServiceTests
  fullName: MyApp.Tests.Integration.OrdersServiceTests
  nameWithType: OrdersServiceTests
- uid: MyApp.Tests.Integration.OrdersServiceTests.CreateOrder_WithValidData_ReturnsCreatedStatusCode
  name: CreateOrder_WithValidData_ReturnsCreatedStatusCode()
  href: api/MyApp.Tests.Integration.OrdersServiceTests.html#MyApp_Tests_Integration_OrdersServiceTests_CreateOrder_WithValidData_ReturnsCreatedStatusCode
  commentId: M:MyApp.Tests.Integration.OrdersServiceTests.CreateOrder_WithValidData_ReturnsCreatedStatusCode
  fullName: MyApp.Tests.Integration.OrdersServiceTests.CreateOrder_WithValidData_ReturnsCreatedStatusCode()
  nameWithType: OrdersServiceTests.CreateOrder_WithValidData_ReturnsCreatedStatusCode()
- uid: MyApp.Tests.Integration.OrdersServiceTests.CreateOrder_WithValidData_ReturnsCreatedStatusCode*
  name: CreateOrder_WithValidData_ReturnsCreatedStatusCode
  href: api/MyApp.Tests.Integration.OrdersServiceTests.html#MyApp_Tests_Integration_OrdersServiceTests_CreateOrder_WithValidData_ReturnsCreatedStatusCode_
  commentId: Overload:MyApp.Tests.Integration.OrdersServiceTests.CreateOrder_WithValidData_ReturnsCreatedStatusCode
  isSpec: "True"
  fullName: MyApp.Tests.Integration.OrdersServiceTests.CreateOrder_WithValidData_ReturnsCreatedStatusCode
  nameWithType: OrdersServiceTests.CreateOrder_WithValidData_ReturnsCreatedStatusCode
- uid: MyApp.Tests.Integration.OrdersServiceTests.GetOrderById_WithValidId_ReturnsOrder
  name: GetOrderById_WithValidId_ReturnsOrder()
  href: api/MyApp.Tests.Integration.OrdersServiceTests.html#MyApp_Tests_Integration_OrdersServiceTests_GetOrderById_WithValidId_ReturnsOrder
  commentId: M:MyApp.Tests.Integration.OrdersServiceTests.GetOrderById_WithValidId_ReturnsOrder
  fullName: MyApp.Tests.Integration.OrdersServiceTests.GetOrderById_WithValidId_ReturnsOrder()
  nameWithType: OrdersServiceTests.GetOrderById_WithValidId_ReturnsOrder()
- uid: MyApp.Tests.Integration.OrdersServiceTests.GetOrderById_WithValidId_ReturnsOrder*
  name: GetOrderById_WithValidId_ReturnsOrder
  href: api/MyApp.Tests.Integration.OrdersServiceTests.html#MyApp_Tests_Integration_OrdersServiceTests_GetOrderById_WithValidId_ReturnsOrder_
  commentId: Overload:MyApp.Tests.Integration.OrdersServiceTests.GetOrderById_WithValidId_ReturnsOrder
  isSpec: "True"
  fullName: MyApp.Tests.Integration.OrdersServiceTests.GetOrderById_WithValidId_ReturnsOrder
  nameWithType: OrdersServiceTests.GetOrderById_WithValidId_ReturnsOrder
- uid: MyApp.Tests.Integration.OrdersServiceTests.GetOrders_WithValidToken_ReturnsSuccessStatusCode
  name: GetOrders_WithValidToken_ReturnsSuccessStatusCode()
  href: api/MyApp.Tests.Integration.OrdersServiceTests.html#MyApp_Tests_Integration_OrdersServiceTests_GetOrders_WithValidToken_ReturnsSuccessStatusCode
  commentId: M:MyApp.Tests.Integration.OrdersServiceTests.GetOrders_WithValidToken_ReturnsSuccessStatusCode
  fullName: MyApp.Tests.Integration.OrdersServiceTests.GetOrders_WithValidToken_ReturnsSuccessStatusCode()
  nameWithType: OrdersServiceTests.GetOrders_WithValidToken_ReturnsSuccessStatusCode()
- uid: MyApp.Tests.Integration.OrdersServiceTests.GetOrders_WithValidToken_ReturnsSuccessStatusCode*
  name: GetOrders_WithValidToken_ReturnsSuccessStatusCode
  href: api/MyApp.Tests.Integration.OrdersServiceTests.html#MyApp_Tests_Integration_OrdersServiceTests_GetOrders_WithValidToken_ReturnsSuccessStatusCode_
  commentId: Overload:MyApp.Tests.Integration.OrdersServiceTests.GetOrders_WithValidToken_ReturnsSuccessStatusCode
  isSpec: "True"
  fullName: MyApp.Tests.Integration.OrdersServiceTests.GetOrders_WithValidToken_ReturnsSuccessStatusCode
  nameWithType: OrdersServiceTests.GetOrders_WithValidToken_ReturnsSuccessStatusCode
- uid: MyApp.Tests.Integration.OrdersServiceTests.UpdateOrderStatus_WithValidStatus_ReturnsSuccessStatusCode
  name: UpdateOrderStatus_WithValidStatus_ReturnsSuccessStatusCode()
  href: api/MyApp.Tests.Integration.OrdersServiceTests.html#MyApp_Tests_Integration_OrdersServiceTests_UpdateOrderStatus_WithValidStatus_ReturnsSuccessStatusCode
  commentId: M:MyApp.Tests.Integration.OrdersServiceTests.UpdateOrderStatus_WithValidStatus_ReturnsSuccessStatusCode
  fullName: MyApp.Tests.Integration.OrdersServiceTests.UpdateOrderStatus_WithValidStatus_ReturnsSuccessStatusCode()
  nameWithType: OrdersServiceTests.UpdateOrderStatus_WithValidStatus_ReturnsSuccessStatusCode()
- uid: MyApp.Tests.Integration.OrdersServiceTests.UpdateOrderStatus_WithValidStatus_ReturnsSuccessStatusCode*
  name: UpdateOrderStatus_WithValidStatus_ReturnsSuccessStatusCode
  href: api/MyApp.Tests.Integration.OrdersServiceTests.html#MyApp_Tests_Integration_OrdersServiceTests_UpdateOrderStatus_WithValidStatus_ReturnsSuccessStatusCode_
  commentId: Overload:MyApp.Tests.Integration.OrdersServiceTests.UpdateOrderStatus_WithValidStatus_ReturnsSuccessStatusCode
  isSpec: "True"
  fullName: MyApp.Tests.Integration.OrdersServiceTests.UpdateOrderStatus_WithValidStatus_ReturnsSuccessStatusCode
  nameWithType: OrdersServiceTests.UpdateOrderStatus_WithValidStatus_ReturnsSuccessStatusCode
- uid: MyApp.Tests.Integration.PurchasingServiceTests
  name: PurchasingServiceTests
  href: api/MyApp.Tests.Integration.PurchasingServiceTests.html
  commentId: T:MyApp.Tests.Integration.PurchasingServiceTests
  fullName: MyApp.Tests.Integration.PurchasingServiceTests
  nameWithType: PurchasingServiceTests
- uid: MyApp.Tests.Integration.PurchasingServiceTests.CreatePurchaseOrder_WithValidData_ReturnsCreatedStatusCode
  name: CreatePurchaseOrder_WithValidData_ReturnsCreatedStatusCode()
  href: api/MyApp.Tests.Integration.PurchasingServiceTests.html#MyApp_Tests_Integration_PurchasingServiceTests_CreatePurchaseOrder_WithValidData_ReturnsCreatedStatusCode
  commentId: M:MyApp.Tests.Integration.PurchasingServiceTests.CreatePurchaseOrder_WithValidData_ReturnsCreatedStatusCode
  fullName: MyApp.Tests.Integration.PurchasingServiceTests.CreatePurchaseOrder_WithValidData_ReturnsCreatedStatusCode()
  nameWithType: PurchasingServiceTests.CreatePurchaseOrder_WithValidData_ReturnsCreatedStatusCode()
- uid: MyApp.Tests.Integration.PurchasingServiceTests.CreatePurchaseOrder_WithValidData_ReturnsCreatedStatusCode*
  name: CreatePurchaseOrder_WithValidData_ReturnsCreatedStatusCode
  href: api/MyApp.Tests.Integration.PurchasingServiceTests.html#MyApp_Tests_Integration_PurchasingServiceTests_CreatePurchaseOrder_WithValidData_ReturnsCreatedStatusCode_
  commentId: Overload:MyApp.Tests.Integration.PurchasingServiceTests.CreatePurchaseOrder_WithValidData_ReturnsCreatedStatusCode
  isSpec: "True"
  fullName: MyApp.Tests.Integration.PurchasingServiceTests.CreatePurchaseOrder_WithValidData_ReturnsCreatedStatusCode
  nameWithType: PurchasingServiceTests.CreatePurchaseOrder_WithValidData_ReturnsCreatedStatusCode
- uid: MyApp.Tests.Integration.PurchasingServiceTests.CreateSupplier_WithValidData_ReturnsCreatedStatusCode
  name: CreateSupplier_WithValidData_ReturnsCreatedStatusCode()
  href: api/MyApp.Tests.Integration.PurchasingServiceTests.html#MyApp_Tests_Integration_PurchasingServiceTests_CreateSupplier_WithValidData_ReturnsCreatedStatusCode
  commentId: M:MyApp.Tests.Integration.PurchasingServiceTests.CreateSupplier_WithValidData_ReturnsCreatedStatusCode
  fullName: MyApp.Tests.Integration.PurchasingServiceTests.CreateSupplier_WithValidData_ReturnsCreatedStatusCode()
  nameWithType: PurchasingServiceTests.CreateSupplier_WithValidData_ReturnsCreatedStatusCode()
- uid: MyApp.Tests.Integration.PurchasingServiceTests.CreateSupplier_WithValidData_ReturnsCreatedStatusCode*
  name: CreateSupplier_WithValidData_ReturnsCreatedStatusCode
  href: api/MyApp.Tests.Integration.PurchasingServiceTests.html#MyApp_Tests_Integration_PurchasingServiceTests_CreateSupplier_WithValidData_ReturnsCreatedStatusCode_
  commentId: Overload:MyApp.Tests.Integration.PurchasingServiceTests.CreateSupplier_WithValidData_ReturnsCreatedStatusCode
  isSpec: "True"
  fullName: MyApp.Tests.Integration.PurchasingServiceTests.CreateSupplier_WithValidData_ReturnsCreatedStatusCode
  nameWithType: PurchasingServiceTests.CreateSupplier_WithValidData_ReturnsCreatedStatusCode
- uid: MyApp.Tests.Integration.PurchasingServiceTests.GetPurchaseOrders_WithValidToken_ReturnsSuccessStatusCode
  name: GetPurchaseOrders_WithValidToken_ReturnsSuccessStatusCode()
  href: api/MyApp.Tests.Integration.PurchasingServiceTests.html#MyApp_Tests_Integration_PurchasingServiceTests_GetPurchaseOrders_WithValidToken_ReturnsSuccessStatusCode
  commentId: M:MyApp.Tests.Integration.PurchasingServiceTests.GetPurchaseOrders_WithValidToken_ReturnsSuccessStatusCode
  fullName: MyApp.Tests.Integration.PurchasingServiceTests.GetPurchaseOrders_WithValidToken_ReturnsSuccessStatusCode()
  nameWithType: PurchasingServiceTests.GetPurchaseOrders_WithValidToken_ReturnsSuccessStatusCode()
- uid: MyApp.Tests.Integration.PurchasingServiceTests.GetPurchaseOrders_WithValidToken_ReturnsSuccessStatusCode*
  name: GetPurchaseOrders_WithValidToken_ReturnsSuccessStatusCode
  href: api/MyApp.Tests.Integration.PurchasingServiceTests.html#MyApp_Tests_Integration_PurchasingServiceTests_GetPurchaseOrders_WithValidToken_ReturnsSuccessStatusCode_
  commentId: Overload:MyApp.Tests.Integration.PurchasingServiceTests.GetPurchaseOrders_WithValidToken_ReturnsSuccessStatusCode
  isSpec: "True"
  fullName: MyApp.Tests.Integration.PurchasingServiceTests.GetPurchaseOrders_WithValidToken_ReturnsSuccessStatusCode
  nameWithType: PurchasingServiceTests.GetPurchaseOrders_WithValidToken_ReturnsSuccessStatusCode
- uid: MyApp.Tests.Integration.PurchasingServiceTests.GetSuppliers_WithValidToken_ReturnsSuccessStatusCode
  name: GetSuppliers_WithValidToken_ReturnsSuccessStatusCode()
  href: api/MyApp.Tests.Integration.PurchasingServiceTests.html#MyApp_Tests_Integration_PurchasingServiceTests_GetSuppliers_WithValidToken_ReturnsSuccessStatusCode
  commentId: M:MyApp.Tests.Integration.PurchasingServiceTests.GetSuppliers_WithValidToken_ReturnsSuccessStatusCode
  fullName: MyApp.Tests.Integration.PurchasingServiceTests.GetSuppliers_WithValidToken_ReturnsSuccessStatusCode()
  nameWithType: PurchasingServiceTests.GetSuppliers_WithValidToken_ReturnsSuccessStatusCode()
- uid: MyApp.Tests.Integration.PurchasingServiceTests.GetSuppliers_WithValidToken_ReturnsSuccessStatusCode*
  name: GetSuppliers_WithValidToken_ReturnsSuccessStatusCode
  href: api/MyApp.Tests.Integration.PurchasingServiceTests.html#MyApp_Tests_Integration_PurchasingServiceTests_GetSuppliers_WithValidToken_ReturnsSuccessStatusCode_
  commentId: Overload:MyApp.Tests.Integration.PurchasingServiceTests.GetSuppliers_WithValidToken_ReturnsSuccessStatusCode
  isSpec: "True"
  fullName: MyApp.Tests.Integration.PurchasingServiceTests.GetSuppliers_WithValidToken_ReturnsSuccessStatusCode
  nameWithType: PurchasingServiceTests.GetSuppliers_WithValidToken_ReturnsSuccessStatusCode
- uid: MyApp.Tests.Integration.PurchasingServiceTests.UpdatePurchaseOrderStatus_WithValidStatus_ReturnsSuccessStatusCode
  name: UpdatePurchaseOrderStatus_WithValidStatus_ReturnsSuccessStatusCode()
  href: api/MyApp.Tests.Integration.PurchasingServiceTests.html#MyApp_Tests_Integration_PurchasingServiceTests_UpdatePurchaseOrderStatus_WithValidStatus_ReturnsSuccessStatusCode
  commentId: M:MyApp.Tests.Integration.PurchasingServiceTests.UpdatePurchaseOrderStatus_WithValidStatus_ReturnsSuccessStatusCode
  fullName: MyApp.Tests.Integration.PurchasingServiceTests.UpdatePurchaseOrderStatus_WithValidStatus_ReturnsSuccessStatusCode()
  nameWithType: PurchasingServiceTests.UpdatePurchaseOrderStatus_WithValidStatus_ReturnsSuccessStatusCode()
- uid: MyApp.Tests.Integration.PurchasingServiceTests.UpdatePurchaseOrderStatus_WithValidStatus_ReturnsSuccessStatusCode*
  name: UpdatePurchaseOrderStatus_WithValidStatus_ReturnsSuccessStatusCode
  href: api/MyApp.Tests.Integration.PurchasingServiceTests.html#MyApp_Tests_Integration_PurchasingServiceTests_UpdatePurchaseOrderStatus_WithValidStatus_ReturnsSuccessStatusCode_
  commentId: Overload:MyApp.Tests.Integration.PurchasingServiceTests.UpdatePurchaseOrderStatus_WithValidStatus_ReturnsSuccessStatusCode
  isSpec: "True"
  fullName: MyApp.Tests.Integration.PurchasingServiceTests.UpdatePurchaseOrderStatus_WithValidStatus_ReturnsSuccessStatusCode
  nameWithType: PurchasingServiceTests.UpdatePurchaseOrderStatus_WithValidStatus_ReturnsSuccessStatusCode
- uid: MyApp.Tests.Integration.SalesServiceTests
  name: SalesServiceTests
  href: api/MyApp.Tests.Integration.SalesServiceTests.html
  commentId: T:MyApp.Tests.Integration.SalesServiceTests
  fullName: MyApp.Tests.Integration.SalesServiceTests
  nameWithType: SalesServiceTests
- uid: MyApp.Tests.Integration.SalesServiceTests.CreateCustomer_WithValidData_ReturnsCreatedStatusCode
  name: CreateCustomer_WithValidData_ReturnsCreatedStatusCode()
  href: api/MyApp.Tests.Integration.SalesServiceTests.html#MyApp_Tests_Integration_SalesServiceTests_CreateCustomer_WithValidData_ReturnsCreatedStatusCode
  commentId: M:MyApp.Tests.Integration.SalesServiceTests.CreateCustomer_WithValidData_ReturnsCreatedStatusCode
  fullName: MyApp.Tests.Integration.SalesServiceTests.CreateCustomer_WithValidData_ReturnsCreatedStatusCode()
  nameWithType: SalesServiceTests.CreateCustomer_WithValidData_ReturnsCreatedStatusCode()
- uid: MyApp.Tests.Integration.SalesServiceTests.CreateCustomer_WithValidData_ReturnsCreatedStatusCode*
  name: CreateCustomer_WithValidData_ReturnsCreatedStatusCode
  href: api/MyApp.Tests.Integration.SalesServiceTests.html#MyApp_Tests_Integration_SalesServiceTests_CreateCustomer_WithValidData_ReturnsCreatedStatusCode_
  commentId: Overload:MyApp.Tests.Integration.SalesServiceTests.CreateCustomer_WithValidData_ReturnsCreatedStatusCode
  isSpec: "True"
  fullName: MyApp.Tests.Integration.SalesServiceTests.CreateCustomer_WithValidData_ReturnsCreatedStatusCode
  nameWithType: SalesServiceTests.CreateCustomer_WithValidData_ReturnsCreatedStatusCode
- uid: MyApp.Tests.Integration.SalesServiceTests.CreateSalesOrder_WithValidData_ReturnsCreatedStatusCode
  name: CreateSalesOrder_WithValidData_ReturnsCreatedStatusCode()
  href: api/MyApp.Tests.Integration.SalesServiceTests.html#MyApp_Tests_Integration_SalesServiceTests_CreateSalesOrder_WithValidData_ReturnsCreatedStatusCode
  commentId: M:MyApp.Tests.Integration.SalesServiceTests.CreateSalesOrder_WithValidData_ReturnsCreatedStatusCode
  fullName: MyApp.Tests.Integration.SalesServiceTests.CreateSalesOrder_WithValidData_ReturnsCreatedStatusCode()
  nameWithType: SalesServiceTests.CreateSalesOrder_WithValidData_ReturnsCreatedStatusCode()
- uid: MyApp.Tests.Integration.SalesServiceTests.CreateSalesOrder_WithValidData_ReturnsCreatedStatusCode*
  name: CreateSalesOrder_WithValidData_ReturnsCreatedStatusCode
  href: api/MyApp.Tests.Integration.SalesServiceTests.html#MyApp_Tests_Integration_SalesServiceTests_CreateSalesOrder_WithValidData_ReturnsCreatedStatusCode_
  commentId: Overload:MyApp.Tests.Integration.SalesServiceTests.CreateSalesOrder_WithValidData_ReturnsCreatedStatusCode
  isSpec: "True"
  fullName: MyApp.Tests.Integration.SalesServiceTests.CreateSalesOrder_WithValidData_ReturnsCreatedStatusCode
  nameWithType: SalesServiceTests.CreateSalesOrder_WithValidData_ReturnsCreatedStatusCode
- uid: MyApp.Tests.Integration.SalesServiceTests.DisposeAsync
  name: DisposeAsync()
  href: api/MyApp.Tests.Integration.SalesServiceTests.html#MyApp_Tests_Integration_SalesServiceTests_DisposeAsync
  commentId: M:MyApp.Tests.Integration.SalesServiceTests.DisposeAsync
  fullName: MyApp.Tests.Integration.SalesServiceTests.DisposeAsync()
  nameWithType: SalesServiceTests.DisposeAsync()
- uid: MyApp.Tests.Integration.SalesServiceTests.DisposeAsync*
  name: DisposeAsync
  href: api/MyApp.Tests.Integration.SalesServiceTests.html#MyApp_Tests_Integration_SalesServiceTests_DisposeAsync_
  commentId: Overload:MyApp.Tests.Integration.SalesServiceTests.DisposeAsync
  isSpec: "True"
  fullName: MyApp.Tests.Integration.SalesServiceTests.DisposeAsync
  nameWithType: SalesServiceTests.DisposeAsync
- uid: MyApp.Tests.Integration.SalesServiceTests.GetCustomers_WithValidToken_ReturnsSuccessStatusCode
  name: GetCustomers_WithValidToken_ReturnsSuccessStatusCode()
  href: api/MyApp.Tests.Integration.SalesServiceTests.html#MyApp_Tests_Integration_SalesServiceTests_GetCustomers_WithValidToken_ReturnsSuccessStatusCode
  commentId: M:MyApp.Tests.Integration.SalesServiceTests.GetCustomers_WithValidToken_ReturnsSuccessStatusCode
  fullName: MyApp.Tests.Integration.SalesServiceTests.GetCustomers_WithValidToken_ReturnsSuccessStatusCode()
  nameWithType: SalesServiceTests.GetCustomers_WithValidToken_ReturnsSuccessStatusCode()
- uid: MyApp.Tests.Integration.SalesServiceTests.GetCustomers_WithValidToken_ReturnsSuccessStatusCode*
  name: GetCustomers_WithValidToken_ReturnsSuccessStatusCode
  href: api/MyApp.Tests.Integration.SalesServiceTests.html#MyApp_Tests_Integration_SalesServiceTests_GetCustomers_WithValidToken_ReturnsSuccessStatusCode_
  commentId: Overload:MyApp.Tests.Integration.SalesServiceTests.GetCustomers_WithValidToken_ReturnsSuccessStatusCode
  isSpec: "True"
  fullName: MyApp.Tests.Integration.SalesServiceTests.GetCustomers_WithValidToken_ReturnsSuccessStatusCode
  nameWithType: SalesServiceTests.GetCustomers_WithValidToken_ReturnsSuccessStatusCode
- uid: MyApp.Tests.Integration.SalesServiceTests.GetSalesOrders_WithValidToken_ReturnsSuccessStatusCode
  name: GetSalesOrders_WithValidToken_ReturnsSuccessStatusCode()
  href: api/MyApp.Tests.Integration.SalesServiceTests.html#MyApp_Tests_Integration_SalesServiceTests_GetSalesOrders_WithValidToken_ReturnsSuccessStatusCode
  commentId: M:MyApp.Tests.Integration.SalesServiceTests.GetSalesOrders_WithValidToken_ReturnsSuccessStatusCode
  fullName: MyApp.Tests.Integration.SalesServiceTests.GetSalesOrders_WithValidToken_ReturnsSuccessStatusCode()
  nameWithType: SalesServiceTests.GetSalesOrders_WithValidToken_ReturnsSuccessStatusCode()
- uid: MyApp.Tests.Integration.SalesServiceTests.GetSalesOrders_WithValidToken_ReturnsSuccessStatusCode*
  name: GetSalesOrders_WithValidToken_ReturnsSuccessStatusCode
  href: api/MyApp.Tests.Integration.SalesServiceTests.html#MyApp_Tests_Integration_SalesServiceTests_GetSalesOrders_WithValidToken_ReturnsSuccessStatusCode_
  commentId: Overload:MyApp.Tests.Integration.SalesServiceTests.GetSalesOrders_WithValidToken_ReturnsSuccessStatusCode
  isSpec: "True"
  fullName: MyApp.Tests.Integration.SalesServiceTests.GetSalesOrders_WithValidToken_ReturnsSuccessStatusCode
  nameWithType: SalesServiceTests.GetSalesOrders_WithValidToken_ReturnsSuccessStatusCode
- uid: MyApp.Tests.Integration.SalesServiceTests.InitializeAsync
  name: InitializeAsync()
  href: api/MyApp.Tests.Integration.SalesServiceTests.html#MyApp_Tests_Integration_SalesServiceTests_InitializeAsync
  commentId: M:MyApp.Tests.Integration.SalesServiceTests.InitializeAsync
  fullName: MyApp.Tests.Integration.SalesServiceTests.InitializeAsync()
  nameWithType: SalesServiceTests.InitializeAsync()
- uid: MyApp.Tests.Integration.SalesServiceTests.InitializeAsync*
  name: InitializeAsync
  href: api/MyApp.Tests.Integration.SalesServiceTests.html#MyApp_Tests_Integration_SalesServiceTests_InitializeAsync_
  commentId: Overload:MyApp.Tests.Integration.SalesServiceTests.InitializeAsync
  isSpec: "True"
  fullName: MyApp.Tests.Integration.SalesServiceTests.InitializeAsync
  nameWithType: SalesServiceTests.InitializeAsync
- uid: Projects
  name: Projects
  href: api/Projects.html
  commentId: N:Projects
  fullName: Projects
  nameWithType: Projects
- uid: Projects.AppHost
  name: AppHost
  href: api/Projects.AppHost.html
  commentId: T:Projects.AppHost
  fullName: Projects.AppHost
  nameWithType: AppHost
- uid: Projects.AppHost.ProjectPath
  name: ProjectPath
  href: api/Projects.AppHost.html#Projects_AppHost_ProjectPath
  commentId: P:Projects.AppHost.ProjectPath
  fullName: Projects.AppHost.ProjectPath
  nameWithType: AppHost.ProjectPath
- uid: Projects.AppHost.ProjectPath*
  name: ProjectPath
  href: api/Projects.AppHost.html#Projects_AppHost_ProjectPath_
  commentId: Overload:Projects.AppHost.ProjectPath
  isSpec: "True"
  fullName: Projects.AppHost.ProjectPath
  nameWithType: AppHost.ProjectPath
- uid: Projects.ErpApiGateway
  name: ErpApiGateway
  href: api/Projects.ErpApiGateway.html
  commentId: T:Projects.ErpApiGateway
  fullName: Projects.ErpApiGateway
  nameWithType: ErpApiGateway
- uid: Projects.ErpApiGateway.ProjectPath
  name: ProjectPath
  href: api/Projects.ErpApiGateway.html#Projects_ErpApiGateway_ProjectPath
  commentId: P:Projects.ErpApiGateway.ProjectPath
  fullName: Projects.ErpApiGateway.ProjectPath
  nameWithType: ErpApiGateway.ProjectPath
- uid: Projects.ErpApiGateway.ProjectPath*
  name: ProjectPath
  href: api/Projects.ErpApiGateway.html#Projects_ErpApiGateway_ProjectPath_
  commentId: Overload:Projects.ErpApiGateway.ProjectPath
  isSpec: "True"
  fullName: Projects.ErpApiGateway.ProjectPath
  nameWithType: ErpApiGateway.ProjectPath
- uid: Projects.MyApp_Auth_API
  name: MyApp_Auth_API
  href: api/Projects.MyApp_Auth_API.html
  commentId: T:Projects.MyApp_Auth_API
  fullName: Projects.MyApp_Auth_API
  nameWithType: MyApp_Auth_API
- uid: Projects.MyApp_Auth_API.ProjectPath
  name: ProjectPath
  href: api/Projects.MyApp_Auth_API.html#Projects_MyApp_Auth_API_ProjectPath
  commentId: P:Projects.MyApp_Auth_API.ProjectPath
  fullName: Projects.MyApp_Auth_API.ProjectPath
  nameWithType: MyApp_Auth_API.ProjectPath
- uid: Projects.MyApp_Auth_API.ProjectPath*
  name: ProjectPath
  href: api/Projects.MyApp_Auth_API.html#Projects_MyApp_Auth_API_ProjectPath_
  commentId: Overload:Projects.MyApp_Auth_API.ProjectPath
  isSpec: "True"
  fullName: Projects.MyApp_Auth_API.ProjectPath
  nameWithType: MyApp_Auth_API.ProjectPath
- uid: Projects.MyApp_Billing_API
  name: MyApp_Billing_API
  href: api/Projects.MyApp_Billing_API.html
  commentId: T:Projects.MyApp_Billing_API
  fullName: Projects.MyApp_Billing_API
  nameWithType: MyApp_Billing_API
- uid: Projects.MyApp_Billing_API.ProjectPath
  name: ProjectPath
  href: api/Projects.MyApp_Billing_API.html#Projects_MyApp_Billing_API_ProjectPath
  commentId: P:Projects.MyApp_Billing_API.ProjectPath
  fullName: Projects.MyApp_Billing_API.ProjectPath
  nameWithType: MyApp_Billing_API.ProjectPath
- uid: Projects.MyApp_Billing_API.ProjectPath*
  name: ProjectPath
  href: api/Projects.MyApp_Billing_API.html#Projects_MyApp_Billing_API_ProjectPath_
  commentId: Overload:Projects.MyApp_Billing_API.ProjectPath
  isSpec: "True"
  fullName: Projects.MyApp_Billing_API.ProjectPath
  nameWithType: MyApp_Billing_API.ProjectPath
- uid: Projects.MyApp_Inventory_API
  name: MyApp_Inventory_API
  href: api/Projects.MyApp_Inventory_API.html
  commentId: T:Projects.MyApp_Inventory_API
  fullName: Projects.MyApp_Inventory_API
  nameWithType: MyApp_Inventory_API
- uid: Projects.MyApp_Inventory_API.ProjectPath
  name: ProjectPath
  href: api/Projects.MyApp_Inventory_API.html#Projects_MyApp_Inventory_API_ProjectPath
  commentId: P:Projects.MyApp_Inventory_API.ProjectPath
  fullName: Projects.MyApp_Inventory_API.ProjectPath
  nameWithType: MyApp_Inventory_API.ProjectPath
- uid: Projects.MyApp_Inventory_API.ProjectPath*
  name: ProjectPath
  href: api/Projects.MyApp_Inventory_API.html#Projects_MyApp_Inventory_API_ProjectPath_
  commentId: Overload:Projects.MyApp_Inventory_API.ProjectPath
  isSpec: "True"
  fullName: Projects.MyApp_Inventory_API.ProjectPath
  nameWithType: MyApp_Inventory_API.ProjectPath
- uid: Projects.MyApp_Orders_API
  name: MyApp_Orders_API
  href: api/Projects.MyApp_Orders_API.html
  commentId: T:Projects.MyApp_Orders_API
  fullName: Projects.MyApp_Orders_API
  nameWithType: MyApp_Orders_API
- uid: Projects.MyApp_Orders_API.ProjectPath
  name: ProjectPath
  href: api/Projects.MyApp_Orders_API.html#Projects_MyApp_Orders_API_ProjectPath
  commentId: P:Projects.MyApp_Orders_API.ProjectPath
  fullName: Projects.MyApp_Orders_API.ProjectPath
  nameWithType: MyApp_Orders_API.ProjectPath
- uid: Projects.MyApp_Orders_API.ProjectPath*
  name: ProjectPath
  href: api/Projects.MyApp_Orders_API.html#Projects_MyApp_Orders_API_ProjectPath_
  commentId: Overload:Projects.MyApp_Orders_API.ProjectPath
  isSpec: "True"
  fullName: Projects.MyApp_Orders_API.ProjectPath
  nameWithType: MyApp_Orders_API.ProjectPath
- uid: Projects.MyApp_Purchasing_API
  name: MyApp_Purchasing_API
  href: api/Projects.MyApp_Purchasing_API.html
  commentId: T:Projects.MyApp_Purchasing_API
  fullName: Projects.MyApp_Purchasing_API
  nameWithType: MyApp_Purchasing_API
- uid: Projects.MyApp_Purchasing_API.ProjectPath
  name: ProjectPath
  href: api/Projects.MyApp_Purchasing_API.html#Projects_MyApp_Purchasing_API_ProjectPath
  commentId: P:Projects.MyApp_Purchasing_API.ProjectPath
  fullName: Projects.MyApp_Purchasing_API.ProjectPath
  nameWithType: MyApp_Purchasing_API.ProjectPath
- uid: Projects.MyApp_Purchasing_API.ProjectPath*
  name: ProjectPath
  href: api/Projects.MyApp_Purchasing_API.html#Projects_MyApp_Purchasing_API_ProjectPath_
  commentId: Overload:Projects.MyApp_Purchasing_API.ProjectPath
  isSpec: "True"
  fullName: Projects.MyApp_Purchasing_API.ProjectPath
  nameWithType: MyApp_Purchasing_API.ProjectPath
- uid: Projects.MyApp_Sales_API
  name: MyApp_Sales_API
  href: api/Projects.MyApp_Sales_API.html
  commentId: T:Projects.MyApp_Sales_API
  fullName: Projects.MyApp_Sales_API
  nameWithType: MyApp_Sales_API
- uid: Projects.MyApp_Sales_API.ProjectPath
  name: ProjectPath
  href: api/Projects.MyApp_Sales_API.html#Projects_MyApp_Sales_API_ProjectPath
  commentId: P:Projects.MyApp_Sales_API.ProjectPath
  fullName: Projects.MyApp_Sales_API.ProjectPath
  nameWithType: MyApp_Sales_API.ProjectPath
- uid: Projects.MyApp_Sales_API.ProjectPath*
  name: ProjectPath
  href: api/Projects.MyApp_Sales_API.html#Projects_MyApp_Sales_API_ProjectPath_
  commentId: Overload:Projects.MyApp_Sales_API.ProjectPath
  isSpec: "True"
  fullName: Projects.MyApp_Sales_API.ProjectPath
  nameWithType: MyApp_Sales_API.ProjectPath
